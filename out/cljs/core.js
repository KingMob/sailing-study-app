// Compiled by ClojureScript 0.0-2740 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2740";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__12389__delegate = function (args){
return console.log.apply(console,(function (){var G__12388 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__12388) : cljs.core.into_array.call(null,G__12388));
})());
};
var G__12389 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__12390__i = 0, G__12390__a = new Array(arguments.length -  0);
while (G__12390__i < G__12390__a.length) {G__12390__a[G__12390__i] = arguments[G__12390__i + 0]; ++G__12390__i;}
  args = new cljs.core.IndexedSeq(G__12390__a,0);
} 
return G__12389__delegate.call(this,args);};
G__12389.cljs$lang$maxFixedArity = 0;
G__12389.cljs$lang$applyTo = (function (arglist__12391){
var args = cljs.core.seq(arglist__12391);
return G__12389__delegate(args);
});
G__12389.cljs$core$IFn$_invoke$arity$variadic = G__12389__delegate;
return G__12389;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__12393 = x;
return goog.isString(G__12393);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__12395 = x__$1;
return goog.typeOf(G__12395);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3747__auto__ = ty;
if(cljs.core.truth_(and__3747__auto__)){
return ty.cljs$lang$type;
} else {
return and__3747__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__12397 = obj;
return goog.typeOf(G__12397);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__12399 = Symbol;
return goog.typeOf(G__12399);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4646__auto___12401 = len;
var i_12402 = (0);
while(true){
if((i_12402 < n__4646__auto___12401)){
(new_arr[i_12402] = (arr[i_12402]));

var G__12403 = (i_12402 + (1));
i_12402 = G__12403;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__12404 = (i + (1));
i = G__12404;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__12413__delegate = function (array,i,idxs){
var G__12410 = aget;
var G__12411 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__12412 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__12410,G__12411,G__12412) : cljs.core.apply.call(null,G__12410,G__12411,G__12412));
};
var G__12413 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__12414__i = 0, G__12414__a = new Array(arguments.length -  2);
while (G__12414__i < G__12414__a.length) {G__12414__a[G__12414__i] = arguments[G__12414__i + 2]; ++G__12414__i;}
  idxs = new cljs.core.IndexedSeq(G__12414__a,0);
} 
return G__12413__delegate.call(this,array,i,idxs);};
G__12413.cljs$lang$maxFixedArity = 2;
G__12413.cljs$lang$applyTo = (function (arglist__12415){
var array = cljs.core.first(arglist__12415);
arglist__12415 = cljs.core.next(arglist__12415);
var i = cljs.core.first(arglist__12415);
var idxs = cljs.core.rest(arglist__12415);
return G__12413__delegate(array,i,idxs);
});
G__12413.cljs$core$IFn$_invoke$arity$variadic = G__12413__delegate;
return G__12413;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__12416 = null;
if (arguments.length > 2) {
var G__12417__i = 0, G__12417__a = new Array(arguments.length -  2);
while (G__12417__i < G__12417__a.length) {G__12417__a[G__12417__i] = arguments[G__12417__i + 2]; ++G__12417__i;}
G__12416 = new cljs.core.IndexedSeq(G__12417__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__12416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__12426__delegate = function (array,idx,idx2,idxv){
var G__12422 = aset;
var G__12423 = (array[idx]);
var G__12424 = idx2;
var G__12425 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__12422,G__12423,G__12424,G__12425) : cljs.core.apply.call(null,G__12422,G__12423,G__12424,G__12425));
};
var G__12426 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__12427__i = 0, G__12427__a = new Array(arguments.length -  3);
while (G__12427__i < G__12427__a.length) {G__12427__a[G__12427__i] = arguments[G__12427__i + 3]; ++G__12427__i;}
  idxv = new cljs.core.IndexedSeq(G__12427__a,0);
} 
return G__12426__delegate.call(this,array,idx,idx2,idxv);};
G__12426.cljs$lang$maxFixedArity = 3;
G__12426.cljs$lang$applyTo = (function (arglist__12428){
var array = cljs.core.first(arglist__12428);
arglist__12428 = cljs.core.next(arglist__12428);
var idx = cljs.core.first(arglist__12428);
arglist__12428 = cljs.core.next(arglist__12428);
var idx2 = cljs.core.first(arglist__12428);
var idxv = cljs.core.rest(arglist__12428);
return G__12426__delegate(array,idx,idx2,idxv);
});
G__12426.cljs$core$IFn$_invoke$arity$variadic = G__12426__delegate;
return G__12426;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__12429 = null;
if (arguments.length > 3) {
var G__12430__i = 0, G__12430__a = new Array(arguments.length -  3);
while (G__12430__i < G__12430__a.length) {G__12430__a[G__12430__i] = arguments[G__12430__i + 3]; ++G__12430__i;}
G__12429 = new cljs.core.IndexedSeq(G__12430__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__12429);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__12436 = (function (a,x){
a.push(x);

return a;
});
var G__12437 = [];
var G__12438 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12436,G__12437,G__12438) : cljs.core.reduce.call(null,G__12436,G__12437,G__12438));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__12439__i = 0, G__12439__a = new Array(arguments.length -  2);
while (G__12439__i < G__12439__a.length) {G__12439__a[G__12439__i] = arguments[G__12439__i + 2]; ++G__12439__i;}
  args = new cljs.core.IndexedSeq(G__12439__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__12440){
var obj = cljs.core.first(arglist__12440);
arglist__12440 = cljs.core.next(arglist__12440);
var s = cljs.core.first(arglist__12440);
var args = cljs.core.rest(arglist__12440);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj12442 = {};
return obj12442;
})();


cljs.core.IFn = (function (){var obj12444 = {};
return obj12444;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12490 = x__4403__auto__;
return goog.typeOf(G__12490);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12492 = x__4403__auto__;
return goog.typeOf(G__12492);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12494 = x__4403__auto__;
return goog.typeOf(G__12494);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12496 = x__4403__auto__;
return goog.typeOf(G__12496);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12498 = x__4403__auto__;
return goog.typeOf(G__12498);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12500 = x__4403__auto__;
return goog.typeOf(G__12500);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12502 = x__4403__auto__;
return goog.typeOf(G__12502);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12504 = x__4403__auto__;
return goog.typeOf(G__12504);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12506 = x__4403__auto__;
return goog.typeOf(G__12506);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12508 = x__4403__auto__;
return goog.typeOf(G__12508);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12510 = x__4403__auto__;
return goog.typeOf(G__12510);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12512 = x__4403__auto__;
return goog.typeOf(G__12512);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12514 = x__4403__auto__;
return goog.typeOf(G__12514);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12516 = x__4403__auto__;
return goog.typeOf(G__12516);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12518 = x__4403__auto__;
return goog.typeOf(G__12518);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12520 = x__4403__auto__;
return goog.typeOf(G__12520);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12522 = x__4403__auto__;
return goog.typeOf(G__12522);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12524 = x__4403__auto__;
return goog.typeOf(G__12524);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12526 = x__4403__auto__;
return goog.typeOf(G__12526);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12528 = x__4403__auto__;
return goog.typeOf(G__12528);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12530 = x__4403__auto__;
return goog.typeOf(G__12530);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._invoke[(function (){var G__12532 = x__4403__auto__;
return goog.typeOf(G__12532);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._invoke["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj12534 = {};
return obj12534;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3747__auto__ = value;
if(and__3747__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3747__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4403__auto__ = (((value == null))?null:value);
return (function (){var or__3759__auto__ = (cljs.core._clone[(function (){var G__12538 = x__4403__auto__;
return goog.typeOf(G__12538);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._clone["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj12540 = {};
return obj12540;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._count[(function (){var G__12544 = x__4403__auto__;
return goog.typeOf(G__12544);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._count["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj12546 = {};
return obj12546;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._empty[(function (){var G__12550 = x__4403__auto__;
return goog.typeOf(G__12550);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._empty["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj12552 = {};
return obj12552;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._conj[(function (){var G__12556 = x__4403__auto__;
return goog.typeOf(G__12556);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._conj["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj12558 = {};
return obj12558;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._nth[(function (){var G__12564 = x__4403__auto__;
return goog.typeOf(G__12564);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._nth["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._nth[(function (){var G__12566 = x__4403__auto__;
return goog.typeOf(G__12566);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._nth["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj12568 = {};
return obj12568;
})();


cljs.core.ISeq = (function (){var obj12570 = {};
return obj12570;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._first[(function (){var G__12574 = x__4403__auto__;
return goog.typeOf(G__12574);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._rest[(function (){var G__12578 = x__4403__auto__;
return goog.typeOf(G__12578);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._rest["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj12580 = {};
return obj12580;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._next[(function (){var G__12584 = x__4403__auto__;
return goog.typeOf(G__12584);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._next["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj12586 = {};
return obj12586;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._lookup[(function (){var G__12592 = x__4403__auto__;
return goog.typeOf(G__12592);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._lookup["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._lookup[(function (){var G__12594 = x__4403__auto__;
return goog.typeOf(G__12594);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._lookup["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj12596 = {};
return obj12596;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__12600 = x__4403__auto__;
return goog.typeOf(G__12600);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._assoc[(function (){var G__12604 = x__4403__auto__;
return goog.typeOf(G__12604);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj12606 = {};
return obj12606;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._dissoc[(function (){var G__12610 = x__4403__auto__;
return goog.typeOf(G__12610);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj12612 = {};
return obj12612;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._key[(function (){var G__12616 = x__4403__auto__;
return goog.typeOf(G__12616);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._key["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._val[(function (){var G__12620 = x__4403__auto__;
return goog.typeOf(G__12620);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._val["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj12622 = {};
return obj12622;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._disjoin[(function (){var G__12626 = x__4403__auto__;
return goog.typeOf(G__12626);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj12628 = {};
return obj12628;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._peek[(function (){var G__12632 = x__4403__auto__;
return goog.typeOf(G__12632);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._peek["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._pop[(function (){var G__12636 = x__4403__auto__;
return goog.typeOf(G__12636);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pop["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj12638 = {};
return obj12638;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_n[(function (){var G__12642 = x__4403__auto__;
return goog.typeOf(G__12642);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj12644 = {};
return obj12644;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._deref[(function (){var G__12648 = x__4403__auto__;
return goog.typeOf(G__12648);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._deref["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj12650 = {};
return obj12650;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._deref_with_timeout[(function (){var G__12654 = x__4403__auto__;
return goog.typeOf(G__12654);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj12656 = {};
return obj12656;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._meta[(function (){var G__12660 = x__4403__auto__;
return goog.typeOf(G__12660);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._meta["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj12662 = {};
return obj12662;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._with_meta[(function (){var G__12666 = x__4403__auto__;
return goog.typeOf(G__12666);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj12668 = {};
return obj12668;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._reduce[(function (){var G__12674 = x__4403__auto__;
return goog.typeOf(G__12674);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._reduce[(function (){var G__12676 = x__4403__auto__;
return goog.typeOf(G__12676);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj12678 = {};
return obj12678;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._kv_reduce[(function (){var G__12682 = x__4403__auto__;
return goog.typeOf(G__12682);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj12684 = {};
return obj12684;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._equiv[(function (){var G__12688 = x__4403__auto__;
return goog.typeOf(G__12688);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._equiv["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj12690 = {};
return obj12690;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._hash[(function (){var G__12694 = x__4403__auto__;
return goog.typeOf(G__12694);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._hash["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj12696 = {};
return obj12696;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._seq[(function (){var G__12700 = x__4403__auto__;
return goog.typeOf(G__12700);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._seq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj12702 = {};
return obj12702;
})();


cljs.core.IList = (function (){var obj12704 = {};
return obj12704;
})();


cljs.core.IRecord = (function (){var obj12706 = {};
return obj12706;
})();


cljs.core.IReversible = (function (){var obj12708 = {};
return obj12708;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._rseq[(function (){var G__12712 = x__4403__auto__;
return goog.typeOf(G__12712);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._rseq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj12714 = {};
return obj12714;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._sorted_seq[(function (){var G__12718 = x__4403__auto__;
return goog.typeOf(G__12718);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._sorted_seq_from[(function (){var G__12722 = x__4403__auto__;
return goog.typeOf(G__12722);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._entry_key[(function (){var G__12726 = x__4403__auto__;
return goog.typeOf(G__12726);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._comparator[(function (){var G__12730 = x__4403__auto__;
return goog.typeOf(G__12730);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._comparator["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj12732 = {};
return obj12732;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3747__auto__ = writer;
if(and__3747__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3747__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3759__auto__ = (cljs.core._write[(function (){var G__12736 = x__4403__auto__;
return goog.typeOf(G__12736);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._write["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3747__auto__ = writer;
if(and__3747__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3747__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4403__auto__ = (((writer == null))?null:writer);
return (function (){var or__3759__auto__ = (cljs.core._flush[(function (){var G__12740 = x__4403__auto__;
return goog.typeOf(G__12740);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._flush["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj12742 = {};
return obj12742;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._pr_writer[(function (){var G__12746 = x__4403__auto__;
return goog.typeOf(G__12746);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj12748 = {};
return obj12748;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3747__auto__ = d;
if(and__3747__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4403__auto__ = (((d == null))?null:d);
return (function (){var or__3759__auto__ = (cljs.core._realized_QMARK_[(function (){var G__12752 = x__4403__auto__;
return goog.typeOf(G__12752);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj12754 = {};
return obj12754;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._notify_watches[(function (){var G__12758 = x__4403__auto__;
return goog.typeOf(G__12758);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._add_watch[(function (){var G__12762 = x__4403__auto__;
return goog.typeOf(G__12762);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3747__auto__ = this$;
if(and__3747__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3747__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4403__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3759__auto__ = (cljs.core._remove_watch[(function (){var G__12766 = x__4403__auto__;
return goog.typeOf(G__12766);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj12768 = {};
return obj12768;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._as_transient[(function (){var G__12772 = x__4403__auto__;
return goog.typeOf(G__12772);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj12774 = {};
return obj12774;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._conj_BANG_[(function (){var G__12778 = x__4403__auto__;
return goog.typeOf(G__12778);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._persistent_BANG_[(function (){var G__12782 = x__4403__auto__;
return goog.typeOf(G__12782);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj12784 = {};
return obj12784;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_BANG_[(function (){var G__12788 = x__4403__auto__;
return goog.typeOf(G__12788);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj12790 = {};
return obj12790;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__12794 = x__4403__auto__;
return goog.typeOf(G__12794);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj12796 = {};
return obj12796;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__12800 = x__4403__auto__;
return goog.typeOf(G__12800);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._pop_BANG_[(function (){var G__12804 = x__4403__auto__;
return goog.typeOf(G__12804);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj12806 = {};
return obj12806;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3747__auto__ = tcoll;
if(and__3747__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4403__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3759__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__12810 = x__4403__auto__;
return goog.typeOf(G__12810);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj12812 = {};
return obj12812;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._compare[(function (){var G__12816 = x__4403__auto__;
return goog.typeOf(G__12816);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._compare["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj12818 = {};
return obj12818;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._drop_first[(function (){var G__12822 = x__4403__auto__;
return goog.typeOf(G__12822);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj12824 = {};
return obj12824;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_first[(function (){var G__12828 = x__4403__auto__;
return goog.typeOf(G__12828);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_rest[(function (){var G__12832 = x__4403__auto__;
return goog.typeOf(G__12832);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj12834 = {};
return obj12834;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._chunked_next[(function (){var G__12838 = x__4403__auto__;
return goog.typeOf(G__12838);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj12840 = {};
return obj12840;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._name[(function (){var G__12844 = x__4403__auto__;
return goog.typeOf(G__12844);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._name["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._namespace[(function (){var G__12848 = x__4403__auto__;
return goog.typeOf(G__12848);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._namespace["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj12850 = {};
return obj12850;
})();


cljs.core.IReset = (function (){var obj12852 = {};
return obj12852;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._reset_BANG_[(function (){var G__12856 = x__4403__auto__;
return goog.typeOf(G__12856);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj12858 = {};
return obj12858;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__12868 = x__4403__auto__;
return goog.typeOf(G__12868);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__12870 = x__4403__auto__;
return goog.typeOf(G__12870);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__12872 = x__4403__auto__;
return goog.typeOf(G__12872);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._swap_BANG_[(function (){var G__12874 = x__4403__auto__;
return goog.typeOf(G__12874);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj12876 = {};
return obj12876;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3747__auto__ = o;
if(and__3747__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3747__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4403__auto__ = (((o == null))?null:o);
return (function (){var or__3759__auto__ = (cljs.core._vreset_BANG_[(function (){var G__12880 = x__4403__auto__;
return goog.typeOf(G__12880);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj12882 = {};
return obj12882;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3747__auto__ = coll;
if(and__3747__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3747__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4403__auto__ = (((coll == null))?null:coll);
return (function (){var or__3759__auto__ = (cljs.core._iterator[(function (){var G__12886 = x__4403__auto__;
return goog.typeOf(G__12886);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._iterator["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__12889 = (4294967295);
var G__12890 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12889,G__12890) : Math.imul.call(null,G__12889,G__12890));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__12893 = a;
var G__12894 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__12893,G__12894) : Math.imul.call(null,G__12893,G__12894));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__12895 = (i + (2));
var G__12896 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__12895;
h1 = G__12896;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj12898 = {};
return obj12898;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__12899 = (i + (1));
var G__12900 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__12899;
hash = G__12900;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj12904 = {};
return obj12904;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__12907 = o;
if(G__12907){
var bit__4433__auto__ = (G__12907.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4433__auto__) || (G__12907.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__12908 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12908) : Math.floor.call(null,G__12908));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.not(a.ns);
if(and__3747__auto__){
return b.ns;
} else {
return and__3747__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12915 = a.ns;
var G__12916 = b.ns;
return goog.array.defaultCompare(G__12915,G__12916);
})();
if(((0) === nsc)){
var G__12917 = a.name;
var G__12918 = b.name;
return goog.array.defaultCompare(G__12917,G__12918);
} else {
return nsc;
}
}
} else {
var G__12919 = a.name;
var G__12920 = b.name;
return goog.array.defaultCompare(G__12919,G__12920);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4180__auto__ = self__._hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__12922 = null;
var G__12922__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__12922__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__12922 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12922__2.call(this,self__,coll);
case 3:
return G__12922__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12922.cljs$core$IFn$_invoke$arity$2 = G__12922__2;
G__12922.cljs$core$IFn$_invoke$arity$3 = G__12922__3;
return G__12922;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args12921){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12921)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__12970 = null;
var G__12970__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__12970__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__12970__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__12970__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__12970__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__12970__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__12970__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__12970__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__12970__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__12970__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__12970__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__12970__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__12970__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__12970__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__12970__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__12970__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__12970__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__12970__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__12970__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__12970__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__12970__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__12970__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12926 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12927 = a;
var G__12928 = b;
var G__12929 = c;
var G__12930 = d;
var G__12931 = e;
var G__12932 = f;
var G__12933 = g;
var G__12934 = h;
var G__12935 = i;
var G__12936 = j;
var G__12937 = k;
var G__12938 = l;
var G__12939 = m;
var G__12940 = n;
var G__12941 = o;
var G__12942 = p;
var G__12943 = q;
var G__12944 = r;
var G__12945 = s;
var G__12946 = t;
var G__12947 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947) : cljs.core.apply.call(null,G__12926,G__12927,G__12928,G__12929,G__12930,G__12931,G__12932,G__12933,G__12934,G__12935,G__12936,G__12937,G__12938,G__12939,G__12940,G__12941,G__12942,G__12943,G__12944,G__12945,G__12946,G__12947));
});
G__12970 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12970__1.call(this,self__);
case 2:
return G__12970__2.call(this,self__,a);
case 3:
return G__12970__3.call(this,self__,a,b);
case 4:
return G__12970__4.call(this,self__,a,b,c);
case 5:
return G__12970__5.call(this,self__,a,b,c,d);
case 6:
return G__12970__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12970__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12970__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12970__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12970__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12970__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12970__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12970__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12970__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12970__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12970__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12970__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12970__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12970__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12970__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12970__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12970__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12970.cljs$core$IFn$_invoke$arity$1 = G__12970__1;
G__12970.cljs$core$IFn$_invoke$arity$2 = G__12970__2;
G__12970.cljs$core$IFn$_invoke$arity$3 = G__12970__3;
G__12970.cljs$core$IFn$_invoke$arity$4 = G__12970__4;
G__12970.cljs$core$IFn$_invoke$arity$5 = G__12970__5;
G__12970.cljs$core$IFn$_invoke$arity$6 = G__12970__6;
G__12970.cljs$core$IFn$_invoke$arity$7 = G__12970__7;
G__12970.cljs$core$IFn$_invoke$arity$8 = G__12970__8;
G__12970.cljs$core$IFn$_invoke$arity$9 = G__12970__9;
G__12970.cljs$core$IFn$_invoke$arity$10 = G__12970__10;
G__12970.cljs$core$IFn$_invoke$arity$11 = G__12970__11;
G__12970.cljs$core$IFn$_invoke$arity$12 = G__12970__12;
G__12970.cljs$core$IFn$_invoke$arity$13 = G__12970__13;
G__12970.cljs$core$IFn$_invoke$arity$14 = G__12970__14;
G__12970.cljs$core$IFn$_invoke$arity$15 = G__12970__15;
G__12970.cljs$core$IFn$_invoke$arity$16 = G__12970__16;
G__12970.cljs$core$IFn$_invoke$arity$17 = G__12970__17;
G__12970.cljs$core$IFn$_invoke$arity$18 = G__12970__18;
G__12970.cljs$core$IFn$_invoke$arity$19 = G__12970__19;
G__12970.cljs$core$IFn$_invoke$arity$20 = G__12970__20;
G__12970.cljs$core$IFn$_invoke$arity$21 = G__12970__21;
G__12970.cljs$core$IFn$_invoke$arity$22 = G__12970__22;
return G__12970;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args12925){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12925)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12948 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__12949 = a;
var G__12950 = b;
var G__12951 = c;
var G__12952 = d;
var G__12953 = e;
var G__12954 = f;
var G__12955 = g;
var G__12956 = h;
var G__12957 = i;
var G__12958 = j;
var G__12959 = k;
var G__12960 = l;
var G__12961 = m;
var G__12962 = n;
var G__12963 = o;
var G__12964 = p;
var G__12965 = q;
var G__12966 = r;
var G__12967 = s;
var G__12968 = t;
var G__12969 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969) : cljs.core.apply.call(null,G__12948,G__12949,G__12950,G__12951,G__12952,G__12953,G__12954,G__12955,G__12956,G__12957,G__12958,G__12959,G__12960,G__12961,G__12962,G__12963,G__12964,G__12965,G__12966,G__12967,G__12968,G__12969));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__12972 = x;
if(G__12972){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__12972.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__12972.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12972);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__12972);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__12974 = value;
if(G__12974){
var bit__4440__auto__ = (G__12974.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4440__auto__) || (G__12974.cljs$core$ICloneable$)){
return true;
} else {
if((!G__12974.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12974);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__12974);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12976 = coll;
if(G__12976){
var bit__4433__auto__ = (G__12976.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4433__auto__) || (G__12976.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12978 = coll;
if(G__12978){
var bit__4433__auto__ = (G__12978.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__12978.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__12980 = coll;
if(G__12980){
var bit__4433__auto__ = (G__12980.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__12980.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__12982 = coll;
if(G__12982){
var bit__4433__auto__ = (G__12982.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4433__auto__) || (G__12982.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__12987__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12988 = y;
var G__12989 = cljs.core.first(more);
var G__12990 = cljs.core.next(more);
x = G__12988;
y = G__12989;
more = G__12990;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12987 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12991__i = 0, G__12991__a = new Array(arguments.length -  2);
while (G__12991__i < G__12991__a.length) {G__12991__a[G__12991__i] = arguments[G__12991__i + 2]; ++G__12991__i;}
  more = new cljs.core.IndexedSeq(G__12991__a,0);
} 
return G__12987__delegate.call(this,x,y,more);};
G__12987.cljs$lang$maxFixedArity = 2;
G__12987.cljs$lang$applyTo = (function (arglist__12992){
var x = cljs.core.first(arglist__12992);
arglist__12992 = cljs.core.next(arglist__12992);
var y = cljs.core.first(arglist__12992);
var more = cljs.core.rest(arglist__12992);
return G__12987__delegate(x,y,more);
});
G__12987.cljs$core$IFn$_invoke$arity$variadic = G__12987__delegate;
return G__12987;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__12993 = null;
if (arguments.length > 2) {
var G__12994__i = 0, G__12994__a = new Array(arguments.length -  2);
while (G__12994__i < G__12994__a.length) {G__12994__a[G__12994__i] = arguments[G__12994__i + 2]; ++G__12994__i;}
G__12993 = new cljs.core.IndexedSeq(G__12994__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__12995 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__12995) : cljs.core.es6_iterator_seq.call(null,G__12995));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12996 = (n + (1));
var G__12997 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__12998 = cljs.core.next(coll__$1);
n = G__12996;
hash_code = G__12997;
coll__$1 = G__12998;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__12999 = (n + (1));
var G__13000 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__13001 = cljs.core.next(coll__$1);
n = G__12999;
hash_code = G__13000;
coll__$1 = G__13001;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__13002 = o;
return goog.getUid(G__13002);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__13004 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13004) : cljs.core.deref.call(null,G__13004));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13011 = val;
var G__13012 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13011,G__13012) : f.call(null,G__13011,G__13012));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13017 = nval;
var G__13018 = (n + (1));
val = G__13017;
n = G__13018;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13013 = val__$1;
var G__13014 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13013,G__13014) : f.call(null,G__13013,G__13014));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13019 = nval;
var G__13020 = (n + (1));
val__$1 = G__13019;
n = G__13020;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13015 = val__$1;
var G__13016 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13015,G__13016) : f.call(null,G__13015,G__13016));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13021 = nval;
var G__13022 = (n + (1));
val__$1 = G__13021;
n = G__13022;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__13029 = val;
var G__13030 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13029,G__13030) : f.call(null,G__13029,G__13030));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13035 = nval;
var G__13036 = (n + (1));
val = G__13035;
n = G__13036;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__13031 = val__$1;
var G__13032 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13031,G__13032) : f.call(null,G__13031,G__13032));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13037 = nval;
var G__13038 = (n + (1));
val__$1 = G__13037;
n = G__13038;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__13033 = val__$1;
var G__13034 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13033,G__13034) : f.call(null,G__13033,G__13034));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13039 = nval;
var G__13040 = (n + (1));
val__$1 = G__13039;
n = G__13040;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__13042 = x;
if(G__13042){
var bit__4440__auto__ = (G__13042.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4440__auto__) || (G__13042.cljs$core$ICounted$)){
return true;
} else {
if((!G__13042.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13042);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__13042);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__13044 = x;
if(G__13044){
var bit__4440__auto__ = (G__13044.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4440__auto__) || (G__13044.cljs$core$IIndexed$)){
return true;
} else {
if((!G__13044.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13044);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__13044);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13045 = coll__$1;
var G__13046 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13045,G__13046) : cljs.core.equiv_sequential.call(null,G__13045,G__13046));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13047 = o;
var G__13048 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13047,G__13048) : cljs.core.cons.call(null,G__13047,G__13048));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__13051 = coll__$1;
var G__13052 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13051,G__13052) : cljs.core.equiv_sequential.call(null,G__13051,G__13052));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__13053 = cljs.core.List.EMPTY;
var G__13054 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13053,G__13054) : cljs.core.with_meta.call(null,G__13053,G__13054));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__13055 = f;
var G__13056 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__13055,G__13056) : cljs.core.seq_reduce.call(null,G__13055,G__13056));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__13057 = f;
var G__13058 = start;
var G__13059 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__13057,G__13058,G__13059) : cljs.core.seq_reduce.call(null,G__13057,G__13058,G__13059));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__13060 = o;
var G__13061 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13060,G__13061) : cljs.core.cons.call(null,G__13060,G__13061));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__13062 = sn;
s = G__13062;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__13067__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__13068 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__13069 = cljs.core.first(xs);
var G__13070 = cljs.core.next(xs);
coll = G__13068;
x = G__13069;
xs = G__13070;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__13067 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__13071__i = 0, G__13071__a = new Array(arguments.length -  2);
while (G__13071__i < G__13071__a.length) {G__13071__a[G__13071__i] = arguments[G__13071__i + 2]; ++G__13071__i;}
  xs = new cljs.core.IndexedSeq(G__13071__a,0);
} 
return G__13067__delegate.call(this,coll,x,xs);};
G__13067.cljs$lang$maxFixedArity = 2;
G__13067.cljs$lang$applyTo = (function (arglist__13072){
var coll = cljs.core.first(arglist__13072);
arglist__13072 = cljs.core.next(arglist__13072);
var x = cljs.core.first(arglist__13072);
var xs = cljs.core.rest(arglist__13072);
return G__13067__delegate(coll,x,xs);
});
G__13067.cljs$core$IFn$_invoke$arity$variadic = G__13067__delegate;
return G__13067;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__13073 = null;
if (arguments.length > 2) {
var G__13074__i = 0, G__13074__a = new Array(arguments.length -  2);
while (G__13074__i < G__13074__a.length) {G__13074__a[G__13074__i] = arguments[G__13074__i + 2]; ++G__13074__i;}
G__13073 = new cljs.core.IndexedSeq(G__13074__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__13073);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__13075 = cljs.core.next(s);
var G__13076 = (acc + (1));
s = G__13075;
acc = G__13076;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__13078 = coll;
if(G__13078){
var bit__4433__auto__ = (G__13078.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4433__auto__) || (G__13078.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__13079 = cljs.core.next(coll);
var G__13080 = (n - (1));
coll = G__13079;
n = G__13080;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__13081 = cljs.core.next(coll);
var G__13082 = (n - (1));
var G__13083 = not_found;
coll = G__13081;
n = G__13082;
not_found = G__13083;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__13088 = coll;
if(G__13088){
var bit__4433__auto__ = (G__13088.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4433__auto__) || (G__13088.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13089 = coll;
if(G__13089){
var bit__4440__auto__ = (G__13089.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__13089.cljs$core$ISeq$)){
return true;
} else {
if((!G__13089.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13089);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13089);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__13090 = coll;
if(G__13090){
var bit__4433__auto__ = (G__13090.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4433__auto__) || (G__13090.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__13091 = coll;
if(G__13091){
var bit__4440__auto__ = (G__13091.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__13091.cljs$core$ISeq$)){
return true;
} else {
if((!G__13091.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13091);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13091);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__13092 = (n__$1 - (1));
var G__13093 = cljs.core.rest(xs);
n__$1 = G__13092;
xs = G__13093;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__13096 = o;
if(G__13096){
var bit__4433__auto__ = (G__13096.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4433__auto__) || (G__13096.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__13097 = o;
if(G__13097){
var bit__4433__auto__ = (G__13097.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4433__auto__) || (G__13097.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__13101__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__13102 = ret;
var G__13103 = cljs.core.first(kvs);
var G__13104 = cljs.core.second(kvs);
var G__13105 = cljs.core.nnext(kvs);
coll = G__13102;
k = G__13103;
v = G__13104;
kvs = G__13105;
continue;
} else {
return ret;
}
break;
}
};
var G__13101 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13106__i = 0, G__13106__a = new Array(arguments.length -  3);
while (G__13106__i < G__13106__a.length) {G__13106__a[G__13106__i] = arguments[G__13106__i + 3]; ++G__13106__i;}
  kvs = new cljs.core.IndexedSeq(G__13106__a,0);
} 
return G__13101__delegate.call(this,coll,k,v,kvs);};
G__13101.cljs$lang$maxFixedArity = 3;
G__13101.cljs$lang$applyTo = (function (arglist__13107){
var coll = cljs.core.first(arglist__13107);
arglist__13107 = cljs.core.next(arglist__13107);
var k = cljs.core.first(arglist__13107);
arglist__13107 = cljs.core.next(arglist__13107);
var v = cljs.core.first(arglist__13107);
var kvs = cljs.core.rest(arglist__13107);
return G__13101__delegate(coll,k,v,kvs);
});
G__13101.cljs$core$IFn$_invoke$arity$variadic = G__13101__delegate;
return G__13101;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__13108 = null;
if (arguments.length > 3) {
var G__13109__i = 0, G__13109__a = new Array(arguments.length -  3);
while (G__13109__i < G__13109__a.length) {G__13109__a[G__13109__i] = arguments[G__13109__i + 3]; ++G__13109__i;}
G__13108 = new cljs.core.IndexedSeq(G__13109__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__13108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__13112__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13113 = ret;
var G__13114 = cljs.core.first(ks);
var G__13115 = cljs.core.next(ks);
coll = G__13113;
k = G__13114;
ks = G__13115;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13112 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13116__i = 0, G__13116__a = new Array(arguments.length -  2);
while (G__13116__i < G__13116__a.length) {G__13116__a[G__13116__i] = arguments[G__13116__i + 2]; ++G__13116__i;}
  ks = new cljs.core.IndexedSeq(G__13116__a,0);
} 
return G__13112__delegate.call(this,coll,k,ks);};
G__13112.cljs$lang$maxFixedArity = 2;
G__13112.cljs$lang$applyTo = (function (arglist__13117){
var coll = cljs.core.first(arglist__13117);
arglist__13117 = cljs.core.next(arglist__13117);
var k = cljs.core.first(arglist__13117);
var ks = cljs.core.rest(arglist__13117);
return G__13112__delegate(coll,k,ks);
});
G__13112.cljs$core$IFn$_invoke$arity$variadic = G__13112__delegate;
return G__13112;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__13118 = null;
if (arguments.length > 2) {
var G__13119__i = 0, G__13119__a = new Array(arguments.length -  2);
while (G__13119__i < G__13119__a.length) {G__13119__a[G__13119__i] = arguments[G__13119__i + 2]; ++G__13119__i;}
G__13118 = new cljs.core.IndexedSeq(G__13119__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3759__auto__ = (function (){var G__13124 = f;
return goog.isFunction(G__13124);
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__13125 = f;
if(G__13125){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto____$1 = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
return G__13125.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__13125.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13125);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__13125);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__13591 = null;
var G__13591__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__13591__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13127 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13127) : self__.afn.call(null,G__13127));
});
var G__13591__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13128 = a;
var G__13129 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13128,G__13129) : self__.afn.call(null,G__13128,G__13129));
});
var G__13591__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13130 = a;
var G__13131 = b;
var G__13132 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13130,G__13131,G__13132) : self__.afn.call(null,G__13130,G__13131,G__13132));
});
var G__13591__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13133 = a;
var G__13134 = b;
var G__13135 = c;
var G__13136 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13133,G__13134,G__13135,G__13136) : self__.afn.call(null,G__13133,G__13134,G__13135,G__13136));
});
var G__13591__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13137 = a;
var G__13138 = b;
var G__13139 = c;
var G__13140 = d;
var G__13141 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13137,G__13138,G__13139,G__13140,G__13141) : self__.afn.call(null,G__13137,G__13138,G__13139,G__13140,G__13141));
});
var G__13591__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13142 = a;
var G__13143 = b;
var G__13144 = c;
var G__13145 = d;
var G__13146 = e;
var G__13147 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13142,G__13143,G__13144,G__13145,G__13146,G__13147) : self__.afn.call(null,G__13142,G__13143,G__13144,G__13145,G__13146,G__13147));
});
var G__13591__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13148 = a;
var G__13149 = b;
var G__13150 = c;
var G__13151 = d;
var G__13152 = e;
var G__13153 = f;
var G__13154 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154) : self__.afn.call(null,G__13148,G__13149,G__13150,G__13151,G__13152,G__13153,G__13154));
});
var G__13591__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13155 = a;
var G__13156 = b;
var G__13157 = c;
var G__13158 = d;
var G__13159 = e;
var G__13160 = f;
var G__13161 = g;
var G__13162 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162) : self__.afn.call(null,G__13155,G__13156,G__13157,G__13158,G__13159,G__13160,G__13161,G__13162));
});
var G__13591__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13163 = a;
var G__13164 = b;
var G__13165 = c;
var G__13166 = d;
var G__13167 = e;
var G__13168 = f;
var G__13169 = g;
var G__13170 = h;
var G__13171 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171) : self__.afn.call(null,G__13163,G__13164,G__13165,G__13166,G__13167,G__13168,G__13169,G__13170,G__13171));
});
var G__13591__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13172 = a;
var G__13173 = b;
var G__13174 = c;
var G__13175 = d;
var G__13176 = e;
var G__13177 = f;
var G__13178 = g;
var G__13179 = h;
var G__13180 = i;
var G__13181 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181) : self__.afn.call(null,G__13172,G__13173,G__13174,G__13175,G__13176,G__13177,G__13178,G__13179,G__13180,G__13181));
});
var G__13591__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13182 = a;
var G__13183 = b;
var G__13184 = c;
var G__13185 = d;
var G__13186 = e;
var G__13187 = f;
var G__13188 = g;
var G__13189 = h;
var G__13190 = i;
var G__13191 = j;
var G__13192 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192) : self__.afn.call(null,G__13182,G__13183,G__13184,G__13185,G__13186,G__13187,G__13188,G__13189,G__13190,G__13191,G__13192));
});
var G__13591__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13193 = a;
var G__13194 = b;
var G__13195 = c;
var G__13196 = d;
var G__13197 = e;
var G__13198 = f;
var G__13199 = g;
var G__13200 = h;
var G__13201 = i;
var G__13202 = j;
var G__13203 = k;
var G__13204 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204) : self__.afn.call(null,G__13193,G__13194,G__13195,G__13196,G__13197,G__13198,G__13199,G__13200,G__13201,G__13202,G__13203,G__13204));
});
var G__13591__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13205 = a;
var G__13206 = b;
var G__13207 = c;
var G__13208 = d;
var G__13209 = e;
var G__13210 = f;
var G__13211 = g;
var G__13212 = h;
var G__13213 = i;
var G__13214 = j;
var G__13215 = k;
var G__13216 = l;
var G__13217 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217) : self__.afn.call(null,G__13205,G__13206,G__13207,G__13208,G__13209,G__13210,G__13211,G__13212,G__13213,G__13214,G__13215,G__13216,G__13217));
});
var G__13591__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13218 = a;
var G__13219 = b;
var G__13220 = c;
var G__13221 = d;
var G__13222 = e;
var G__13223 = f;
var G__13224 = g;
var G__13225 = h;
var G__13226 = i;
var G__13227 = j;
var G__13228 = k;
var G__13229 = l;
var G__13230 = m;
var G__13231 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229,G__13230,G__13231) : self__.afn.call(null,G__13218,G__13219,G__13220,G__13221,G__13222,G__13223,G__13224,G__13225,G__13226,G__13227,G__13228,G__13229,G__13230,G__13231));
});
var G__13591__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13232 = a;
var G__13233 = b;
var G__13234 = c;
var G__13235 = d;
var G__13236 = e;
var G__13237 = f;
var G__13238 = g;
var G__13239 = h;
var G__13240 = i;
var G__13241 = j;
var G__13242 = k;
var G__13243 = l;
var G__13244 = m;
var G__13245 = n;
var G__13246 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246) : self__.afn.call(null,G__13232,G__13233,G__13234,G__13235,G__13236,G__13237,G__13238,G__13239,G__13240,G__13241,G__13242,G__13243,G__13244,G__13245,G__13246));
});
var G__13591__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13247 = a;
var G__13248 = b;
var G__13249 = c;
var G__13250 = d;
var G__13251 = e;
var G__13252 = f;
var G__13253 = g;
var G__13254 = h;
var G__13255 = i;
var G__13256 = j;
var G__13257 = k;
var G__13258 = l;
var G__13259 = m;
var G__13260 = n;
var G__13261 = o;
var G__13262 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262) : self__.afn.call(null,G__13247,G__13248,G__13249,G__13250,G__13251,G__13252,G__13253,G__13254,G__13255,G__13256,G__13257,G__13258,G__13259,G__13260,G__13261,G__13262));
});
var G__13591__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13263 = a;
var G__13264 = b;
var G__13265 = c;
var G__13266 = d;
var G__13267 = e;
var G__13268 = f;
var G__13269 = g;
var G__13270 = h;
var G__13271 = i;
var G__13272 = j;
var G__13273 = k;
var G__13274 = l;
var G__13275 = m;
var G__13276 = n;
var G__13277 = o;
var G__13278 = p;
var G__13279 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13263,G__13264,G__13265,G__13266,G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275,G__13276,G__13277,G__13278,G__13279) : self__.afn.call(null,G__13263,G__13264,G__13265,G__13266,G__13267,G__13268,G__13269,G__13270,G__13271,G__13272,G__13273,G__13274,G__13275,G__13276,G__13277,G__13278,G__13279));
});
var G__13591__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13280 = a;
var G__13281 = b;
var G__13282 = c;
var G__13283 = d;
var G__13284 = e;
var G__13285 = f;
var G__13286 = g;
var G__13287 = h;
var G__13288 = i;
var G__13289 = j;
var G__13290 = k;
var G__13291 = l;
var G__13292 = m;
var G__13293 = n;
var G__13294 = o;
var G__13295 = p;
var G__13296 = q;
var G__13297 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297) : self__.afn.call(null,G__13280,G__13281,G__13282,G__13283,G__13284,G__13285,G__13286,G__13287,G__13288,G__13289,G__13290,G__13291,G__13292,G__13293,G__13294,G__13295,G__13296,G__13297));
});
var G__13591__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13298 = a;
var G__13299 = b;
var G__13300 = c;
var G__13301 = d;
var G__13302 = e;
var G__13303 = f;
var G__13304 = g;
var G__13305 = h;
var G__13306 = i;
var G__13307 = j;
var G__13308 = k;
var G__13309 = l;
var G__13310 = m;
var G__13311 = n;
var G__13312 = o;
var G__13313 = p;
var G__13314 = q;
var G__13315 = r;
var G__13316 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316) : self__.afn.call(null,G__13298,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311,G__13312,G__13313,G__13314,G__13315,G__13316));
});
var G__13591__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13317 = a;
var G__13318 = b;
var G__13319 = c;
var G__13320 = d;
var G__13321 = e;
var G__13322 = f;
var G__13323 = g;
var G__13324 = h;
var G__13325 = i;
var G__13326 = j;
var G__13327 = k;
var G__13328 = l;
var G__13329 = m;
var G__13330 = n;
var G__13331 = o;
var G__13332 = p;
var G__13333 = q;
var G__13334 = r;
var G__13335 = s;
var G__13336 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13317,G__13318,G__13319,G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336) : self__.afn.call(null,G__13317,G__13318,G__13319,G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336));
});
var G__13591__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__13337 = self__.afn;
var G__13338 = a;
var G__13339 = b;
var G__13340 = c;
var G__13341 = d;
var G__13342 = e;
var G__13343 = f;
var G__13344 = g;
var G__13345 = h;
var G__13346 = i;
var G__13347 = j;
var G__13348 = k;
var G__13349 = l;
var G__13350 = m;
var G__13351 = n;
var G__13352 = o;
var G__13353 = p;
var G__13354 = q;
var G__13355 = r;
var G__13356 = s;
var G__13357 = t;
var G__13358 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358) : cljs.core.apply.call(null,G__13337,G__13338,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358));
});
G__13591 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__13591__1.call(this,self__);
case 2:
return G__13591__2.call(this,self__,a);
case 3:
return G__13591__3.call(this,self__,a,b);
case 4:
return G__13591__4.call(this,self__,a,b,c);
case 5:
return G__13591__5.call(this,self__,a,b,c,d);
case 6:
return G__13591__6.call(this,self__,a,b,c,d,e);
case 7:
return G__13591__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__13591__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__13591__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__13591__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__13591__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__13591__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__13591__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__13591__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__13591__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__13591__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__13591__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__13591__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__13591__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__13591__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__13591__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__13591__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13591.cljs$core$IFn$_invoke$arity$1 = G__13591__1;
G__13591.cljs$core$IFn$_invoke$arity$2 = G__13591__2;
G__13591.cljs$core$IFn$_invoke$arity$3 = G__13591__3;
G__13591.cljs$core$IFn$_invoke$arity$4 = G__13591__4;
G__13591.cljs$core$IFn$_invoke$arity$5 = G__13591__5;
G__13591.cljs$core$IFn$_invoke$arity$6 = G__13591__6;
G__13591.cljs$core$IFn$_invoke$arity$7 = G__13591__7;
G__13591.cljs$core$IFn$_invoke$arity$8 = G__13591__8;
G__13591.cljs$core$IFn$_invoke$arity$9 = G__13591__9;
G__13591.cljs$core$IFn$_invoke$arity$10 = G__13591__10;
G__13591.cljs$core$IFn$_invoke$arity$11 = G__13591__11;
G__13591.cljs$core$IFn$_invoke$arity$12 = G__13591__12;
G__13591.cljs$core$IFn$_invoke$arity$13 = G__13591__13;
G__13591.cljs$core$IFn$_invoke$arity$14 = G__13591__14;
G__13591.cljs$core$IFn$_invoke$arity$15 = G__13591__15;
G__13591.cljs$core$IFn$_invoke$arity$16 = G__13591__16;
G__13591.cljs$core$IFn$_invoke$arity$17 = G__13591__17;
G__13591.cljs$core$IFn$_invoke$arity$18 = G__13591__18;
G__13591.cljs$core$IFn$_invoke$arity$19 = G__13591__19;
G__13591.cljs$core$IFn$_invoke$arity$20 = G__13591__20;
G__13591.cljs$core$IFn$_invoke$arity$21 = G__13591__21;
G__13591.cljs$core$IFn$_invoke$arity$22 = G__13591__22;
return G__13591;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args13126){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args13126)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__13359 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__13359) : self__.afn.call(null,G__13359));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__13360 = a;
var G__13361 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__13360,G__13361) : self__.afn.call(null,G__13360,G__13361));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__13362 = a;
var G__13363 = b;
var G__13364 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__13362,G__13363,G__13364) : self__.afn.call(null,G__13362,G__13363,G__13364));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__13365 = a;
var G__13366 = b;
var G__13367 = c;
var G__13368 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__13365,G__13366,G__13367,G__13368) : self__.afn.call(null,G__13365,G__13366,G__13367,G__13368));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__13369 = a;
var G__13370 = b;
var G__13371 = c;
var G__13372 = d;
var G__13373 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__13369,G__13370,G__13371,G__13372,G__13373) : self__.afn.call(null,G__13369,G__13370,G__13371,G__13372,G__13373));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__13374 = a;
var G__13375 = b;
var G__13376 = c;
var G__13377 = d;
var G__13378 = e;
var G__13379 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__13374,G__13375,G__13376,G__13377,G__13378,G__13379) : self__.afn.call(null,G__13374,G__13375,G__13376,G__13377,G__13378,G__13379));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__13380 = a;
var G__13381 = b;
var G__13382 = c;
var G__13383 = d;
var G__13384 = e;
var G__13385 = f;
var G__13386 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386) : self__.afn.call(null,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__13387 = a;
var G__13388 = b;
var G__13389 = c;
var G__13390 = d;
var G__13391 = e;
var G__13392 = f;
var G__13393 = g;
var G__13394 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__13387,G__13388,G__13389,G__13390,G__13391,G__13392,G__13393,G__13394) : self__.afn.call(null,G__13387,G__13388,G__13389,G__13390,G__13391,G__13392,G__13393,G__13394));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__13395 = a;
var G__13396 = b;
var G__13397 = c;
var G__13398 = d;
var G__13399 = e;
var G__13400 = f;
var G__13401 = g;
var G__13402 = h;
var G__13403 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403) : self__.afn.call(null,G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__13404 = a;
var G__13405 = b;
var G__13406 = c;
var G__13407 = d;
var G__13408 = e;
var G__13409 = f;
var G__13410 = g;
var G__13411 = h;
var G__13412 = i;
var G__13413 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__13404,G__13405,G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413) : self__.afn.call(null,G__13404,G__13405,G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__13414 = a;
var G__13415 = b;
var G__13416 = c;
var G__13417 = d;
var G__13418 = e;
var G__13419 = f;
var G__13420 = g;
var G__13421 = h;
var G__13422 = i;
var G__13423 = j;
var G__13424 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420,G__13421,G__13422,G__13423,G__13424) : self__.afn.call(null,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419,G__13420,G__13421,G__13422,G__13423,G__13424));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__13425 = a;
var G__13426 = b;
var G__13427 = c;
var G__13428 = d;
var G__13429 = e;
var G__13430 = f;
var G__13431 = g;
var G__13432 = h;
var G__13433 = i;
var G__13434 = j;
var G__13435 = k;
var G__13436 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436) : self__.afn.call(null,G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__13437 = a;
var G__13438 = b;
var G__13439 = c;
var G__13440 = d;
var G__13441 = e;
var G__13442 = f;
var G__13443 = g;
var G__13444 = h;
var G__13445 = i;
var G__13446 = j;
var G__13447 = k;
var G__13448 = l;
var G__13449 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449) : self__.afn.call(null,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__13450 = a;
var G__13451 = b;
var G__13452 = c;
var G__13453 = d;
var G__13454 = e;
var G__13455 = f;
var G__13456 = g;
var G__13457 = h;
var G__13458 = i;
var G__13459 = j;
var G__13460 = k;
var G__13461 = l;
var G__13462 = m;
var G__13463 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__13450,G__13451,G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463) : self__.afn.call(null,G__13450,G__13451,G__13452,G__13453,G__13454,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__13464 = a;
var G__13465 = b;
var G__13466 = c;
var G__13467 = d;
var G__13468 = e;
var G__13469 = f;
var G__13470 = g;
var G__13471 = h;
var G__13472 = i;
var G__13473 = j;
var G__13474 = k;
var G__13475 = l;
var G__13476 = m;
var G__13477 = n;
var G__13478 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473,G__13474,G__13475,G__13476,G__13477,G__13478) : self__.afn.call(null,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473,G__13474,G__13475,G__13476,G__13477,G__13478));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__13479 = a;
var G__13480 = b;
var G__13481 = c;
var G__13482 = d;
var G__13483 = e;
var G__13484 = f;
var G__13485 = g;
var G__13486 = h;
var G__13487 = i;
var G__13488 = j;
var G__13489 = k;
var G__13490 = l;
var G__13491 = m;
var G__13492 = n;
var G__13493 = o;
var G__13494 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493,G__13494) : self__.afn.call(null,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493,G__13494));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__13495 = a;
var G__13496 = b;
var G__13497 = c;
var G__13498 = d;
var G__13499 = e;
var G__13500 = f;
var G__13501 = g;
var G__13502 = h;
var G__13503 = i;
var G__13504 = j;
var G__13505 = k;
var G__13506 = l;
var G__13507 = m;
var G__13508 = n;
var G__13509 = o;
var G__13510 = p;
var G__13511 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__13495,G__13496,G__13497,G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509,G__13510,G__13511) : self__.afn.call(null,G__13495,G__13496,G__13497,G__13498,G__13499,G__13500,G__13501,G__13502,G__13503,G__13504,G__13505,G__13506,G__13507,G__13508,G__13509,G__13510,G__13511));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__13512 = a;
var G__13513 = b;
var G__13514 = c;
var G__13515 = d;
var G__13516 = e;
var G__13517 = f;
var G__13518 = g;
var G__13519 = h;
var G__13520 = i;
var G__13521 = j;
var G__13522 = k;
var G__13523 = l;
var G__13524 = m;
var G__13525 = n;
var G__13526 = o;
var G__13527 = p;
var G__13528 = q;
var G__13529 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526,G__13527,G__13528,G__13529) : self__.afn.call(null,G__13512,G__13513,G__13514,G__13515,G__13516,G__13517,G__13518,G__13519,G__13520,G__13521,G__13522,G__13523,G__13524,G__13525,G__13526,G__13527,G__13528,G__13529));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__13530 = a;
var G__13531 = b;
var G__13532 = c;
var G__13533 = d;
var G__13534 = e;
var G__13535 = f;
var G__13536 = g;
var G__13537 = h;
var G__13538 = i;
var G__13539 = j;
var G__13540 = k;
var G__13541 = l;
var G__13542 = m;
var G__13543 = n;
var G__13544 = o;
var G__13545 = p;
var G__13546 = q;
var G__13547 = r;
var G__13548 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545,G__13546,G__13547,G__13548) : self__.afn.call(null,G__13530,G__13531,G__13532,G__13533,G__13534,G__13535,G__13536,G__13537,G__13538,G__13539,G__13540,G__13541,G__13542,G__13543,G__13544,G__13545,G__13546,G__13547,G__13548));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__13549 = a;
var G__13550 = b;
var G__13551 = c;
var G__13552 = d;
var G__13553 = e;
var G__13554 = f;
var G__13555 = g;
var G__13556 = h;
var G__13557 = i;
var G__13558 = j;
var G__13559 = k;
var G__13560 = l;
var G__13561 = m;
var G__13562 = n;
var G__13563 = o;
var G__13564 = p;
var G__13565 = q;
var G__13566 = r;
var G__13567 = s;
var G__13568 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568) : self__.afn.call(null,G__13549,G__13550,G__13551,G__13552,G__13553,G__13554,G__13555,G__13556,G__13557,G__13558,G__13559,G__13560,G__13561,G__13562,G__13563,G__13564,G__13565,G__13566,G__13567,G__13568));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__13569 = self__.afn;
var G__13570 = a;
var G__13571 = b;
var G__13572 = c;
var G__13573 = d;
var G__13574 = e;
var G__13575 = f;
var G__13576 = g;
var G__13577 = h;
var G__13578 = i;
var G__13579 = j;
var G__13580 = k;
var G__13581 = l;
var G__13582 = m;
var G__13583 = n;
var G__13584 = o;
var G__13585 = p;
var G__13586 = q;
var G__13587 = r;
var G__13588 = s;
var G__13589 = t;
var G__13590 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590) : cljs.core.apply.call(null,G__13569,G__13570,G__13571,G__13572,G__13573,G__13574,G__13575,G__13576,G__13577,G__13578,G__13579,G__13580,G__13581,G__13582,G__13583,G__13584,G__13585,G__13586,G__13587,G__13588,G__13589,G__13590));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__13595 = o;
if(G__13595){
var bit__4440__auto__ = (G__13595.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4440__auto__) || (G__13595.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__13595.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13595);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__13595);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3747__auto__ = !((o == null));
if(and__3747__auto__){
var G__13599 = o;
if(G__13599){
var bit__4440__auto__ = (G__13599.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4440__auto__) || (G__13599.cljs$core$IMeta$)){
return true;
} else {
if((!G__13599.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13599);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__13599);
}
} else {
return and__3747__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__13602__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__13603 = ret;
var G__13604 = cljs.core.first(ks);
var G__13605 = cljs.core.next(ks);
coll = G__13603;
k = G__13604;
ks = G__13605;
continue;
} else {
return ret;
}
}
break;
}
};
var G__13602 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13606__i = 0, G__13606__a = new Array(arguments.length -  2);
while (G__13606__i < G__13606__a.length) {G__13606__a[G__13606__i] = arguments[G__13606__i + 2]; ++G__13606__i;}
  ks = new cljs.core.IndexedSeq(G__13606__a,0);
} 
return G__13602__delegate.call(this,coll,k,ks);};
G__13602.cljs$lang$maxFixedArity = 2;
G__13602.cljs$lang$applyTo = (function (arglist__13607){
var coll = cljs.core.first(arglist__13607);
arglist__13607 = cljs.core.next(arglist__13607);
var k = cljs.core.first(arglist__13607);
var ks = cljs.core.rest(arglist__13607);
return G__13602__delegate(coll,k,ks);
});
G__13602.cljs$core$IFn$_invoke$arity$variadic = G__13602__delegate;
return G__13602;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__13608 = null;
if (arguments.length > 2) {
var G__13609__i = 0, G__13609__a = new Array(arguments.length -  2);
while (G__13609__i < G__13609__a.length) {G__13609__a[G__13609__i] = arguments[G__13609__i + 2]; ++G__13609__i;}
G__13608 = new cljs.core.IndexedSeq(G__13609__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__13608);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13611 = x;
if(G__13611){
var bit__4440__auto__ = (G__13611.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4440__auto__) || (G__13611.cljs$core$ICollection$)){
return true;
} else {
if((!G__13611.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13611);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__13611);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13613 = x;
if(G__13613){
var bit__4440__auto__ = (G__13613.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4440__auto__) || (G__13613.cljs$core$ISet$)){
return true;
} else {
if((!G__13613.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13613);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__13613);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__13615 = x;
if(G__13615){
var bit__4440__auto__ = (G__13615.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4440__auto__) || (G__13615.cljs$core$IAssociative$)){
return true;
} else {
if((!G__13615.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13615);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__13615);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__13617 = x;
if(G__13617){
var bit__4440__auto__ = (G__13617.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4440__auto__) || (G__13617.cljs$core$ISequential$)){
return true;
} else {
if((!G__13617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__13617);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__13619 = x;
if(G__13619){
var bit__4440__auto__ = (G__13619.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4440__auto__) || (G__13619.cljs$core$ISorted$)){
return true;
} else {
if((!G__13619.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13619);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__13619);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__13621 = x;
if(G__13621){
var bit__4440__auto__ = (G__13621.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4440__auto__) || (G__13621.cljs$core$IReduce$)){
return true;
} else {
if((!G__13621.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13621);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__13621);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__13623 = x;
if(G__13623){
var bit__4440__auto__ = (G__13623.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4440__auto__) || (G__13623.cljs$core$IMap$)){
return true;
} else {
if((!G__13623.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13623);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__13623);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__13625 = x;
if(G__13625){
var bit__4440__auto__ = (G__13625.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4440__auto__) || (G__13625.cljs$core$IVector$)){
return true;
} else {
if((!G__13625.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13625);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__13625);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__13627 = x;
if(G__13627){
var bit__4433__auto__ = (G__13627.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4433__auto__) || (G__13627.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj13633 = {};
return obj13633;
});
var js_obj__1 = (function() { 
var G__13636__delegate = function (keyvals){
var G__13634 = goog.object.create;
var G__13635 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__13634,G__13635) : cljs.core.apply.call(null,G__13634,G__13635));
};
var G__13636 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__13637__i = 0, G__13637__a = new Array(arguments.length -  0);
while (G__13637__i < G__13637__a.length) {G__13637__a[G__13637__i] = arguments[G__13637__i + 0]; ++G__13637__i;}
  keyvals = new cljs.core.IndexedSeq(G__13637__a,0);
} 
return G__13636__delegate.call(this,keyvals);};
G__13636.cljs$lang$maxFixedArity = 0;
G__13636.cljs$lang$applyTo = (function (arglist__13638){
var keyvals = cljs.core.seq(arglist__13638);
return G__13636__delegate(keyvals);
});
G__13636.cljs$core$IFn$_invoke$arity$variadic = G__13636__delegate;
return G__13636;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__13639 = null;
if (arguments.length > 0) {
var G__13640__i = 0, G__13640__a = new Array(arguments.length -  0);
while (G__13640__i < G__13640__a.length) {G__13640__a[G__13640__i] = arguments[G__13640__i + 0]; ++G__13640__i;}
G__13639 = new cljs.core.IndexedSeq(G__13640__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__13639);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__13643_13645 = obj;
var G__13644_13646 = ((function (G__13643_13645,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__13643_13645,keys))
;
goog.object.forEach(G__13643_13645,G__13644_13646);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13647 = (i__$1 + (1));
var G__13648 = (j__$1 + (1));
var G__13649 = (len__$1 - (1));
i__$1 = G__13647;
j__$1 = G__13648;
len__$1 = G__13649;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__13650 = (i__$1 - (1));
var G__13651 = (j__$1 - (1));
var G__13652 = (len__$1 - (1));
i__$1 = G__13650;
j__$1 = G__13651;
len__$1 = G__13652;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj13654 = {};
return obj13654;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__13656 = s;
if(G__13656){
var bit__4440__auto__ = (G__13656.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4440__auto__) || (G__13656.cljs$core$ISeq$)){
return true;
} else {
if((!G__13656.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13656);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__13656);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__13658 = s;
if(G__13658){
var bit__4440__auto__ = (G__13658.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4440__auto__) || (G__13658.cljs$core$ISeqable$)){
return true;
} else {
if((!G__13658.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13658);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__13658);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3759__auto__ = cljs.core.fn_QMARK_(f);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var G__13662 = f;
if(G__13662){
var bit__4440__auto__ = (G__13662.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4440__auto__) || (G__13662.cljs$core$IFn$)){
return true;
} else {
if((!G__13662.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13662);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__13662);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__13675 = n;
return isNaN(G__13675);
})())) && (!((n === Infinity))) && (((function (){var G__13676 = n;
return parseFloat(G__13676);
})() === (function (){var G__13677 = n;
var G__13678 = (10);
return parseInt(G__13677,G__13678);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__13679__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__13680 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__13681 = etc;
s = G__13680;
xs = G__13681;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__13679 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13682__i = 0, G__13682__a = new Array(arguments.length -  2);
while (G__13682__i < G__13682__a.length) {G__13682__a[G__13682__i] = arguments[G__13682__i + 2]; ++G__13682__i;}
  more = new cljs.core.IndexedSeq(G__13682__a,0);
} 
return G__13679__delegate.call(this,x,y,more);};
G__13679.cljs$lang$maxFixedArity = 2;
G__13679.cljs$lang$applyTo = (function (arglist__13683){
var x = cljs.core.first(arglist__13683);
arglist__13683 = cljs.core.next(arglist__13683);
var y = cljs.core.first(arglist__13683);
var more = cljs.core.rest(arglist__13683);
return G__13679__delegate(x,y,more);
});
G__13679.cljs$core$IFn$_invoke$arity$variadic = G__13679__delegate;
return G__13679;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__13684 = null;
if (arguments.length > 2) {
var G__13685__i = 0, G__13685__a = new Array(arguments.length -  2);
while (G__13685__i < G__13685__a.length) {G__13685__a[G__13685__i] = arguments[G__13685__i + 2]; ++G__13685__i;}
G__13684 = new cljs.core.IndexedSeq(G__13685__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__13689 = x;
if(G__13689){
var bit__4433__auto__ = (G__13689.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4433__auto__) || (G__13689.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__13690 = x;
var G__13691 = y;
return goog.array.defaultCompare(G__13690,G__13691);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__13696 = xs;
var G__13697 = ys;
var G__13698 = len;
var G__13699 = (n + (1));
xs = G__13696;
ys = G__13697;
len = G__13698;
n = G__13699;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__13704 = x;
var G__13705 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13704,G__13705) : f.call(null,G__13704,G__13705));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__13706 = y;
var G__13707 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13706,G__13707) : f.call(null,G__13706,G__13707));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__13713 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13713) : cljs.core.to_array.call(null,G__13713));
})();
var G__13714_13716 = a;
var G__13715_13717 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__13714_13716,G__13715_13717);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__13723 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13723) : keyfn.call(null,G__13723));
})(),(function (){var G__13724 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__13724) : keyfn.call(null,G__13724));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__13730 = f;
var G__13731 = cljs.core.first(s);
var G__13732 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13730,G__13731,G__13732) : cljs.core.reduce.call(null,G__13730,G__13731,G__13732));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__13733 = val__$1;
var G__13734 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13733,G__13734) : f.call(null,G__13733,G__13734));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__13735 = nval;
var G__13736 = cljs.core.next(coll__$1);
val__$1 = G__13735;
coll__$1 = G__13736;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__13740 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__13740) : cljs.core.to_array.call(null,G__13740));
})();
var G__13741_13743 = a;
goog.array.shuffle(G__13741_13743);

var G__13742 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__13742) : cljs.core.vec.call(null,G__13742));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__13746 = coll;
if(G__13746){
var bit__4433__auto__ = (G__13746.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4433__auto__) || (G__13746.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__13747 = coll;
if(G__13747){
var bit__4433__auto__ = (G__13747.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4433__auto__) || (G__13747.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__13756 = null;
var G__13756__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__13756__1 = (function (x){
var G__13753 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__13753) : cf.call(null,G__13753));
});
var G__13756__2 = (function (x,y){
var G__13754 = x;
var G__13755 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13754,G__13755) : f.call(null,G__13754,G__13755));
});
G__13756 = function(x,y){
switch(arguments.length){
case 0:
return G__13756__0.call(this);
case 1:
return G__13756__1.call(this,x);
case 2:
return G__13756__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13756.cljs$core$IFn$_invoke$arity$0 = G__13756__0;
G__13756.cljs$core$IFn$_invoke$arity$1 = G__13756__1;
G__13756.cljs$core$IFn$_invoke$arity$2 = G__13756__2;
return G__13756;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__13763 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13763) : xform.call(null,G__13763));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__13764 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__13764) : f__$1.call(null,G__13764));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__13765__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__13765 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13766__i = 0, G__13766__a = new Array(arguments.length -  2);
while (G__13766__i < G__13766__a.length) {G__13766__a[G__13766__i] = arguments[G__13766__i + 2]; ++G__13766__i;}
  more = new cljs.core.IndexedSeq(G__13766__a,0);
} 
return G__13765__delegate.call(this,x,y,more);};
G__13765.cljs$lang$maxFixedArity = 2;
G__13765.cljs$lang$applyTo = (function (arglist__13767){
var x = cljs.core.first(arglist__13767);
arglist__13767 = cljs.core.next(arglist__13767);
var y = cljs.core.first(arglist__13767);
var more = cljs.core.rest(arglist__13767);
return G__13765__delegate(x,y,more);
});
G__13765.cljs$core$IFn$_invoke$arity$variadic = G__13765__delegate;
return G__13765;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__13768 = null;
if (arguments.length > 2) {
var G__13769__i = 0, G__13769__a = new Array(arguments.length -  2);
while (G__13769__i < G__13769__a.length) {G__13769__a[G__13769__i] = arguments[G__13769__i + 2]; ++G__13769__i;}
G__13768 = new cljs.core.IndexedSeq(G__13769__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13768);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__13770__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__13770 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13771__i = 0, G__13771__a = new Array(arguments.length -  2);
while (G__13771__i < G__13771__a.length) {G__13771__a[G__13771__i] = arguments[G__13771__i + 2]; ++G__13771__i;}
  more = new cljs.core.IndexedSeq(G__13771__a,0);
} 
return G__13770__delegate.call(this,x,y,more);};
G__13770.cljs$lang$maxFixedArity = 2;
G__13770.cljs$lang$applyTo = (function (arglist__13772){
var x = cljs.core.first(arglist__13772);
arglist__13772 = cljs.core.next(arglist__13772);
var y = cljs.core.first(arglist__13772);
var more = cljs.core.rest(arglist__13772);
return G__13770__delegate(x,y,more);
});
G__13770.cljs$core$IFn$_invoke$arity$variadic = G__13770__delegate;
return G__13770;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__13773 = null;
if (arguments.length > 2) {
var G__13774__i = 0, G__13774__a = new Array(arguments.length -  2);
while (G__13774__i < G__13774__a.length) {G__13774__a[G__13774__i] = arguments[G__13774__i + 2]; ++G__13774__i;}
G__13773 = new cljs.core.IndexedSeq(G__13774__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__13775__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__13775 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13776__i = 0, G__13776__a = new Array(arguments.length -  2);
while (G__13776__i < G__13776__a.length) {G__13776__a[G__13776__i] = arguments[G__13776__i + 2]; ++G__13776__i;}
  more = new cljs.core.IndexedSeq(G__13776__a,0);
} 
return G__13775__delegate.call(this,x,y,more);};
G__13775.cljs$lang$maxFixedArity = 2;
G__13775.cljs$lang$applyTo = (function (arglist__13777){
var x = cljs.core.first(arglist__13777);
arglist__13777 = cljs.core.next(arglist__13777);
var y = cljs.core.first(arglist__13777);
var more = cljs.core.rest(arglist__13777);
return G__13775__delegate(x,y,more);
});
G__13775.cljs$core$IFn$_invoke$arity$variadic = G__13775__delegate;
return G__13775;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__13778 = null;
if (arguments.length > 2) {
var G__13779__i = 0, G__13779__a = new Array(arguments.length -  2);
while (G__13779__i < G__13779__a.length) {G__13779__a[G__13779__i] = arguments[G__13779__i + 2]; ++G__13779__i;}
G__13778 = new cljs.core.IndexedSeq(G__13779__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__13784__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13784 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13785__i = 0, G__13785__a = new Array(arguments.length -  2);
while (G__13785__i < G__13785__a.length) {G__13785__a[G__13785__i] = arguments[G__13785__i + 2]; ++G__13785__i;}
  more = new cljs.core.IndexedSeq(G__13785__a,0);
} 
return G__13784__delegate.call(this,x,y,more);};
G__13784.cljs$lang$maxFixedArity = 2;
G__13784.cljs$lang$applyTo = (function (arglist__13786){
var x = cljs.core.first(arglist__13786);
arglist__13786 = cljs.core.next(arglist__13786);
var y = cljs.core.first(arglist__13786);
var more = cljs.core.rest(arglist__13786);
return G__13784__delegate(x,y,more);
});
G__13784.cljs$core$IFn$_invoke$arity$variadic = G__13784__delegate;
return G__13784;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__13787 = null;
if (arguments.length > 2) {
var G__13788__i = 0, G__13788__a = new Array(arguments.length -  2);
while (G__13788__i < G__13788__a.length) {G__13788__a[G__13788__i] = arguments[G__13788__i + 2]; ++G__13788__i;}
G__13787 = new cljs.core.IndexedSeq(G__13788__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13787);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__13789__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__13790 = y;
var G__13791 = cljs.core.first(more);
var G__13792 = cljs.core.next(more);
x = G__13790;
y = G__13791;
more = G__13792;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13789 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13793__i = 0, G__13793__a = new Array(arguments.length -  2);
while (G__13793__i < G__13793__a.length) {G__13793__a[G__13793__i] = arguments[G__13793__i + 2]; ++G__13793__i;}
  more = new cljs.core.IndexedSeq(G__13793__a,0);
} 
return G__13789__delegate.call(this,x,y,more);};
G__13789.cljs$lang$maxFixedArity = 2;
G__13789.cljs$lang$applyTo = (function (arglist__13794){
var x = cljs.core.first(arglist__13794);
arglist__13794 = cljs.core.next(arglist__13794);
var y = cljs.core.first(arglist__13794);
var more = cljs.core.rest(arglist__13794);
return G__13789__delegate(x,y,more);
});
G__13789.cljs$core$IFn$_invoke$arity$variadic = G__13789__delegate;
return G__13789;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__13795 = null;
if (arguments.length > 2) {
var G__13796__i = 0, G__13796__a = new Array(arguments.length -  2);
while (G__13796__i < G__13796__a.length) {G__13796__a[G__13796__i] = arguments[G__13796__i + 2]; ++G__13796__i;}
G__13795 = new cljs.core.IndexedSeq(G__13796__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__13797__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__13798 = y;
var G__13799 = cljs.core.first(more);
var G__13800 = cljs.core.next(more);
x = G__13798;
y = G__13799;
more = G__13800;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13797 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13801__i = 0, G__13801__a = new Array(arguments.length -  2);
while (G__13801__i < G__13801__a.length) {G__13801__a[G__13801__i] = arguments[G__13801__i + 2]; ++G__13801__i;}
  more = new cljs.core.IndexedSeq(G__13801__a,0);
} 
return G__13797__delegate.call(this,x,y,more);};
G__13797.cljs$lang$maxFixedArity = 2;
G__13797.cljs$lang$applyTo = (function (arglist__13802){
var x = cljs.core.first(arglist__13802);
arglist__13802 = cljs.core.next(arglist__13802);
var y = cljs.core.first(arglist__13802);
var more = cljs.core.rest(arglist__13802);
return G__13797__delegate(x,y,more);
});
G__13797.cljs$core$IFn$_invoke$arity$variadic = G__13797__delegate;
return G__13797;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__13803 = null;
if (arguments.length > 2) {
var G__13804__i = 0, G__13804__a = new Array(arguments.length -  2);
while (G__13804__i < G__13804__a.length) {G__13804__a[G__13804__i] = arguments[G__13804__i + 2]; ++G__13804__i;}
G__13803 = new cljs.core.IndexedSeq(G__13804__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__13805__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__13806 = y;
var G__13807 = cljs.core.first(more);
var G__13808 = cljs.core.next(more);
x = G__13806;
y = G__13807;
more = G__13808;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13805 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13809__i = 0, G__13809__a = new Array(arguments.length -  2);
while (G__13809__i < G__13809__a.length) {G__13809__a[G__13809__i] = arguments[G__13809__i + 2]; ++G__13809__i;}
  more = new cljs.core.IndexedSeq(G__13809__a,0);
} 
return G__13805__delegate.call(this,x,y,more);};
G__13805.cljs$lang$maxFixedArity = 2;
G__13805.cljs$lang$applyTo = (function (arglist__13810){
var x = cljs.core.first(arglist__13810);
arglist__13810 = cljs.core.next(arglist__13810);
var y = cljs.core.first(arglist__13810);
var more = cljs.core.rest(arglist__13810);
return G__13805__delegate(x,y,more);
});
G__13805.cljs$core$IFn$_invoke$arity$variadic = G__13805__delegate;
return G__13805;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__13811 = null;
if (arguments.length > 2) {
var G__13812__i = 0, G__13812__a = new Array(arguments.length -  2);
while (G__13812__i < G__13812__a.length) {G__13812__a[G__13812__i] = arguments[G__13812__i + 2]; ++G__13812__i;}
G__13811 = new cljs.core.IndexedSeq(G__13812__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__13813__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__13814 = y;
var G__13815 = cljs.core.first(more);
var G__13816 = cljs.core.next(more);
x = G__13814;
y = G__13815;
more = G__13816;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13813 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13817__i = 0, G__13817__a = new Array(arguments.length -  2);
while (G__13817__i < G__13817__a.length) {G__13817__a[G__13817__i] = arguments[G__13817__i + 2]; ++G__13817__i;}
  more = new cljs.core.IndexedSeq(G__13817__a,0);
} 
return G__13813__delegate.call(this,x,y,more);};
G__13813.cljs$lang$maxFixedArity = 2;
G__13813.cljs$lang$applyTo = (function (arglist__13818){
var x = cljs.core.first(arglist__13818);
arglist__13818 = cljs.core.next(arglist__13818);
var y = cljs.core.first(arglist__13818);
var more = cljs.core.rest(arglist__13818);
return G__13813__delegate(x,y,more);
});
G__13813.cljs$core$IFn$_invoke$arity$variadic = G__13813__delegate;
return G__13813;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__13819 = null;
if (arguments.length > 2) {
var G__13820__i = 0, G__13820__a = new Array(arguments.length -  2);
while (G__13820__i < G__13820__a.length) {G__13820__a[G__13820__i] = arguments[G__13820__i + 2]; ++G__13820__i;}
G__13819 = new cljs.core.IndexedSeq(G__13820__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13819);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4076__auto__ = x;
var y__4077__auto__ = y;
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
});
var max__3 = (function() { 
var G__13821__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4076__auto__ = x;
var y__4077__auto__ = y;
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
})(),more);
};
var G__13821 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13822__i = 0, G__13822__a = new Array(arguments.length -  2);
while (G__13822__i < G__13822__a.length) {G__13822__a[G__13822__i] = arguments[G__13822__i + 2]; ++G__13822__i;}
  more = new cljs.core.IndexedSeq(G__13822__a,0);
} 
return G__13821__delegate.call(this,x,y,more);};
G__13821.cljs$lang$maxFixedArity = 2;
G__13821.cljs$lang$applyTo = (function (arglist__13823){
var x = cljs.core.first(arglist__13823);
arglist__13823 = cljs.core.next(arglist__13823);
var y = cljs.core.first(arglist__13823);
var more = cljs.core.rest(arglist__13823);
return G__13821__delegate(x,y,more);
});
G__13821.cljs$core$IFn$_invoke$arity$variadic = G__13821__delegate;
return G__13821;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__13824 = null;
if (arguments.length > 2) {
var G__13825__i = 0, G__13825__a = new Array(arguments.length -  2);
while (G__13825__i < G__13825__a.length) {G__13825__a[G__13825__i] = arguments[G__13825__i + 2]; ++G__13825__i;}
G__13824 = new cljs.core.IndexedSeq(G__13825__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13824);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4083__auto__ = x;
var y__4084__auto__ = y;
return ((x__4083__auto__ < y__4084__auto__) ? x__4083__auto__ : y__4084__auto__);
});
var min__3 = (function() { 
var G__13826__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4083__auto__ = x;
var y__4084__auto__ = y;
return ((x__4083__auto__ < y__4084__auto__) ? x__4083__auto__ : y__4084__auto__);
})(),more);
};
var G__13826 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13827__i = 0, G__13827__a = new Array(arguments.length -  2);
while (G__13827__i < G__13827__a.length) {G__13827__a[G__13827__i] = arguments[G__13827__i + 2]; ++G__13827__i;}
  more = new cljs.core.IndexedSeq(G__13827__a,0);
} 
return G__13826__delegate.call(this,x,y,more);};
G__13826.cljs$lang$maxFixedArity = 2;
G__13826.cljs$lang$applyTo = (function (arglist__13828){
var x = cljs.core.first(arglist__13828);
arglist__13828 = cljs.core.next(arglist__13828);
var y = cljs.core.first(arglist__13828);
var more = cljs.core.rest(arglist__13828);
return G__13826__delegate(x,y,more);
});
G__13826.cljs$core$IFn$_invoke$arity$variadic = G__13826__delegate;
return G__13826;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__13829 = null;
if (arguments.length > 2) {
var G__13830__i = 0, G__13830__a = new Array(arguments.length -  2);
while (G__13830__i < G__13830__a.length) {G__13830__a[G__13830__i] = arguments[G__13830__i + 2]; ++G__13830__i;}
G__13829 = new cljs.core.IndexedSeq(G__13830__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13829);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__13831__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__13831 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13832__i = 0, G__13832__a = new Array(arguments.length -  2);
while (G__13832__i < G__13832__a.length) {G__13832__a[G__13832__i] = arguments[G__13832__i + 2]; ++G__13832__i;}
  more = new cljs.core.IndexedSeq(G__13832__a,0);
} 
return G__13831__delegate.call(this,x,y,more);};
G__13831.cljs$lang$maxFixedArity = 2;
G__13831.cljs$lang$applyTo = (function (arglist__13833){
var x = cljs.core.first(arglist__13833);
arglist__13833 = cljs.core.next(arglist__13833);
var y = cljs.core.first(arglist__13833);
var more = cljs.core.rest(arglist__13833);
return G__13831__delegate(x,y,more);
});
G__13831.cljs$core$IFn$_invoke$arity$variadic = G__13831__delegate;
return G__13831;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__13834 = null;
if (arguments.length > 2) {
var G__13835__i = 0, G__13835__a = new Array(arguments.length -  2);
while (G__13835__i < G__13835__a.length) {G__13835__a[G__13835__i] = arguments[G__13835__i + 2]; ++G__13835__i;}
G__13834 = new cljs.core.IndexedSeq(G__13835__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13834);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__13836__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__13836 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13837__i = 0, G__13837__a = new Array(arguments.length -  2);
while (G__13837__i < G__13837__a.length) {G__13837__a[G__13837__i] = arguments[G__13837__i + 2]; ++G__13837__i;}
  more = new cljs.core.IndexedSeq(G__13837__a,0);
} 
return G__13836__delegate.call(this,x,y,more);};
G__13836.cljs$lang$maxFixedArity = 2;
G__13836.cljs$lang$applyTo = (function (arglist__13838){
var x = cljs.core.first(arglist__13838);
arglist__13838 = cljs.core.next(arglist__13838);
var y = cljs.core.first(arglist__13838);
var more = cljs.core.rest(arglist__13838);
return G__13836__delegate(x,y,more);
});
G__13836.cljs$core$IFn$_invoke$arity$variadic = G__13836__delegate;
return G__13836;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__13839 = null;
if (arguments.length > 2) {
var G__13840__i = 0, G__13840__a = new Array(arguments.length -  2);
while (G__13840__i < G__13840__a.length) {G__13840__a[G__13840__i] = arguments[G__13840__i + 2]; ++G__13840__i;}
G__13839 = new cljs.core.IndexedSeq(G__13840__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13839);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__13845__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__13845 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13846__i = 0, G__13846__a = new Array(arguments.length -  2);
while (G__13846__i < G__13846__a.length) {G__13846__a[G__13846__i] = arguments[G__13846__i + 2]; ++G__13846__i;}
  more = new cljs.core.IndexedSeq(G__13846__a,0);
} 
return G__13845__delegate.call(this,x,y,more);};
G__13845.cljs$lang$maxFixedArity = 2;
G__13845.cljs$lang$applyTo = (function (arglist__13847){
var x = cljs.core.first(arglist__13847);
arglist__13847 = cljs.core.next(arglist__13847);
var y = cljs.core.first(arglist__13847);
var more = cljs.core.rest(arglist__13847);
return G__13845__delegate(x,y,more);
});
G__13845.cljs$core$IFn$_invoke$arity$variadic = G__13845__delegate;
return G__13845;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__13848 = null;
if (arguments.length > 2) {
var G__13849__i = 0, G__13849__a = new Array(arguments.length -  2);
while (G__13849__i < G__13849__a.length) {G__13849__a[G__13849__i] = arguments[G__13849__i + 2]; ++G__13849__i;}
G__13848 = new cljs.core.IndexedSeq(G__13849__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13848);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__13850__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__13850 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13851__i = 0, G__13851__a = new Array(arguments.length -  2);
while (G__13851__i < G__13851__a.length) {G__13851__a[G__13851__i] = arguments[G__13851__i + 2]; ++G__13851__i;}
  more = new cljs.core.IndexedSeq(G__13851__a,0);
} 
return G__13850__delegate.call(this,x,y,more);};
G__13850.cljs$lang$maxFixedArity = 2;
G__13850.cljs$lang$applyTo = (function (arglist__13852){
var x = cljs.core.first(arglist__13852);
arglist__13852 = cljs.core.next(arglist__13852);
var y = cljs.core.first(arglist__13852);
var more = cljs.core.rest(arglist__13852);
return G__13850__delegate(x,y,more);
});
G__13850.cljs$core$IFn$_invoke$arity$variadic = G__13850__delegate;
return G__13850;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__13853 = null;
if (arguments.length > 2) {
var G__13854__i = 0, G__13854__a = new Array(arguments.length -  2);
while (G__13854__i < G__13854__a.length) {G__13854__a[G__13854__i] = arguments[G__13854__i + 2]; ++G__13854__i;}
G__13853 = new cljs.core.IndexedSeq(G__13854__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13853);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__13855__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__13855 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13856__i = 0, G__13856__a = new Array(arguments.length -  2);
while (G__13856__i < G__13856__a.length) {G__13856__a[G__13856__i] = arguments[G__13856__i + 2]; ++G__13856__i;}
  more = new cljs.core.IndexedSeq(G__13856__a,0);
} 
return G__13855__delegate.call(this,x,y,more);};
G__13855.cljs$lang$maxFixedArity = 2;
G__13855.cljs$lang$applyTo = (function (arglist__13857){
var x = cljs.core.first(arglist__13857);
arglist__13857 = cljs.core.next(arglist__13857);
var y = cljs.core.first(arglist__13857);
var more = cljs.core.rest(arglist__13857);
return G__13855__delegate(x,y,more);
});
G__13855.cljs$core$IFn$_invoke$arity$variadic = G__13855__delegate;
return G__13855;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__13858 = null;
if (arguments.length > 2) {
var G__13859__i = 0, G__13859__a = new Array(arguments.length -  2);
while (G__13859__i < G__13859__a.length) {G__13859__a[G__13859__i] = arguments[G__13859__i + 2]; ++G__13859__i;}
G__13858 = new cljs.core.IndexedSeq(G__13859__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13858);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__13862 = x;
var G__13863 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__13862,G__13863) : cljs.core.mod.call(null,G__13862,G__13863));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__13864__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__13864 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13865__i = 0, G__13865__a = new Array(arguments.length -  2);
while (G__13865__i < G__13865__a.length) {G__13865__a[G__13865__i] = arguments[G__13865__i + 2]; ++G__13865__i;}
  more = new cljs.core.IndexedSeq(G__13865__a,0);
} 
return G__13864__delegate.call(this,x,y,more);};
G__13864.cljs$lang$maxFixedArity = 2;
G__13864.cljs$lang$applyTo = (function (arglist__13866){
var x = cljs.core.first(arglist__13866);
arglist__13866 = cljs.core.next(arglist__13866);
var y = cljs.core.first(arglist__13866);
var more = cljs.core.rest(arglist__13866);
return G__13864__delegate(x,y,more);
});
G__13864.cljs$core$IFn$_invoke$arity$variadic = G__13864__delegate;
return G__13864;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__13867 = null;
if (arguments.length > 2) {
var G__13868__i = 0, G__13868__a = new Array(arguments.length -  2);
while (G__13868__i < G__13868__a.length) {G__13868__a[G__13868__i] = arguments[G__13868__i + 2]; ++G__13868__i;}
G__13867 = new cljs.core.IndexedSeq(G__13868__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13867);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__13869__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__13869 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13870__i = 0, G__13870__a = new Array(arguments.length -  2);
while (G__13870__i < G__13870__a.length) {G__13870__a[G__13870__i] = arguments[G__13870__i + 2]; ++G__13870__i;}
  more = new cljs.core.IndexedSeq(G__13870__a,0);
} 
return G__13869__delegate.call(this,x,y,more);};
G__13869.cljs$lang$maxFixedArity = 2;
G__13869.cljs$lang$applyTo = (function (arglist__13871){
var x = cljs.core.first(arglist__13871);
arglist__13871 = cljs.core.next(arglist__13871);
var y = cljs.core.first(arglist__13871);
var more = cljs.core.rest(arglist__13871);
return G__13869__delegate(x,y,more);
});
G__13869.cljs$core$IFn$_invoke$arity$variadic = G__13869__delegate;
return G__13869;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__13872 = null;
if (arguments.length > 2) {
var G__13873__i = 0, G__13873__a = new Array(arguments.length -  2);
while (G__13873__i < G__13873__a.length) {G__13873__a[G__13873__i] = arguments[G__13873__i + 2]; ++G__13873__i;}
G__13872 = new cljs.core.IndexedSeq(G__13873__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__13876 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__13876) : Math.floor.call(null,G__13876));
} else {
var G__13877 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__13877) : Math.ceil.call(null,G__13877));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__13878__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__13878 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13879__i = 0, G__13879__a = new Array(arguments.length -  2);
while (G__13879__i < G__13879__a.length) {G__13879__a[G__13879__i] = arguments[G__13879__i + 2]; ++G__13879__i;}
  more = new cljs.core.IndexedSeq(G__13879__a,0);
} 
return G__13878__delegate.call(this,x,y,more);};
G__13878.cljs$lang$maxFixedArity = 2;
G__13878.cljs$lang$applyTo = (function (arglist__13880){
var x = cljs.core.first(arglist__13880);
arglist__13880 = cljs.core.next(arglist__13880);
var y = cljs.core.first(arglist__13880);
var more = cljs.core.rest(arglist__13880);
return G__13878__delegate(x,y,more);
});
G__13878.cljs$core$IFn$_invoke$arity$variadic = G__13878__delegate;
return G__13878;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__13881 = null;
if (arguments.length > 2) {
var G__13882__i = 0, G__13882__a = new Array(arguments.length -  2);
while (G__13882__i < G__13882__a.length) {G__13882__a[G__13882__i] = arguments[G__13882__i + 2]; ++G__13882__i;}
G__13881 = new cljs.core.IndexedSeq(G__13882__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13881);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__13883__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__13883 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13884__i = 0, G__13884__a = new Array(arguments.length -  2);
while (G__13884__i < G__13884__a.length) {G__13884__a[G__13884__i] = arguments[G__13884__i + 2]; ++G__13884__i;}
  more = new cljs.core.IndexedSeq(G__13884__a,0);
} 
return G__13883__delegate.call(this,x,y,more);};
G__13883.cljs$lang$maxFixedArity = 2;
G__13883.cljs$lang$applyTo = (function (arglist__13885){
var x = cljs.core.first(arglist__13885);
arglist__13885 = cljs.core.next(arglist__13885);
var y = cljs.core.first(arglist__13885);
var more = cljs.core.rest(arglist__13885);
return G__13883__delegate(x,y,more);
});
G__13883.cljs$core$IFn$_invoke$arity$variadic = G__13883__delegate;
return G__13883;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__13886 = null;
if (arguments.length > 2) {
var G__13887__i = 0, G__13887__a = new Array(arguments.length -  2);
while (G__13887__i < G__13887__a.length) {G__13887__a[G__13887__i] = arguments[G__13887__i + 2]; ++G__13887__i;}
G__13886 = new cljs.core.IndexedSeq(G__13887__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13886);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__13888__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__13888 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13889__i = 0, G__13889__a = new Array(arguments.length -  2);
while (G__13889__i < G__13889__a.length) {G__13889__a[G__13889__i] = arguments[G__13889__i + 2]; ++G__13889__i;}
  more = new cljs.core.IndexedSeq(G__13889__a,0);
} 
return G__13888__delegate.call(this,x,y,more);};
G__13888.cljs$lang$maxFixedArity = 2;
G__13888.cljs$lang$applyTo = (function (arglist__13890){
var x = cljs.core.first(arglist__13890);
arglist__13890 = cljs.core.next(arglist__13890);
var y = cljs.core.first(arglist__13890);
var more = cljs.core.rest(arglist__13890);
return G__13888__delegate(x,y,more);
});
G__13888.cljs$core$IFn$_invoke$arity$variadic = G__13888__delegate;
return G__13888;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__13891 = null;
if (arguments.length > 2) {
var G__13892__i = 0, G__13892__a = new Array(arguments.length -  2);
while (G__13892__i < G__13892__a.length) {G__13892__a[G__13892__i] = arguments[G__13892__i + 2]; ++G__13892__i;}
G__13891 = new cljs.core.IndexedSeq(G__13892__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__13893__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__13893 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13894__i = 0, G__13894__a = new Array(arguments.length -  2);
while (G__13894__i < G__13894__a.length) {G__13894__a[G__13894__i] = arguments[G__13894__i + 2]; ++G__13894__i;}
  more = new cljs.core.IndexedSeq(G__13894__a,0);
} 
return G__13893__delegate.call(this,x,y,more);};
G__13893.cljs$lang$maxFixedArity = 2;
G__13893.cljs$lang$applyTo = (function (arglist__13895){
var x = cljs.core.first(arglist__13895);
arglist__13895 = cljs.core.next(arglist__13895);
var y = cljs.core.first(arglist__13895);
var more = cljs.core.rest(arglist__13895);
return G__13893__delegate(x,y,more);
});
G__13893.cljs$core$IFn$_invoke$arity$variadic = G__13893__delegate;
return G__13893;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__13896 = null;
if (arguments.length > 2) {
var G__13897__i = 0, G__13897__a = new Array(arguments.length -  2);
while (G__13897__i < G__13897__a.length) {G__13897__a[G__13897__i] = arguments[G__13897__i + 2]; ++G__13897__i;}
G__13896 = new cljs.core.IndexedSeq(G__13897__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13896);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__13902__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__13903 = y;
var G__13904 = cljs.core.first(more);
var G__13905 = cljs.core.next(more);
x = G__13903;
y = G__13904;
more = G__13905;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__13902 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13906__i = 0, G__13906__a = new Array(arguments.length -  2);
while (G__13906__i < G__13906__a.length) {G__13906__a[G__13906__i] = arguments[G__13906__i + 2]; ++G__13906__i;}
  more = new cljs.core.IndexedSeq(G__13906__a,0);
} 
return G__13902__delegate.call(this,x,y,more);};
G__13902.cljs$lang$maxFixedArity = 2;
G__13902.cljs$lang$applyTo = (function (arglist__13907){
var x = cljs.core.first(arglist__13907);
arglist__13907 = cljs.core.next(arglist__13907);
var y = cljs.core.first(arglist__13907);
var more = cljs.core.rest(arglist__13907);
return G__13902__delegate(x,y,more);
});
G__13902.cljs$core$IFn$_invoke$arity$variadic = G__13902__delegate;
return G__13902;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__13908 = null;
if (arguments.length > 2) {
var G__13909__i = 0, G__13909__a = new Array(arguments.length -  2);
while (G__13909__i < G__13909__a.length) {G__13909__a[G__13909__i] = arguments[G__13909__i + 2]; ++G__13909__i;}
G__13908 = new cljs.core.IndexedSeq(G__13909__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13908);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__13910 = (n__$1 - (1));
var G__13911 = cljs.core.next(xs);
n__$1 = G__13910;
xs = G__13911;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__13915 = x;
return goog.string.buildString(G__13915);
}
});
var str__2 = (function() { 
var G__13916__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__13917 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__13918 = cljs.core.next(more);
sb = G__13917;
more = G__13918;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__13916 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__13919__i = 0, G__13919__a = new Array(arguments.length -  1);
while (G__13919__i < G__13919__a.length) {G__13919__a[G__13919__i] = arguments[G__13919__i + 1]; ++G__13919__i;}
  ys = new cljs.core.IndexedSeq(G__13919__a,0);
} 
return G__13916__delegate.call(this,x,ys);};
G__13916.cljs$lang$maxFixedArity = 1;
G__13916.cljs$lang$applyTo = (function (arglist__13920){
var x = cljs.core.first(arglist__13920);
var ys = cljs.core.rest(arglist__13920);
return G__13916__delegate(x,ys);
});
G__13916.cljs$core$IFn$_invoke$arity$variadic = G__13916__delegate;
return G__13916;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__13921 = null;
if (arguments.length > 1) {
var G__13922__i = 0, G__13922__a = new Array(arguments.length -  1);
while (G__13922__i < G__13922__a.length) {G__13922__a[G__13922__i] = arguments[G__13922__i + 1]; ++G__13922__i;}
G__13921 = new cljs.core.IndexedSeq(G__13922__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__13923 = cljs.core.next(xs);
var G__13924 = cljs.core.next(ys);
xs = G__13923;
ys = G__13924;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__13925 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__13926 = cljs.core.next(s);
res = G__13925;
s = G__13926;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__13931 = ((h + (cljs.core.hash((function (){var G__13929 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13929) : cljs.core.key.call(null,G__13929));
})()) ^ cljs.core.hash((function (){var G__13930 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13930) : cljs.core.val.call(null,G__13930));
})()))) % (4503599627370496));
var G__13932 = cljs.core.next(s);
h = G__13931;
s = G__13932;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__13933 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__13934 = cljs.core.next(s__$1);
h = G__13933;
s__$1 = G__13934;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__13945_13955 = cljs.core.seq(fn_map);
var chunk__13946_13956 = null;
var count__13947_13957 = (0);
var i__13948_13958 = (0);
while(true){
if((i__13948_13958 < count__13947_13957)){
var vec__13949_13959 = chunk__13946_13956.cljs$core$IIndexed$_nth$arity$2(null,i__13948_13958);
var key_name_13960 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13949_13959,(0),null);
var f_13961 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13949_13959,(1),null);
var str_name_13962 = (function (){var G__13950 = key_name_13960;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13950) : cljs.core.name.call(null,G__13950));
})();
(obj[str_name_13962] = f_13961);

var G__13963 = seq__13945_13955;
var G__13964 = chunk__13946_13956;
var G__13965 = count__13947_13957;
var G__13966 = (i__13948_13958 + (1));
seq__13945_13955 = G__13963;
chunk__13946_13956 = G__13964;
count__13947_13957 = G__13965;
i__13948_13958 = G__13966;
continue;
} else {
var temp__4126__auto___13967 = cljs.core.seq(seq__13945_13955);
if(temp__4126__auto___13967){
var seq__13945_13968__$1 = temp__4126__auto___13967;
if(cljs.core.chunked_seq_QMARK_(seq__13945_13968__$1)){
var c__4546__auto___13969 = (function (){var G__13951 = seq__13945_13968__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__13951) : cljs.core.chunk_first.call(null,G__13951));
})();
var G__13970 = (function (){var G__13952 = seq__13945_13968__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__13952) : cljs.core.chunk_rest.call(null,G__13952));
})();
var G__13971 = c__4546__auto___13969;
var G__13972 = cljs.core.count(c__4546__auto___13969);
var G__13973 = (0);
seq__13945_13955 = G__13970;
chunk__13946_13956 = G__13971;
count__13947_13957 = G__13972;
i__13948_13958 = G__13973;
continue;
} else {
var vec__13953_13974 = cljs.core.first(seq__13945_13968__$1);
var key_name_13975 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13953_13974,(0),null);
var f_13976 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13953_13974,(1),null);
var str_name_13977 = (function (){var G__13954 = key_name_13975;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__13954) : cljs.core.name.call(null,G__13954));
})();
(obj[str_name_13977] = f_13976);

var G__13978 = cljs.core.next(seq__13945_13968__$1);
var G__13979 = null;
var G__13980 = (0);
var G__13981 = (0);
seq__13945_13955 = G__13978;
chunk__13946_13956 = G__13979;
count__13947_13957 = G__13980;
i__13948_13958 = G__13981;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__13983 = coll;
if(G__13983){
var bit__4440__auto__ = (G__13983.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4440__auto__) || (G__13983.cljs$core$IReversible$)){
return true;
} else {
if((!G__13983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__13983);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__13984 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__13984;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__13985 = (i - (1));
var G__13986 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__13985;
r = G__13986;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__13987__i = 0, G__13987__a = new Array(arguments.length -  0);
while (G__13987__i < G__13987__a.length) {G__13987__a[G__13987__i] = arguments[G__13987__i + 0]; ++G__13987__i;}
  xs = new cljs.core.IndexedSeq(G__13987__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__13988){
var xs = cljs.core.seq(arglist__13988);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3759__auto__ = (coll == null);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var G__13992 = coll;
if(G__13992){
var bit__4433__auto__ = (G__13992.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4433__auto__) || (G__13992.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__13994 = x;
if(G__13994){
var bit__4440__auto__ = (G__13994.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4440__auto__) || (G__13994.cljs$core$IList$)){
return true;
} else {
if((!G__13994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__13994);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.not(a.ns);
if(and__3747__auto__){
return b.ns;
} else {
return and__3747__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__14001 = a.ns;
var G__14002 = b.ns;
return goog.array.defaultCompare(G__14001,G__14002);
})();
if(((0) === nsc)){
var G__14003 = a.name;
var G__14004 = b.name;
return goog.array.defaultCompare(G__14003,G__14004);
} else {
return nsc;
}
}
} else {
var G__14005 = a.name;
var G__14006 = b.name;
return goog.array.defaultCompare(G__14005,G__14006);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4180__auto__ = self__._hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__14008 = null;
var G__14008__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__14008__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__14008 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__14008__2.call(this,self__,coll);
case 3:
return G__14008__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14008.cljs$core$IFn$_invoke$arity$2 = G__14008__2;
G__14008.cljs$core$IFn$_invoke$arity$3 = G__14008__3;
return G__14008;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args14007){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args14007)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__14010 = x;
if(G__14010){
var bit__4433__auto__ = (G__14010.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4433__auto__) || (G__14010.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__14012 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14012) : cljs.core.name.call(null,G__14012));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__14013 = ls.sval();
ls = G__14013;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__14015 = s;
if(G__14015){
var bit__4433__auto__ = (G__14015.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4433__auto__) || (G__14015.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__14016 = cljs.core.next(s__$1);
s__$1 = G__14016;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_14017 = (0);
var xs_14018 = cljs.core.seq(coll);
while(true){
if(xs_14018){
(ret[i_14017] = cljs.core.to_array(cljs.core.first(xs_14018)));

var G__14019 = (i_14017 + (1));
var G__14020 = cljs.core.next(xs_14018);
i_14017 = G__14019;
xs_14018 = G__14020;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14023 = (i + (1));
var G__14024 = cljs.core.next(s__$1);
i = G__14023;
s__$1 = G__14024;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___14025 = size;
var i_14026 = (0);
while(true){
if((i_14026 < n__4646__auto___14025)){
(a[i_14026] = init_val_or_seq);

var G__14027 = (i_14026 + (1));
i_14026 = G__14027;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14030 = (i + (1));
var G__14031 = cljs.core.next(s__$1);
i = G__14030;
s__$1 = G__14031;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___14032 = size;
var i_14033 = (0);
while(true){
if((i_14033 < n__4646__auto___14032)){
(a[i_14033] = init_val_or_seq);

var G__14034 = (i_14033 + (1));
i_14033 = G__14034;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14037 = (i + (1));
var G__14038 = cljs.core.next(s__$1);
i = G__14037;
s__$1 = G__14038;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___14039 = size;
var i_14040 = (0);
while(true){
if((i_14040 < n__4646__auto___14039)){
(a[i_14040] = init_val_or_seq);

var G__14041 = (i_14040 + (1));
i_14040 = G__14041;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__14044 = (i + (1));
var G__14045 = cljs.core.next(s__$1);
i = G__14044;
s__$1 = G__14045;
continue;
} else {
return a;
}
break;
}
} else {
var n__4646__auto___14046 = size;
var i_14047 = (0);
while(true){
if((i_14047 < n__4646__auto___14046)){
(a[i_14047] = init_val_or_seq);

var G__14048 = (i_14047 + (1));
i_14047 = G__14048;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__14049 = cljs.core.next(s__$1);
var G__14050 = (i - (1));
var G__14051 = (sum + (1));
s__$1 = G__14049;
i = G__14050;
sum = G__14051;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__14071__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__14071 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14072__i = 0, G__14072__a = new Array(arguments.length -  2);
while (G__14072__i < G__14072__a.length) {G__14072__a[G__14072__i] = arguments[G__14072__i + 2]; ++G__14072__i;}
  zs = new cljs.core.IndexedSeq(G__14072__a,0);
} 
return G__14071__delegate.call(this,x,y,zs);};
G__14071.cljs$lang$maxFixedArity = 2;
G__14071.cljs$lang$applyTo = (function (arglist__14073){
var x = cljs.core.first(arglist__14073);
arglist__14073 = cljs.core.next(arglist__14073);
var y = cljs.core.first(arglist__14073);
var zs = cljs.core.rest(arglist__14073);
return G__14071__delegate(x,y,zs);
});
G__14071.cljs$core$IFn$_invoke$arity$variadic = G__14071__delegate;
return G__14071;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__14074 = null;
if (arguments.length > 2) {
var G__14075__i = 0, G__14075__a = new Array(arguments.length -  2);
while (G__14075__i < G__14075__a.length) {G__14075__a[G__14075__i] = arguments[G__14075__i + 2]; ++G__14075__i;}
G__14074 = new cljs.core.IndexedSeq(G__14075__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14074);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__14076__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__14076 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__14077__i = 0, G__14077__a = new Array(arguments.length -  4);
while (G__14077__i < G__14077__a.length) {G__14077__a[G__14077__i] = arguments[G__14077__i + 4]; ++G__14077__i;}
  more = new cljs.core.IndexedSeq(G__14077__a,0);
} 
return G__14076__delegate.call(this,a,b,c,d,more);};
G__14076.cljs$lang$maxFixedArity = 4;
G__14076.cljs$lang$applyTo = (function (arglist__14078){
var a = cljs.core.first(arglist__14078);
arglist__14078 = cljs.core.next(arglist__14078);
var b = cljs.core.first(arglist__14078);
arglist__14078 = cljs.core.next(arglist__14078);
var c = cljs.core.first(arglist__14078);
arglist__14078 = cljs.core.next(arglist__14078);
var d = cljs.core.first(arglist__14078);
var more = cljs.core.rest(arglist__14078);
return G__14076__delegate(a,b,c,d,more);
});
G__14076.cljs$core$IFn$_invoke$arity$variadic = G__14076__delegate;
return G__14076;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__14079 = null;
if (arguments.length > 4) {
var G__14080__i = 0, G__14080__a = new Array(arguments.length -  4);
while (G__14080__i < G__14080__a.length) {G__14080__a[G__14080__i] = arguments[G__14080__i + 4]; ++G__14080__i;}
G__14079 = new cljs.core.IndexedSeq(G__14080__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__14079);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__14081__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14082 = ntcoll;
var G__14083 = cljs.core.first(vals);
var G__14084 = cljs.core.next(vals);
tcoll = G__14082;
val = G__14083;
vals = G__14084;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14081 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14085__i = 0, G__14085__a = new Array(arguments.length -  2);
while (G__14085__i < G__14085__a.length) {G__14085__a[G__14085__i] = arguments[G__14085__i + 2]; ++G__14085__i;}
  vals = new cljs.core.IndexedSeq(G__14085__a,0);
} 
return G__14081__delegate.call(this,tcoll,val,vals);};
G__14081.cljs$lang$maxFixedArity = 2;
G__14081.cljs$lang$applyTo = (function (arglist__14086){
var tcoll = cljs.core.first(arglist__14086);
arglist__14086 = cljs.core.next(arglist__14086);
var val = cljs.core.first(arglist__14086);
var vals = cljs.core.rest(arglist__14086);
return G__14081__delegate(tcoll,val,vals);
});
G__14081.cljs$core$IFn$_invoke$arity$variadic = G__14081__delegate;
return G__14081;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__14087 = null;
if (arguments.length > 2) {
var G__14088__i = 0, G__14088__a = new Array(arguments.length -  2);
while (G__14088__i < G__14088__a.length) {G__14088__a[G__14088__i] = arguments[G__14088__i + 2]; ++G__14088__i;}
G__14087 = new cljs.core.IndexedSeq(G__14088__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__14089__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__14090 = ntcoll;
var G__14091 = cljs.core.first(kvs);
var G__14092 = cljs.core.second(kvs);
var G__14093 = cljs.core.nnext(kvs);
tcoll = G__14090;
key = G__14091;
val = G__14092;
kvs = G__14093;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14089 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__14094__i = 0, G__14094__a = new Array(arguments.length -  3);
while (G__14094__i < G__14094__a.length) {G__14094__a[G__14094__i] = arguments[G__14094__i + 3]; ++G__14094__i;}
  kvs = new cljs.core.IndexedSeq(G__14094__a,0);
} 
return G__14089__delegate.call(this,tcoll,key,val,kvs);};
G__14089.cljs$lang$maxFixedArity = 3;
G__14089.cljs$lang$applyTo = (function (arglist__14095){
var tcoll = cljs.core.first(arglist__14095);
arglist__14095 = cljs.core.next(arglist__14095);
var key = cljs.core.first(arglist__14095);
arglist__14095 = cljs.core.next(arglist__14095);
var val = cljs.core.first(arglist__14095);
var kvs = cljs.core.rest(arglist__14095);
return G__14089__delegate(tcoll,key,val,kvs);
});
G__14089.cljs$core$IFn$_invoke$arity$variadic = G__14089__delegate;
return G__14089;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__14096 = null;
if (arguments.length > 3) {
var G__14097__i = 0, G__14097__a = new Array(arguments.length -  3);
while (G__14097__i < G__14097__a.length) {G__14097__a[G__14097__i] = arguments[G__14097__i + 3]; ++G__14097__i;}
G__14096 = new cljs.core.IndexedSeq(G__14097__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__14096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__14098__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__14099 = ntcoll;
var G__14100 = cljs.core.first(ks);
var G__14101 = cljs.core.next(ks);
tcoll = G__14099;
key = G__14100;
ks = G__14101;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14098 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__14102__i = 0, G__14102__a = new Array(arguments.length -  2);
while (G__14102__i < G__14102__a.length) {G__14102__a[G__14102__i] = arguments[G__14102__i + 2]; ++G__14102__i;}
  ks = new cljs.core.IndexedSeq(G__14102__a,0);
} 
return G__14098__delegate.call(this,tcoll,key,ks);};
G__14098.cljs$lang$maxFixedArity = 2;
G__14098.cljs$lang$applyTo = (function (arglist__14103){
var tcoll = cljs.core.first(arglist__14103);
arglist__14103 = cljs.core.next(arglist__14103);
var key = cljs.core.first(arglist__14103);
var ks = cljs.core.rest(arglist__14103);
return G__14098__delegate(tcoll,key,ks);
});
G__14098.cljs$core$IFn$_invoke$arity$variadic = G__14098__delegate;
return G__14098;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__14104 = null;
if (arguments.length > 2) {
var G__14105__i = 0, G__14105__a = new Array(arguments.length -  2);
while (G__14105__i < G__14105__a.length) {G__14105__a[G__14105__i] = arguments[G__14105__i + 2]; ++G__14105__i;}
G__14104 = new cljs.core.IndexedSeq(G__14105__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__14104);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__14106__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__14107 = ntcoll;
var G__14108 = cljs.core.first(vals);
var G__14109 = cljs.core.next(vals);
tcoll = G__14107;
val = G__14108;
vals = G__14109;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__14106 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__14110__i = 0, G__14110__a = new Array(arguments.length -  2);
while (G__14110__i < G__14110__a.length) {G__14110__a[G__14110__i] = arguments[G__14110__i + 2]; ++G__14110__i;}
  vals = new cljs.core.IndexedSeq(G__14110__a,0);
} 
return G__14106__delegate.call(this,tcoll,val,vals);};
G__14106.cljs$lang$maxFixedArity = 2;
G__14106.cljs$lang$applyTo = (function (arglist__14111){
var tcoll = cljs.core.first(arglist__14111);
arglist__14111 = cljs.core.next(arglist__14111);
var val = cljs.core.first(arglist__14111);
var vals = cljs.core.rest(arglist__14111);
return G__14106__delegate(tcoll,val,vals);
});
G__14106.cljs$core$IFn$_invoke$arity$variadic = G__14106__delegate;
return G__14106;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__14112 = null;
if (arguments.length > 2) {
var G__14113__i = 0, G__14113__a = new Array(arguments.length -  2);
while (G__14113__i < G__14113__a.length) {G__14113__a[G__14113__i] = arguments[G__14113__i + 2]; ++G__14113__i;}
G__14112 = new cljs.core.IndexedSeq(G__14113__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__14112);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4690 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4690);
} else {
var G__14324 = a4690;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14324) : f.call(null,G__14324));
}
} else {
var b4691 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4690,b4691);
} else {
var G__14325 = a4690;
var G__14326 = b4691;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14325,G__14326) : f.call(null,G__14325,G__14326));
}
} else {
var c4692 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4690,b4691,c4692);
} else {
var G__14327 = a4690;
var G__14328 = b4691;
var G__14329 = c4692;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14327,G__14328,G__14329) : f.call(null,G__14327,G__14328,G__14329));
}
} else {
var d4693 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4690,b4691,c4692,d4693);
} else {
var G__14330 = a4690;
var G__14331 = b4691;
var G__14332 = c4692;
var G__14333 = d4693;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14330,G__14331,G__14332,G__14333) : f.call(null,G__14330,G__14331,G__14332,G__14333));
}
} else {
var e4694 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4690,b4691,c4692,d4693,e4694);
} else {
var G__14334 = a4690;
var G__14335 = b4691;
var G__14336 = c4692;
var G__14337 = d4693;
var G__14338 = e4694;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14334,G__14335,G__14336,G__14337,G__14338) : f.call(null,G__14334,G__14335,G__14336,G__14337,G__14338));
}
} else {
var f4695 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4690,b4691,c4692,d4693,e4694,f4695);
} else {
var G__14339 = a4690;
var G__14340 = b4691;
var G__14341 = c4692;
var G__14342 = d4693;
var G__14343 = e4694;
var G__14344 = f4695;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14339,G__14340,G__14341,G__14342,G__14343,G__14344) : f.call(null,G__14339,G__14340,G__14341,G__14342,G__14343,G__14344));
}
} else {
var g4696 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4690,b4691,c4692,d4693,e4694,f4695,g4696);
} else {
var G__14345 = a4690;
var G__14346 = b4691;
var G__14347 = c4692;
var G__14348 = d4693;
var G__14349 = e4694;
var G__14350 = f4695;
var G__14351 = g4696;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__14345,G__14346,G__14347,G__14348,G__14349,G__14350,G__14351) : f.call(null,G__14345,G__14346,G__14347,G__14348,G__14349,G__14350,G__14351));
}
} else {
var h4697 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697);
} else {
var G__14352 = a4690;
var G__14353 = b4691;
var G__14354 = c4692;
var G__14355 = d4693;
var G__14356 = e4694;
var G__14357 = f4695;
var G__14358 = g4696;
var G__14359 = h4697;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__14352,G__14353,G__14354,G__14355,G__14356,G__14357,G__14358,G__14359) : f.call(null,G__14352,G__14353,G__14354,G__14355,G__14356,G__14357,G__14358,G__14359));
}
} else {
var i4698 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698);
} else {
var G__14360 = a4690;
var G__14361 = b4691;
var G__14362 = c4692;
var G__14363 = d4693;
var G__14364 = e4694;
var G__14365 = f4695;
var G__14366 = g4696;
var G__14367 = h4697;
var G__14368 = i4698;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__14360,G__14361,G__14362,G__14363,G__14364,G__14365,G__14366,G__14367,G__14368) : f.call(null,G__14360,G__14361,G__14362,G__14363,G__14364,G__14365,G__14366,G__14367,G__14368));
}
} else {
var j4699 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699);
} else {
var G__14369 = a4690;
var G__14370 = b4691;
var G__14371 = c4692;
var G__14372 = d4693;
var G__14373 = e4694;
var G__14374 = f4695;
var G__14375 = g4696;
var G__14376 = h4697;
var G__14377 = i4698;
var G__14378 = j4699;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__14369,G__14370,G__14371,G__14372,G__14373,G__14374,G__14375,G__14376,G__14377,G__14378) : f.call(null,G__14369,G__14370,G__14371,G__14372,G__14373,G__14374,G__14375,G__14376,G__14377,G__14378));
}
} else {
var k4700 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700);
} else {
var G__14379 = a4690;
var G__14380 = b4691;
var G__14381 = c4692;
var G__14382 = d4693;
var G__14383 = e4694;
var G__14384 = f4695;
var G__14385 = g4696;
var G__14386 = h4697;
var G__14387 = i4698;
var G__14388 = j4699;
var G__14389 = k4700;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__14379,G__14380,G__14381,G__14382,G__14383,G__14384,G__14385,G__14386,G__14387,G__14388,G__14389) : f.call(null,G__14379,G__14380,G__14381,G__14382,G__14383,G__14384,G__14385,G__14386,G__14387,G__14388,G__14389));
}
} else {
var l4701 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701);
} else {
var G__14390 = a4690;
var G__14391 = b4691;
var G__14392 = c4692;
var G__14393 = d4693;
var G__14394 = e4694;
var G__14395 = f4695;
var G__14396 = g4696;
var G__14397 = h4697;
var G__14398 = i4698;
var G__14399 = j4699;
var G__14400 = k4700;
var G__14401 = l4701;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__14390,G__14391,G__14392,G__14393,G__14394,G__14395,G__14396,G__14397,G__14398,G__14399,G__14400,G__14401) : f.call(null,G__14390,G__14391,G__14392,G__14393,G__14394,G__14395,G__14396,G__14397,G__14398,G__14399,G__14400,G__14401));
}
} else {
var m4702 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702);
} else {
var G__14402 = a4690;
var G__14403 = b4691;
var G__14404 = c4692;
var G__14405 = d4693;
var G__14406 = e4694;
var G__14407 = f4695;
var G__14408 = g4696;
var G__14409 = h4697;
var G__14410 = i4698;
var G__14411 = j4699;
var G__14412 = k4700;
var G__14413 = l4701;
var G__14414 = m4702;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__14402,G__14403,G__14404,G__14405,G__14406,G__14407,G__14408,G__14409,G__14410,G__14411,G__14412,G__14413,G__14414) : f.call(null,G__14402,G__14403,G__14404,G__14405,G__14406,G__14407,G__14408,G__14409,G__14410,G__14411,G__14412,G__14413,G__14414));
}
} else {
var n4703 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703);
} else {
var G__14415 = a4690;
var G__14416 = b4691;
var G__14417 = c4692;
var G__14418 = d4693;
var G__14419 = e4694;
var G__14420 = f4695;
var G__14421 = g4696;
var G__14422 = h4697;
var G__14423 = i4698;
var G__14424 = j4699;
var G__14425 = k4700;
var G__14426 = l4701;
var G__14427 = m4702;
var G__14428 = n4703;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__14415,G__14416,G__14417,G__14418,G__14419,G__14420,G__14421,G__14422,G__14423,G__14424,G__14425,G__14426,G__14427,G__14428) : f.call(null,G__14415,G__14416,G__14417,G__14418,G__14419,G__14420,G__14421,G__14422,G__14423,G__14424,G__14425,G__14426,G__14427,G__14428));
}
} else {
var o4704 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704);
} else {
var G__14429 = a4690;
var G__14430 = b4691;
var G__14431 = c4692;
var G__14432 = d4693;
var G__14433 = e4694;
var G__14434 = f4695;
var G__14435 = g4696;
var G__14436 = h4697;
var G__14437 = i4698;
var G__14438 = j4699;
var G__14439 = k4700;
var G__14440 = l4701;
var G__14441 = m4702;
var G__14442 = n4703;
var G__14443 = o4704;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__14429,G__14430,G__14431,G__14432,G__14433,G__14434,G__14435,G__14436,G__14437,G__14438,G__14439,G__14440,G__14441,G__14442,G__14443) : f.call(null,G__14429,G__14430,G__14431,G__14432,G__14433,G__14434,G__14435,G__14436,G__14437,G__14438,G__14439,G__14440,G__14441,G__14442,G__14443));
}
} else {
var p4705 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705);
} else {
var G__14444 = a4690;
var G__14445 = b4691;
var G__14446 = c4692;
var G__14447 = d4693;
var G__14448 = e4694;
var G__14449 = f4695;
var G__14450 = g4696;
var G__14451 = h4697;
var G__14452 = i4698;
var G__14453 = j4699;
var G__14454 = k4700;
var G__14455 = l4701;
var G__14456 = m4702;
var G__14457 = n4703;
var G__14458 = o4704;
var G__14459 = p4705;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__14444,G__14445,G__14446,G__14447,G__14448,G__14449,G__14450,G__14451,G__14452,G__14453,G__14454,G__14455,G__14456,G__14457,G__14458,G__14459) : f.call(null,G__14444,G__14445,G__14446,G__14447,G__14448,G__14449,G__14450,G__14451,G__14452,G__14453,G__14454,G__14455,G__14456,G__14457,G__14458,G__14459));
}
} else {
var q4706 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706);
} else {
var G__14460 = a4690;
var G__14461 = b4691;
var G__14462 = c4692;
var G__14463 = d4693;
var G__14464 = e4694;
var G__14465 = f4695;
var G__14466 = g4696;
var G__14467 = h4697;
var G__14468 = i4698;
var G__14469 = j4699;
var G__14470 = k4700;
var G__14471 = l4701;
var G__14472 = m4702;
var G__14473 = n4703;
var G__14474 = o4704;
var G__14475 = p4705;
var G__14476 = q4706;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__14460,G__14461,G__14462,G__14463,G__14464,G__14465,G__14466,G__14467,G__14468,G__14469,G__14470,G__14471,G__14472,G__14473,G__14474,G__14475,G__14476) : f.call(null,G__14460,G__14461,G__14462,G__14463,G__14464,G__14465,G__14466,G__14467,G__14468,G__14469,G__14470,G__14471,G__14472,G__14473,G__14474,G__14475,G__14476));
}
} else {
var r4707 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707);
} else {
var G__14477 = a4690;
var G__14478 = b4691;
var G__14479 = c4692;
var G__14480 = d4693;
var G__14481 = e4694;
var G__14482 = f4695;
var G__14483 = g4696;
var G__14484 = h4697;
var G__14485 = i4698;
var G__14486 = j4699;
var G__14487 = k4700;
var G__14488 = l4701;
var G__14489 = m4702;
var G__14490 = n4703;
var G__14491 = o4704;
var G__14492 = p4705;
var G__14493 = q4706;
var G__14494 = r4707;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__14477,G__14478,G__14479,G__14480,G__14481,G__14482,G__14483,G__14484,G__14485,G__14486,G__14487,G__14488,G__14489,G__14490,G__14491,G__14492,G__14493,G__14494) : f.call(null,G__14477,G__14478,G__14479,G__14480,G__14481,G__14482,G__14483,G__14484,G__14485,G__14486,G__14487,G__14488,G__14489,G__14490,G__14491,G__14492,G__14493,G__14494));
}
} else {
var s4708 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707,s4708);
} else {
var G__14495 = a4690;
var G__14496 = b4691;
var G__14497 = c4692;
var G__14498 = d4693;
var G__14499 = e4694;
var G__14500 = f4695;
var G__14501 = g4696;
var G__14502 = h4697;
var G__14503 = i4698;
var G__14504 = j4699;
var G__14505 = k4700;
var G__14506 = l4701;
var G__14507 = m4702;
var G__14508 = n4703;
var G__14509 = o4704;
var G__14510 = p4705;
var G__14511 = q4706;
var G__14512 = r4707;
var G__14513 = s4708;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__14495,G__14496,G__14497,G__14498,G__14499,G__14500,G__14501,G__14502,G__14503,G__14504,G__14505,G__14506,G__14507,G__14508,G__14509,G__14510,G__14511,G__14512,G__14513) : f.call(null,G__14495,G__14496,G__14497,G__14498,G__14499,G__14500,G__14501,G__14502,G__14503,G__14504,G__14505,G__14506,G__14507,G__14508,G__14509,G__14510,G__14511,G__14512,G__14513));
}
} else {
var t4709 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4690,b4691,c4692,d4693,e4694,f4695,g4696,h4697,i4698,j4699,k4700,l4701,m4702,n4703,o4704,p4705,q4706,r4707,s4708,t4709);
} else {
var G__14514 = a4690;
var G__14515 = b4691;
var G__14516 = c4692;
var G__14517 = d4693;
var G__14518 = e4694;
var G__14519 = f4695;
var G__14520 = g4696;
var G__14521 = h4697;
var G__14522 = i4698;
var G__14523 = j4699;
var G__14524 = k4700;
var G__14525 = l4701;
var G__14526 = m4702;
var G__14527 = n4703;
var G__14528 = o4704;
var G__14529 = p4705;
var G__14530 = q4706;
var G__14531 = r4707;
var G__14532 = s4708;
var G__14533 = t4709;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__14514,G__14515,G__14516,G__14517,G__14518,G__14519,G__14520,G__14521,G__14522,G__14523,G__14524,G__14525,G__14526,G__14527,G__14528,G__14529,G__14530,G__14531,G__14532,G__14533) : f.call(null,G__14514,G__14515,G__14516,G__14517,G__14518,G__14519,G__14520,G__14521,G__14522,G__14523,G__14524,G__14525,G__14526,G__14527,G__14528,G__14529,G__14530,G__14531,G__14532,G__14533));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__14534__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__14534 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__14535__i = 0, G__14535__a = new Array(arguments.length -  5);
while (G__14535__i < G__14535__a.length) {G__14535__a[G__14535__i] = arguments[G__14535__i + 5]; ++G__14535__i;}
  args = new cljs.core.IndexedSeq(G__14535__a,0);
} 
return G__14534__delegate.call(this,f,a,b,c,d,args);};
G__14534.cljs$lang$maxFixedArity = 5;
G__14534.cljs$lang$applyTo = (function (arglist__14536){
var f = cljs.core.first(arglist__14536);
arglist__14536 = cljs.core.next(arglist__14536);
var a = cljs.core.first(arglist__14536);
arglist__14536 = cljs.core.next(arglist__14536);
var b = cljs.core.first(arglist__14536);
arglist__14536 = cljs.core.next(arglist__14536);
var c = cljs.core.first(arglist__14536);
arglist__14536 = cljs.core.next(arglist__14536);
var d = cljs.core.first(arglist__14536);
var args = cljs.core.rest(arglist__14536);
return G__14534__delegate(f,a,b,c,d,args);
});
G__14534.cljs$core$IFn$_invoke$arity$variadic = G__14534__delegate;
return G__14534;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__14537 = null;
if (arguments.length > 5) {
var G__14538__i = 0, G__14538__a = new Array(arguments.length -  5);
while (G__14538__i < G__14538__a.length) {G__14538__a[G__14538__i] = arguments[G__14538__i + 5]; ++G__14538__i;}
G__14537 = new cljs.core.IndexedSeq(G__14538__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__14537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__14554 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14554) : f.call(null,G__14554));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__14555 = cljs.core.meta(obj);
var G__14556 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14555,G__14556) : f.call(null,G__14555,G__14556));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__14557 = cljs.core.meta(obj);
var G__14558 = a;
var G__14559 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14557,G__14558,G__14559) : f.call(null,G__14557,G__14558,G__14559));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__14560 = cljs.core.meta(obj);
var G__14561 = a;
var G__14562 = b;
var G__14563 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14560,G__14561,G__14562,G__14563) : f.call(null,G__14560,G__14561,G__14562,G__14563));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__14564 = cljs.core.meta(obj);
var G__14565 = a;
var G__14566 = b;
var G__14567 = c;
var G__14568 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14564,G__14565,G__14566,G__14567,G__14568) : f.call(null,G__14564,G__14565,G__14566,G__14567,G__14568));
})());
});
var vary_meta__7 = (function() { 
var G__14569__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__14569 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__14570__i = 0, G__14570__a = new Array(arguments.length -  6);
while (G__14570__i < G__14570__a.length) {G__14570__a[G__14570__i] = arguments[G__14570__i + 6]; ++G__14570__i;}
  args = new cljs.core.IndexedSeq(G__14570__a,0);
} 
return G__14569__delegate.call(this,obj,f,a,b,c,d,args);};
G__14569.cljs$lang$maxFixedArity = 6;
G__14569.cljs$lang$applyTo = (function (arglist__14571){
var obj = cljs.core.first(arglist__14571);
arglist__14571 = cljs.core.next(arglist__14571);
var f = cljs.core.first(arglist__14571);
arglist__14571 = cljs.core.next(arglist__14571);
var a = cljs.core.first(arglist__14571);
arglist__14571 = cljs.core.next(arglist__14571);
var b = cljs.core.first(arglist__14571);
arglist__14571 = cljs.core.next(arglist__14571);
var c = cljs.core.first(arglist__14571);
arglist__14571 = cljs.core.next(arglist__14571);
var d = cljs.core.first(arglist__14571);
var args = cljs.core.rest(arglist__14571);
return G__14569__delegate(obj,f,a,b,c,d,args);
});
G__14569.cljs$core$IFn$_invoke$arity$variadic = G__14569__delegate;
return G__14569;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__14572 = null;
if (arguments.length > 6) {
var G__14573__i = 0, G__14573__a = new Array(arguments.length -  6);
while (G__14573__i < G__14573__a.length) {G__14573__a[G__14573__i] = arguments[G__14573__i + 6]; ++G__14573__i;}
G__14572 = new cljs.core.IndexedSeq(G__14573__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__14572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__14574__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__14574 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__14575__i = 0, G__14575__a = new Array(arguments.length -  2);
while (G__14575__i < G__14575__a.length) {G__14575__a[G__14575__i] = arguments[G__14575__i + 2]; ++G__14575__i;}
  more = new cljs.core.IndexedSeq(G__14575__a,0);
} 
return G__14574__delegate.call(this,x,y,more);};
G__14574.cljs$lang$maxFixedArity = 2;
G__14574.cljs$lang$applyTo = (function (arglist__14576){
var x = cljs.core.first(arglist__14576);
arglist__14576 = cljs.core.next(arglist__14576);
var y = cljs.core.first(arglist__14576);
var more = cljs.core.rest(arglist__14576);
return G__14574__delegate(x,y,more);
});
G__14574.cljs$core$IFn$_invoke$arity$variadic = G__14574__delegate;
return G__14574;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__14577 = null;
if (arguments.length > 2) {
var G__14578__i = 0, G__14578__a = new Array(arguments.length -  2);
while (G__14578__i < G__14578__a.length) {G__14578__a[G__14578__i] = arguments[G__14578__i + 2]; ++G__14578__i;}
G__14577 = new cljs.core.IndexedSeq(G__14578__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t14582 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t14582 = (function (nil_iter,meta14583){
this.nil_iter = nil_iter;
this.meta14583 = meta14583;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t14582.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t14582.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t14582.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t14582.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_14584){
var self__ = this;
var _14584__$1 = this;
return self__.meta14583;
});

cljs.core.t14582.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_14584,meta14583__$1){
var self__ = this;
var _14584__$1 = this;
return (new cljs.core.t14582(self__.nil_iter,meta14583__$1));
});

cljs.core.t14582.cljs$lang$type = true;

cljs.core.t14582.cljs$lang$ctorStr = "cljs.core/t14582";

cljs.core.t14582.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/t14582");
});

cljs.core.__GT_t14582 = (function __GT_t14582(nil_iter__$1,meta14583){
return (new cljs.core.t14582(nil_iter__$1,meta14583));
});

}

return (new cljs.core.t14582(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/Users/matthew/Documents/Code/sailing-study-guide/out/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3747__auto__ = !((lt.stepper == null));
if(and__3747__auto__){
return self__.iter.hasNext();
} else {
return and__3747__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__14585 = lt;
var G__14586 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__14585,G__14586) : self__.xform.call(null,G__14585,G__14586));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14587 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14587) : self__.xform.call(null,G__14587));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__14589 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14589) : xform.call(null,G__14589));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__14591 = cljs.core.next(iters__$1);
iters__$1 = G__14591;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4646__auto___14592 = self__.iters.length;
var i_14593 = (0);
while(true){
if((i_14593 < n__4646__auto___14592)){
(self__.nexts[i_14593] = (self__.iters[i_14593]).next());

var G__14594 = (i_14593 + (1));
i_14593 = G__14594;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3747__auto__ = !((lt.stepper == null));
if(and__3747__auto__){
return this$.hasNext();
} else {
return and__3747__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__14590 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__14590) : self__.xform.call(null,G__14590));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__14599 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14599) : xform.call(null,G__14599));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__14600_14604 = cljs.core.seq(colls);
var chunk__14601_14605 = null;
var count__14602_14606 = (0);
var i__14603_14607 = (0);
while(true){
if((i__14603_14607 < count__14602_14606)){
var coll_14608 = chunk__14601_14605.cljs$core$IIndexed$_nth$arity$2(null,i__14603_14607);
iters.push(cljs.core.iter(coll_14608));

var G__14609 = seq__14600_14604;
var G__14610 = chunk__14601_14605;
var G__14611 = count__14602_14606;
var G__14612 = (i__14603_14607 + (1));
seq__14600_14604 = G__14609;
chunk__14601_14605 = G__14610;
count__14602_14606 = G__14611;
i__14603_14607 = G__14612;
continue;
} else {
var temp__4126__auto___14613 = cljs.core.seq(seq__14600_14604);
if(temp__4126__auto___14613){
var seq__14600_14614__$1 = temp__4126__auto___14613;
if(cljs.core.chunked_seq_QMARK_(seq__14600_14614__$1)){
var c__4546__auto___14615 = cljs.core.chunk_first(seq__14600_14614__$1);
var G__14616 = cljs.core.chunk_rest(seq__14600_14614__$1);
var G__14617 = c__4546__auto___14615;
var G__14618 = cljs.core.count(c__4546__auto___14615);
var G__14619 = (0);
seq__14600_14604 = G__14616;
chunk__14601_14605 = G__14617;
count__14602_14606 = G__14618;
i__14603_14607 = G__14619;
continue;
} else {
var coll_14620 = cljs.core.first(seq__14600_14614__$1);
iters.push(cljs.core.iter(coll_14620));

var G__14621 = cljs.core.next(seq__14600_14614__$1);
var G__14622 = null;
var G__14623 = (0);
var G__14624 = (0);
seq__14600_14604 = G__14621;
chunk__14601_14605 = G__14622;
count__14602_14606 = G__14623;
i__14603_14607 = G__14624;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3759__auto__ = cljs.core.seq(coll);
if(or__3759__auto__){
return or__3759__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__14625__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__14625 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__14626__i = 0, G__14626__a = new Array(arguments.length -  2);
while (G__14626__i < G__14626__a.length) {G__14626__a[G__14626__i] = arguments[G__14626__i + 2]; ++G__14626__i;}
  colls = new cljs.core.IndexedSeq(G__14626__a,0);
} 
return G__14625__delegate.call(this,xform,coll,colls);};
G__14625.cljs$lang$maxFixedArity = 2;
G__14625.cljs$lang$applyTo = (function (arglist__14627){
var xform = cljs.core.first(arglist__14627);
arglist__14627 = cljs.core.next(arglist__14627);
var coll = cljs.core.first(arglist__14627);
var colls = cljs.core.rest(arglist__14627);
return G__14625__delegate(xform,coll,colls);
});
G__14625.cljs$core$IFn$_invoke$arity$variadic = G__14625__delegate;
return G__14625;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__14628 = null;
if (arguments.length > 2) {
var G__14629__i = 0, G__14629__a = new Array(arguments.length -  2);
while (G__14629__i < G__14629__a.length) {G__14629__a[G__14629__i] = arguments[G__14629__i + 2]; ++G__14629__i;}
G__14628 = new cljs.core.IndexedSeq(G__14629__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__14628);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__14631 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14631) : pred.call(null,G__14631));
})())){
var G__14632 = pred;
var G__14633 = cljs.core.next(coll);
pred = G__14632;
coll = G__14633;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3759__auto__ = (function (){var G__14637 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14637) : pred.call(null,G__14637));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__14638 = pred;
var G__14639 = cljs.core.next(coll);
pred = G__14638;
coll = G__14639;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__14646 = null;
var G__14646__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__14646__1 = (function (x){
return cljs.core.not((function (){var G__14643 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14643) : f.call(null,G__14643));
})());
});
var G__14646__2 = (function (x,y){
return cljs.core.not((function (){var G__14644 = x;
var G__14645 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14644,G__14645) : f.call(null,G__14644,G__14645));
})());
});
var G__14646__3 = (function() { 
var G__14647__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__14647 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__14648__i = 0, G__14648__a = new Array(arguments.length -  2);
while (G__14648__i < G__14648__a.length) {G__14648__a[G__14648__i] = arguments[G__14648__i + 2]; ++G__14648__i;}
  zs = new cljs.core.IndexedSeq(G__14648__a,0);
} 
return G__14647__delegate.call(this,x,y,zs);};
G__14647.cljs$lang$maxFixedArity = 2;
G__14647.cljs$lang$applyTo = (function (arglist__14649){
var x = cljs.core.first(arglist__14649);
arglist__14649 = cljs.core.next(arglist__14649);
var y = cljs.core.first(arglist__14649);
var zs = cljs.core.rest(arglist__14649);
return G__14647__delegate(x,y,zs);
});
G__14647.cljs$core$IFn$_invoke$arity$variadic = G__14647__delegate;
return G__14647;
})()
;
G__14646 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__14646__0.call(this);
case 1:
return G__14646__1.call(this,x);
case 2:
return G__14646__2.call(this,x,y);
default:
var G__14650 = null;
if (arguments.length > 2) {
var G__14651__i = 0, G__14651__a = new Array(arguments.length -  2);
while (G__14651__i < G__14651__a.length) {G__14651__a[G__14651__i] = arguments[G__14651__i + 2]; ++G__14651__i;}
G__14650 = new cljs.core.IndexedSeq(G__14651__a,0);
}
return G__14646__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__14650);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14646.cljs$lang$maxFixedArity = 2;
G__14646.cljs$lang$applyTo = G__14646__3.cljs$lang$applyTo;
G__14646.cljs$core$IFn$_invoke$arity$0 = G__14646__0;
G__14646.cljs$core$IFn$_invoke$arity$1 = G__14646__1;
G__14646.cljs$core$IFn$_invoke$arity$2 = G__14646__2;
G__14646.cljs$core$IFn$_invoke$arity$variadic = G__14646__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14646;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__14652__delegate = function (args){
return x;
};
var G__14652 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14653__i = 0, G__14653__a = new Array(arguments.length -  0);
while (G__14653__i < G__14653__a.length) {G__14653__a[G__14653__i] = arguments[G__14653__i + 0]; ++G__14653__i;}
  args = new cljs.core.IndexedSeq(G__14653__a,0);
} 
return G__14652__delegate.call(this,args);};
G__14652.cljs$lang$maxFixedArity = 0;
G__14652.cljs$lang$applyTo = (function (arglist__14654){
var args = cljs.core.seq(arglist__14654);
return G__14652__delegate(args);
});
G__14652.cljs$core$IFn$_invoke$arity$variadic = G__14652__delegate;
return G__14652;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__14709 = null;
var G__14709__0 = (function (){
var G__14682 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14682) : f.call(null,G__14682));
});
var G__14709__1 = (function (x){
var G__14683 = (function (){var G__14684 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14684) : g.call(null,G__14684));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14683) : f.call(null,G__14683));
});
var G__14709__2 = (function (x,y){
var G__14685 = (function (){var G__14686 = x;
var G__14687 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14686,G__14687) : g.call(null,G__14686,G__14687));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14685) : f.call(null,G__14685));
});
var G__14709__3 = (function (x,y,z){
var G__14688 = (function (){var G__14689 = x;
var G__14690 = y;
var G__14691 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14689,G__14690,G__14691) : g.call(null,G__14689,G__14690,G__14691));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14688) : f.call(null,G__14688));
});
var G__14709__4 = (function() { 
var G__14710__delegate = function (x,y,z,args){
var G__14692 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14692) : f.call(null,G__14692));
};
var G__14710 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14711__i = 0, G__14711__a = new Array(arguments.length -  3);
while (G__14711__i < G__14711__a.length) {G__14711__a[G__14711__i] = arguments[G__14711__i + 3]; ++G__14711__i;}
  args = new cljs.core.IndexedSeq(G__14711__a,0);
} 
return G__14710__delegate.call(this,x,y,z,args);};
G__14710.cljs$lang$maxFixedArity = 3;
G__14710.cljs$lang$applyTo = (function (arglist__14712){
var x = cljs.core.first(arglist__14712);
arglist__14712 = cljs.core.next(arglist__14712);
var y = cljs.core.first(arglist__14712);
arglist__14712 = cljs.core.next(arglist__14712);
var z = cljs.core.first(arglist__14712);
var args = cljs.core.rest(arglist__14712);
return G__14710__delegate(x,y,z,args);
});
G__14710.cljs$core$IFn$_invoke$arity$variadic = G__14710__delegate;
return G__14710;
})()
;
G__14709 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14709__0.call(this);
case 1:
return G__14709__1.call(this,x);
case 2:
return G__14709__2.call(this,x,y);
case 3:
return G__14709__3.call(this,x,y,z);
default:
var G__14713 = null;
if (arguments.length > 3) {
var G__14714__i = 0, G__14714__a = new Array(arguments.length -  3);
while (G__14714__i < G__14714__a.length) {G__14714__a[G__14714__i] = arguments[G__14714__i + 3]; ++G__14714__i;}
G__14713 = new cljs.core.IndexedSeq(G__14714__a,0);
}
return G__14709__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14713);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14709.cljs$lang$maxFixedArity = 3;
G__14709.cljs$lang$applyTo = G__14709__4.cljs$lang$applyTo;
G__14709.cljs$core$IFn$_invoke$arity$0 = G__14709__0;
G__14709.cljs$core$IFn$_invoke$arity$1 = G__14709__1;
G__14709.cljs$core$IFn$_invoke$arity$2 = G__14709__2;
G__14709.cljs$core$IFn$_invoke$arity$3 = G__14709__3;
G__14709.cljs$core$IFn$_invoke$arity$variadic = G__14709__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14709;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__14715 = null;
var G__14715__0 = (function (){
var G__14693 = (function (){var G__14694 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14694) : g.call(null,G__14694));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14693) : f.call(null,G__14693));
});
var G__14715__1 = (function (x){
var G__14695 = (function (){var G__14696 = (function (){var G__14697 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14697) : h.call(null,G__14697));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14696) : g.call(null,G__14696));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14695) : f.call(null,G__14695));
});
var G__14715__2 = (function (x,y){
var G__14698 = (function (){var G__14699 = (function (){var G__14700 = x;
var G__14701 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14700,G__14701) : h.call(null,G__14700,G__14701));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14699) : g.call(null,G__14699));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14698) : f.call(null,G__14698));
});
var G__14715__3 = (function (x,y,z){
var G__14702 = (function (){var G__14703 = (function (){var G__14704 = x;
var G__14705 = y;
var G__14706 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14704,G__14705,G__14706) : h.call(null,G__14704,G__14705,G__14706));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14703) : g.call(null,G__14703));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14702) : f.call(null,G__14702));
});
var G__14715__4 = (function() { 
var G__14716__delegate = function (x,y,z,args){
var G__14707 = (function (){var G__14708 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14708) : g.call(null,G__14708));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14707) : f.call(null,G__14707));
};
var G__14716 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14717__i = 0, G__14717__a = new Array(arguments.length -  3);
while (G__14717__i < G__14717__a.length) {G__14717__a[G__14717__i] = arguments[G__14717__i + 3]; ++G__14717__i;}
  args = new cljs.core.IndexedSeq(G__14717__a,0);
} 
return G__14716__delegate.call(this,x,y,z,args);};
G__14716.cljs$lang$maxFixedArity = 3;
G__14716.cljs$lang$applyTo = (function (arglist__14718){
var x = cljs.core.first(arglist__14718);
arglist__14718 = cljs.core.next(arglist__14718);
var y = cljs.core.first(arglist__14718);
arglist__14718 = cljs.core.next(arglist__14718);
var z = cljs.core.first(arglist__14718);
var args = cljs.core.rest(arglist__14718);
return G__14716__delegate(x,y,z,args);
});
G__14716.cljs$core$IFn$_invoke$arity$variadic = G__14716__delegate;
return G__14716;
})()
;
G__14715 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14715__0.call(this);
case 1:
return G__14715__1.call(this,x);
case 2:
return G__14715__2.call(this,x,y);
case 3:
return G__14715__3.call(this,x,y,z);
default:
var G__14719 = null;
if (arguments.length > 3) {
var G__14720__i = 0, G__14720__a = new Array(arguments.length -  3);
while (G__14720__i < G__14720__a.length) {G__14720__a[G__14720__i] = arguments[G__14720__i + 3]; ++G__14720__i;}
G__14719 = new cljs.core.IndexedSeq(G__14720__a,0);
}
return G__14715__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14715.cljs$lang$maxFixedArity = 3;
G__14715.cljs$lang$applyTo = G__14715__4.cljs$lang$applyTo;
G__14715.cljs$core$IFn$_invoke$arity$0 = G__14715__0;
G__14715.cljs$core$IFn$_invoke$arity$1 = G__14715__1;
G__14715.cljs$core$IFn$_invoke$arity$2 = G__14715__2;
G__14715.cljs$core$IFn$_invoke$arity$3 = G__14715__3;
G__14715.cljs$core$IFn$_invoke$arity$variadic = G__14715__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14715;
})()
});
var comp__4 = (function() { 
var G__14721__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__14722__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__14723 = cljs.core.first(fs__$2).call(null,ret);
var G__14724 = cljs.core.next(fs__$2);
ret = G__14723;
fs__$2 = G__14724;
continue;
} else {
return ret;
}
break;
}
};
var G__14722 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14725__i = 0, G__14725__a = new Array(arguments.length -  0);
while (G__14725__i < G__14725__a.length) {G__14725__a[G__14725__i] = arguments[G__14725__i + 0]; ++G__14725__i;}
  args = new cljs.core.IndexedSeq(G__14725__a,0);
} 
return G__14722__delegate.call(this,args);};
G__14722.cljs$lang$maxFixedArity = 0;
G__14722.cljs$lang$applyTo = (function (arglist__14726){
var args = cljs.core.seq(arglist__14726);
return G__14722__delegate(args);
});
G__14722.cljs$core$IFn$_invoke$arity$variadic = G__14722__delegate;
return G__14722;
})()
;
;})(fs__$1))
};
var G__14721 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__14727__i = 0, G__14727__a = new Array(arguments.length -  3);
while (G__14727__i < G__14727__a.length) {G__14727__a[G__14727__i] = arguments[G__14727__i + 3]; ++G__14727__i;}
  fs = new cljs.core.IndexedSeq(G__14727__a,0);
} 
return G__14721__delegate.call(this,f1,f2,f3,fs);};
G__14721.cljs$lang$maxFixedArity = 3;
G__14721.cljs$lang$applyTo = (function (arglist__14728){
var f1 = cljs.core.first(arglist__14728);
arglist__14728 = cljs.core.next(arglist__14728);
var f2 = cljs.core.first(arglist__14728);
arglist__14728 = cljs.core.next(arglist__14728);
var f3 = cljs.core.first(arglist__14728);
var fs = cljs.core.rest(arglist__14728);
return G__14721__delegate(f1,f2,f3,fs);
});
G__14721.cljs$core$IFn$_invoke$arity$variadic = G__14721__delegate;
return G__14721;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__14729 = null;
if (arguments.length > 3) {
var G__14730__i = 0, G__14730__a = new Array(arguments.length -  3);
while (G__14730__i < G__14730__a.length) {G__14730__a[G__14730__i] = arguments[G__14730__i + 3]; ++G__14730__i;}
G__14729 = new cljs.core.IndexedSeq(G__14730__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__14729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__14815 = null;
var G__14815__0 = (function (){
var G__14773 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14773) : f.call(null,G__14773));
});
var G__14815__1 = (function (x){
var G__14774 = arg1;
var G__14775 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14774,G__14775) : f.call(null,G__14774,G__14775));
});
var G__14815__2 = (function (x,y){
var G__14776 = arg1;
var G__14777 = x;
var G__14778 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14776,G__14777,G__14778) : f.call(null,G__14776,G__14777,G__14778));
});
var G__14815__3 = (function (x,y,z){
var G__14779 = arg1;
var G__14780 = x;
var G__14781 = y;
var G__14782 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14779,G__14780,G__14781,G__14782) : f.call(null,G__14779,G__14780,G__14781,G__14782));
});
var G__14815__4 = (function() { 
var G__14816__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__14816 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14817__i = 0, G__14817__a = new Array(arguments.length -  3);
while (G__14817__i < G__14817__a.length) {G__14817__a[G__14817__i] = arguments[G__14817__i + 3]; ++G__14817__i;}
  args = new cljs.core.IndexedSeq(G__14817__a,0);
} 
return G__14816__delegate.call(this,x,y,z,args);};
G__14816.cljs$lang$maxFixedArity = 3;
G__14816.cljs$lang$applyTo = (function (arglist__14818){
var x = cljs.core.first(arglist__14818);
arglist__14818 = cljs.core.next(arglist__14818);
var y = cljs.core.first(arglist__14818);
arglist__14818 = cljs.core.next(arglist__14818);
var z = cljs.core.first(arglist__14818);
var args = cljs.core.rest(arglist__14818);
return G__14816__delegate(x,y,z,args);
});
G__14816.cljs$core$IFn$_invoke$arity$variadic = G__14816__delegate;
return G__14816;
})()
;
G__14815 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14815__0.call(this);
case 1:
return G__14815__1.call(this,x);
case 2:
return G__14815__2.call(this,x,y);
case 3:
return G__14815__3.call(this,x,y,z);
default:
var G__14819 = null;
if (arguments.length > 3) {
var G__14820__i = 0, G__14820__a = new Array(arguments.length -  3);
while (G__14820__i < G__14820__a.length) {G__14820__a[G__14820__i] = arguments[G__14820__i + 3]; ++G__14820__i;}
G__14819 = new cljs.core.IndexedSeq(G__14820__a,0);
}
return G__14815__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14819);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14815.cljs$lang$maxFixedArity = 3;
G__14815.cljs$lang$applyTo = G__14815__4.cljs$lang$applyTo;
G__14815.cljs$core$IFn$_invoke$arity$0 = G__14815__0;
G__14815.cljs$core$IFn$_invoke$arity$1 = G__14815__1;
G__14815.cljs$core$IFn$_invoke$arity$2 = G__14815__2;
G__14815.cljs$core$IFn$_invoke$arity$3 = G__14815__3;
G__14815.cljs$core$IFn$_invoke$arity$variadic = G__14815__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14815;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__14821 = null;
var G__14821__0 = (function (){
var G__14783 = arg1;
var G__14784 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14783,G__14784) : f.call(null,G__14783,G__14784));
});
var G__14821__1 = (function (x){
var G__14785 = arg1;
var G__14786 = arg2;
var G__14787 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14785,G__14786,G__14787) : f.call(null,G__14785,G__14786,G__14787));
});
var G__14821__2 = (function (x,y){
var G__14788 = arg1;
var G__14789 = arg2;
var G__14790 = x;
var G__14791 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14788,G__14789,G__14790,G__14791) : f.call(null,G__14788,G__14789,G__14790,G__14791));
});
var G__14821__3 = (function (x,y,z){
var G__14792 = arg1;
var G__14793 = arg2;
var G__14794 = x;
var G__14795 = y;
var G__14796 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14792,G__14793,G__14794,G__14795,G__14796) : f.call(null,G__14792,G__14793,G__14794,G__14795,G__14796));
});
var G__14821__4 = (function() { 
var G__14822__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__14822 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14823__i = 0, G__14823__a = new Array(arguments.length -  3);
while (G__14823__i < G__14823__a.length) {G__14823__a[G__14823__i] = arguments[G__14823__i + 3]; ++G__14823__i;}
  args = new cljs.core.IndexedSeq(G__14823__a,0);
} 
return G__14822__delegate.call(this,x,y,z,args);};
G__14822.cljs$lang$maxFixedArity = 3;
G__14822.cljs$lang$applyTo = (function (arglist__14824){
var x = cljs.core.first(arglist__14824);
arglist__14824 = cljs.core.next(arglist__14824);
var y = cljs.core.first(arglist__14824);
arglist__14824 = cljs.core.next(arglist__14824);
var z = cljs.core.first(arglist__14824);
var args = cljs.core.rest(arglist__14824);
return G__14822__delegate(x,y,z,args);
});
G__14822.cljs$core$IFn$_invoke$arity$variadic = G__14822__delegate;
return G__14822;
})()
;
G__14821 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14821__0.call(this);
case 1:
return G__14821__1.call(this,x);
case 2:
return G__14821__2.call(this,x,y);
case 3:
return G__14821__3.call(this,x,y,z);
default:
var G__14825 = null;
if (arguments.length > 3) {
var G__14826__i = 0, G__14826__a = new Array(arguments.length -  3);
while (G__14826__i < G__14826__a.length) {G__14826__a[G__14826__i] = arguments[G__14826__i + 3]; ++G__14826__i;}
G__14825 = new cljs.core.IndexedSeq(G__14826__a,0);
}
return G__14821__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14821.cljs$lang$maxFixedArity = 3;
G__14821.cljs$lang$applyTo = G__14821__4.cljs$lang$applyTo;
G__14821.cljs$core$IFn$_invoke$arity$0 = G__14821__0;
G__14821.cljs$core$IFn$_invoke$arity$1 = G__14821__1;
G__14821.cljs$core$IFn$_invoke$arity$2 = G__14821__2;
G__14821.cljs$core$IFn$_invoke$arity$3 = G__14821__3;
G__14821.cljs$core$IFn$_invoke$arity$variadic = G__14821__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14821;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__14827 = null;
var G__14827__0 = (function (){
var G__14797 = arg1;
var G__14798 = arg2;
var G__14799 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14797,G__14798,G__14799) : f.call(null,G__14797,G__14798,G__14799));
});
var G__14827__1 = (function (x){
var G__14800 = arg1;
var G__14801 = arg2;
var G__14802 = arg3;
var G__14803 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14800,G__14801,G__14802,G__14803) : f.call(null,G__14800,G__14801,G__14802,G__14803));
});
var G__14827__2 = (function (x,y){
var G__14804 = arg1;
var G__14805 = arg2;
var G__14806 = arg3;
var G__14807 = x;
var G__14808 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__14804,G__14805,G__14806,G__14807,G__14808) : f.call(null,G__14804,G__14805,G__14806,G__14807,G__14808));
});
var G__14827__3 = (function (x,y,z){
var G__14809 = arg1;
var G__14810 = arg2;
var G__14811 = arg3;
var G__14812 = x;
var G__14813 = y;
var G__14814 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__14809,G__14810,G__14811,G__14812,G__14813,G__14814) : f.call(null,G__14809,G__14810,G__14811,G__14812,G__14813,G__14814));
});
var G__14827__4 = (function() { 
var G__14828__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__14828 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14829__i = 0, G__14829__a = new Array(arguments.length -  3);
while (G__14829__i < G__14829__a.length) {G__14829__a[G__14829__i] = arguments[G__14829__i + 3]; ++G__14829__i;}
  args = new cljs.core.IndexedSeq(G__14829__a,0);
} 
return G__14828__delegate.call(this,x,y,z,args);};
G__14828.cljs$lang$maxFixedArity = 3;
G__14828.cljs$lang$applyTo = (function (arglist__14830){
var x = cljs.core.first(arglist__14830);
arglist__14830 = cljs.core.next(arglist__14830);
var y = cljs.core.first(arglist__14830);
arglist__14830 = cljs.core.next(arglist__14830);
var z = cljs.core.first(arglist__14830);
var args = cljs.core.rest(arglist__14830);
return G__14828__delegate(x,y,z,args);
});
G__14828.cljs$core$IFn$_invoke$arity$variadic = G__14828__delegate;
return G__14828;
})()
;
G__14827 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__14827__0.call(this);
case 1:
return G__14827__1.call(this,x);
case 2:
return G__14827__2.call(this,x,y);
case 3:
return G__14827__3.call(this,x,y,z);
default:
var G__14831 = null;
if (arguments.length > 3) {
var G__14832__i = 0, G__14832__a = new Array(arguments.length -  3);
while (G__14832__i < G__14832__a.length) {G__14832__a[G__14832__i] = arguments[G__14832__i + 3]; ++G__14832__i;}
G__14831 = new cljs.core.IndexedSeq(G__14832__a,0);
}
return G__14827__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14827.cljs$lang$maxFixedArity = 3;
G__14827.cljs$lang$applyTo = G__14827__4.cljs$lang$applyTo;
G__14827.cljs$core$IFn$_invoke$arity$0 = G__14827__0;
G__14827.cljs$core$IFn$_invoke$arity$1 = G__14827__1;
G__14827.cljs$core$IFn$_invoke$arity$2 = G__14827__2;
G__14827.cljs$core$IFn$_invoke$arity$3 = G__14827__3;
G__14827.cljs$core$IFn$_invoke$arity$variadic = G__14827__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14827;
})()
});
var partial__5 = (function() { 
var G__14833__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__14834__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__14834 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__14835__i = 0, G__14835__a = new Array(arguments.length -  0);
while (G__14835__i < G__14835__a.length) {G__14835__a[G__14835__i] = arguments[G__14835__i + 0]; ++G__14835__i;}
  args = new cljs.core.IndexedSeq(G__14835__a,0);
} 
return G__14834__delegate.call(this,args);};
G__14834.cljs$lang$maxFixedArity = 0;
G__14834.cljs$lang$applyTo = (function (arglist__14836){
var args = cljs.core.seq(arglist__14836);
return G__14834__delegate(args);
});
G__14834.cljs$core$IFn$_invoke$arity$variadic = G__14834__delegate;
return G__14834;
})()
;
};
var G__14833 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__14837__i = 0, G__14837__a = new Array(arguments.length -  4);
while (G__14837__i < G__14837__a.length) {G__14837__a[G__14837__i] = arguments[G__14837__i + 4]; ++G__14837__i;}
  more = new cljs.core.IndexedSeq(G__14837__a,0);
} 
return G__14833__delegate.call(this,f,arg1,arg2,arg3,more);};
G__14833.cljs$lang$maxFixedArity = 4;
G__14833.cljs$lang$applyTo = (function (arglist__14838){
var f = cljs.core.first(arglist__14838);
arglist__14838 = cljs.core.next(arglist__14838);
var arg1 = cljs.core.first(arglist__14838);
arglist__14838 = cljs.core.next(arglist__14838);
var arg2 = cljs.core.first(arglist__14838);
arglist__14838 = cljs.core.next(arglist__14838);
var arg3 = cljs.core.first(arglist__14838);
var more = cljs.core.rest(arglist__14838);
return G__14833__delegate(f,arg1,arg2,arg3,more);
});
G__14833.cljs$core$IFn$_invoke$arity$variadic = G__14833__delegate;
return G__14833;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__14839 = null;
if (arguments.length > 4) {
var G__14840__i = 0, G__14840__a = new Array(arguments.length -  4);
while (G__14840__i < G__14840__a.length) {G__14840__a[G__14840__i] = arguments[G__14840__i + 4]; ++G__14840__i;}
G__14839 = new cljs.core.IndexedSeq(G__14840__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__14839);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__14873 = null;
var G__14873__1 = (function (a){
var G__14857 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14857) : f.call(null,G__14857));
});
var G__14873__2 = (function (a,b){
var G__14858 = (((a == null))?x:a);
var G__14859 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14858,G__14859) : f.call(null,G__14858,G__14859));
});
var G__14873__3 = (function (a,b,c){
var G__14860 = (((a == null))?x:a);
var G__14861 = b;
var G__14862 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14860,G__14861,G__14862) : f.call(null,G__14860,G__14861,G__14862));
});
var G__14873__4 = (function() { 
var G__14874__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__14874 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14875__i = 0, G__14875__a = new Array(arguments.length -  3);
while (G__14875__i < G__14875__a.length) {G__14875__a[G__14875__i] = arguments[G__14875__i + 3]; ++G__14875__i;}
  ds = new cljs.core.IndexedSeq(G__14875__a,0);
} 
return G__14874__delegate.call(this,a,b,c,ds);};
G__14874.cljs$lang$maxFixedArity = 3;
G__14874.cljs$lang$applyTo = (function (arglist__14876){
var a = cljs.core.first(arglist__14876);
arglist__14876 = cljs.core.next(arglist__14876);
var b = cljs.core.first(arglist__14876);
arglist__14876 = cljs.core.next(arglist__14876);
var c = cljs.core.first(arglist__14876);
var ds = cljs.core.rest(arglist__14876);
return G__14874__delegate(a,b,c,ds);
});
G__14874.cljs$core$IFn$_invoke$arity$variadic = G__14874__delegate;
return G__14874;
})()
;
G__14873 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__14873__1.call(this,a);
case 2:
return G__14873__2.call(this,a,b);
case 3:
return G__14873__3.call(this,a,b,c);
default:
var G__14877 = null;
if (arguments.length > 3) {
var G__14878__i = 0, G__14878__a = new Array(arguments.length -  3);
while (G__14878__i < G__14878__a.length) {G__14878__a[G__14878__i] = arguments[G__14878__i + 3]; ++G__14878__i;}
G__14877 = new cljs.core.IndexedSeq(G__14878__a,0);
}
return G__14873__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14873.cljs$lang$maxFixedArity = 3;
G__14873.cljs$lang$applyTo = G__14873__4.cljs$lang$applyTo;
G__14873.cljs$core$IFn$_invoke$arity$1 = G__14873__1;
G__14873.cljs$core$IFn$_invoke$arity$2 = G__14873__2;
G__14873.cljs$core$IFn$_invoke$arity$3 = G__14873__3;
G__14873.cljs$core$IFn$_invoke$arity$variadic = G__14873__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14873;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__14879 = null;
var G__14879__2 = (function (a,b){
var G__14863 = (((a == null))?x:a);
var G__14864 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14863,G__14864) : f.call(null,G__14863,G__14864));
});
var G__14879__3 = (function (a,b,c){
var G__14865 = (((a == null))?x:a);
var G__14866 = (((b == null))?y:b);
var G__14867 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14865,G__14866,G__14867) : f.call(null,G__14865,G__14866,G__14867));
});
var G__14879__4 = (function() { 
var G__14880__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__14880 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14881__i = 0, G__14881__a = new Array(arguments.length -  3);
while (G__14881__i < G__14881__a.length) {G__14881__a[G__14881__i] = arguments[G__14881__i + 3]; ++G__14881__i;}
  ds = new cljs.core.IndexedSeq(G__14881__a,0);
} 
return G__14880__delegate.call(this,a,b,c,ds);};
G__14880.cljs$lang$maxFixedArity = 3;
G__14880.cljs$lang$applyTo = (function (arglist__14882){
var a = cljs.core.first(arglist__14882);
arglist__14882 = cljs.core.next(arglist__14882);
var b = cljs.core.first(arglist__14882);
arglist__14882 = cljs.core.next(arglist__14882);
var c = cljs.core.first(arglist__14882);
var ds = cljs.core.rest(arglist__14882);
return G__14880__delegate(a,b,c,ds);
});
G__14880.cljs$core$IFn$_invoke$arity$variadic = G__14880__delegate;
return G__14880;
})()
;
G__14879 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14879__2.call(this,a,b);
case 3:
return G__14879__3.call(this,a,b,c);
default:
var G__14883 = null;
if (arguments.length > 3) {
var G__14884__i = 0, G__14884__a = new Array(arguments.length -  3);
while (G__14884__i < G__14884__a.length) {G__14884__a[G__14884__i] = arguments[G__14884__i + 3]; ++G__14884__i;}
G__14883 = new cljs.core.IndexedSeq(G__14884__a,0);
}
return G__14879__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14883);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14879.cljs$lang$maxFixedArity = 3;
G__14879.cljs$lang$applyTo = G__14879__4.cljs$lang$applyTo;
G__14879.cljs$core$IFn$_invoke$arity$2 = G__14879__2;
G__14879.cljs$core$IFn$_invoke$arity$3 = G__14879__3;
G__14879.cljs$core$IFn$_invoke$arity$variadic = G__14879__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14879;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__14885 = null;
var G__14885__2 = (function (a,b){
var G__14868 = (((a == null))?x:a);
var G__14869 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14868,G__14869) : f.call(null,G__14868,G__14869));
});
var G__14885__3 = (function (a,b,c){
var G__14870 = (((a == null))?x:a);
var G__14871 = (((b == null))?y:b);
var G__14872 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14870,G__14871,G__14872) : f.call(null,G__14870,G__14871,G__14872));
});
var G__14885__4 = (function() { 
var G__14886__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__14886 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__14887__i = 0, G__14887__a = new Array(arguments.length -  3);
while (G__14887__i < G__14887__a.length) {G__14887__a[G__14887__i] = arguments[G__14887__i + 3]; ++G__14887__i;}
  ds = new cljs.core.IndexedSeq(G__14887__a,0);
} 
return G__14886__delegate.call(this,a,b,c,ds);};
G__14886.cljs$lang$maxFixedArity = 3;
G__14886.cljs$lang$applyTo = (function (arglist__14888){
var a = cljs.core.first(arglist__14888);
arglist__14888 = cljs.core.next(arglist__14888);
var b = cljs.core.first(arglist__14888);
arglist__14888 = cljs.core.next(arglist__14888);
var c = cljs.core.first(arglist__14888);
var ds = cljs.core.rest(arglist__14888);
return G__14886__delegate(a,b,c,ds);
});
G__14886.cljs$core$IFn$_invoke$arity$variadic = G__14886__delegate;
return G__14886;
})()
;
G__14885 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__14885__2.call(this,a,b);
case 3:
return G__14885__3.call(this,a,b,c);
default:
var G__14889 = null;
if (arguments.length > 3) {
var G__14890__i = 0, G__14890__a = new Array(arguments.length -  3);
while (G__14890__i < G__14890__a.length) {G__14890__a[G__14890__i] = arguments[G__14890__i + 3]; ++G__14890__i;}
G__14889 = new cljs.core.IndexedSeq(G__14890__a,0);
}
return G__14885__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__14889);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14885.cljs$lang$maxFixedArity = 3;
G__14885.cljs$lang$applyTo = G__14885__4.cljs$lang$applyTo;
G__14885.cljs$core$IFn$_invoke$arity$2 = G__14885__2;
G__14885.cljs$core$IFn$_invoke$arity$3 = G__14885__3;
G__14885.cljs$core$IFn$_invoke$arity$variadic = G__14885__4.cljs$core$IFn$_invoke$arity$variadic;
return G__14885;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__14921 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__14921) : cljs.core.volatile_BANG_.call(null,G__14921));
})();
return ((function (i){
return (function() {
var G__14951 = null;
var G__14951__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14951__1 = (function (result){
var G__14922 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14922) : rf.call(null,G__14922));
});
var G__14951__2 = (function (result,input){
var G__14923 = result;
var G__14924 = (function (){var G__14925 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__14926 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14925,G__14926) : f.call(null,G__14925,G__14926));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14923,G__14924) : rf.call(null,G__14923,G__14924));
});
G__14951 = function(result,input){
switch(arguments.length){
case 0:
return G__14951__0.call(this);
case 1:
return G__14951__1.call(this,result);
case 2:
return G__14951__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14951.cljs$core$IFn$_invoke$arity$0 = G__14951__0;
G__14951.cljs$core$IFn$_invoke$arity$1 = G__14951__1;
G__14951.cljs$core$IFn$_invoke$arity$2 = G__14951__2;
return G__14951;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___14952 = size;
var i_14953 = (0);
while(true){
if((i_14953 < n__4646__auto___14952)){
cljs.core.chunk_append(b,(function (){var G__14947 = (idx + i_14953);
var G__14948 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14953);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14947,G__14948) : f.call(null,G__14947,G__14948));
})());

var G__14954 = (i_14953 + (1));
i_14953 = G__14954;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14949 = idx;
var G__14950 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14949,G__14950) : f.call(null,G__14949,G__14950));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__14973 = null;
var G__14973__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14973__1 = (function (result){
var G__14967 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14967) : rf.call(null,G__14967));
});
var G__14973__2 = (function (result,input){
var v = (function (){var G__14968 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14968) : f.call(null,G__14968));
})();
if((v == null)){
return result;
} else {
var G__14969 = result;
var G__14970 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14969,G__14970) : rf.call(null,G__14969,G__14970));
}
});
G__14973 = function(result,input){
switch(arguments.length){
case 0:
return G__14973__0.call(this);
case 1:
return G__14973__1.call(this,result);
case 2:
return G__14973__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14973.cljs$core$IFn$_invoke$arity$0 = G__14973__0;
G__14973.cljs$core$IFn$_invoke$arity$1 = G__14973__1;
G__14973.cljs$core$IFn$_invoke$arity$2 = G__14973__2;
return G__14973;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___14974 = size;
var i_14975 = (0);
while(true){
if((i_14975 < n__4646__auto___14974)){
var x_14976 = (function (){var G__14971 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14975);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14971) : f.call(null,G__14971));
})();
if((x_14976 == null)){
} else {
cljs.core.chunk_append(b,x_14976);
}

var G__14977 = (i_14975 + (1));
i_14975 = G__14977;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14972 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14972) : f.call(null,G__14972));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__14978 = this$__$1;
return goog.getUid(G__14978);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__14979 = cljs.core.seq(self__.watches);
var chunk__14980 = null;
var count__14981 = (0);
var i__14982 = (0);
while(true){
if((i__14982 < count__14981)){
var vec__14983 = chunk__14980.cljs$core$IIndexed$_nth$arity$2(null,i__14982);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14983,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14983,(1),null);
var G__14984_14993 = key;
var G__14985_14994 = this$__$1;
var G__14986_14995 = oldval;
var G__14987_14996 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14984_14993,G__14985_14994,G__14986_14995,G__14987_14996) : f.call(null,G__14984_14993,G__14985_14994,G__14986_14995,G__14987_14996));

var G__14997 = seq__14979;
var G__14998 = chunk__14980;
var G__14999 = count__14981;
var G__15000 = (i__14982 + (1));
seq__14979 = G__14997;
chunk__14980 = G__14998;
count__14981 = G__14999;
i__14982 = G__15000;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__14979);
if(temp__4126__auto__){
var seq__14979__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__14979__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__14979__$1);
var G__15001 = cljs.core.chunk_rest(seq__14979__$1);
var G__15002 = c__4546__auto__;
var G__15003 = cljs.core.count(c__4546__auto__);
var G__15004 = (0);
seq__14979 = G__15001;
chunk__14980 = G__15002;
count__14981 = G__15003;
i__14982 = G__15004;
continue;
} else {
var vec__14988 = cljs.core.first(seq__14979__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14988,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14988,(1),null);
var G__14989_15005 = key;
var G__14990_15006 = this$__$1;
var G__14991_15007 = oldval;
var G__14992_15008 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14989_15005,G__14990_15006,G__14991_15007,G__14992_15008) : f.call(null,G__14989_15005,G__14990_15006,G__14991_15007,G__14992_15008));

var G__15009 = cljs.core.next(seq__14979__$1);
var G__15010 = null;
var G__15011 = (0);
var G__15012 = (0);
seq__14979 = G__15009;
chunk__14980 = G__15010;
count__14981 = G__15011;
i__14982 = G__15012;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__15016__delegate = function (x,p__15013){
var map__15015 = p__15013;
var map__15015__$1 = ((cljs.core.seq_QMARK_(map__15015))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__15015):map__15015);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15015__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15015__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__15016 = function (x,var_args){
var p__15013 = null;
if (arguments.length > 1) {
var G__15017__i = 0, G__15017__a = new Array(arguments.length -  1);
while (G__15017__i < G__15017__a.length) {G__15017__a[G__15017__i] = arguments[G__15017__i + 1]; ++G__15017__i;}
  p__15013 = new cljs.core.IndexedSeq(G__15017__a,0);
} 
return G__15016__delegate.call(this,x,p__15013);};
G__15016.cljs$lang$maxFixedArity = 1;
G__15016.cljs$lang$applyTo = (function (arglist__15018){
var x = cljs.core.first(arglist__15018);
var p__15013 = cljs.core.rest(arglist__15018);
return G__15016__delegate(x,p__15013);
});
G__15016.cljs$core$IFn$_invoke$arity$variadic = G__15016__delegate;
return G__15016;
})()
;
atom = function(x,var_args){
var p__15013 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__15019 = null;
if (arguments.length > 1) {
var G__15020__i = 0, G__15020__a = new Array(arguments.length -  1);
while (G__15020__i < G__15020__a.length) {G__15020__a[G__15020__i] = arguments[G__15020__i + 1]; ++G__15020__i;}
G__15019 = new cljs.core.IndexedSeq(G__15020__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__15023 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__15023) : validate.call(null,G__15023));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__15024 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15024) : cljs.core.pr_str.call(null,G__15024));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15031 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15031) : f.call(null,G__15031));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15032 = a.state;
var G__15033 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15032,G__15033) : f.call(null,G__15032,G__15033));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__15034 = a.state;
var G__15035 = x;
var G__15036 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15034,G__15035,G__15036) : f.call(null,G__15034,G__15035,G__15036));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__15037__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__15037 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__15038__i = 0, G__15038__a = new Array(arguments.length -  4);
while (G__15038__i < G__15038__a.length) {G__15038__a[G__15038__i] = arguments[G__15038__i + 4]; ++G__15038__i;}
  more = new cljs.core.IndexedSeq(G__15038__a,0);
} 
return G__15037__delegate.call(this,a,f,x,y,more);};
G__15037.cljs$lang$maxFixedArity = 4;
G__15037.cljs$lang$applyTo = (function (arglist__15039){
var a = cljs.core.first(arglist__15039);
arglist__15039 = cljs.core.next(arglist__15039);
var f = cljs.core.first(arglist__15039);
arglist__15039 = cljs.core.next(arglist__15039);
var x = cljs.core.first(arglist__15039);
arglist__15039 = cljs.core.next(arglist__15039);
var y = cljs.core.first(arglist__15039);
var more = cljs.core.rest(arglist__15039);
return G__15037__delegate(a,f,x,y,more);
});
G__15037.cljs$core$IFn$_invoke$arity$variadic = G__15037__delegate;
return G__15037;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__15040 = null;
if (arguments.length > 4) {
var G__15041__i = 0, G__15041__a = new Array(arguments.length -  4);
while (G__15041__i < G__15041__a.length) {G__15041__a[G__15041__i] = arguments[G__15041__i + 4]; ++G__15041__i;}
G__15040 = new cljs.core.IndexedSeq(G__15041__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__15040);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15108 = null;
var G__15108__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15108__1 = (function (result){
var G__15075 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15075) : rf.call(null,G__15075));
});
var G__15108__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__15076 = i;
var G__15077 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15076,G__15077) : f.call(null,G__15076,G__15077));
})();
if((v == null)){
return result;
} else {
var G__15078 = result;
var G__15079 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15078,G__15079) : rf.call(null,G__15078,G__15079));
}
});
G__15108 = function(result,input){
switch(arguments.length){
case 0:
return G__15108__0.call(this);
case 1:
return G__15108__1.call(this,result);
case 2:
return G__15108__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15108.cljs$core$IFn$_invoke$arity$0 = G__15108__0;
G__15108.cljs$core$IFn$_invoke$arity$1 = G__15108__1;
G__15108.cljs$core$IFn$_invoke$arity$2 = G__15108__2;
return G__15108;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___15109 = size;
var i_15110 = (0);
while(true){
if((i_15110 < n__4646__auto___15109)){
var x_15111 = (function (){var G__15104 = (idx + i_15110);
var G__15105 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15110);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15104,G__15105) : f.call(null,G__15104,G__15105));
})();
if((x_15111 == null)){
} else {
cljs.core.chunk_append(b,x_15111);
}

var G__15112 = (i_15110 + (1));
i_15110 = G__15112;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__15106 = idx;
var G__15107 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15106,G__15107) : f.call(null,G__15106,G__15107));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__15326 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15326) : p.call(null,G__15326));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15328 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15328) : p.call(null,G__15328));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__15329 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15329) : p.call(null,G__15329));
} else {
return and__3747__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15331 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15331) : p.call(null,G__15331));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15333 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15333) : p.call(null,G__15333));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__15334 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15334) : p.call(null,G__15334));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__15503__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__15503 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15504__i = 0, G__15504__a = new Array(arguments.length -  3);
while (G__15504__i < G__15504__a.length) {G__15504__a[G__15504__i] = arguments[G__15504__i + 3]; ++G__15504__i;}
  args = new cljs.core.IndexedSeq(G__15504__a,0);
} 
return G__15503__delegate.call(this,x,y,z,args);};
G__15503.cljs$lang$maxFixedArity = 3;
G__15503.cljs$lang$applyTo = (function (arglist__15505){
var x = cljs.core.first(arglist__15505);
arglist__15505 = cljs.core.next(arglist__15505);
var y = cljs.core.first(arglist__15505);
arglist__15505 = cljs.core.next(arglist__15505);
var z = cljs.core.first(arglist__15505);
var args = cljs.core.rest(arglist__15505);
return G__15503__delegate(x,y,z,args);
});
G__15503.cljs$core$IFn$_invoke$arity$variadic = G__15503__delegate;
return G__15503;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__15506 = null;
if (arguments.length > 3) {
var G__15507__i = 0, G__15507__a = new Array(arguments.length -  3);
while (G__15507__i < G__15507__a.length) {G__15507__a[G__15507__i] = arguments[G__15507__i + 3]; ++G__15507__i;}
G__15506 = new cljs.core.IndexedSeq(G__15507__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15506);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15366 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15366) : p1.call(null,G__15366));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__15367 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15367) : p2.call(null,G__15367));
} else {
return and__3747__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15369 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15369) : p1.call(null,G__15369));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15371 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15371) : p1.call(null,G__15371));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__15373 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15373) : p2.call(null,G__15373));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var G__15374 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15374) : p2.call(null,G__15374));
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15376 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15376) : p1.call(null,G__15376));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15378 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15378) : p1.call(null,G__15378));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__15380 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15380) : p1.call(null,G__15380));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__15382 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15382) : p2.call(null,G__15382));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__15384 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15384) : p2.call(null,G__15384));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var G__15385 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15385) : p2.call(null,G__15385));
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__15508__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15113_SHARP_){
var and__3747__auto__ = (function (){var G__15390 = p1__15113_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15390) : p1.call(null,G__15390));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__15391 = p1__15113_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15391) : p2.call(null,G__15391));
} else {
return and__3747__auto__;
}
}),args)));
};
var G__15508 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15509__i = 0, G__15509__a = new Array(arguments.length -  3);
while (G__15509__i < G__15509__a.length) {G__15509__a[G__15509__i] = arguments[G__15509__i + 3]; ++G__15509__i;}
  args = new cljs.core.IndexedSeq(G__15509__a,0);
} 
return G__15508__delegate.call(this,x,y,z,args);};
G__15508.cljs$lang$maxFixedArity = 3;
G__15508.cljs$lang$applyTo = (function (arglist__15510){
var x = cljs.core.first(arglist__15510);
arglist__15510 = cljs.core.next(arglist__15510);
var y = cljs.core.first(arglist__15510);
arglist__15510 = cljs.core.next(arglist__15510);
var z = cljs.core.first(arglist__15510);
var args = cljs.core.rest(arglist__15510);
return G__15508__delegate(x,y,z,args);
});
G__15508.cljs$core$IFn$_invoke$arity$variadic = G__15508__delegate;
return G__15508;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__15511 = null;
if (arguments.length > 3) {
var G__15512__i = 0, G__15512__a = new Array(arguments.length -  3);
while (G__15512__i < G__15512__a.length) {G__15512__a[G__15512__i] = arguments[G__15512__i + 3]; ++G__15512__i;}
G__15511 = new cljs.core.IndexedSeq(G__15512__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15511);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15437 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15437) : p1.call(null,G__15437));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15439 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15439) : p2.call(null,G__15439));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__15440 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15440) : p3.call(null,G__15440));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15442 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15442) : p1.call(null,G__15442));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15444 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15444) : p2.call(null,G__15444));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__15446 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15446) : p3.call(null,G__15446));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__15448 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15448) : p1.call(null,G__15448));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__15450 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15450) : p2.call(null,G__15450));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var G__15451 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15451) : p3.call(null,G__15451));
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3747__auto__ = (function (){var G__15453 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15453) : p1.call(null,G__15453));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15455 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15455) : p2.call(null,G__15455));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var and__3747__auto____$2 = (function (){var G__15457 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15457) : p3.call(null,G__15457));
})();
if(cljs.core.truth_(and__3747__auto____$2)){
var and__3747__auto____$3 = (function (){var G__15459 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15459) : p1.call(null,G__15459));
})();
if(cljs.core.truth_(and__3747__auto____$3)){
var and__3747__auto____$4 = (function (){var G__15461 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15461) : p2.call(null,G__15461));
})();
if(cljs.core.truth_(and__3747__auto____$4)){
var and__3747__auto____$5 = (function (){var G__15463 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15463) : p3.call(null,G__15463));
})();
if(cljs.core.truth_(and__3747__auto____$5)){
var and__3747__auto____$6 = (function (){var G__15465 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15465) : p1.call(null,G__15465));
})();
if(cljs.core.truth_(and__3747__auto____$6)){
var and__3747__auto____$7 = (function (){var G__15467 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15467) : p2.call(null,G__15467));
})();
if(cljs.core.truth_(and__3747__auto____$7)){
var G__15468 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15468) : p3.call(null,G__15468));
} else {
return and__3747__auto____$7;
}
} else {
return and__3747__auto____$6;
}
} else {
return and__3747__auto____$5;
}
} else {
return and__3747__auto____$4;
}
} else {
return and__3747__auto____$3;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__15513__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__15114_SHARP_){
var and__3747__auto__ = (function (){var G__15475 = p1__15114_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15475) : p1.call(null,G__15475));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15477 = p1__15114_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15477) : p2.call(null,G__15477));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__15478 = p1__15114_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15478) : p3.call(null,G__15478));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
}),args)));
};
var G__15513 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15514__i = 0, G__15514__a = new Array(arguments.length -  3);
while (G__15514__i < G__15514__a.length) {G__15514__a[G__15514__i] = arguments[G__15514__i + 3]; ++G__15514__i;}
  args = new cljs.core.IndexedSeq(G__15514__a,0);
} 
return G__15513__delegate.call(this,x,y,z,args);};
G__15513.cljs$lang$maxFixedArity = 3;
G__15513.cljs$lang$applyTo = (function (arglist__15515){
var x = cljs.core.first(arglist__15515);
arglist__15515 = cljs.core.next(arglist__15515);
var y = cljs.core.first(arglist__15515);
arglist__15515 = cljs.core.next(arglist__15515);
var z = cljs.core.first(arglist__15515);
var args = cljs.core.rest(arglist__15515);
return G__15513__delegate(x,y,z,args);
});
G__15513.cljs$core$IFn$_invoke$arity$variadic = G__15513__delegate;
return G__15513;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__15516 = null;
if (arguments.length > 3) {
var G__15517__i = 0, G__15517__a = new Array(arguments.length -  3);
while (G__15517__i < G__15517__a.length) {G__15517__a[G__15517__i] = arguments[G__15517__i + 3]; ++G__15517__i;}
G__15516 = new cljs.core.IndexedSeq(G__15517__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__15518__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15115_SHARP_){
var G__15494 = x;
return (p1__15115_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15115_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15494) : p1__15115_SHARP_.call(null,G__15494));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15116_SHARP_){
var and__3747__auto__ = (function (){var G__15496 = x;
return (p1__15116_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15116_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15496) : p1__15116_SHARP_.call(null,G__15496));
})();
if(cljs.core.truth_(and__3747__auto__)){
var G__15497 = y;
return (p1__15116_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15116_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15497) : p1__15116_SHARP_.call(null,G__15497));
} else {
return and__3747__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15117_SHARP_){
var and__3747__auto__ = (function (){var G__15499 = x;
return (p1__15117_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15117_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15499) : p1__15117_SHARP_.call(null,G__15499));
})();
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__15501 = y;
return (p1__15117_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15117_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15501) : p1__15117_SHARP_.call(null,G__15501));
})();
if(cljs.core.truth_(and__3747__auto____$1)){
var G__15502 = z;
return (p1__15117_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15117_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15502) : p1__15117_SHARP_.call(null,G__15502));
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__15519__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__15118_SHARP_){
return cljs.core.every_QMARK_(p1__15118_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__15519 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15520__i = 0, G__15520__a = new Array(arguments.length -  3);
while (G__15520__i < G__15520__a.length) {G__15520__a[G__15520__i] = arguments[G__15520__i + 3]; ++G__15520__i;}
  args = new cljs.core.IndexedSeq(G__15520__a,0);
} 
return G__15519__delegate.call(this,x,y,z,args);};
G__15519.cljs$lang$maxFixedArity = 3;
G__15519.cljs$lang$applyTo = (function (arglist__15521){
var x = cljs.core.first(arglist__15521);
arglist__15521 = cljs.core.next(arglist__15521);
var y = cljs.core.first(arglist__15521);
arglist__15521 = cljs.core.next(arglist__15521);
var z = cljs.core.first(arglist__15521);
var args = cljs.core.rest(arglist__15521);
return G__15519__delegate(x,y,z,args);
});
G__15519.cljs$core$IFn$_invoke$arity$variadic = G__15519__delegate;
return G__15519;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__15522 = null;
if (arguments.length > 3) {
var G__15523__i = 0, G__15523__a = new Array(arguments.length -  3);
while (G__15523__i < G__15523__a.length) {G__15523__a[G__15523__i] = arguments[G__15523__i + 3]; ++G__15523__i;}
G__15522 = new cljs.core.IndexedSeq(G__15523__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__15518 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15524__i = 0, G__15524__a = new Array(arguments.length -  3);
while (G__15524__i < G__15524__a.length) {G__15524__a[G__15524__i] = arguments[G__15524__i + 3]; ++G__15524__i;}
  ps = new cljs.core.IndexedSeq(G__15524__a,0);
} 
return G__15518__delegate.call(this,p1,p2,p3,ps);};
G__15518.cljs$lang$maxFixedArity = 3;
G__15518.cljs$lang$applyTo = (function (arglist__15525){
var p1 = cljs.core.first(arglist__15525);
arglist__15525 = cljs.core.next(arglist__15525);
var p2 = cljs.core.first(arglist__15525);
arglist__15525 = cljs.core.next(arglist__15525);
var p3 = cljs.core.first(arglist__15525);
var ps = cljs.core.rest(arglist__15525);
return G__15518__delegate(p1,p2,p3,ps);
});
G__15518.cljs$core$IFn$_invoke$arity$variadic = G__15518__delegate;
return G__15518;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__15526 = null;
if (arguments.length > 3) {
var G__15527__i = 0, G__15527__a = new Array(arguments.length -  3);
while (G__15527__i < G__15527__a.length) {G__15527__a[G__15527__i] = arguments[G__15527__i + 3]; ++G__15527__i;}
G__15526 = new cljs.core.IndexedSeq(G__15527__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__15733 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15733) : p.call(null,G__15733));
});
var sp1__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__15735 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15735) : p.call(null,G__15735));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__15736 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15736) : p.call(null,G__15736));
}
});
var sp1__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__15738 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15738) : p.call(null,G__15738));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__15740 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15740) : p.call(null,G__15740));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__15741 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15741) : p.call(null,G__15741));
}
}
});
var sp1__4 = (function() { 
var G__15902__delegate = function (x,y,z,args){
var or__3759__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__15902 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15903__i = 0, G__15903__a = new Array(arguments.length -  3);
while (G__15903__i < G__15903__a.length) {G__15903__a[G__15903__i] = arguments[G__15903__i + 3]; ++G__15903__i;}
  args = new cljs.core.IndexedSeq(G__15903__a,0);
} 
return G__15902__delegate.call(this,x,y,z,args);};
G__15902.cljs$lang$maxFixedArity = 3;
G__15902.cljs$lang$applyTo = (function (arglist__15904){
var x = cljs.core.first(arglist__15904);
arglist__15904 = cljs.core.next(arglist__15904);
var y = cljs.core.first(arglist__15904);
arglist__15904 = cljs.core.next(arglist__15904);
var z = cljs.core.first(arglist__15904);
var args = cljs.core.rest(arglist__15904);
return G__15902__delegate(x,y,z,args);
});
G__15902.cljs$core$IFn$_invoke$arity$variadic = G__15902__delegate;
return G__15902;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__15905 = null;
if (arguments.length > 3) {
var G__15906__i = 0, G__15906__a = new Array(arguments.length -  3);
while (G__15906__i < G__15906__a.length) {G__15906__a[G__15906__i] = arguments[G__15906__i + 3]; ++G__15906__i;}
G__15905 = new cljs.core.IndexedSeq(G__15906__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15905);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3759__auto__ = (function (){var G__15773 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15773) : p1.call(null,G__15773));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__15774 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15774) : p2.call(null,G__15774));
}
});
var sp2__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__15776 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15776) : p1.call(null,G__15776));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__15778 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15778) : p1.call(null,G__15778));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__15780 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15780) : p2.call(null,G__15780));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var G__15781 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15781) : p2.call(null,G__15781));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__15783 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15783) : p1.call(null,G__15783));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__15785 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15785) : p1.call(null,G__15785));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__15787 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15787) : p1.call(null,G__15787));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__15789 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15789) : p2.call(null,G__15789));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__15791 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15791) : p2.call(null,G__15791));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var G__15792 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15792) : p2.call(null,G__15792));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__15907__delegate = function (x,y,z,args){
var or__3759__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__){
return (function (p1__15528_SHARP_){
var or__3759__auto____$1 = (function (){var G__15794 = p1__15528_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15794) : p1.call(null,G__15794));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__15795 = p1__15528_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15795) : p2.call(null,G__15795));
}
});})(or__3759__auto__))
,args);
}
};
var G__15907 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15908__i = 0, G__15908__a = new Array(arguments.length -  3);
while (G__15908__i < G__15908__a.length) {G__15908__a[G__15908__i] = arguments[G__15908__i + 3]; ++G__15908__i;}
  args = new cljs.core.IndexedSeq(G__15908__a,0);
} 
return G__15907__delegate.call(this,x,y,z,args);};
G__15907.cljs$lang$maxFixedArity = 3;
G__15907.cljs$lang$applyTo = (function (arglist__15909){
var x = cljs.core.first(arglist__15909);
arglist__15909 = cljs.core.next(arglist__15909);
var y = cljs.core.first(arglist__15909);
arglist__15909 = cljs.core.next(arglist__15909);
var z = cljs.core.first(arglist__15909);
var args = cljs.core.rest(arglist__15909);
return G__15907__delegate(x,y,z,args);
});
G__15907.cljs$core$IFn$_invoke$arity$variadic = G__15907__delegate;
return G__15907;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__15910 = null;
if (arguments.length > 3) {
var G__15911__i = 0, G__15911__a = new Array(arguments.length -  3);
while (G__15911__i < G__15911__a.length) {G__15911__a[G__15911__i] = arguments[G__15911__i + 3]; ++G__15911__i;}
G__15910 = new cljs.core.IndexedSeq(G__15911__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15910);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3759__auto__ = (function (){var G__15841 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15841) : p1.call(null,G__15841));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__15843 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15843) : p2.call(null,G__15843));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__15844 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15844) : p3.call(null,G__15844));
}
}
});
var sp3__2 = (function (x,y){
var or__3759__auto__ = (function (){var G__15846 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15846) : p1.call(null,G__15846));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__15848 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15848) : p2.call(null,G__15848));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__15850 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15850) : p3.call(null,G__15850));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__15852 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15852) : p1.call(null,G__15852));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__15854 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15854) : p2.call(null,G__15854));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var G__15855 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15855) : p3.call(null,G__15855));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3759__auto__ = (function (){var G__15857 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15857) : p1.call(null,G__15857));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__15859 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15859) : p2.call(null,G__15859));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__15861 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15861) : p3.call(null,G__15861));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var or__3759__auto____$3 = (function (){var G__15863 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15863) : p1.call(null,G__15863));
})();
if(cljs.core.truth_(or__3759__auto____$3)){
return or__3759__auto____$3;
} else {
var or__3759__auto____$4 = (function (){var G__15865 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15865) : p2.call(null,G__15865));
})();
if(cljs.core.truth_(or__3759__auto____$4)){
return or__3759__auto____$4;
} else {
var or__3759__auto____$5 = (function (){var G__15867 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15867) : p3.call(null,G__15867));
})();
if(cljs.core.truth_(or__3759__auto____$5)){
return or__3759__auto____$5;
} else {
var or__3759__auto____$6 = (function (){var G__15869 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15869) : p1.call(null,G__15869));
})();
if(cljs.core.truth_(or__3759__auto____$6)){
return or__3759__auto____$6;
} else {
var or__3759__auto____$7 = (function (){var G__15871 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15871) : p2.call(null,G__15871));
})();
if(cljs.core.truth_(or__3759__auto____$7)){
return or__3759__auto____$7;
} else {
var G__15872 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15872) : p3.call(null,G__15872));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__15912__delegate = function (x,y,z,args){
var or__3759__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__){
return (function (p1__15529_SHARP_){
var or__3759__auto____$1 = (function (){var G__15874 = p1__15529_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15874) : p1.call(null,G__15874));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var G__15876 = p1__15529_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15876) : p2.call(null,G__15876));
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
var G__15877 = p1__15529_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15877) : p3.call(null,G__15877));
}
}
});})(or__3759__auto__))
,args);
}
};
var G__15912 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15913__i = 0, G__15913__a = new Array(arguments.length -  3);
while (G__15913__i < G__15913__a.length) {G__15913__a[G__15913__i] = arguments[G__15913__i + 3]; ++G__15913__i;}
  args = new cljs.core.IndexedSeq(G__15913__a,0);
} 
return G__15912__delegate.call(this,x,y,z,args);};
G__15912.cljs$lang$maxFixedArity = 3;
G__15912.cljs$lang$applyTo = (function (arglist__15914){
var x = cljs.core.first(arglist__15914);
arglist__15914 = cljs.core.next(arglist__15914);
var y = cljs.core.first(arglist__15914);
arglist__15914 = cljs.core.next(arglist__15914);
var z = cljs.core.first(arglist__15914);
var args = cljs.core.rest(arglist__15914);
return G__15912__delegate(x,y,z,args);
});
G__15912.cljs$core$IFn$_invoke$arity$variadic = G__15912__delegate;
return G__15912;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__15915 = null;
if (arguments.length > 3) {
var G__15916__i = 0, G__15916__a = new Array(arguments.length -  3);
while (G__15916__i < G__15916__a.length) {G__15916__a[G__15916__i] = arguments[G__15916__i + 3]; ++G__15916__i;}
G__15915 = new cljs.core.IndexedSeq(G__15916__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15915);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__15917__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__15530_SHARP_){
var G__15893 = x;
return (p1__15530_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15530_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15893) : p1__15530_SHARP_.call(null,G__15893));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__15531_SHARP_){
var or__3759__auto__ = (function (){var G__15895 = x;
return (p1__15531_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15531_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15895) : p1__15531_SHARP_.call(null,G__15895));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var G__15896 = y;
return (p1__15531_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15531_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15896) : p1__15531_SHARP_.call(null,G__15896));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__15532_SHARP_){
var or__3759__auto__ = (function (){var G__15898 = x;
return (p1__15532_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15532_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15898) : p1__15532_SHARP_.call(null,G__15898));
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var G__15900 = y;
return (p1__15532_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15532_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15900) : p1__15532_SHARP_.call(null,G__15900));
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var G__15901 = z;
return (p1__15532_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15532_SHARP_.cljs$core$IFn$_invoke$arity$1(G__15901) : p1__15532_SHARP_.call(null,G__15901));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__15918__delegate = function (x,y,z,args){
var or__3759__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.some(((function (or__3759__auto__,ps__$1){
return (function (p1__15533_SHARP_){
return cljs.core.some(p1__15533_SHARP_,args);
});})(or__3759__auto__,ps__$1))
,ps__$1);
}
};
var G__15918 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__15919__i = 0, G__15919__a = new Array(arguments.length -  3);
while (G__15919__i < G__15919__a.length) {G__15919__a[G__15919__i] = arguments[G__15919__i + 3]; ++G__15919__i;}
  args = new cljs.core.IndexedSeq(G__15919__a,0);
} 
return G__15918__delegate.call(this,x,y,z,args);};
G__15918.cljs$lang$maxFixedArity = 3;
G__15918.cljs$lang$applyTo = (function (arglist__15920){
var x = cljs.core.first(arglist__15920);
arglist__15920 = cljs.core.next(arglist__15920);
var y = cljs.core.first(arglist__15920);
arglist__15920 = cljs.core.next(arglist__15920);
var z = cljs.core.first(arglist__15920);
var args = cljs.core.rest(arglist__15920);
return G__15918__delegate(x,y,z,args);
});
G__15918.cljs$core$IFn$_invoke$arity$variadic = G__15918__delegate;
return G__15918;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__15921 = null;
if (arguments.length > 3) {
var G__15922__i = 0, G__15922__a = new Array(arguments.length -  3);
while (G__15922__i < G__15922__a.length) {G__15922__a[G__15922__i] = arguments[G__15922__i + 3]; ++G__15922__i;}
G__15921 = new cljs.core.IndexedSeq(G__15922__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__15921);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__15917 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__15923__i = 0, G__15923__a = new Array(arguments.length -  3);
while (G__15923__i < G__15923__a.length) {G__15923__a[G__15923__i] = arguments[G__15923__i + 3]; ++G__15923__i;}
  ps = new cljs.core.IndexedSeq(G__15923__a,0);
} 
return G__15917__delegate.call(this,p1,p2,p3,ps);};
G__15917.cljs$lang$maxFixedArity = 3;
G__15917.cljs$lang$applyTo = (function (arglist__15924){
var p1 = cljs.core.first(arglist__15924);
arglist__15924 = cljs.core.next(arglist__15924);
var p2 = cljs.core.first(arglist__15924);
arglist__15924 = cljs.core.next(arglist__15924);
var p3 = cljs.core.first(arglist__15924);
var ps = cljs.core.rest(arglist__15924);
return G__15917__delegate(p1,p2,p3,ps);
});
G__15917.cljs$core$IFn$_invoke$arity$variadic = G__15917__delegate;
return G__15917;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__15925 = null;
if (arguments.length > 3) {
var G__15926__i = 0, G__15926__a = new Array(arguments.length -  3);
while (G__15926__i < G__15926__a.length) {G__15926__a[G__15926__i] = arguments[G__15926__i + 3]; ++G__15926__i;}
G__15925 = new cljs.core.IndexedSeq(G__15926__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__15925);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__15981 = null;
var G__15981__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15981__1 = (function (result){
var G__15967 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15967) : rf.call(null,G__15967));
});
var G__15981__2 = (function (result,input){
var G__15968 = result;
var G__15969 = (function (){var G__15970 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15970) : f.call(null,G__15970));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15968,G__15969) : rf.call(null,G__15968,G__15969));
});
var G__15981__3 = (function() { 
var G__15982__delegate = function (result,input,inputs){
var G__15971 = result;
var G__15972 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15971,G__15972) : rf.call(null,G__15971,G__15972));
};
var G__15982 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__15983__i = 0, G__15983__a = new Array(arguments.length -  2);
while (G__15983__i < G__15983__a.length) {G__15983__a[G__15983__i] = arguments[G__15983__i + 2]; ++G__15983__i;}
  inputs = new cljs.core.IndexedSeq(G__15983__a,0);
} 
return G__15982__delegate.call(this,result,input,inputs);};
G__15982.cljs$lang$maxFixedArity = 2;
G__15982.cljs$lang$applyTo = (function (arglist__15984){
var result = cljs.core.first(arglist__15984);
arglist__15984 = cljs.core.next(arglist__15984);
var input = cljs.core.first(arglist__15984);
var inputs = cljs.core.rest(arglist__15984);
return G__15982__delegate(result,input,inputs);
});
G__15982.cljs$core$IFn$_invoke$arity$variadic = G__15982__delegate;
return G__15982;
})()
;
G__15981 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__15981__0.call(this);
case 1:
return G__15981__1.call(this,result);
case 2:
return G__15981__2.call(this,result,input);
default:
var G__15985 = null;
if (arguments.length > 2) {
var G__15986__i = 0, G__15986__a = new Array(arguments.length -  2);
while (G__15986__i < G__15986__a.length) {G__15986__a[G__15986__i] = arguments[G__15986__i + 2]; ++G__15986__i;}
G__15985 = new cljs.core.IndexedSeq(G__15986__a,0);
}
return G__15981__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__15985);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15981.cljs$lang$maxFixedArity = 2;
G__15981.cljs$lang$applyTo = G__15981__3.cljs$lang$applyTo;
G__15981.cljs$core$IFn$_invoke$arity$0 = G__15981__0;
G__15981.cljs$core$IFn$_invoke$arity$1 = G__15981__1;
G__15981.cljs$core$IFn$_invoke$arity$2 = G__15981__2;
G__15981.cljs$core$IFn$_invoke$arity$variadic = G__15981__3.cljs$core$IFn$_invoke$arity$variadic;
return G__15981;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___15987 = size;
var i_15988 = (0);
while(true){
if((i_15988 < n__4646__auto___15987)){
cljs.core.chunk_append(b,(function (){var G__15973 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15988);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15973) : f.call(null,G__15973));
})());

var G__15989 = (i_15988 + (1));
i_15988 = G__15989;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__15974 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15974) : f.call(null,G__15974));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__15975 = cljs.core.first(s1);
var G__15976 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15975,G__15976) : f.call(null,G__15975,G__15976));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__15977 = cljs.core.first(s1);
var G__15978 = cljs.core.first(s2);
var G__15979 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15977,G__15978,G__15979) : f.call(null,G__15977,G__15978,G__15979));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__15990__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__15927_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__15927_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__15990 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15991__i = 0, G__15991__a = new Array(arguments.length -  4);
while (G__15991__i < G__15991__a.length) {G__15991__a[G__15991__i] = arguments[G__15991__i + 4]; ++G__15991__i;}
  colls = new cljs.core.IndexedSeq(G__15991__a,0);
} 
return G__15990__delegate.call(this,f,c1,c2,c3,colls);};
G__15990.cljs$lang$maxFixedArity = 4;
G__15990.cljs$lang$applyTo = (function (arglist__15992){
var f = cljs.core.first(arglist__15992);
arglist__15992 = cljs.core.next(arglist__15992);
var c1 = cljs.core.first(arglist__15992);
arglist__15992 = cljs.core.next(arglist__15992);
var c2 = cljs.core.first(arglist__15992);
arglist__15992 = cljs.core.next(arglist__15992);
var c3 = cljs.core.first(arglist__15992);
var colls = cljs.core.rest(arglist__15992);
return G__15990__delegate(f,c1,c2,c3,colls);
});
G__15990.cljs$core$IFn$_invoke$arity$variadic = G__15990__delegate;
return G__15990;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__15993 = null;
if (arguments.length > 4) {
var G__15994__i = 0, G__15994__a = new Array(arguments.length -  4);
while (G__15994__i < G__15994__a.length) {G__15994__a[G__15994__i] = arguments[G__15994__i + 4]; ++G__15994__i;}
G__15993 = new cljs.core.IndexedSeq(G__15994__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15993);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16003 = null;
var G__16003__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16003__1 = (function (result){
var G__16000 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16000) : rf.call(null,G__16000));
});
var G__16003__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__16001 = result;
var G__16002 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16001,G__16002) : rf.call(null,G__16001,G__16002));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__16003 = function(result,input){
switch(arguments.length){
case 0:
return G__16003__0.call(this);
case 1:
return G__16003__1.call(this,result);
case 2:
return G__16003__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16003.cljs$core$IFn$_invoke$arity$0 = G__16003__0;
G__16003.cljs$core$IFn$_invoke$arity$1 = G__16003__1;
G__16003.cljs$core$IFn$_invoke$arity$2 = G__16003__2;
return G__16003;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__16010 = null;
var G__16010__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16010__1 = (function (result){
var G__16007 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16007) : rf.call(null,G__16007));
});
var G__16010__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__16008 = result;
var G__16009 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16008,G__16009) : rf.call(null,G__16008,G__16009));
}
});
G__16010 = function(result,input){
switch(arguments.length){
case 0:
return G__16010__0.call(this);
case 1:
return G__16010__1.call(this,result);
case 2:
return G__16010__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16010.cljs$core$IFn$_invoke$arity$0 = G__16010__0;
G__16010.cljs$core$IFn$_invoke$arity$1 = G__16010__1;
G__16010.cljs$core$IFn$_invoke$arity$2 = G__16010__2;
return G__16010;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__16011 = (n__$1 - (1));
var G__16012 = cljs.core.rest(s);
n__$1 = G__16011;
coll__$1 = G__16012;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__16015 = cljs.core.next(s);
var G__16016 = cljs.core.next(lead);
s = G__16015;
lead = G__16016;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__16029 = null;
var G__16029__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16029__1 = (function (result){
var G__16023 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16023) : rf.call(null,G__16023));
});
var G__16029__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3747__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3747__auto__)){
var G__16024 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16024) : pred.call(null,G__16024));
} else {
return and__3747__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__16025 = result;
var G__16026 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16025,G__16026) : rf.call(null,G__16025,G__16026));
}
});
G__16029 = function(result,input){
switch(arguments.length){
case 0:
return G__16029__0.call(this);
case 1:
return G__16029__1.call(this,result);
case 2:
return G__16029__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16029.cljs$core$IFn$_invoke$arity$0 = G__16029__0;
G__16029.cljs$core$IFn$_invoke$arity$1 = G__16029__1;
G__16029.cljs$core$IFn$_invoke$arity$2 = G__16029__2;
return G__16029;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3747__auto__ = s;
if(and__3747__auto__){
var G__16028 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__16028) : pred__$1.call(null,G__16028));
} else {
return and__3747__auto__;
}
})())){
var G__16030 = pred__$1;
var G__16031 = cljs.core.rest(s);
pred__$1 = G__16030;
coll__$1 = G__16031;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__16040 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16040) : f.call(null,G__16040));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__16043__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__16043 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__16044__i = 0, G__16044__a = new Array(arguments.length -  2);
while (G__16044__i < G__16044__a.length) {G__16044__a[G__16044__i] = arguments[G__16044__i + 2]; ++G__16044__i;}
  colls = new cljs.core.IndexedSeq(G__16044__a,0);
} 
return G__16043__delegate.call(this,c1,c2,colls);};
G__16043.cljs$lang$maxFixedArity = 2;
G__16043.cljs$lang$applyTo = (function (arglist__16045){
var c1 = cljs.core.first(arglist__16045);
arglist__16045 = cljs.core.next(arglist__16045);
var c2 = cljs.core.first(arglist__16045);
var colls = cljs.core.rest(arglist__16045);
return G__16043__delegate(c1,c2,colls);
});
G__16043.cljs$core$IFn$_invoke$arity$variadic = G__16043__delegate;
return G__16043;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__16046 = null;
if (arguments.length > 2) {
var G__16047__i = 0, G__16047__a = new Array(arguments.length -  2);
while (G__16047__i < G__16047__a.length) {G__16047__a[G__16047__i] = arguments[G__16047__i + 2]; ++G__16047__i;}
G__16046 = new cljs.core.IndexedSeq(G__16047__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__16046);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__16062 = null;
var G__16062__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16062__1 = (function (result){
var G__16055 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16055) : rf.call(null,G__16055));
});
var G__16062__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__16056 = result;
var G__16057 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16056,G__16057) : rf.call(null,G__16056,G__16057));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__16058 = sepr;
var G__16059 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16058,G__16059) : rf.call(null,G__16058,G__16059));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__16060 = result;
var G__16061 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16060,G__16061) : rf.call(null,G__16060,G__16061));
}
});
G__16062 = function(result,input){
switch(arguments.length){
case 0:
return G__16062__0.call(this);
case 1:
return G__16062__1.call(this,result);
case 2:
return G__16062__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16062.cljs$core$IFn$_invoke$arity$0 = G__16062__0;
G__16062.cljs$core$IFn$_invoke$arity$1 = G__16062__1;
G__16062.cljs$core$IFn$_invoke$arity$2 = G__16062__2;
return G__16062;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__16071__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__16071 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__16072__i = 0, G__16072__a = new Array(arguments.length -  1);
while (G__16072__i < G__16072__a.length) {G__16072__a[G__16072__i] = arguments[G__16072__i + 1]; ++G__16072__i;}
  colls = new cljs.core.IndexedSeq(G__16072__a,0);
} 
return G__16071__delegate.call(this,f,colls);};
G__16071.cljs$lang$maxFixedArity = 1;
G__16071.cljs$lang$applyTo = (function (arglist__16073){
var f = cljs.core.first(arglist__16073);
var colls = cljs.core.rest(arglist__16073);
return G__16071__delegate(f,colls);
});
G__16071.cljs$core$IFn$_invoke$arity$variadic = G__16071__delegate;
return G__16071;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__16074 = null;
if (arguments.length > 1) {
var G__16075__i = 0, G__16075__a = new Array(arguments.length -  1);
while (G__16075__i < G__16075__a.length) {G__16075__a[G__16075__i] = arguments[G__16075__i + 1]; ++G__16075__i;}
G__16074 = new cljs.core.IndexedSeq(G__16075__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16074);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__16094 = null;
var G__16094__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16094__1 = (function (result){
var G__16088 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16088) : rf.call(null,G__16088));
});
var G__16094__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16089 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16089) : pred.call(null,G__16089));
})())){
var G__16090 = result;
var G__16091 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16090,G__16091) : rf.call(null,G__16090,G__16091));
} else {
return result;
}
});
G__16094 = function(result,input){
switch(arguments.length){
case 0:
return G__16094__0.call(this);
case 1:
return G__16094__1.call(this,result);
case 2:
return G__16094__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16094.cljs$core$IFn$_invoke$arity$0 = G__16094__0;
G__16094.cljs$core$IFn$_invoke$arity$1 = G__16094__1;
G__16094.cljs$core$IFn$_invoke$arity$2 = G__16094__2;
return G__16094;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4646__auto___16095 = size;
var i_16096 = (0);
while(true){
if((i_16096 < n__4646__auto___16095)){
if(cljs.core.truth_((function (){var G__16092 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16096);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16092) : pred.call(null,G__16092));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_16096));
} else {
}

var G__16097 = (i_16096 + (1));
i_16096 = G__16097;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__16093 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16093) : pred.call(null,G__16093));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__16104 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__16104) : branch_QMARK_.call(null,G__16104));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__16105 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__16105) : children.call(null,G__16105));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__16106_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__16106_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__16109 = to;
if(G__16109){
var bit__4433__auto__ = (G__16109.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4433__auto__) || (G__16109.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__16110 = to;
if(G__16110){
var bit__4433__auto__ = (G__16110.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4433__auto__) || (G__16110.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__16112 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16112) : f.call(null,G__16112));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__16113__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__16113 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__16114__i = 0, G__16114__a = new Array(arguments.length -  4);
while (G__16114__i < G__16114__a.length) {G__16114__a[G__16114__i] = arguments[G__16114__i + 4]; ++G__16114__i;}
  colls = new cljs.core.IndexedSeq(G__16114__a,0);
} 
return G__16113__delegate.call(this,f,c1,c2,c3,colls);};
G__16113.cljs$lang$maxFixedArity = 4;
G__16113.cljs$lang$applyTo = (function (arglist__16115){
var f = cljs.core.first(arglist__16115);
arglist__16115 = cljs.core.next(arglist__16115);
var c1 = cljs.core.first(arglist__16115);
arglist__16115 = cljs.core.next(arglist__16115);
var c2 = cljs.core.first(arglist__16115);
arglist__16115 = cljs.core.next(arglist__16115);
var c3 = cljs.core.first(arglist__16115);
var colls = cljs.core.rest(arglist__16115);
return G__16113__delegate(f,c1,c2,c3,colls);
});
G__16113.cljs$core$IFn$_invoke$arity$variadic = G__16113__delegate;
return G__16113;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__16116 = null;
if (arguments.length > 4) {
var G__16117__i = 0, G__16117__a = new Array(arguments.length -  4);
while (G__16117__i < G__16117__a.length) {G__16117__a[G__16117__i] = arguments[G__16117__i + 4]; ++G__16117__i;}
G__16116 = new cljs.core.IndexedSeq(G__16117__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__16116);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__16119 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16119) : pred.call(null,G__16119));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__16134 = m__$1;
if(G__16134){
var bit__4440__auto__ = (G__16134.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4440__auto__) || (G__16134.cljs$core$ILookup$)){
return true;
} else {
if((!G__16134.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16134);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__16134);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__16135 = sentinel;
var G__16136 = m__$2;
var G__16137 = cljs.core.next(ks__$1);
sentinel = G__16135;
m__$1 = G__16136;
ks__$1 = G__16137;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__16138,v){
var vec__16143 = p__16138;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16143,(0),null);
var ks = cljs.core.nthnext(vec__16143,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__16144,f){
var vec__16182 = p__16144;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16182,(0),null);
var ks = cljs.core.nthnext(vec__16182,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16183 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16183) : f.call(null,G__16183));
})());
}
});
var update_in__4 = (function (m,p__16145,f,a){
var vec__16184 = p__16145;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16184,(0),null);
var ks = cljs.core.nthnext(vec__16184,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16185 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16186 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16185,G__16186) : f.call(null,G__16185,G__16186));
})());
}
});
var update_in__5 = (function (m,p__16146,f,a,b){
var vec__16187 = p__16146;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16187,(0),null);
var ks = cljs.core.nthnext(vec__16187,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16188 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16189 = a;
var G__16190 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16188,G__16189,G__16190) : f.call(null,G__16188,G__16189,G__16190));
})());
}
});
var update_in__6 = (function (m,p__16147,f,a,b,c){
var vec__16191 = p__16147;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16191,(0),null);
var ks = cljs.core.nthnext(vec__16191,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16192 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16193 = a;
var G__16194 = b;
var G__16195 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16192,G__16193,G__16194,G__16195) : f.call(null,G__16192,G__16193,G__16194,G__16195));
})());
}
});
var update_in__7 = (function() { 
var G__16197__delegate = function (m,p__16148,f,a,b,c,args){
var vec__16196 = p__16148;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16196,(0),null);
var ks = cljs.core.nthnext(vec__16196,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__16197 = function (m,p__16148,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__16198__i = 0, G__16198__a = new Array(arguments.length -  6);
while (G__16198__i < G__16198__a.length) {G__16198__a[G__16198__i] = arguments[G__16198__i + 6]; ++G__16198__i;}
  args = new cljs.core.IndexedSeq(G__16198__a,0);
} 
return G__16197__delegate.call(this,m,p__16148,f,a,b,c,args);};
G__16197.cljs$lang$maxFixedArity = 6;
G__16197.cljs$lang$applyTo = (function (arglist__16199){
var m = cljs.core.first(arglist__16199);
arglist__16199 = cljs.core.next(arglist__16199);
var p__16148 = cljs.core.first(arglist__16199);
arglist__16199 = cljs.core.next(arglist__16199);
var f = cljs.core.first(arglist__16199);
arglist__16199 = cljs.core.next(arglist__16199);
var a = cljs.core.first(arglist__16199);
arglist__16199 = cljs.core.next(arglist__16199);
var b = cljs.core.first(arglist__16199);
arglist__16199 = cljs.core.next(arglist__16199);
var c = cljs.core.first(arglist__16199);
var args = cljs.core.rest(arglist__16199);
return G__16197__delegate(m,p__16148,f,a,b,c,args);
});
G__16197.cljs$core$IFn$_invoke$arity$variadic = G__16197__delegate;
return G__16197;
})()
;
update_in = function(m,p__16148,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__16148,f);
case 4:
return update_in__4.call(this,m,p__16148,f,a);
case 5:
return update_in__5.call(this,m,p__16148,f,a,b);
case 6:
return update_in__6.call(this,m,p__16148,f,a,b,c);
default:
var G__16200 = null;
if (arguments.length > 6) {
var G__16201__i = 0, G__16201__a = new Array(arguments.length -  6);
while (G__16201__i < G__16201__a.length) {G__16201__a[G__16201__i] = arguments[G__16201__i + 6]; ++G__16201__i;}
G__16200 = new cljs.core.IndexedSeq(G__16201__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__16148,f,a,b,c, G__16200);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16212 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16212) : f.call(null,G__16212));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16213 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16214 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16213,G__16214) : f.call(null,G__16213,G__16214));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16215 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16216 = x;
var G__16217 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16215,G__16216,G__16217) : f.call(null,G__16215,G__16216,G__16217));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16218 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16219 = x;
var G__16220 = y;
var G__16221 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16218,G__16219,G__16220,G__16221) : f.call(null,G__16218,G__16219,G__16220,G__16221));
})());
});
var update__7 = (function() { 
var G__16222__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__16222 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__16223__i = 0, G__16223__a = new Array(arguments.length -  6);
while (G__16223__i < G__16223__a.length) {G__16223__a[G__16223__i] = arguments[G__16223__i + 6]; ++G__16223__i;}
  more = new cljs.core.IndexedSeq(G__16223__a,0);
} 
return G__16222__delegate.call(this,m,k,f,x,y,z,more);};
G__16222.cljs$lang$maxFixedArity = 6;
G__16222.cljs$lang$applyTo = (function (arglist__16224){
var m = cljs.core.first(arglist__16224);
arglist__16224 = cljs.core.next(arglist__16224);
var k = cljs.core.first(arglist__16224);
arglist__16224 = cljs.core.next(arglist__16224);
var f = cljs.core.first(arglist__16224);
arglist__16224 = cljs.core.next(arglist__16224);
var x = cljs.core.first(arglist__16224);
arglist__16224 = cljs.core.next(arglist__16224);
var y = cljs.core.first(arglist__16224);
arglist__16224 = cljs.core.next(arglist__16224);
var z = cljs.core.first(arglist__16224);
var more = cljs.core.rest(arglist__16224);
return G__16222__delegate(m,k,f,x,y,z,more);
});
G__16222.cljs$core$IFn$_invoke$arity$variadic = G__16222__delegate;
return G__16222;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__16225 = null;
if (arguments.length > 6) {
var G__16226__i = 0, G__16226__a = new Array(arguments.length -  6);
while (G__16226__i < G__16226__a.length) {G__16226__a[G__16226__i] = arguments[G__16226__i + 6]; ++G__16226__i;}
G__16225 = new cljs.core.IndexedSeq(G__16226__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__16225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__16227 = (ll - (5));
var G__16228 = r;
ll = G__16227;
ret = G__16228;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16233 = cljs.core.pv_aget(node,(0));
var G__16234 = (level - (5));
node = G__16233;
level = G__16234;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__16235 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__16236 = (level - (5));
node = G__16235;
level = G__16236;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16246 = init__$2;
var G__16247 = (j + i);
var G__16248 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16246,G__16247,G__16248) : f.call(null,G__16246,G__16247,G__16248));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16259 = (j + (1));
var G__16260 = init__$3;
j = G__16259;
init__$2 = G__16260;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16249 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16249) : cljs.core.deref.call(null,G__16249));
} else {
var G__16261 = (i + len);
var G__16262 = init__$2;
i = G__16261;
init__$1 = G__16262;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__16250 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__16250) : cljs.core.tv_editable_root.call(null,G__16250));
})(),(function (){var G__16251 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__16251) : cljs.core.tv_editable_tail.call(null,G__16251));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__16252 = init__$2;
var G__16253 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16252,G__16253) : f.call(null,G__16252,G__16253));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__16263 = (j + (1));
var G__16264 = init__$3;
j = G__16263;
init__$2 = G__16264;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16254 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16254) : cljs.core.deref.call(null,G__16254));
} else {
var G__16265 = (i + len);
var G__16266 = init__$2;
i = G__16265;
init__$1 = G__16266;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__16255 = coll__$1;
var G__16256 = cljs.core.first_array_for_longvec(coll__$1);
var G__16257 = (0);
var G__16258 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16255,G__16256,G__16257,G__16258) : cljs.core.chunked_seq.call(null,G__16255,G__16256,G__16257,G__16258));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4646__auto___16267 = len;
var i_16268 = (0);
while(true){
if((i_16268 < n__4646__auto___16267)){
(new_tail[i_16268] = (self__.tail[i_16268]));

var G__16269 = (i_16268 + (1));
i_16268 = G__16269;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__16270 = null;
var G__16270__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16270__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16270 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16270__2.call(this,self__,k);
case 3:
return G__16270__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16270.cljs$core$IFn$_invoke$arity$2 = G__16270__2;
G__16270.cljs$core$IFn$_invoke$arity$3 = G__16270__3;
return G__16270;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args16245){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16245)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__16271 = (i + (1));
var G__16272 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__16271;
out = G__16272;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16273__i = 0, G__16273__a = new Array(arguments.length -  0);
while (G__16273__i < G__16273__a.length) {G__16273__a[G__16273__i] = arguments[G__16273__i + 0]; ++G__16273__i;}
  args = new cljs.core.IndexedSeq(G__16273__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__16274){
var args = cljs.core.seq(arglist__16274);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16275 = self__.vec;
var G__16276 = self__.node;
var G__16277 = self__.i;
var G__16278 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16275,G__16276,G__16277,G__16278) : cljs.core.chunked_seq.call(null,G__16275,G__16276,G__16277,G__16278));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__16279 = self__.vec;
var G__16280 = (self__.i + self__.off);
var G__16281 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16279,G__16280,G__16281) : cljs.core.subvec.call(null,G__16279,G__16280,G__16281));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__16282 = self__.vec;
var G__16283 = (self__.i + self__.off);
var G__16284 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16282,G__16283,G__16284) : cljs.core.subvec.call(null,G__16282,G__16283,G__16284));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__16285 = self__.vec;
var G__16286 = self__.node;
var G__16287 = self__.i;
var G__16288 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16285,G__16286,G__16287,G__16288) : cljs.core.chunked_seq.call(null,G__16285,G__16286,G__16287,G__16288));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16289 = self__.vec;
var G__16290 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16291 = end;
var G__16292 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16289,G__16290,G__16291,G__16292) : cljs.core.chunked_seq.call(null,G__16289,G__16290,G__16291,G__16292));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__16293 = self__.vec;
var G__16294 = self__.node;
var G__16295 = self__.i;
var G__16296 = self__.off;
var G__16297 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__16293,G__16294,G__16295,G__16296,G__16297) : cljs.core.chunked_seq.call(null,G__16293,G__16294,G__16295,G__16296,G__16297));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__16298 = self__.vec;
var G__16299 = cljs.core.unchecked_array_for(self__.vec,end);
var G__16300 = end;
var G__16301 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16298,G__16299,G__16300,G__16301) : cljs.core.chunked_seq.call(null,G__16298,G__16299,G__16300,G__16301));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__16303 = self__.meta;
var G__16304 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__16305 = self__.start;
var G__16306 = (function (){var x__4076__auto__ = self__.end;
var y__4077__auto__ = (v_pos + (1));
return ((x__4076__auto__ > y__4077__auto__) ? x__4076__auto__ : y__4077__auto__);
})();
var G__16307 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16303,G__16304,G__16305,G__16306,G__16307) : cljs.core.build_subvec.call(null,G__16303,G__16304,G__16305,G__16306,G__16307));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__16308 = self__.meta;
var G__16309 = self__.v;
var G__16310 = self__.start;
var G__16311 = (self__.end - (1));
var G__16312 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16308,G__16309,G__16310,G__16311,G__16312) : cljs.core.build_subvec.call(null,G__16308,G__16309,G__16310,G__16311,G__16312));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__16314 = meta__$1;
var G__16315 = self__.v;
var G__16316 = self__.start;
var G__16317 = self__.end;
var G__16318 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16314,G__16315,G__16316,G__16317,G__16318) : cljs.core.build_subvec.call(null,G__16314,G__16315,G__16316,G__16317,G__16318));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__16319 = self__.meta;
var G__16320 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__16321 = self__.start;
var G__16322 = (self__.end + (1));
var G__16323 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16319,G__16320,G__16321,G__16322,G__16323) : cljs.core.build_subvec.call(null,G__16319,G__16320,G__16321,G__16322,G__16323));
});

cljs.core.Subvec.prototype.call = (function() {
var G__16324 = null;
var G__16324__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__16324__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__16324 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16324__2.call(this,self__,k);
case 3:
return G__16324__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16324.cljs$core$IFn$_invoke$arity$2 = G__16324__2;
G__16324.cljs$core$IFn$_invoke$arity$3 = G__16324__3;
return G__16324;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args16302){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16302)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__16325 = meta;
var G__16326 = v.v;
var G__16327 = (v.start + start);
var G__16328 = (v.start + end);
var G__16329 = __hash;
meta = G__16325;
v = G__16326;
start = G__16327;
end = G__16328;
__hash = G__16329;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj16336 = {};
return obj16336;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__16344 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__16345 = (level - (5));
node = G__16344;
level = G__16345;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__16349 = null;
var G__16349__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16349__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16349 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16349__2.call(this,self__,k);
case 3:
return G__16349__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16349.cljs$core$IFn$_invoke$arity$2 = G__16349__2;
G__16349.cljs$core$IFn$_invoke$arity$3 = G__16349__3;
return G__16349;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args16346){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16346)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3759__auto__ = self__.front;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3759__auto__ = self__.rear;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__16350 = (i + incr);
i = G__16350;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__16351 = (i + (1));
var G__16352 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__16351;
out = G__16352;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj16356 = {};
return obj16356;
})();
var l = ks.length;
var i_16357 = (0);
while(true){
if((i_16357 < l)){
var k_16358 = (ks[i_16357]);
(new_obj[k_16358] = (obj[k_16358]));

var G__16359 = (i_16357 + (1));
i_16357 = G__16359;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__16363 = k;
return goog.isString(G__16363);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__16364 = init__$1;
var G__16365 = k;
var G__16366 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16364,G__16365,G__16366) : f.call(null,G__16364,G__16365,G__16366));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16367 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16367) : cljs.core.deref.call(null,G__16367));
} else {
var G__16373 = cljs.core.rest(keys__$1);
var G__16374 = init__$2;
keys__$1 = G__16373;
init__$1 = G__16374;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__16369 = k;
return goog.isString(G__16369);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__16370 = k;
return goog.isString(G__16370);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3747__auto__ = (function (){var G__16372 = k;
return goog.isString(G__16372);
})();
if(cljs.core.truth_(and__3747__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3747__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__16360_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__16360_SHARP_,(self__.strobj[p1__16360_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__16375 = null;
var G__16375__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16375__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16375 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16375__2.call(this,self__,k);
case 3:
return G__16375__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16375.cljs$core$IFn$_invoke$arity$2 = G__16375__2;
G__16375.cljs$core$IFn$_invoke$arity$3 = G__16375__3;
return G__16375;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args16361){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16361)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj16377 = {};
return obj16377;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__16378 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16378,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16378,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__16379 = (i + (2));
i = G__16379;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__16380 = (i + (2));
i = G__16380;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__16381 = (i + (2));
i = G__16381;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__16382 = (i + (2));
i = G__16382;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__16383 = (i + (2));
i = G__16383;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3759__auto__ = (function (){var G__16387 = k;
return goog.isString(G__16387);
})();
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_16388 = (0);
while(true){
if((i_16388 < l)){
(narr[i_16388] = (arr[i_16388]));

var G__16389 = (i_16388 + (1));
i_16388 = G__16389;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16391 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16391) : cljs.core.keys.call(null,G__16391));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16392 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16392) : cljs.core.vals.call(null,G__16392));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16393 = cljs.core.seq(coll);
var chunk__16394 = null;
var count__16395 = (0);
var i__16396 = (0);
while(true){
if((i__16396 < count__16395)){
var vec__16397 = chunk__16394.cljs$core$IIndexed$_nth$arity$2(null,i__16396);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16397,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16397,(1),null);
var G__16398_16411 = v;
var G__16399_16412 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16398_16411,G__16399_16412) : f.call(null,G__16398_16411,G__16399_16412));

var G__16413 = seq__16393;
var G__16414 = chunk__16394;
var G__16415 = count__16395;
var G__16416 = (i__16396 + (1));
seq__16393 = G__16413;
chunk__16394 = G__16414;
count__16395 = G__16415;
i__16396 = G__16416;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16393);
if(temp__4126__auto__){
var seq__16393__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16393__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__16393__$1);
var G__16417 = cljs.core.chunk_rest(seq__16393__$1);
var G__16418 = c__4546__auto__;
var G__16419 = cljs.core.count(c__4546__auto__);
var G__16420 = (0);
seq__16393 = G__16417;
chunk__16394 = G__16418;
count__16395 = G__16419;
i__16396 = G__16420;
continue;
} else {
var vec__16400 = cljs.core.first(seq__16393__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16400,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16400,(1),null);
var G__16401_16421 = v;
var G__16402_16422 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16401_16421,G__16402_16422) : f.call(null,G__16401_16421,G__16402_16422));

var G__16423 = cljs.core.next(seq__16393__$1);
var G__16424 = null;
var G__16425 = (0);
var G__16426 = (0);
seq__16393 = G__16423;
chunk__16394 = G__16424;
count__16395 = G__16425;
i__16396 = G__16426;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__16403 = init__$1;
var G__16404 = (self__.arr[i]);
var G__16405 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16403,G__16404,G__16405) : f.call(null,G__16403,G__16404,G__16405));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16406 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16406) : cljs.core.deref.call(null,G__16406));
} else {
var G__16427 = (i + (2));
var G__16428 = init__$2;
i = G__16427;
init__$1 = G__16428;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__16407 = other;
if(G__16407){
var bit__4433__auto__ = (G__16407.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4433__auto__) || (G__16407.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__16429 = (i + (2));
i = G__16429;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj16409 = {};
return obj16409;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__16430 = (s + (2));
var G__16431 = d;
s = G__16430;
d = G__16431;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__16432 = (s + (2));
var G__16433 = (d + (2));
s = G__16432;
d = G__16433;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__16410 = cljs.core.aclone(self__.arr);
(G__16410[(idx + (1))] = v);

return G__16410;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16434 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16435 = cljs.core.next(es);
ret = G__16434;
es = G__16435;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__16436 = null;
var G__16436__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16436__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16436 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16436__2.call(this,self__,k);
case 3:
return G__16436__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16436.cljs$core$IFn$_invoke$arity$2 = G__16436__2;
G__16436.cljs$core$IFn$_invoke$arity$3 = G__16436__3;
return G__16436;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args16390){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16390)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16437 = (i + (2));
var G__16438 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16437;
ret = G__16438;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__16439_16447 = self__.arr;
G__16439_16447.pop();

G__16439_16447.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__16440 = self__.len;
var G__16441 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__16440,G__16441) : cljs.core.array__GT_transient_hash_map.call(null,G__16440,G__16441));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__16442 = o;
if(G__16442){
var bit__4440__auto__ = (G__16442.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4440__auto__) || (G__16442.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16442.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16442);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16442);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__16443 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16443) : cljs.core.key.call(null,G__16443));
})(),(function (){var G__16444 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16444) : cljs.core.val.call(null,G__16444));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__16448 = cljs.core.next(es);
var G__16449 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__16445 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16445) : cljs.core.key.call(null,G__16445));
})(),(function (){var G__16446 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16446) : cljs.core.val.call(null,G__16446));
})());
es = G__16448;
tcoll__$2 = G__16449;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__16450 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__16451 = (i + (2));
out = G__16450;
i = G__16451;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__16454 = cljs.core.aclone(arr);
(G__16454[i] = a);

return G__16454;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__16455 = cljs.core.aclone(arr);
(G__16455[i] = a);

(G__16455[j] = b);

return G__16455;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__16460 = init__$1;
var G__16461 = k;
var G__16462 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16460,G__16461,G__16462) : f.call(null,G__16460,G__16461,G__16462));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16463 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16463) : cljs.core.deref.call(null,G__16463));
} else {
var G__16464 = (i + (2));
var G__16465 = init__$2;
i = G__16464;
init__$1 = G__16465;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16466 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16466) : cljs.core.create_inode_seq.call(null,G__16466));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16480 = (0);
var j_16481 = (0);
while(true){
if((i_16480 < (32))){
if((((self__.bitmap >>> i_16480) & (1)) === (0))){
var G__16482 = (i_16480 + (1));
var G__16483 = j_16481;
i_16480 = G__16482;
j_16481 = G__16483;
continue;
} else {
(nodes[i_16480] = ((!(((self__.arr[j_16481]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_16481])),(self__.arr[j_16481]),(self__.arr[(j_16481 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16481 + (1))])));

var G__16484 = (i_16480 + (1));
var G__16485 = (j_16481 + (2));
i_16480 = G__16484;
j_16481 = G__16485;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16467 = edit__$1;
var G__16468 = (shift + (5));
var G__16469 = key_or_nil;
var G__16470 = val_or_node;
var G__16471 = hash;
var G__16472 = key;
var G__16473 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473) : cljs.core.create_node.call(null,G__16467,G__16468,G__16469,G__16470,G__16471,G__16472,G__16473));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_16486 = (0);
var j_16487 = (0);
while(true){
if((i_16486 < (32))){
if((((self__.bitmap >>> i_16486) & (1)) === (0))){
var G__16488 = (i_16486 + (1));
var G__16489 = j_16487;
i_16486 = G__16488;
j_16487 = G__16489;
continue;
} else {
(nodes[i_16486] = ((!(((self__.arr[j_16487]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_16487])),(self__.arr[j_16487]),(self__.arr[(j_16487 + (1))]),added_leaf_QMARK_):(self__.arr[(j_16487 + (1))])));

var G__16490 = (i_16486 + (1));
var G__16491 = (j_16487 + (2));
i_16486 = G__16490;
j_16487 = G__16491;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__16474 = (shift + (5));
var G__16475 = key_or_nil;
var G__16476 = val_or_node;
var G__16477 = hash;
var G__16478 = key;
var G__16479 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__16474,G__16475,G__16476,G__16477,G__16478,G__16479) : cljs.core.create_node.call(null,G__16474,G__16475,G__16476,G__16477,G__16478,G__16479));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__16492 = (i + (1));
var G__16493 = (j + (2));
var G__16494 = (bitmap | ((1) << i));
i = G__16492;
j = G__16493;
bitmap = G__16494;
continue;
} else {
var G__16495 = (i + (1));
var G__16496 = j;
var G__16497 = bitmap;
i = G__16495;
j = G__16496;
bitmap = G__16497;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16498 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__16498) : cljs.core.create_array_node_seq.call(null,G__16498));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16499 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16499) : cljs.core.deref.call(null,G__16499));
} else {
var G__16500 = (i + (1));
var G__16501 = init__$2;
i = G__16500;
init__$1 = G__16501;
continue;
}
} else {
var G__16502 = (i + (1));
var G__16503 = init__$1;
i = G__16502;
init__$1 = G__16503;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__16504 = (i + (2));
i = G__16504;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__16505 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16505) : cljs.core.create_inode_seq.call(null,G__16505));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__16506 = self__.nodes;
var G__16507 = (self__.i + (2));
var G__16508 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16506,G__16507,G__16508) : cljs.core.create_inode_seq.call(null,G__16506,G__16507,G__16508));
} else {
var G__16509 = self__.nodes;
var G__16510 = self__.i;
var G__16511 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16509,G__16510,G__16511) : cljs.core.create_inode_seq.call(null,G__16509,G__16510,G__16511));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__16515 = (j + (2));
j = G__16515;
continue;
}
} else {
var G__16516 = (j + (2));
j = G__16516;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__16517 = null;
var G__16518 = self__.nodes;
var G__16519 = self__.i;
var G__16520 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__16517,G__16518,G__16519,G__16520) : cljs.core.create_array_node_seq.call(null,G__16517,G__16518,G__16519,G__16520));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__16525 = (j + (1));
j = G__16525;
continue;
}
} else {
var G__16526 = (j + (1));
j = G__16526;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16528 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16528) : cljs.core.keys.call(null,G__16528));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16529 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16529) : cljs.core.vals.call(null,G__16529));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16530 = cljs.core.seq(coll);
var chunk__16531 = null;
var count__16532 = (0);
var i__16533 = (0);
while(true){
if((i__16533 < count__16532)){
var vec__16534 = chunk__16531.cljs$core$IIndexed$_nth$arity$2(null,i__16533);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16534,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16534,(1),null);
var G__16535_16546 = v;
var G__16536_16547 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16535_16546,G__16536_16547) : f.call(null,G__16535_16546,G__16536_16547));

var G__16548 = seq__16530;
var G__16549 = chunk__16531;
var G__16550 = count__16532;
var G__16551 = (i__16533 + (1));
seq__16530 = G__16548;
chunk__16531 = G__16549;
count__16532 = G__16550;
i__16533 = G__16551;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16530);
if(temp__4126__auto__){
var seq__16530__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16530__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__16530__$1);
var G__16552 = cljs.core.chunk_rest(seq__16530__$1);
var G__16553 = c__4546__auto__;
var G__16554 = cljs.core.count(c__4546__auto__);
var G__16555 = (0);
seq__16530 = G__16552;
chunk__16531 = G__16553;
count__16532 = G__16554;
i__16533 = G__16555;
continue;
} else {
var vec__16537 = cljs.core.first(seq__16530__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16537,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16537,(1),null);
var G__16538_16556 = v;
var G__16539_16557 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16538_16556,G__16539_16557) : f.call(null,G__16538_16556,G__16539_16557));

var G__16558 = cljs.core.next(seq__16530__$1);
var G__16559 = null;
var G__16560 = (0);
var G__16561 = (0);
seq__16530 = G__16558;
chunk__16531 = G__16559;
count__16532 = G__16560;
i__16533 = G__16561;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__16540 = init;
var G__16541 = null;
var G__16542 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16540,G__16541,G__16542) : f.call(null,G__16540,G__16541,G__16542));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16543 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16543) : cljs.core.deref.call(null,G__16543));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj16545 = {};
return obj16545;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16562 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16563 = cljs.core.next(es);
ret = G__16562;
es = G__16563;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__16564 = null;
var G__16564__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16564__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16564 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16564__2.call(this,self__,k);
case 3:
return G__16564__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16564.cljs$core$IFn$_invoke$arity$2 = G__16564__2;
G__16564.cljs$core$IFn$_invoke$arity$3 = G__16564__3;
return G__16564;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args16527){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16527)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16565 = (i + (2));
var G__16566 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__16565;
ret = G__16566;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__16567 = (i + (1));
var G__16568 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__16567;
out = G__16568;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__16569 = o;
if(G__16569){
var bit__4440__auto__ = (G__16569.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4440__auto__) || (G__16569.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__16569.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16569);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__16569);
}
})()){
return tcoll.assoc_BANG_((function (){var G__16570 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16570) : cljs.core.key.call(null,G__16570));
})(),(function (){var G__16571 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16571) : cljs.core.val.call(null,G__16571));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__16574 = cljs.core.next(es);
var G__16575 = tcoll__$1.assoc_BANG_((function (){var G__16572 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16572) : cljs.core.key.call(null,G__16572));
})(),(function (){var G__16573 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16573) : cljs.core.val.call(null,G__16573));
})());
es = G__16574;
tcoll__$1 = G__16575;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__16576 = ((ascending_QMARK_)?t.left:t.right);
var G__16577 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__16576;
stack__$1 = G__16577;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__16590 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16590) : cljs.core.deref.call(null,G__16590));
} else {
var init__$2 = (function (){var G__16591 = init__$1;
var G__16592 = node.key;
var G__16593 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16591,G__16592,G__16593) : f.call(null,G__16591,G__16592,G__16593));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__16594 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16594) : cljs.core.deref.call(null,G__16594));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__16595 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16595) : cljs.core.deref.call(null,G__16595));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__16597 = null;
var G__16597__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16597__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16597 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16597__2.call(this,self__,k);
case 3:
return G__16597__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16597.cljs$core$IFn$_invoke$arity$2 = G__16597__2;
G__16597.cljs$core$IFn$_invoke$arity$3 = G__16597__3;
return G__16597;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args16596){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16596)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__16599 = null;
var G__16599__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16599__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16599 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16599__2.call(this,self__,k);
case 3:
return G__16599__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16599.cljs$core$IFn$_invoke$arity$2 = G__16599__2;
G__16599.cljs$core$IFn$_invoke$arity$3 = G__16599__3;
return G__16599;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args16598){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16598)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__16612 = k;
var G__16613 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16612,G__16613) : comp.call(null,G__16612,G__16613));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__16632 = k;
var G__16633 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16632,G__16633) : comp.call(null,G__16632,G__16633));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__16644 = k;
var G__16645 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16644,G__16645) : comp.call(null,G__16644,G__16645));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16647 = cljs.core.seq(coll);
var chunk__16648 = null;
var count__16649 = (0);
var i__16650 = (0);
while(true){
if((i__16650 < count__16649)){
var vec__16651 = chunk__16648.cljs$core$IIndexed$_nth$arity$2(null,i__16650);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16651,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16651,(1),null);
var G__16652_16664 = v;
var G__16653_16665 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16652_16664,G__16653_16665) : f.call(null,G__16652_16664,G__16653_16665));

var G__16666 = seq__16647;
var G__16667 = chunk__16648;
var G__16668 = count__16649;
var G__16669 = (i__16650 + (1));
seq__16647 = G__16666;
chunk__16648 = G__16667;
count__16649 = G__16668;
i__16650 = G__16669;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16647);
if(temp__4126__auto__){
var seq__16647__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16647__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__16647__$1);
var G__16670 = cljs.core.chunk_rest(seq__16647__$1);
var G__16671 = c__4546__auto__;
var G__16672 = cljs.core.count(c__4546__auto__);
var G__16673 = (0);
seq__16647 = G__16670;
chunk__16648 = G__16671;
count__16649 = G__16672;
i__16650 = G__16673;
continue;
} else {
var vec__16654 = cljs.core.first(seq__16647__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16654,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16654,(1),null);
var G__16655_16674 = v;
var G__16656_16675 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16655_16674,G__16656_16675) : f.call(null,G__16655_16674,G__16656_16675));

var G__16676 = cljs.core.next(seq__16647__$1);
var G__16677 = null;
var G__16678 = (0);
var G__16679 = (0);
seq__16647 = G__16676;
chunk__16648 = G__16677;
count__16649 = G__16678;
i__16650 = G__16679;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16657 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16657) : cljs.core.keys.call(null,G__16657));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__16658 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16658) : cljs.core.vals.call(null,G__16658));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16659 = k;
var G__16660 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16659,G__16660) : self__.comp.call(null,G__16659,G__16660));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__16680 = t.left;
t = G__16680;
continue;
} else {
var G__16681 = t.right;
t = G__16681;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__16682 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__16683 = cljs.core.next(es);
ret = G__16682;
es = G__16683;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__16684 = null;
var G__16684__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16684__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16684 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16684__2.call(this,self__,k);
case 3:
return G__16684__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16684.cljs$core$IFn$_invoke$arity$2 = G__16684__2;
G__16684.cljs$core$IFn$_invoke$arity$3 = G__16684__3;
return G__16684;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args16646){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16646)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__16661 = k;
var G__16662 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16661,G__16662) : self__.comp.call(null,G__16661,G__16662));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__16685 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16686 = t.left;
stack = G__16685;
t = G__16686;
continue;
} else {
var G__16687 = stack;
var G__16688 = t.right;
stack = G__16687;
t = G__16688;
continue;
}
} else {
if((c > (0))){
var G__16689 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__16690 = t.right;
stack = G__16689;
t = G__16690;
continue;
} else {
var G__16691 = stack;
var G__16692 = t.left;
stack = G__16691;
t = G__16692;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__16663 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16663) : cljs.core.key.call(null,G__16663));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__16693 = cljs.core.nnext(in$);
var G__16694 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16693;
out = G__16694;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16695__i = 0, G__16695__a = new Array(arguments.length -  0);
while (G__16695__i < G__16695__a.length) {G__16695__a[G__16695__i] = arguments[G__16695__i + 0]; ++G__16695__i;}
  keyvals = new cljs.core.IndexedSeq(G__16695__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__16696){
var keyvals = cljs.core.seq(arglist__16696);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16697__i = 0, G__16697__a = new Array(arguments.length -  0);
while (G__16697__i < G__16697__a.length) {G__16697__a[G__16697__i] = arguments[G__16697__i + 0]; ++G__16697__i;}
  keyvals = new cljs.core.IndexedSeq(G__16697__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__16698){
var keyvals = cljs.core.seq(arglist__16698);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj16702 = {};
return obj16702;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__16703 = cljs.core.nnext(kvs);
kvs = G__16703;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16704__i = 0, G__16704__a = new Array(arguments.length -  0);
while (G__16704__i < G__16704__a.length) {G__16704__a[G__16704__i] = arguments[G__16704__i + 0]; ++G__16704__i;}
  keyvals = new cljs.core.IndexedSeq(G__16704__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__16705){
var keyvals = cljs.core.seq(arglist__16705);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__16706 = cljs.core.nnext(in$);
var G__16707 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16706;
out = G__16707;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__16708__i = 0, G__16708__a = new Array(arguments.length -  0);
while (G__16708__i < G__16708__a.length) {G__16708__a[G__16708__i] = arguments[G__16708__i + 0]; ++G__16708__i;}
  keyvals = new cljs.core.IndexedSeq(G__16708__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__16709){
var keyvals = cljs.core.seq(arglist__16709);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__16710 = cljs.core.nnext(in$);
var G__16711 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__16710;
out = G__16711;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__16712__i = 0, G__16712__a = new Array(arguments.length -  1);
while (G__16712__i < G__16712__a.length) {G__16712__a[G__16712__i] = arguments[G__16712__i + 1]; ++G__16712__i;}
  keyvals = new cljs.core.IndexedSeq(G__16712__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__16713){
var comparator = cljs.core.first(arglist__16713);
var keyvals = cljs.core.rest(arglist__16713);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16714 = self__.mseq;
if(G__16714){
var bit__4440__auto__ = (G__16714.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__16714.cljs$core$INext$)){
return true;
} else {
if((!G__16714.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16714);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16714);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16715 = self__.mseq;
if(G__16715){
var bit__4440__auto__ = (G__16715.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__16715.cljs$core$INext$)){
return true;
} else {
if((!G__16715.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16715);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16715);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16716 = self__.mseq;
if(G__16716){
var bit__4440__auto__ = (G__16716.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__16716.cljs$core$INext$)){
return true;
} else {
if((!G__16716.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16716);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16716);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__16717 = self__.mseq;
if(G__16717){
var bit__4440__auto__ = (G__16717.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4440__auto__) || (G__16717.cljs$core$INext$)){
return true;
} else {
if((!G__16717.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16717);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__16717);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__16718_SHARP_,p2__16719_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3759__auto__ = p1__16718_SHARP_;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__16719_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__16720__i = 0, G__16720__a = new Array(arguments.length -  0);
while (G__16720__i < G__16720__a.length) {G__16720__a[G__16720__i] = arguments[G__16720__i + 0]; ++G__16720__i;}
  maps = new cljs.core.IndexedSeq(G__16720__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__16721){
var maps = cljs.core.seq(arglist__16721);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__16724 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__16725 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16724,G__16725) : f.call(null,G__16724,G__16725));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3759__auto__ = m1;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__16726__i = 0, G__16726__a = new Array(arguments.length -  1);
while (G__16726__i < G__16726__a.length) {G__16726__a[G__16726__i] = arguments[G__16726__i + 1]; ++G__16726__i;}
  maps = new cljs.core.IndexedSeq(G__16726__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__16727){
var f = cljs.core.first(arglist__16727);
var maps = cljs.core.rest(arglist__16727);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__16728 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__16729 = cljs.core.next(keys);
ret = G__16728;
keys = G__16729;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16732 = cljs.core.seq(coll);
var chunk__16733 = null;
var count__16734 = (0);
var i__16735 = (0);
while(true){
if((i__16735 < count__16734)){
var vec__16736 = chunk__16733.cljs$core$IIndexed$_nth$arity$2(null,i__16735);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16736,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16736,(1),null);
var G__16737_16742 = v;
var G__16738_16743 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16737_16742,G__16738_16743) : f.call(null,G__16737_16742,G__16738_16743));

var G__16744 = seq__16732;
var G__16745 = chunk__16733;
var G__16746 = count__16734;
var G__16747 = (i__16735 + (1));
seq__16732 = G__16744;
chunk__16733 = G__16745;
count__16734 = G__16746;
i__16735 = G__16747;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16732);
if(temp__4126__auto__){
var seq__16732__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16732__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__16732__$1);
var G__16748 = cljs.core.chunk_rest(seq__16732__$1);
var G__16749 = c__4546__auto__;
var G__16750 = cljs.core.count(c__4546__auto__);
var G__16751 = (0);
seq__16732 = G__16748;
chunk__16733 = G__16749;
count__16734 = G__16750;
i__16735 = G__16751;
continue;
} else {
var vec__16739 = cljs.core.first(seq__16732__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16739,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16739,(1),null);
var G__16740_16752 = v;
var G__16741_16753 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16740_16752,G__16741_16753) : f.call(null,G__16740_16752,G__16741_16753));

var G__16754 = cljs.core.next(seq__16732__$1);
var G__16755 = null;
var G__16756 = (0);
var G__16757 = (0);
seq__16732 = G__16754;
chunk__16733 = G__16755;
count__16734 = G__16756;
i__16735 = G__16757;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16730_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16730_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__16758 = null;
var G__16758__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16758__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16758 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16758__2.call(this,self__,k);
case 3:
return G__16758__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16758.cljs$core$IFn$_invoke$arity$2 = G__16758__2;
G__16758.cljs$core$IFn$_invoke$arity$3 = G__16758__3;
return G__16758;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args16731){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16731)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__16759 = (i + (1));
var G__16760 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__16759;
out = G__16760;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__16761 = (i + (1));
var G__16762 = cljs.core._conj_BANG_(out,(items[i]));
i = G__16761;
out = G__16762;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__16764 = null;
var G__16764__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__16764__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__16764 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16764__2.call(this,self__,k);
case 3:
return G__16764__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16764.cljs$core$IFn$_invoke$arity$2 = G__16764__2;
G__16764.cljs$core$IFn$_invoke$arity$3 = G__16764__3;
return G__16764;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args16763){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16763)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__16767 = cljs.core.seq(coll);
var chunk__16768 = null;
var count__16769 = (0);
var i__16770 = (0);
while(true){
if((i__16770 < count__16769)){
var vec__16771 = chunk__16768.cljs$core$IIndexed$_nth$arity$2(null,i__16770);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16771,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16771,(1),null);
var G__16772_16777 = v;
var G__16773_16778 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16772_16777,G__16773_16778) : f.call(null,G__16772_16777,G__16773_16778));

var G__16779 = seq__16767;
var G__16780 = chunk__16768;
var G__16781 = count__16769;
var G__16782 = (i__16770 + (1));
seq__16767 = G__16779;
chunk__16768 = G__16780;
count__16769 = G__16781;
i__16770 = G__16782;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16767);
if(temp__4126__auto__){
var seq__16767__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16767__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__16767__$1);
var G__16783 = cljs.core.chunk_rest(seq__16767__$1);
var G__16784 = c__4546__auto__;
var G__16785 = cljs.core.count(c__4546__auto__);
var G__16786 = (0);
seq__16767 = G__16783;
chunk__16768 = G__16784;
count__16769 = G__16785;
i__16770 = G__16786;
continue;
} else {
var vec__16774 = cljs.core.first(seq__16767__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16774,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16774,(1),null);
var G__16775_16787 = v;
var G__16776_16788 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16775_16787,G__16776_16788) : f.call(null,G__16775_16787,G__16776_16788));

var G__16789 = cljs.core.next(seq__16767__$1);
var G__16790 = null;
var G__16791 = (0);
var G__16792 = (0);
seq__16767 = G__16789;
chunk__16768 = G__16790;
count__16769 = G__16791;
i__16770 = G__16792;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__16765_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__16765_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__16793 = null;
var G__16793__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__16793__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__16793 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__16793__2.call(this,self__,k);
case 3:
return G__16793__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16793.cljs$core$IFn$_invoke$arity$2 = G__16793__2;
G__16793.cljs$core$IFn$_invoke$arity$3 = G__16793__3;
return G__16793;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args16766){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16766)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4640__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4640__auto__.length)){
var G__16794 = (i + (1));
var G__16795 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__16794;
res = G__16795;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__16796 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__16797 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__16796;
out = G__16797;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__16798__delegate = function (keys){
return cljs.core.set(keys);
};
var G__16798 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16799__i = 0, G__16799__a = new Array(arguments.length -  0);
while (G__16799__i < G__16799__a.length) {G__16799__a[G__16799__i] = arguments[G__16799__i + 0]; ++G__16799__i;}
  keys = new cljs.core.IndexedSeq(G__16799__a,0);
} 
return G__16798__delegate.call(this,keys);};
G__16798.cljs$lang$maxFixedArity = 0;
G__16798.cljs$lang$applyTo = (function (arglist__16800){
var keys = cljs.core.seq(arglist__16800);
return G__16798__delegate(keys);
});
G__16798.cljs$core$IFn$_invoke$arity$variadic = G__16798__delegate;
return G__16798;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__16801 = null;
if (arguments.length > 0) {
var G__16802__i = 0, G__16802__a = new Array(arguments.length -  0);
while (G__16802__i < G__16802__a.length) {G__16802__a[G__16802__i] = arguments[G__16802__i + 0]; ++G__16802__i;}
G__16801 = new cljs.core.IndexedSeq(G__16802__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__16801);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__16803__i = 0, G__16803__a = new Array(arguments.length -  0);
while (G__16803__i < G__16803__a.length) {G__16803__a[G__16803__i] = arguments[G__16803__i + 0]; ++G__16803__i;}
  keys = new cljs.core.IndexedSeq(G__16803__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__16804){
var keys = cljs.core.seq(arglist__16804);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__16805__i = 0, G__16805__a = new Array(arguments.length -  1);
while (G__16805__i < G__16805__a.length) {G__16805__a[G__16805__i] = arguments[G__16805__i + 1]; ++G__16805__i;}
  keys = new cljs.core.IndexedSeq(G__16805__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__16806){
var comparator = cljs.core.first(arglist__16806);
var keys = cljs.core.rest(arglist__16806);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__16807_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16807_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__16807_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__16808_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__16808_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__16808_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__16829 = null;
var G__16829__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16829__1 = (function (result){
var G__16819 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16819) : rf.call(null,G__16819));
});
var G__16829__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__16820 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16820) : cljs.core.deref.call(null,G__16820));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__16821 = result;
var G__16822 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16821,G__16822) : rf.call(null,G__16821,G__16822));
}
});
G__16829 = function(result,input){
switch(arguments.length){
case 0:
return G__16829__0.call(this);
case 1:
return G__16829__1.call(this,result);
case 2:
return G__16829__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16829.cljs$core$IFn$_invoke$arity$0 = G__16829__0;
G__16829.cljs$core$IFn$_invoke$arity$1 = G__16829__1;
G__16829.cljs$core$IFn$_invoke$arity$2 = G__16829__2;
return G__16829;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__16827,seen__$1){
while(true){
var vec__16828 = p__16827;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16828,(0),null);
var xs__$1 = vec__16828;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__16830 = cljs.core.rest(s);
var G__16831 = seen__$1;
p__16827 = G__16830;
seen__$1 = G__16831;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__16832 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__16833 = cljs.core.next(s__$1);
ret = G__16832;
s__$1 = G__16833;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__16835 = x;
if(G__16835){
var bit__4433__auto__ = (G__16835.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4433__auto__) || (G__16835.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__16836 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__16837 = cljs.core.next(ks);
var G__16838 = cljs.core.next(vs);
map = G__16836;
ks = G__16837;
vs = G__16838;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__16849 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16849) : k.call(null,G__16849));
})() > (function (){var G__16850 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16850) : k.call(null,G__16850));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__16851__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16839_SHARP_,p2__16840_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__16839_SHARP_,p2__16840_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16851 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16852__i = 0, G__16852__a = new Array(arguments.length -  3);
while (G__16852__i < G__16852__a.length) {G__16852__a[G__16852__i] = arguments[G__16852__i + 3]; ++G__16852__i;}
  more = new cljs.core.IndexedSeq(G__16852__a,0);
} 
return G__16851__delegate.call(this,k,x,y,more);};
G__16851.cljs$lang$maxFixedArity = 3;
G__16851.cljs$lang$applyTo = (function (arglist__16853){
var k = cljs.core.first(arglist__16853);
arglist__16853 = cljs.core.next(arglist__16853);
var x = cljs.core.first(arglist__16853);
arglist__16853 = cljs.core.next(arglist__16853);
var y = cljs.core.first(arglist__16853);
var more = cljs.core.rest(arglist__16853);
return G__16851__delegate(k,x,y,more);
});
G__16851.cljs$core$IFn$_invoke$arity$variadic = G__16851__delegate;
return G__16851;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__16854 = null;
if (arguments.length > 3) {
var G__16855__i = 0, G__16855__a = new Array(arguments.length -  3);
while (G__16855__i < G__16855__a.length) {G__16855__a[G__16855__i] = arguments[G__16855__i + 3]; ++G__16855__i;}
G__16854 = new cljs.core.IndexedSeq(G__16855__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16854);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__16866 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16866) : k.call(null,G__16866));
})() < (function (){var G__16867 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__16867) : k.call(null,G__16867));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__16868__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16856_SHARP_,p2__16857_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__16856_SHARP_,p2__16857_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__16868 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__16869__i = 0, G__16869__a = new Array(arguments.length -  3);
while (G__16869__i < G__16869__a.length) {G__16869__a[G__16869__i] = arguments[G__16869__i + 3]; ++G__16869__i;}
  more = new cljs.core.IndexedSeq(G__16869__a,0);
} 
return G__16868__delegate.call(this,k,x,y,more);};
G__16868.cljs$lang$maxFixedArity = 3;
G__16868.cljs$lang$applyTo = (function (arglist__16870){
var k = cljs.core.first(arglist__16870);
arglist__16870 = cljs.core.next(arglist__16870);
var x = cljs.core.first(arglist__16870);
arglist__16870 = cljs.core.next(arglist__16870);
var y = cljs.core.first(arglist__16870);
var more = cljs.core.rest(arglist__16870);
return G__16868__delegate(k,x,y,more);
});
G__16868.cljs$core$IFn$_invoke$arity$variadic = G__16868__delegate;
return G__16868;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__16871 = null;
if (arguments.length > 3) {
var G__16872__i = 0, G__16872__a = new Array(arguments.length -  3);
while (G__16872__i < G__16872__a.length) {G__16872__a[G__16872__i] = arguments[G__16872__i + 3]; ++G__16872__i;}
G__16871 = new cljs.core.IndexedSeq(G__16872__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__16871);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__16889 = null;
var G__16889__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16889__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16884 = result;
var G__16885 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16884,G__16885) : rf.call(null,G__16884,G__16885));
})());
})());
var G__16886 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16886) : rf.call(null,G__16886));
});
var G__16889__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__16887 = result;
var G__16888 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16887,G__16888) : rf.call(null,G__16887,G__16888));
} else {
return result;
}
});
G__16889 = function(result,input){
switch(arguments.length){
case 0:
return G__16889__0.call(this);
case 1:
return G__16889__1.call(this,result);
case 2:
return G__16889__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16889.cljs$core$IFn$_invoke$arity$0 = G__16889__0;
G__16889.cljs$core$IFn$_invoke$arity$1 = G__16889__1;
G__16889.cljs$core$IFn$_invoke$arity$2 = G__16889__2;
return G__16889;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__16902 = null;
var G__16902__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16902__1 = (function (result){
var G__16897 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16897) : rf.call(null,G__16897));
});
var G__16902__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__16898 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16898) : pred.call(null,G__16898));
})())){
var G__16899 = result;
var G__16900 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16899,G__16900) : rf.call(null,G__16899,G__16900));
} else {
return cljs.core.reduced(result);
}
});
G__16902 = function(result,input){
switch(arguments.length){
case 0:
return G__16902__0.call(this);
case 1:
return G__16902__1.call(this,result);
case 2:
return G__16902__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16902.cljs$core$IFn$_invoke$arity$0 = G__16902__0;
G__16902.cljs$core$IFn$_invoke$arity$1 = G__16902__1;
G__16902.cljs$core$IFn$_invoke$arity$2 = G__16902__2;
return G__16902;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__16901 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16901) : pred.call(null,G__16901));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__16907 = (function (){var G__16909 = cljs.core._entry_key(sc,e);
var G__16910 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16909,G__16910) : comp.call(null,G__16909,G__16910));
})();
var G__16908 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__16907,G__16908) : test.call(null,G__16907,G__16908));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16914 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16914,(0),null);
var s = vec__16914;
if(cljs.core.truth_((function (){var G__16915 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16915) : include.call(null,G__16915));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16916 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16916,(0),null);
var s = vec__16916;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16920 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16920,(0),null);
var s = vec__16920;
if(cljs.core.truth_((function (){var G__16921 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__16921) : include.call(null,G__16921));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__16922 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16922,(0),null);
var s = vec__16922;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__16923 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__16923) : Math.ceil.call(null,G__16923));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4180__auto__ = self__.__hash;
if(!((h__4180__auto__ == null))){
return h__4180__auto__;
} else {
var h__4180__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4180__auto____$1;

return h__4180__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__16924 = ret;
var G__16925 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16924,G__16925) : f.call(null,G__16924,G__16925));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__16926 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16926) : cljs.core.deref.call(null,G__16926));
} else {
var G__16927 = (i + self__.step);
var G__16928 = ret__$1;
i = G__16927;
ret = G__16928;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__16946 = null;
var G__16946__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16946__1 = (function (result){
var G__16943 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16943) : rf.call(null,G__16943));
});
var G__16946__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__16944 = result;
var G__16945 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16944,G__16945) : rf.call(null,G__16944,G__16945));
} else {
return result;
}
});
G__16946 = function(result,input){
switch(arguments.length){
case 0:
return G__16946__0.call(this);
case 1:
return G__16946__1.call(this,result);
case 2:
return G__16946__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16946.cljs$core$IFn$_invoke$arity$0 = G__16946__0;
G__16946.cljs$core$IFn$_invoke$arity$1 = G__16946__1;
G__16946.cljs$core$IFn$_invoke$arity$2 = G__16946__2;
return G__16946;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__16968 = null;
var G__16968__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16968__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__16959 = result;
var G__16960 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16959,G__16960) : rf.call(null,G__16959,G__16960));
})());
})());
var G__16961 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16961) : rf.call(null,G__16961));
});
var G__16968__2 = (function (result,input){
var pval = (function (){var G__16962 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16962) : cljs.core.deref.call(null,G__16962));
})();
var val = (function (){var G__16963 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16963) : f.call(null,G__16963));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__16964 = result;
var G__16965 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16964,G__16965) : rf.call(null,G__16964,G__16965));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__16968 = function(result,input){
switch(arguments.length){
case 0:
return G__16968__0.call(this);
case 1:
return G__16968__1.call(this,result);
case 2:
return G__16968__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16968.cljs$core$IFn$_invoke$arity$0 = G__16968__0;
G__16968.cljs$core$IFn$_invoke$arity$1 = G__16968__1;
G__16968.cljs$core$IFn$_invoke$arity$2 = G__16968__2;
return G__16968;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__16966 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16966) : f.call(null,G__16966));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__16947_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__16967 = p1__16947_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16967) : f.call(null,G__16967));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__16977 = init;
var G__16978 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16977,G__16978) : f.call(null,G__16977,G__16978));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__17073 = null;
var G__17073__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__17073__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17031 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17031) : f.call(null,G__17031));
})()],null));
});
var G__17073__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17032 = x;
var G__17033 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17032,G__17033) : f.call(null,G__17032,G__17033));
})()],null));
});
var G__17073__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17034 = x;
var G__17035 = y;
var G__17036 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17034,G__17035,G__17036) : f.call(null,G__17034,G__17035,G__17036));
})()],null));
});
var G__17073__4 = (function() { 
var G__17074__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__17074 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17075__i = 0, G__17075__a = new Array(arguments.length -  3);
while (G__17075__i < G__17075__a.length) {G__17075__a[G__17075__i] = arguments[G__17075__i + 3]; ++G__17075__i;}
  args = new cljs.core.IndexedSeq(G__17075__a,0);
} 
return G__17074__delegate.call(this,x,y,z,args);};
G__17074.cljs$lang$maxFixedArity = 3;
G__17074.cljs$lang$applyTo = (function (arglist__17076){
var x = cljs.core.first(arglist__17076);
arglist__17076 = cljs.core.next(arglist__17076);
var y = cljs.core.first(arglist__17076);
arglist__17076 = cljs.core.next(arglist__17076);
var z = cljs.core.first(arglist__17076);
var args = cljs.core.rest(arglist__17076);
return G__17074__delegate(x,y,z,args);
});
G__17074.cljs$core$IFn$_invoke$arity$variadic = G__17074__delegate;
return G__17074;
})()
;
G__17073 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17073__0.call(this);
case 1:
return G__17073__1.call(this,x);
case 2:
return G__17073__2.call(this,x,y);
case 3:
return G__17073__3.call(this,x,y,z);
default:
var G__17077 = null;
if (arguments.length > 3) {
var G__17078__i = 0, G__17078__a = new Array(arguments.length -  3);
while (G__17078__i < G__17078__a.length) {G__17078__a[G__17078__i] = arguments[G__17078__i + 3]; ++G__17078__i;}
G__17077 = new cljs.core.IndexedSeq(G__17078__a,0);
}
return G__17073__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17077);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17073.cljs$lang$maxFixedArity = 3;
G__17073.cljs$lang$applyTo = G__17073__4.cljs$lang$applyTo;
G__17073.cljs$core$IFn$_invoke$arity$0 = G__17073__0;
G__17073.cljs$core$IFn$_invoke$arity$1 = G__17073__1;
G__17073.cljs$core$IFn$_invoke$arity$2 = G__17073__2;
G__17073.cljs$core$IFn$_invoke$arity$3 = G__17073__3;
G__17073.cljs$core$IFn$_invoke$arity$variadic = G__17073__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17073;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__17079 = null;
var G__17079__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__17079__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17037 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17037) : f.call(null,G__17037));
})(),(function (){var G__17038 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17038) : g.call(null,G__17038));
})()],null));
});
var G__17079__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17039 = x;
var G__17040 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17039,G__17040) : f.call(null,G__17039,G__17040));
})(),(function (){var G__17041 = x;
var G__17042 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17041,G__17042) : g.call(null,G__17041,G__17042));
})()],null));
});
var G__17079__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17043 = x;
var G__17044 = y;
var G__17045 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17043,G__17044,G__17045) : f.call(null,G__17043,G__17044,G__17045));
})(),(function (){var G__17046 = x;
var G__17047 = y;
var G__17048 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17046,G__17047,G__17048) : g.call(null,G__17046,G__17047,G__17048));
})()],null));
});
var G__17079__4 = (function() { 
var G__17080__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__17080 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17081__i = 0, G__17081__a = new Array(arguments.length -  3);
while (G__17081__i < G__17081__a.length) {G__17081__a[G__17081__i] = arguments[G__17081__i + 3]; ++G__17081__i;}
  args = new cljs.core.IndexedSeq(G__17081__a,0);
} 
return G__17080__delegate.call(this,x,y,z,args);};
G__17080.cljs$lang$maxFixedArity = 3;
G__17080.cljs$lang$applyTo = (function (arglist__17082){
var x = cljs.core.first(arglist__17082);
arglist__17082 = cljs.core.next(arglist__17082);
var y = cljs.core.first(arglist__17082);
arglist__17082 = cljs.core.next(arglist__17082);
var z = cljs.core.first(arglist__17082);
var args = cljs.core.rest(arglist__17082);
return G__17080__delegate(x,y,z,args);
});
G__17080.cljs$core$IFn$_invoke$arity$variadic = G__17080__delegate;
return G__17080;
})()
;
G__17079 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17079__0.call(this);
case 1:
return G__17079__1.call(this,x);
case 2:
return G__17079__2.call(this,x,y);
case 3:
return G__17079__3.call(this,x,y,z);
default:
var G__17083 = null;
if (arguments.length > 3) {
var G__17084__i = 0, G__17084__a = new Array(arguments.length -  3);
while (G__17084__i < G__17084__a.length) {G__17084__a[G__17084__i] = arguments[G__17084__i + 3]; ++G__17084__i;}
G__17083 = new cljs.core.IndexedSeq(G__17084__a,0);
}
return G__17079__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17083);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17079.cljs$lang$maxFixedArity = 3;
G__17079.cljs$lang$applyTo = G__17079__4.cljs$lang$applyTo;
G__17079.cljs$core$IFn$_invoke$arity$0 = G__17079__0;
G__17079.cljs$core$IFn$_invoke$arity$1 = G__17079__1;
G__17079.cljs$core$IFn$_invoke$arity$2 = G__17079__2;
G__17079.cljs$core$IFn$_invoke$arity$3 = G__17079__3;
G__17079.cljs$core$IFn$_invoke$arity$variadic = G__17079__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17079;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__17085 = null;
var G__17085__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__17085__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17049 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17049) : f.call(null,G__17049));
})(),(function (){var G__17050 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17050) : g.call(null,G__17050));
})(),(function (){var G__17051 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__17051) : h.call(null,G__17051));
})()],null));
});
var G__17085__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17052 = x;
var G__17053 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17052,G__17053) : f.call(null,G__17052,G__17053));
})(),(function (){var G__17054 = x;
var G__17055 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17054,G__17055) : g.call(null,G__17054,G__17055));
})(),(function (){var G__17056 = x;
var G__17057 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__17056,G__17057) : h.call(null,G__17056,G__17057));
})()],null));
});
var G__17085__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__17058 = x;
var G__17059 = y;
var G__17060 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17058,G__17059,G__17060) : f.call(null,G__17058,G__17059,G__17060));
})(),(function (){var G__17061 = x;
var G__17062 = y;
var G__17063 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17061,G__17062,G__17063) : g.call(null,G__17061,G__17062,G__17063));
})(),(function (){var G__17064 = x;
var G__17065 = y;
var G__17066 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__17064,G__17065,G__17066) : h.call(null,G__17064,G__17065,G__17066));
})()],null));
});
var G__17085__4 = (function() { 
var G__17086__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__17086 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17087__i = 0, G__17087__a = new Array(arguments.length -  3);
while (G__17087__i < G__17087__a.length) {G__17087__a[G__17087__i] = arguments[G__17087__i + 3]; ++G__17087__i;}
  args = new cljs.core.IndexedSeq(G__17087__a,0);
} 
return G__17086__delegate.call(this,x,y,z,args);};
G__17086.cljs$lang$maxFixedArity = 3;
G__17086.cljs$lang$applyTo = (function (arglist__17088){
var x = cljs.core.first(arglist__17088);
arglist__17088 = cljs.core.next(arglist__17088);
var y = cljs.core.first(arglist__17088);
arglist__17088 = cljs.core.next(arglist__17088);
var z = cljs.core.first(arglist__17088);
var args = cljs.core.rest(arglist__17088);
return G__17086__delegate(x,y,z,args);
});
G__17086.cljs$core$IFn$_invoke$arity$variadic = G__17086__delegate;
return G__17086;
})()
;
G__17085 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17085__0.call(this);
case 1:
return G__17085__1.call(this,x);
case 2:
return G__17085__2.call(this,x,y);
case 3:
return G__17085__3.call(this,x,y,z);
default:
var G__17089 = null;
if (arguments.length > 3) {
var G__17090__i = 0, G__17090__a = new Array(arguments.length -  3);
while (G__17090__i < G__17090__a.length) {G__17090__a[G__17090__i] = arguments[G__17090__i + 3]; ++G__17090__i;}
G__17089 = new cljs.core.IndexedSeq(G__17090__a,0);
}
return G__17085__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17085.cljs$lang$maxFixedArity = 3;
G__17085.cljs$lang$applyTo = G__17085__4.cljs$lang$applyTo;
G__17085.cljs$core$IFn$_invoke$arity$0 = G__17085__0;
G__17085.cljs$core$IFn$_invoke$arity$1 = G__17085__1;
G__17085.cljs$core$IFn$_invoke$arity$2 = G__17085__2;
G__17085.cljs$core$IFn$_invoke$arity$3 = G__17085__3;
G__17085.cljs$core$IFn$_invoke$arity$variadic = G__17085__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17085;
})()
});
var juxt__4 = (function() { 
var G__17091__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__17092 = null;
var G__17092__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16979_SHARP_,p2__16980_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16979_SHARP_,(function (){return (p2__16980_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__16980_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__16980_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17092__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16981_SHARP_,p2__16982_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16981_SHARP_,(function (){var G__17067 = x;
return (p2__16982_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__16982_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17067) : p2__16982_SHARP_.call(null,G__17067));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17092__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16983_SHARP_,p2__16984_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16983_SHARP_,(function (){var G__17068 = x;
var G__17069 = y;
return (p2__16984_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__16984_SHARP_.cljs$core$IFn$_invoke$arity$2(G__17068,G__17069) : p2__16984_SHARP_.call(null,G__17068,G__17069));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17092__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16985_SHARP_,p2__16986_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16985_SHARP_,(function (){var G__17070 = x;
var G__17071 = y;
var G__17072 = z;
return (p2__16986_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__16986_SHARP_.cljs$core$IFn$_invoke$arity$3(G__17070,G__17071,G__17072) : p2__16986_SHARP_.call(null,G__17070,G__17071,G__17072));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__17092__4 = (function() { 
var G__17093__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__16987_SHARP_,p2__16988_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__16987_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__16988_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__17093 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__17094__i = 0, G__17094__a = new Array(arguments.length -  3);
while (G__17094__i < G__17094__a.length) {G__17094__a[G__17094__i] = arguments[G__17094__i + 3]; ++G__17094__i;}
  args = new cljs.core.IndexedSeq(G__17094__a,0);
} 
return G__17093__delegate.call(this,x,y,z,args);};
G__17093.cljs$lang$maxFixedArity = 3;
G__17093.cljs$lang$applyTo = (function (arglist__17095){
var x = cljs.core.first(arglist__17095);
arglist__17095 = cljs.core.next(arglist__17095);
var y = cljs.core.first(arglist__17095);
arglist__17095 = cljs.core.next(arglist__17095);
var z = cljs.core.first(arglist__17095);
var args = cljs.core.rest(arglist__17095);
return G__17093__delegate(x,y,z,args);
});
G__17093.cljs$core$IFn$_invoke$arity$variadic = G__17093__delegate;
return G__17093;
})()
;
G__17092 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__17092__0.call(this);
case 1:
return G__17092__1.call(this,x);
case 2:
return G__17092__2.call(this,x,y);
case 3:
return G__17092__3.call(this,x,y,z);
default:
var G__17096 = null;
if (arguments.length > 3) {
var G__17097__i = 0, G__17097__a = new Array(arguments.length -  3);
while (G__17097__i < G__17097__a.length) {G__17097__a[G__17097__i] = arguments[G__17097__i + 3]; ++G__17097__i;}
G__17096 = new cljs.core.IndexedSeq(G__17097__a,0);
}
return G__17092__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__17096);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17092.cljs$lang$maxFixedArity = 3;
G__17092.cljs$lang$applyTo = G__17092__4.cljs$lang$applyTo;
G__17092.cljs$core$IFn$_invoke$arity$0 = G__17092__0;
G__17092.cljs$core$IFn$_invoke$arity$1 = G__17092__1;
G__17092.cljs$core$IFn$_invoke$arity$2 = G__17092__2;
G__17092.cljs$core$IFn$_invoke$arity$3 = G__17092__3;
G__17092.cljs$core$IFn$_invoke$arity$variadic = G__17092__4.cljs$core$IFn$_invoke$arity$variadic;
return G__17092;
})()
;})(fs__$1))
};
var G__17091 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__17098__i = 0, G__17098__a = new Array(arguments.length -  3);
while (G__17098__i < G__17098__a.length) {G__17098__a[G__17098__i] = arguments[G__17098__i + 3]; ++G__17098__i;}
  fs = new cljs.core.IndexedSeq(G__17098__a,0);
} 
return G__17091__delegate.call(this,f,g,h,fs);};
G__17091.cljs$lang$maxFixedArity = 3;
G__17091.cljs$lang$applyTo = (function (arglist__17099){
var f = cljs.core.first(arglist__17099);
arglist__17099 = cljs.core.next(arglist__17099);
var g = cljs.core.first(arglist__17099);
arglist__17099 = cljs.core.next(arglist__17099);
var h = cljs.core.first(arglist__17099);
var fs = cljs.core.rest(arglist__17099);
return G__17091__delegate(f,g,h,fs);
});
G__17091.cljs$core$IFn$_invoke$arity$variadic = G__17091__delegate;
return G__17091;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__17100 = null;
if (arguments.length > 3) {
var G__17101__i = 0, G__17101__a = new Array(arguments.length -  3);
while (G__17101__i < G__17101__a.length) {G__17101__a[G__17101__i] = arguments[G__17101__i + 3]; ++G__17101__i;}
G__17100 = new cljs.core.IndexedSeq(G__17101__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__17100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__17102 = cljs.core.next(coll);
coll = G__17102;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__17103 = (n - (1));
var G__17104 = cljs.core.next(coll);
n = G__17103;
coll = G__17104;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__17108 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17108,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17108,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17108,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_17116 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__17117_17123 = cljs.core.first(coll);
var G__17118_17124 = writer;
var G__17119_17125 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17117_17123,G__17118_17124,G__17119_17125) : print_one.call(null,G__17117_17123,G__17118_17124,G__17119_17125));
} else {
}

var coll_17126__$1 = cljs.core.next(coll);
var n_17127 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_17126__$1) && (((n_17127 == null)) || (!((n_17127 === (0)))))){
cljs.core._write(writer,sep);

var G__17120_17128 = cljs.core.first(coll_17126__$1);
var G__17121_17129 = writer;
var G__17122_17130 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17120_17128,G__17121_17129,G__17122_17130) : print_one.call(null,G__17120_17128,G__17121_17129,G__17122_17130));

var G__17131 = cljs.core.next(coll_17126__$1);
var G__17132 = (n_17127 - (1));
coll_17126__$1 = G__17131;
n_17127 = G__17132;
continue;
} else {
if((cljs.core.seq(coll_17126__$1)) && ((n_17127 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17116;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__17137 = cljs.core.seq(ss);
var chunk__17138 = null;
var count__17139 = (0);
var i__17140 = (0);
while(true){
if((i__17140 < count__17139)){
var s = chunk__17138.cljs$core$IIndexed$_nth$arity$2(null,i__17140);
cljs.core._write(writer,s);

var G__17141 = seq__17137;
var G__17142 = chunk__17138;
var G__17143 = count__17139;
var G__17144 = (i__17140 + (1));
seq__17137 = G__17141;
chunk__17138 = G__17142;
count__17139 = G__17143;
i__17140 = G__17144;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17137);
if(temp__4126__auto__){
var seq__17137__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17137__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__17137__$1);
var G__17145 = cljs.core.chunk_rest(seq__17137__$1);
var G__17146 = c__4546__auto__;
var G__17147 = cljs.core.count(c__4546__auto__);
var G__17148 = (0);
seq__17137 = G__17145;
chunk__17138 = G__17146;
count__17139 = G__17147;
i__17140 = G__17148;
continue;
} else {
var s = cljs.core.first(seq__17137__$1);
cljs.core._write(writer,s);

var G__17149 = cljs.core.next(seq__17137__$1);
var G__17150 = null;
var G__17151 = (0);
var G__17152 = (0);
seq__17137 = G__17149;
chunk__17138 = G__17150;
count__17139 = G__17151;
i__17140 = G__17152;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__17153__i = 0, G__17153__a = new Array(arguments.length -  1);
while (G__17153__i < G__17153__a.length) {G__17153__a[G__17153__i] = arguments[G__17153__i + 1]; ++G__17153__i;}
  ss = new cljs.core.IndexedSeq(G__17153__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__17154){
var writer = cljs.core.first(arglist__17154);
var ss = cljs.core.rest(arglist__17154);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj17156 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj17156;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__17159 = "[\\\\\"\b\f\n\r\t]";
var G__17160 = "g";
return RegExp(G__17159,G__17160);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3747__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3747__auto__)){
var and__3747__auto____$1 = (function (){var G__17174 = obj;
if(G__17174){
var bit__4440__auto__ = (G__17174.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4440__auto__) || (G__17174.cljs$core$IMeta$)){
return true;
} else {
if((!G__17174.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17174);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__17174);
}
})();
if(and__3747__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__17175 = obj;
if(G__17175){
var bit__4433__auto__ = (G__17175.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4433__auto__) || (G__17175.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__17176 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__17177 = pr_writer;
var G__17178 = writer;
var G__17179 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17176,G__17177,G__17178,G__17179) : cljs.core.print_map.call(null,G__17176,G__17177,G__17178,G__17179));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__17180 = obj;
return goog.isString(G__17180);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__17182 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__17182;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__17181 = obj;
if(G__17181){
var bit__4440__auto__ = (G__17181.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4440__auto__) || (G__17181.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__17181.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17181);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__17181);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__17187 = cljs.core.seq(cljs.core.next(objs));
var chunk__17188 = null;
var count__17189 = (0);
var i__17190 = (0);
while(true){
if((i__17190 < count__17189)){
var obj = chunk__17188.cljs$core$IIndexed$_nth$arity$2(null,i__17190);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17191 = seq__17187;
var G__17192 = chunk__17188;
var G__17193 = count__17189;
var G__17194 = (i__17190 + (1));
seq__17187 = G__17191;
chunk__17188 = G__17192;
count__17189 = G__17193;
i__17190 = G__17194;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__17187);
if(temp__4126__auto__){
var seq__17187__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__17187__$1)){
var c__4546__auto__ = cljs.core.chunk_first(seq__17187__$1);
var G__17195 = cljs.core.chunk_rest(seq__17187__$1);
var G__17196 = c__4546__auto__;
var G__17197 = cljs.core.count(c__4546__auto__);
var G__17198 = (0);
seq__17187 = G__17195;
chunk__17188 = G__17196;
count__17189 = G__17197;
i__17190 = G__17198;
continue;
} else {
var obj = cljs.core.first(seq__17187__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__17199 = cljs.core.next(seq__17187__$1);
var G__17200 = null;
var G__17201 = (0);
var G__17202 = (0);
seq__17187 = G__17199;
chunk__17188 = G__17200;
count__17189 = G__17201;
i__17190 = G__17202;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17203__i = 0, G__17203__a = new Array(arguments.length -  0);
while (G__17203__i < G__17203__a.length) {G__17203__a[G__17203__i] = arguments[G__17203__i + 0]; ++G__17203__i;}
  objs = new cljs.core.IndexedSeq(G__17203__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__17204){
var objs = cljs.core.seq(arglist__17204);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17205__i = 0, G__17205__a = new Array(arguments.length -  0);
while (G__17205__i < G__17205__a.length) {G__17205__a[G__17205__i] = arguments[G__17205__i + 0]; ++G__17205__i;}
  objs = new cljs.core.IndexedSeq(G__17205__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__17206){
var objs = cljs.core.seq(arglist__17206);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17207__i = 0, G__17207__a = new Array(arguments.length -  0);
while (G__17207__i < G__17207__a.length) {G__17207__a[G__17207__i] = arguments[G__17207__i + 0]; ++G__17207__i;}
  objs = new cljs.core.IndexedSeq(G__17207__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__17208){
var objs = cljs.core.seq(arglist__17208);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17209__i = 0, G__17209__a = new Array(arguments.length -  0);
while (G__17209__i < G__17209__a.length) {G__17209__a[G__17209__i] = arguments[G__17209__i + 0]; ++G__17209__i;}
  objs = new cljs.core.IndexedSeq(G__17209__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__17210){
var objs = cljs.core.seq(arglist__17210);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17211__i = 0, G__17211__a = new Array(arguments.length -  0);
while (G__17211__i < G__17211__a.length) {G__17211__a[G__17211__i] = arguments[G__17211__i + 0]; ++G__17211__i;}
  objs = new cljs.core.IndexedSeq(G__17211__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__17212){
var objs = cljs.core.seq(arglist__17212);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17213__i = 0, G__17213__a = new Array(arguments.length -  0);
while (G__17213__i < G__17213__a.length) {G__17213__a[G__17213__i] = arguments[G__17213__i + 0]; ++G__17213__i;}
  objs = new cljs.core.IndexedSeq(G__17213__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__17214){
var objs = cljs.core.seq(arglist__17214);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17215__i = 0, G__17215__a = new Array(arguments.length -  0);
while (G__17215__i < G__17215__a.length) {G__17215__a[G__17215__i] = arguments[G__17215__i + 0]; ++G__17215__i;}
  objs = new cljs.core.IndexedSeq(G__17215__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__17216){
var objs = cljs.core.seq(arglist__17216);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__17217__i = 0, G__17217__a = new Array(arguments.length -  0);
while (G__17217__i < G__17217__a.length) {G__17217__a[G__17217__i] = arguments[G__17217__i + 0]; ++G__17217__i;}
  objs = new cljs.core.IndexedSeq(G__17217__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__17218){
var objs = cljs.core.seq(arglist__17218);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__17225_17231 = cljs.core.key(e);
var G__17226_17232 = w;
var G__17227_17233 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17225_17231,G__17226_17232,G__17227_17233) : print_one.call(null,G__17225_17231,G__17226_17232,G__17227_17233));

cljs.core._write(w," ");

var G__17228 = cljs.core.val(e);
var G__17229 = w;
var G__17230 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17228,G__17229,G__17230) : print_one.call(null,G__17228,G__17229,G__17230));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__17234__i = 0, G__17234__a = new Array(arguments.length -  2);
while (G__17234__i < G__17234__a.length) {G__17234__a[G__17234__i] = arguments[G__17234__i + 2]; ++G__17234__i;}
  args = new cljs.core.IndexedSeq(G__17234__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__17235){
var iref = cljs.core.first(arglist__17235);
arglist__17235 = cljs.core.next(arglist__17235);
var f = cljs.core.first(arglist__17235);
var args = cljs.core.rest(arglist__17235);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__17238 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17238) : cljs.core.atom.call(null,G__17238));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__17240 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17240) : cljs.core.deref.call(null,G__17240));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__17241_SHARP_,p2__17242_SHARP_){
var ret = (function (){var G__17245 = p1__17241_SHARP_;
var G__17246 = p2__17242_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17245,G__17246) : rf.call(null,G__17245,G__17246));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__17249 = null;
var G__17249__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17249__1 = (function (result){
var G__17248 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17248) : rf.call(null,G__17248));
});
var G__17249__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__17249 = function(result,input){
switch(arguments.length){
case 0:
return G__17249__0.call(this);
case 1:
return G__17249__1.call(this,result);
case 2:
return G__17249__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17249.cljs$core$IFn$_invoke$arity$0 = G__17249__0;
G__17249.cljs$core$IFn$_invoke$arity$1 = G__17249__1;
G__17249.cljs$core$IFn$_invoke$arity$2 = G__17249__2;
return G__17249;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__17258 = null;
var G__17258__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__17258__1 = (function (result){
var G__17254 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17254) : rf.call(null,G__17254));
});
var G__17258__2 = (function (result,input){
var prior = (function (){var G__17255 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17255) : cljs.core.deref.call(null,G__17255));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__17256 = result;
var G__17257 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17256,G__17257) : rf.call(null,G__17256,G__17257));
}
});
G__17258 = function(result,input){
switch(arguments.length){
case 0:
return G__17258__0.call(this);
case 1:
return G__17258__1.call(this,result);
case 2:
return G__17258__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17258.cljs$core$IFn$_invoke$arity$0 = G__17258__0;
G__17258.cljs$core$IFn$_invoke$arity$1 = G__17258__1;
G__17258.cljs$core$IFn$_invoke$arity$2 = G__17258__2;
return G__17258;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4737__auto__ = this;
return cljs.core.es6_iterator(this__4737__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__17260_SHARP_,p2__17259_SHARP_){
var G__17262 = p2__17259_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__17262) : proc.call(null,G__17262));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj17264 = {};
return obj17264;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._clj__GT_js[(function (){var G__17268 = x__4403__auto__;
return goog.typeOf(G__17268);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._key__GT_js[(function (){var G__17272 = x__4403__auto__;
return goog.typeOf(G__17272);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__17275 = k;
if(G__17275){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__17275.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17275.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17275);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17275);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__17276 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__17276) : cljs.core.clj__GT_js.call(null,G__17276));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__17292 = x;
if(G__17292){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__17292.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__17292.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17292);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__17292);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj17294 = {};
return obj17294;
})();
var seq__17295_17305 = cljs.core.seq(x);
var chunk__17296_17306 = null;
var count__17297_17307 = (0);
var i__17298_17308 = (0);
while(true){
if((i__17298_17308 < count__17297_17307)){
var vec__17299_17309 = chunk__17296_17306.cljs$core$IIndexed$_nth$arity$2(null,i__17298_17308);
var k_17310 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17299_17309,(0),null);
var v_17311 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17299_17309,(1),null);
(m[cljs.core.key__GT_js(k_17310)] = clj__GT_js(v_17311));

var G__17312 = seq__17295_17305;
var G__17313 = chunk__17296_17306;
var G__17314 = count__17297_17307;
var G__17315 = (i__17298_17308 + (1));
seq__17295_17305 = G__17312;
chunk__17296_17306 = G__17313;
count__17297_17307 = G__17314;
i__17298_17308 = G__17315;
continue;
} else {
var temp__4126__auto___17316 = cljs.core.seq(seq__17295_17305);
if(temp__4126__auto___17316){
var seq__17295_17317__$1 = temp__4126__auto___17316;
if(cljs.core.chunked_seq_QMARK_(seq__17295_17317__$1)){
var c__4546__auto___17318 = cljs.core.chunk_first(seq__17295_17317__$1);
var G__17319 = cljs.core.chunk_rest(seq__17295_17317__$1);
var G__17320 = c__4546__auto___17318;
var G__17321 = cljs.core.count(c__4546__auto___17318);
var G__17322 = (0);
seq__17295_17305 = G__17319;
chunk__17296_17306 = G__17320;
count__17297_17307 = G__17321;
i__17298_17308 = G__17322;
continue;
} else {
var vec__17300_17323 = cljs.core.first(seq__17295_17317__$1);
var k_17324 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17300_17323,(0),null);
var v_17325 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17300_17323,(1),null);
(m[cljs.core.key__GT_js(k_17324)] = clj__GT_js(v_17325));

var G__17326 = cljs.core.next(seq__17295_17317__$1);
var G__17327 = null;
var G__17328 = (0);
var G__17329 = (0);
seq__17295_17305 = G__17326;
chunk__17296_17306 = G__17327;
count__17297_17307 = G__17328;
i__17298_17308 = G__17329;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__17301_17330 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__17302_17331 = null;
var count__17303_17332 = (0);
var i__17304_17333 = (0);
while(true){
if((i__17304_17333 < count__17303_17332)){
var x_17334__$1 = chunk__17302_17331.cljs$core$IIndexed$_nth$arity$2(null,i__17304_17333);
arr.push(x_17334__$1);

var G__17335 = seq__17301_17330;
var G__17336 = chunk__17302_17331;
var G__17337 = count__17303_17332;
var G__17338 = (i__17304_17333 + (1));
seq__17301_17330 = G__17335;
chunk__17302_17331 = G__17336;
count__17303_17332 = G__17337;
i__17304_17333 = G__17338;
continue;
} else {
var temp__4126__auto___17339 = cljs.core.seq(seq__17301_17330);
if(temp__4126__auto___17339){
var seq__17301_17340__$1 = temp__4126__auto___17339;
if(cljs.core.chunked_seq_QMARK_(seq__17301_17340__$1)){
var c__4546__auto___17341 = cljs.core.chunk_first(seq__17301_17340__$1);
var G__17342 = cljs.core.chunk_rest(seq__17301_17340__$1);
var G__17343 = c__4546__auto___17341;
var G__17344 = cljs.core.count(c__4546__auto___17341);
var G__17345 = (0);
seq__17301_17330 = G__17342;
chunk__17302_17331 = G__17343;
count__17303_17332 = G__17344;
i__17304_17333 = G__17345;
continue;
} else {
var x_17346__$1 = cljs.core.first(seq__17301_17340__$1);
arr.push(x_17346__$1);

var G__17347 = cljs.core.next(seq__17301_17340__$1);
var G__17348 = null;
var G__17349 = (0);
var G__17350 = (0);
seq__17301_17330 = G__17347;
chunk__17302_17331 = G__17348;
count__17303_17332 = G__17349;
i__17304_17333 = G__17350;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj17352 = {};
return obj17352;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3747__auto__ = x;
if(and__3747__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3747__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4403__auto__ = (((x == null))?null:x);
return (function (){var or__3759__auto__ = (cljs.core._js__GT_clj[(function (){var G__17356 = x__4403__auto__;
return goog.typeOf(G__17356);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__17413__delegate = function (x,opts){
var map__17386 = opts;
var map__17386__$1 = ((cljs.core.seq_QMARK_(map__17386))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__17386):map__17386);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17386__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__17386,map__17386__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__17402 = x__$1;
if(G__17402){
var bit__4440__auto__ = null;
if(cljs.core.truth_((function (){var or__3759__auto__ = bit__4440__auto__;
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return G__17402.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__17402.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17402);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__17402);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4515__auto__ = ((function (map__17386,map__17386__$1,keywordize_keys,keyfn){
return (function iter__17403(s__17404){
return (new cljs.core.LazySeq(null,((function (map__17386,map__17386__$1,keywordize_keys,keyfn){
return (function (){
var s__17404__$1 = s__17404;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__17404__$1);
if(temp__4126__auto__){
var s__17404__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__17404__$2)){
var c__4513__auto__ = cljs.core.chunk_first(s__17404__$2);
var size__4514__auto__ = cljs.core.count(c__4513__auto__);
var b__17406 = cljs.core.chunk_buffer(size__4514__auto__);
if((function (){var i__17405 = (0);
while(true){
if((i__17405 < size__4514__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4513__auto__,i__17405);
cljs.core.chunk_append(b__17406,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17411 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17411) : keyfn.call(null,G__17411));
})(),thisfn((x__$1[k]))], null));

var G__17414 = (i__17405 + (1));
i__17405 = G__17414;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__17406),iter__17403(cljs.core.chunk_rest(s__17404__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__17406),null);
}
} else {
var k = cljs.core.first(s__17404__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__17412 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17412) : keyfn.call(null,G__17412));
})(),thisfn((x__$1[k]))], null),iter__17403(cljs.core.rest(s__17404__$2)));
}
} else {
return null;
}
break;
}
});})(map__17386,map__17386__$1,keywordize_keys,keyfn))
,null,null));
});})(map__17386,map__17386__$1,keywordize_keys,keyfn))
;
return iter__4515__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__17386,map__17386__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__17413 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__17415__i = 0, G__17415__a = new Array(arguments.length -  1);
while (G__17415__i < G__17415__a.length) {G__17415__a[G__17415__i] = arguments[G__17415__i + 1]; ++G__17415__i;}
  opts = new cljs.core.IndexedSeq(G__17415__a,0);
} 
return G__17413__delegate.call(this,x,opts);};
G__17413.cljs$lang$maxFixedArity = 1;
G__17413.cljs$lang$applyTo = (function (arglist__17416){
var x = cljs.core.first(arglist__17416);
var opts = cljs.core.rest(arglist__17416);
return G__17413__delegate(x,opts);
});
G__17413.cljs$core$IFn$_invoke$arity$variadic = G__17413__delegate;
return G__17413;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__17417 = null;
if (arguments.length > 1) {
var G__17418__i = 0, G__17418__a = new Array(arguments.length -  1);
while (G__17418__i < G__17418__a.length) {G__17418__a[G__17418__i] = arguments[G__17418__i + 1]; ++G__17418__i;}
G__17417 = new cljs.core.IndexedSeq(G__17418__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__17417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__17421 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17421) : cljs.core.atom.call(null,G__17421));
})();
return ((function (mem){
return (function() { 
var G__17423__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__17422 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17422) : cljs.core.deref.call(null,G__17422));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__17423 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__17424__i = 0, G__17424__a = new Array(arguments.length -  0);
while (G__17424__i < G__17424__a.length) {G__17424__a[G__17424__i] = arguments[G__17424__i + 0]; ++G__17424__i;}
  args = new cljs.core.IndexedSeq(G__17424__a,0);
} 
return G__17423__delegate.call(this,args);};
G__17423.cljs$lang$maxFixedArity = 0;
G__17423.cljs$lang$applyTo = (function (arglist__17425){
var args = cljs.core.seq(arglist__17425);
return G__17423__delegate(args);
});
G__17423.cljs$core$IFn$_invoke$arity$variadic = G__17423__delegate;
return G__17423;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__17427 = ret;
f = G__17427;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__17428__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__17428 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17429__i = 0, G__17429__a = new Array(arguments.length -  1);
while (G__17429__i < G__17429__a.length) {G__17429__a[G__17429__i] = arguments[G__17429__i + 1]; ++G__17429__i;}
  args = new cljs.core.IndexedSeq(G__17429__a,0);
} 
return G__17428__delegate.call(this,f,args);};
G__17428.cljs$lang$maxFixedArity = 1;
G__17428.cljs$lang$applyTo = (function (arglist__17430){
var f = cljs.core.first(arglist__17430);
var args = cljs.core.rest(arglist__17430);
return G__17428__delegate(f,args);
});
G__17428.cljs$core$IFn$_invoke$arity$variadic = G__17428__delegate;
return G__17428;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__17431 = null;
if (arguments.length > 1) {
var G__17432__i = 0, G__17432__a = new Array(arguments.length -  1);
while (G__17432__i < G__17432__a.length) {G__17432__a[G__17432__i] = arguments[G__17432__i + 1]; ++G__17432__i;}
G__17431 = new cljs.core.IndexedSeq(G__17432__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__17431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__17435 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__17435) : Math.floor.call(null,G__17435));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__17437 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17437) : f.call(null,G__17437));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__17439 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17439) : cljs.core.atom.call(null,G__17439));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__17440__i = 0, G__17440__a = new Array(arguments.length -  1);
while (G__17440__i < G__17440__a.length) {G__17440__a[G__17440__i] = arguments[G__17440__i + 1]; ++G__17440__i;}
  args = new cljs.core.IndexedSeq(G__17440__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__17441){
var f = cljs.core.first(arglist__17441);
var args = cljs.core.rest(arglist__17441);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17506 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17506) : cljs.core.deref.call(null,G__17506));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3759__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
var and__3747__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3747__auto__){
var and__3747__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3747__auto____$1){
var and__3747__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3747__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__17531 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__17529 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__17529) : child.call(null,G__17529));
})(),(function (){var G__17530 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__17530) : parent.call(null,G__17530));
})());
var G__17532 = (i + (1));
ret = G__17531;
i = G__17532;
continue;
}
break;
}
} else {
return and__3747__auto____$2;
}
} else {
return and__3747__auto____$1;
}
} else {
return and__3747__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__17536 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17536) : cljs.core.deref.call(null,G__17536));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__17540 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17540) : cljs.core.deref.call(null,G__17540));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__17544 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17544) : cljs.core.deref.call(null,G__17544));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__17553 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__17553) : targets.call(null,G__17553));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__17554 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__17554) : sources.call(null,G__17554));
})()));
});})(tp,td,ta))
;
var or__3759__auto__ = ((cljs.core.contains_QMARK_((function (){var G__17558 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__17558) : tp.call(null,G__17558));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__17559 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17559) : ta.call(null,G__17559));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__17560 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17560) : ta.call(null,G__17560));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__17567 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17567) : parentMap.call(null,G__17567));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__17568 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17568) : parentMap.call(null,G__17568));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__17561_SHARP_){
return cljs.core.cons(cljs.core.first(p1__17561_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17561_SHARP_),cljs.core.second(p1__17561_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__17569 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17569) : parentMap.call(null,G__17569));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__17562_SHARP_,p2__17563_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__17562_SHARP_,p2__17563_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__17572 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17572) : cljs.core.deref.call(null,G__17572));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__17573 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17573) : cljs.core.deref.call(null,G__17573));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__17589 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17589) : cljs.core.deref.call(null,G__17589));
})().call(null,x);
var or__3759__auto__ = (cljs.core.truth_((function (){var and__3747__auto__ = xprefs;
if(cljs.core.truth_(and__3747__auto__)){
var G__17591 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__17591) : xprefs.call(null,G__17591));
} else {
return and__3747__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__17592 = cljs.core.rest(ps);
ps = G__17592;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3759__auto____$1)){
return or__3759__auto____$1;
} else {
var or__3759__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__17593 = cljs.core.rest(ps);
ps = G__17593;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3759__auto____$2)){
return or__3759__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3759__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3759__auto__)){
return or__3759__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__17607){
var vec__17608 = p__17607;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17608,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17608,(1),null);
var e = vec__17608;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__17609 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17609) : cljs.core.deref.call(null,G__17609));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3759__auto__ = (be == null);
if(or__3759__auto__){
return or__3759__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__17610 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17610) : cljs.core.deref.call(null,G__17610));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17611 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17611) : cljs.core.deref.call(null,G__17611));
})(),(function (){var G__17612 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17612) : cljs.core.deref.call(null,G__17612));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj17614 = {};
return obj17614;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._reset[(function (){var G__17618 = x__4403__auto__;
return goog.typeOf(G__17618);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._reset["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._add_method[(function (){var G__17622 = x__4403__auto__;
return goog.typeOf(G__17622);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._add_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._remove_method[(function (){var G__17626 = x__4403__auto__;
return goog.typeOf(G__17626);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._prefer_method[(function (){var G__17630 = x__4403__auto__;
return goog.typeOf(G__17630);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._get_method[(function (){var G__17634 = x__4403__auto__;
return goog.typeOf(G__17634);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._get_method["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._methods[(function (){var G__17638 = x__4403__auto__;
return goog.typeOf(G__17638);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._methods["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3747__auto__ = mf;
if(and__3747__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3747__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4403__auto__ = (((mf == null))?null:mf);
return (function (){var or__3759__auto__ = (cljs.core._prefers[(function (){var G__17642 = x__4403__auto__;
return goog.typeOf(G__17642);
})()]);
if(or__3759__auto__){
return or__3759__auto__;
} else {
var or__3759__auto____$1 = (cljs.core._prefers["_"]);
if(or__3759__auto____$1){
return or__3759__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17644 = this$__$1;
return goog.getUid(G__17644);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__17645 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17645) : cljs.core.deref.call(null,G__17645));
})(),(function (){var G__17646 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17646) : cljs.core.deref.call(null,G__17646));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__17647 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17647) : cljs.core.deref.call(null,G__17647));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__17648 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17648) : cljs.core.deref.call(null,G__17648));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17649 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17649) : cljs.core.deref.call(null,G__17649));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__17650 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17650) : cljs.core.deref.call(null,G__17650));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__18491 = null;
var G__18491__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__18491__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17651 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17651) : self__.dispatch_fn.call(null,G__17651));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17652 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17652) : target_fn.call(null,G__17652));
});
var G__18491__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17653 = a;
var G__17654 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17653,G__17654) : self__.dispatch_fn.call(null,G__17653,G__17654));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17655 = a;
var G__17656 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17655,G__17656) : target_fn.call(null,G__17655,G__17656));
});
var G__18491__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17657 = a;
var G__17658 = b;
var G__17659 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17657,G__17658,G__17659) : self__.dispatch_fn.call(null,G__17657,G__17658,G__17659));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17660 = a;
var G__17661 = b;
var G__17662 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17660,G__17661,G__17662) : target_fn.call(null,G__17660,G__17661,G__17662));
});
var G__18491__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17663 = a;
var G__17664 = b;
var G__17665 = c;
var G__17666 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17663,G__17664,G__17665,G__17666) : self__.dispatch_fn.call(null,G__17663,G__17664,G__17665,G__17666));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17667 = a;
var G__17668 = b;
var G__17669 = c;
var G__17670 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17667,G__17668,G__17669,G__17670) : target_fn.call(null,G__17667,G__17668,G__17669,G__17670));
});
var G__18491__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17671 = a;
var G__17672 = b;
var G__17673 = c;
var G__17674 = d;
var G__17675 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17671,G__17672,G__17673,G__17674,G__17675) : self__.dispatch_fn.call(null,G__17671,G__17672,G__17673,G__17674,G__17675));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17676 = a;
var G__17677 = b;
var G__17678 = c;
var G__17679 = d;
var G__17680 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17676,G__17677,G__17678,G__17679,G__17680) : target_fn.call(null,G__17676,G__17677,G__17678,G__17679,G__17680));
});
var G__18491__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17681 = a;
var G__17682 = b;
var G__17683 = c;
var G__17684 = d;
var G__17685 = e;
var G__17686 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17681,G__17682,G__17683,G__17684,G__17685,G__17686) : self__.dispatch_fn.call(null,G__17681,G__17682,G__17683,G__17684,G__17685,G__17686));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17687 = a;
var G__17688 = b;
var G__17689 = c;
var G__17690 = d;
var G__17691 = e;
var G__17692 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17687,G__17688,G__17689,G__17690,G__17691,G__17692) : target_fn.call(null,G__17687,G__17688,G__17689,G__17690,G__17691,G__17692));
});
var G__18491__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17693 = a;
var G__17694 = b;
var G__17695 = c;
var G__17696 = d;
var G__17697 = e;
var G__17698 = f;
var G__17699 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17693,G__17694,G__17695,G__17696,G__17697,G__17698,G__17699) : self__.dispatch_fn.call(null,G__17693,G__17694,G__17695,G__17696,G__17697,G__17698,G__17699));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17700 = a;
var G__17701 = b;
var G__17702 = c;
var G__17703 = d;
var G__17704 = e;
var G__17705 = f;
var G__17706 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706) : target_fn.call(null,G__17700,G__17701,G__17702,G__17703,G__17704,G__17705,G__17706));
});
var G__18491__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17707 = a;
var G__17708 = b;
var G__17709 = c;
var G__17710 = d;
var G__17711 = e;
var G__17712 = f;
var G__17713 = g;
var G__17714 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17707,G__17708,G__17709,G__17710,G__17711,G__17712,G__17713,G__17714) : self__.dispatch_fn.call(null,G__17707,G__17708,G__17709,G__17710,G__17711,G__17712,G__17713,G__17714));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17715 = a;
var G__17716 = b;
var G__17717 = c;
var G__17718 = d;
var G__17719 = e;
var G__17720 = f;
var G__17721 = g;
var G__17722 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17715,G__17716,G__17717,G__17718,G__17719,G__17720,G__17721,G__17722) : target_fn.call(null,G__17715,G__17716,G__17717,G__17718,G__17719,G__17720,G__17721,G__17722));
});
var G__18491__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17723 = a;
var G__17724 = b;
var G__17725 = c;
var G__17726 = d;
var G__17727 = e;
var G__17728 = f;
var G__17729 = g;
var G__17730 = h;
var G__17731 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730,G__17731) : self__.dispatch_fn.call(null,G__17723,G__17724,G__17725,G__17726,G__17727,G__17728,G__17729,G__17730,G__17731));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17732 = a;
var G__17733 = b;
var G__17734 = c;
var G__17735 = d;
var G__17736 = e;
var G__17737 = f;
var G__17738 = g;
var G__17739 = h;
var G__17740 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17732,G__17733,G__17734,G__17735,G__17736,G__17737,G__17738,G__17739,G__17740) : target_fn.call(null,G__17732,G__17733,G__17734,G__17735,G__17736,G__17737,G__17738,G__17739,G__17740));
});
var G__18491__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17741 = a;
var G__17742 = b;
var G__17743 = c;
var G__17744 = d;
var G__17745 = e;
var G__17746 = f;
var G__17747 = g;
var G__17748 = h;
var G__17749 = i;
var G__17750 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17741,G__17742,G__17743,G__17744,G__17745,G__17746,G__17747,G__17748,G__17749,G__17750) : self__.dispatch_fn.call(null,G__17741,G__17742,G__17743,G__17744,G__17745,G__17746,G__17747,G__17748,G__17749,G__17750));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17751 = a;
var G__17752 = b;
var G__17753 = c;
var G__17754 = d;
var G__17755 = e;
var G__17756 = f;
var G__17757 = g;
var G__17758 = h;
var G__17759 = i;
var G__17760 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17751,G__17752,G__17753,G__17754,G__17755,G__17756,G__17757,G__17758,G__17759,G__17760) : target_fn.call(null,G__17751,G__17752,G__17753,G__17754,G__17755,G__17756,G__17757,G__17758,G__17759,G__17760));
});
var G__18491__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17761 = a;
var G__17762 = b;
var G__17763 = c;
var G__17764 = d;
var G__17765 = e;
var G__17766 = f;
var G__17767 = g;
var G__17768 = h;
var G__17769 = i;
var G__17770 = j;
var G__17771 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17761,G__17762,G__17763,G__17764,G__17765,G__17766,G__17767,G__17768,G__17769,G__17770,G__17771) : self__.dispatch_fn.call(null,G__17761,G__17762,G__17763,G__17764,G__17765,G__17766,G__17767,G__17768,G__17769,G__17770,G__17771));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17772 = a;
var G__17773 = b;
var G__17774 = c;
var G__17775 = d;
var G__17776 = e;
var G__17777 = f;
var G__17778 = g;
var G__17779 = h;
var G__17780 = i;
var G__17781 = j;
var G__17782 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17772,G__17773,G__17774,G__17775,G__17776,G__17777,G__17778,G__17779,G__17780,G__17781,G__17782) : target_fn.call(null,G__17772,G__17773,G__17774,G__17775,G__17776,G__17777,G__17778,G__17779,G__17780,G__17781,G__17782));
});
var G__18491__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17783 = a;
var G__17784 = b;
var G__17785 = c;
var G__17786 = d;
var G__17787 = e;
var G__17788 = f;
var G__17789 = g;
var G__17790 = h;
var G__17791 = i;
var G__17792 = j;
var G__17793 = k;
var G__17794 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17783,G__17784,G__17785,G__17786,G__17787,G__17788,G__17789,G__17790,G__17791,G__17792,G__17793,G__17794) : self__.dispatch_fn.call(null,G__17783,G__17784,G__17785,G__17786,G__17787,G__17788,G__17789,G__17790,G__17791,G__17792,G__17793,G__17794));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17795 = a;
var G__17796 = b;
var G__17797 = c;
var G__17798 = d;
var G__17799 = e;
var G__17800 = f;
var G__17801 = g;
var G__17802 = h;
var G__17803 = i;
var G__17804 = j;
var G__17805 = k;
var G__17806 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17795,G__17796,G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803,G__17804,G__17805,G__17806) : target_fn.call(null,G__17795,G__17796,G__17797,G__17798,G__17799,G__17800,G__17801,G__17802,G__17803,G__17804,G__17805,G__17806));
});
var G__18491__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17807 = a;
var G__17808 = b;
var G__17809 = c;
var G__17810 = d;
var G__17811 = e;
var G__17812 = f;
var G__17813 = g;
var G__17814 = h;
var G__17815 = i;
var G__17816 = j;
var G__17817 = k;
var G__17818 = l;
var G__17819 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17807,G__17808,G__17809,G__17810,G__17811,G__17812,G__17813,G__17814,G__17815,G__17816,G__17817,G__17818,G__17819) : self__.dispatch_fn.call(null,G__17807,G__17808,G__17809,G__17810,G__17811,G__17812,G__17813,G__17814,G__17815,G__17816,G__17817,G__17818,G__17819));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17820 = a;
var G__17821 = b;
var G__17822 = c;
var G__17823 = d;
var G__17824 = e;
var G__17825 = f;
var G__17826 = g;
var G__17827 = h;
var G__17828 = i;
var G__17829 = j;
var G__17830 = k;
var G__17831 = l;
var G__17832 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17820,G__17821,G__17822,G__17823,G__17824,G__17825,G__17826,G__17827,G__17828,G__17829,G__17830,G__17831,G__17832) : target_fn.call(null,G__17820,G__17821,G__17822,G__17823,G__17824,G__17825,G__17826,G__17827,G__17828,G__17829,G__17830,G__17831,G__17832));
});
var G__18491__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17833 = a;
var G__17834 = b;
var G__17835 = c;
var G__17836 = d;
var G__17837 = e;
var G__17838 = f;
var G__17839 = g;
var G__17840 = h;
var G__17841 = i;
var G__17842 = j;
var G__17843 = k;
var G__17844 = l;
var G__17845 = m;
var G__17846 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17833,G__17834,G__17835,G__17836,G__17837,G__17838,G__17839,G__17840,G__17841,G__17842,G__17843,G__17844,G__17845,G__17846) : self__.dispatch_fn.call(null,G__17833,G__17834,G__17835,G__17836,G__17837,G__17838,G__17839,G__17840,G__17841,G__17842,G__17843,G__17844,G__17845,G__17846));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17847 = a;
var G__17848 = b;
var G__17849 = c;
var G__17850 = d;
var G__17851 = e;
var G__17852 = f;
var G__17853 = g;
var G__17854 = h;
var G__17855 = i;
var G__17856 = j;
var G__17857 = k;
var G__17858 = l;
var G__17859 = m;
var G__17860 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17847,G__17848,G__17849,G__17850,G__17851,G__17852,G__17853,G__17854,G__17855,G__17856,G__17857,G__17858,G__17859,G__17860) : target_fn.call(null,G__17847,G__17848,G__17849,G__17850,G__17851,G__17852,G__17853,G__17854,G__17855,G__17856,G__17857,G__17858,G__17859,G__17860));
});
var G__18491__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17861 = a;
var G__17862 = b;
var G__17863 = c;
var G__17864 = d;
var G__17865 = e;
var G__17866 = f;
var G__17867 = g;
var G__17868 = h;
var G__17869 = i;
var G__17870 = j;
var G__17871 = k;
var G__17872 = l;
var G__17873 = m;
var G__17874 = n;
var G__17875 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17861,G__17862,G__17863,G__17864,G__17865,G__17866,G__17867,G__17868,G__17869,G__17870,G__17871,G__17872,G__17873,G__17874,G__17875) : self__.dispatch_fn.call(null,G__17861,G__17862,G__17863,G__17864,G__17865,G__17866,G__17867,G__17868,G__17869,G__17870,G__17871,G__17872,G__17873,G__17874,G__17875));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17876 = a;
var G__17877 = b;
var G__17878 = c;
var G__17879 = d;
var G__17880 = e;
var G__17881 = f;
var G__17882 = g;
var G__17883 = h;
var G__17884 = i;
var G__17885 = j;
var G__17886 = k;
var G__17887 = l;
var G__17888 = m;
var G__17889 = n;
var G__17890 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17876,G__17877,G__17878,G__17879,G__17880,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887,G__17888,G__17889,G__17890) : target_fn.call(null,G__17876,G__17877,G__17878,G__17879,G__17880,G__17881,G__17882,G__17883,G__17884,G__17885,G__17886,G__17887,G__17888,G__17889,G__17890));
});
var G__18491__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17891 = a;
var G__17892 = b;
var G__17893 = c;
var G__17894 = d;
var G__17895 = e;
var G__17896 = f;
var G__17897 = g;
var G__17898 = h;
var G__17899 = i;
var G__17900 = j;
var G__17901 = k;
var G__17902 = l;
var G__17903 = m;
var G__17904 = n;
var G__17905 = o;
var G__17906 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900,G__17901,G__17902,G__17903,G__17904,G__17905,G__17906) : self__.dispatch_fn.call(null,G__17891,G__17892,G__17893,G__17894,G__17895,G__17896,G__17897,G__17898,G__17899,G__17900,G__17901,G__17902,G__17903,G__17904,G__17905,G__17906));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17907 = a;
var G__17908 = b;
var G__17909 = c;
var G__17910 = d;
var G__17911 = e;
var G__17912 = f;
var G__17913 = g;
var G__17914 = h;
var G__17915 = i;
var G__17916 = j;
var G__17917 = k;
var G__17918 = l;
var G__17919 = m;
var G__17920 = n;
var G__17921 = o;
var G__17922 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17907,G__17908,G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922) : target_fn.call(null,G__17907,G__17908,G__17909,G__17910,G__17911,G__17912,G__17913,G__17914,G__17915,G__17916,G__17917,G__17918,G__17919,G__17920,G__17921,G__17922));
});
var G__18491__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17923 = a;
var G__17924 = b;
var G__17925 = c;
var G__17926 = d;
var G__17927 = e;
var G__17928 = f;
var G__17929 = g;
var G__17930 = h;
var G__17931 = i;
var G__17932 = j;
var G__17933 = k;
var G__17934 = l;
var G__17935 = m;
var G__17936 = n;
var G__17937 = o;
var G__17938 = p;
var G__17939 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17923,G__17924,G__17925,G__17926,G__17927,G__17928,G__17929,G__17930,G__17931,G__17932,G__17933,G__17934,G__17935,G__17936,G__17937,G__17938,G__17939) : self__.dispatch_fn.call(null,G__17923,G__17924,G__17925,G__17926,G__17927,G__17928,G__17929,G__17930,G__17931,G__17932,G__17933,G__17934,G__17935,G__17936,G__17937,G__17938,G__17939));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17940 = a;
var G__17941 = b;
var G__17942 = c;
var G__17943 = d;
var G__17944 = e;
var G__17945 = f;
var G__17946 = g;
var G__17947 = h;
var G__17948 = i;
var G__17949 = j;
var G__17950 = k;
var G__17951 = l;
var G__17952 = m;
var G__17953 = n;
var G__17954 = o;
var G__17955 = p;
var G__17956 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17940,G__17941,G__17942,G__17943,G__17944,G__17945,G__17946,G__17947,G__17948,G__17949,G__17950,G__17951,G__17952,G__17953,G__17954,G__17955,G__17956) : target_fn.call(null,G__17940,G__17941,G__17942,G__17943,G__17944,G__17945,G__17946,G__17947,G__17948,G__17949,G__17950,G__17951,G__17952,G__17953,G__17954,G__17955,G__17956));
});
var G__18491__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17957 = a;
var G__17958 = b;
var G__17959 = c;
var G__17960 = d;
var G__17961 = e;
var G__17962 = f;
var G__17963 = g;
var G__17964 = h;
var G__17965 = i;
var G__17966 = j;
var G__17967 = k;
var G__17968 = l;
var G__17969 = m;
var G__17970 = n;
var G__17971 = o;
var G__17972 = p;
var G__17973 = q;
var G__17974 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17957,G__17958,G__17959,G__17960,G__17961,G__17962,G__17963,G__17964,G__17965,G__17966,G__17967,G__17968,G__17969,G__17970,G__17971,G__17972,G__17973,G__17974) : self__.dispatch_fn.call(null,G__17957,G__17958,G__17959,G__17960,G__17961,G__17962,G__17963,G__17964,G__17965,G__17966,G__17967,G__17968,G__17969,G__17970,G__17971,G__17972,G__17973,G__17974));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17975 = a;
var G__17976 = b;
var G__17977 = c;
var G__17978 = d;
var G__17979 = e;
var G__17980 = f;
var G__17981 = g;
var G__17982 = h;
var G__17983 = i;
var G__17984 = j;
var G__17985 = k;
var G__17986 = l;
var G__17987 = m;
var G__17988 = n;
var G__17989 = o;
var G__17990 = p;
var G__17991 = q;
var G__17992 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17975,G__17976,G__17977,G__17978,G__17979,G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986,G__17987,G__17988,G__17989,G__17990,G__17991,G__17992) : target_fn.call(null,G__17975,G__17976,G__17977,G__17978,G__17979,G__17980,G__17981,G__17982,G__17983,G__17984,G__17985,G__17986,G__17987,G__17988,G__17989,G__17990,G__17991,G__17992));
});
var G__18491__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__17993 = a;
var G__17994 = b;
var G__17995 = c;
var G__17996 = d;
var G__17997 = e;
var G__17998 = f;
var G__17999 = g;
var G__18000 = h;
var G__18001 = i;
var G__18002 = j;
var G__18003 = k;
var G__18004 = l;
var G__18005 = m;
var G__18006 = n;
var G__18007 = o;
var G__18008 = p;
var G__18009 = q;
var G__18010 = r;
var G__18011 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17993,G__17994,G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002,G__18003,G__18004,G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011) : self__.dispatch_fn.call(null,G__17993,G__17994,G__17995,G__17996,G__17997,G__17998,G__17999,G__18000,G__18001,G__18002,G__18003,G__18004,G__18005,G__18006,G__18007,G__18008,G__18009,G__18010,G__18011));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18012 = a;
var G__18013 = b;
var G__18014 = c;
var G__18015 = d;
var G__18016 = e;
var G__18017 = f;
var G__18018 = g;
var G__18019 = h;
var G__18020 = i;
var G__18021 = j;
var G__18022 = k;
var G__18023 = l;
var G__18024 = m;
var G__18025 = n;
var G__18026 = o;
var G__18027 = p;
var G__18028 = q;
var G__18029 = r;
var G__18030 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018,G__18019,G__18020,G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030) : target_fn.call(null,G__18012,G__18013,G__18014,G__18015,G__18016,G__18017,G__18018,G__18019,G__18020,G__18021,G__18022,G__18023,G__18024,G__18025,G__18026,G__18027,G__18028,G__18029,G__18030));
});
var G__18491__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__18031 = a;
var G__18032 = b;
var G__18033 = c;
var G__18034 = d;
var G__18035 = e;
var G__18036 = f;
var G__18037 = g;
var G__18038 = h;
var G__18039 = i;
var G__18040 = j;
var G__18041 = k;
var G__18042 = l;
var G__18043 = m;
var G__18044 = n;
var G__18045 = o;
var G__18046 = p;
var G__18047 = q;
var G__18048 = r;
var G__18049 = s;
var G__18050 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18031,G__18032,G__18033,G__18034,G__18035,G__18036,G__18037,G__18038,G__18039,G__18040,G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048,G__18049,G__18050) : self__.dispatch_fn.call(null,G__18031,G__18032,G__18033,G__18034,G__18035,G__18036,G__18037,G__18038,G__18039,G__18040,G__18041,G__18042,G__18043,G__18044,G__18045,G__18046,G__18047,G__18048,G__18049,G__18050));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18051 = a;
var G__18052 = b;
var G__18053 = c;
var G__18054 = d;
var G__18055 = e;
var G__18056 = f;
var G__18057 = g;
var G__18058 = h;
var G__18059 = i;
var G__18060 = j;
var G__18061 = k;
var G__18062 = l;
var G__18063 = m;
var G__18064 = n;
var G__18065 = o;
var G__18066 = p;
var G__18067 = q;
var G__18068 = r;
var G__18069 = s;
var G__18070 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18051,G__18052,G__18053,G__18054,G__18055,G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062,G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070) : target_fn.call(null,G__18051,G__18052,G__18053,G__18054,G__18055,G__18056,G__18057,G__18058,G__18059,G__18060,G__18061,G__18062,G__18063,G__18064,G__18065,G__18066,G__18067,G__18068,G__18069,G__18070));
});
var G__18491__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__18491 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18491__1.call(this,self__);
case 2:
return G__18491__2.call(this,self__,a);
case 3:
return G__18491__3.call(this,self__,a,b);
case 4:
return G__18491__4.call(this,self__,a,b,c);
case 5:
return G__18491__5.call(this,self__,a,b,c,d);
case 6:
return G__18491__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18491__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18491__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18491__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18491__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18491__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18491__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18491__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18491__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18491__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18491__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18491__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18491__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18491__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18491__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18491__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18491__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18491.cljs$core$IFn$_invoke$arity$1 = G__18491__1;
G__18491.cljs$core$IFn$_invoke$arity$2 = G__18491__2;
G__18491.cljs$core$IFn$_invoke$arity$3 = G__18491__3;
G__18491.cljs$core$IFn$_invoke$arity$4 = G__18491__4;
G__18491.cljs$core$IFn$_invoke$arity$5 = G__18491__5;
G__18491.cljs$core$IFn$_invoke$arity$6 = G__18491__6;
G__18491.cljs$core$IFn$_invoke$arity$7 = G__18491__7;
G__18491.cljs$core$IFn$_invoke$arity$8 = G__18491__8;
G__18491.cljs$core$IFn$_invoke$arity$9 = G__18491__9;
G__18491.cljs$core$IFn$_invoke$arity$10 = G__18491__10;
G__18491.cljs$core$IFn$_invoke$arity$11 = G__18491__11;
G__18491.cljs$core$IFn$_invoke$arity$12 = G__18491__12;
G__18491.cljs$core$IFn$_invoke$arity$13 = G__18491__13;
G__18491.cljs$core$IFn$_invoke$arity$14 = G__18491__14;
G__18491.cljs$core$IFn$_invoke$arity$15 = G__18491__15;
G__18491.cljs$core$IFn$_invoke$arity$16 = G__18491__16;
G__18491.cljs$core$IFn$_invoke$arity$17 = G__18491__17;
G__18491.cljs$core$IFn$_invoke$arity$18 = G__18491__18;
G__18491.cljs$core$IFn$_invoke$arity$19 = G__18491__19;
G__18491.cljs$core$IFn$_invoke$arity$20 = G__18491__20;
G__18491.cljs$core$IFn$_invoke$arity$21 = G__18491__21;
G__18491.cljs$core$IFn$_invoke$arity$22 = G__18491__22;
return G__18491;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args17643){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args17643)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18071 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18071) : self__.dispatch_fn.call(null,G__18071));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18072 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18072) : target_fn.call(null,G__18072));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18073 = a;
var G__18074 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18073,G__18074) : self__.dispatch_fn.call(null,G__18073,G__18074));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18075 = a;
var G__18076 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18075,G__18076) : target_fn.call(null,G__18075,G__18076));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18077 = a;
var G__18078 = b;
var G__18079 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18077,G__18078,G__18079) : self__.dispatch_fn.call(null,G__18077,G__18078,G__18079));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18080 = a;
var G__18081 = b;
var G__18082 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18080,G__18081,G__18082) : target_fn.call(null,G__18080,G__18081,G__18082));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18083 = a;
var G__18084 = b;
var G__18085 = c;
var G__18086 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18083,G__18084,G__18085,G__18086) : self__.dispatch_fn.call(null,G__18083,G__18084,G__18085,G__18086));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18087 = a;
var G__18088 = b;
var G__18089 = c;
var G__18090 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18087,G__18088,G__18089,G__18090) : target_fn.call(null,G__18087,G__18088,G__18089,G__18090));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18091 = a;
var G__18092 = b;
var G__18093 = c;
var G__18094 = d;
var G__18095 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18091,G__18092,G__18093,G__18094,G__18095) : self__.dispatch_fn.call(null,G__18091,G__18092,G__18093,G__18094,G__18095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18096 = a;
var G__18097 = b;
var G__18098 = c;
var G__18099 = d;
var G__18100 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18096,G__18097,G__18098,G__18099,G__18100) : target_fn.call(null,G__18096,G__18097,G__18098,G__18099,G__18100));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18101 = a;
var G__18102 = b;
var G__18103 = c;
var G__18104 = d;
var G__18105 = e;
var G__18106 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18101,G__18102,G__18103,G__18104,G__18105,G__18106) : self__.dispatch_fn.call(null,G__18101,G__18102,G__18103,G__18104,G__18105,G__18106));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18107 = a;
var G__18108 = b;
var G__18109 = c;
var G__18110 = d;
var G__18111 = e;
var G__18112 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18107,G__18108,G__18109,G__18110,G__18111,G__18112) : target_fn.call(null,G__18107,G__18108,G__18109,G__18110,G__18111,G__18112));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18113 = a;
var G__18114 = b;
var G__18115 = c;
var G__18116 = d;
var G__18117 = e;
var G__18118 = f;
var G__18119 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18113,G__18114,G__18115,G__18116,G__18117,G__18118,G__18119) : self__.dispatch_fn.call(null,G__18113,G__18114,G__18115,G__18116,G__18117,G__18118,G__18119));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18120 = a;
var G__18121 = b;
var G__18122 = c;
var G__18123 = d;
var G__18124 = e;
var G__18125 = f;
var G__18126 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126) : target_fn.call(null,G__18120,G__18121,G__18122,G__18123,G__18124,G__18125,G__18126));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18127 = a;
var G__18128 = b;
var G__18129 = c;
var G__18130 = d;
var G__18131 = e;
var G__18132 = f;
var G__18133 = g;
var G__18134 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18127,G__18128,G__18129,G__18130,G__18131,G__18132,G__18133,G__18134) : self__.dispatch_fn.call(null,G__18127,G__18128,G__18129,G__18130,G__18131,G__18132,G__18133,G__18134));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18135 = a;
var G__18136 = b;
var G__18137 = c;
var G__18138 = d;
var G__18139 = e;
var G__18140 = f;
var G__18141 = g;
var G__18142 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18135,G__18136,G__18137,G__18138,G__18139,G__18140,G__18141,G__18142) : target_fn.call(null,G__18135,G__18136,G__18137,G__18138,G__18139,G__18140,G__18141,G__18142));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18143 = a;
var G__18144 = b;
var G__18145 = c;
var G__18146 = d;
var G__18147 = e;
var G__18148 = f;
var G__18149 = g;
var G__18150 = h;
var G__18151 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150,G__18151) : self__.dispatch_fn.call(null,G__18143,G__18144,G__18145,G__18146,G__18147,G__18148,G__18149,G__18150,G__18151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18152 = a;
var G__18153 = b;
var G__18154 = c;
var G__18155 = d;
var G__18156 = e;
var G__18157 = f;
var G__18158 = g;
var G__18159 = h;
var G__18160 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159,G__18160) : target_fn.call(null,G__18152,G__18153,G__18154,G__18155,G__18156,G__18157,G__18158,G__18159,G__18160));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18161 = a;
var G__18162 = b;
var G__18163 = c;
var G__18164 = d;
var G__18165 = e;
var G__18166 = f;
var G__18167 = g;
var G__18168 = h;
var G__18169 = i;
var G__18170 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169,G__18170) : self__.dispatch_fn.call(null,G__18161,G__18162,G__18163,G__18164,G__18165,G__18166,G__18167,G__18168,G__18169,G__18170));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18171 = a;
var G__18172 = b;
var G__18173 = c;
var G__18174 = d;
var G__18175 = e;
var G__18176 = f;
var G__18177 = g;
var G__18178 = h;
var G__18179 = i;
var G__18180 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180) : target_fn.call(null,G__18171,G__18172,G__18173,G__18174,G__18175,G__18176,G__18177,G__18178,G__18179,G__18180));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18181 = a;
var G__18182 = b;
var G__18183 = c;
var G__18184 = d;
var G__18185 = e;
var G__18186 = f;
var G__18187 = g;
var G__18188 = h;
var G__18189 = i;
var G__18190 = j;
var G__18191 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18181,G__18182,G__18183,G__18184,G__18185,G__18186,G__18187,G__18188,G__18189,G__18190,G__18191) : self__.dispatch_fn.call(null,G__18181,G__18182,G__18183,G__18184,G__18185,G__18186,G__18187,G__18188,G__18189,G__18190,G__18191));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18192 = a;
var G__18193 = b;
var G__18194 = c;
var G__18195 = d;
var G__18196 = e;
var G__18197 = f;
var G__18198 = g;
var G__18199 = h;
var G__18200 = i;
var G__18201 = j;
var G__18202 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201,G__18202) : target_fn.call(null,G__18192,G__18193,G__18194,G__18195,G__18196,G__18197,G__18198,G__18199,G__18200,G__18201,G__18202));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18203 = a;
var G__18204 = b;
var G__18205 = c;
var G__18206 = d;
var G__18207 = e;
var G__18208 = f;
var G__18209 = g;
var G__18210 = h;
var G__18211 = i;
var G__18212 = j;
var G__18213 = k;
var G__18214 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18203,G__18204,G__18205,G__18206,G__18207,G__18208,G__18209,G__18210,G__18211,G__18212,G__18213,G__18214) : self__.dispatch_fn.call(null,G__18203,G__18204,G__18205,G__18206,G__18207,G__18208,G__18209,G__18210,G__18211,G__18212,G__18213,G__18214));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18215 = a;
var G__18216 = b;
var G__18217 = c;
var G__18218 = d;
var G__18219 = e;
var G__18220 = f;
var G__18221 = g;
var G__18222 = h;
var G__18223 = i;
var G__18224 = j;
var G__18225 = k;
var G__18226 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18215,G__18216,G__18217,G__18218,G__18219,G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226) : target_fn.call(null,G__18215,G__18216,G__18217,G__18218,G__18219,G__18220,G__18221,G__18222,G__18223,G__18224,G__18225,G__18226));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18227 = a;
var G__18228 = b;
var G__18229 = c;
var G__18230 = d;
var G__18231 = e;
var G__18232 = f;
var G__18233 = g;
var G__18234 = h;
var G__18235 = i;
var G__18236 = j;
var G__18237 = k;
var G__18238 = l;
var G__18239 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18227,G__18228,G__18229,G__18230,G__18231,G__18232,G__18233,G__18234,G__18235,G__18236,G__18237,G__18238,G__18239) : self__.dispatch_fn.call(null,G__18227,G__18228,G__18229,G__18230,G__18231,G__18232,G__18233,G__18234,G__18235,G__18236,G__18237,G__18238,G__18239));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18240 = a;
var G__18241 = b;
var G__18242 = c;
var G__18243 = d;
var G__18244 = e;
var G__18245 = f;
var G__18246 = g;
var G__18247 = h;
var G__18248 = i;
var G__18249 = j;
var G__18250 = k;
var G__18251 = l;
var G__18252 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18240,G__18241,G__18242,G__18243,G__18244,G__18245,G__18246,G__18247,G__18248,G__18249,G__18250,G__18251,G__18252) : target_fn.call(null,G__18240,G__18241,G__18242,G__18243,G__18244,G__18245,G__18246,G__18247,G__18248,G__18249,G__18250,G__18251,G__18252));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18253 = a;
var G__18254 = b;
var G__18255 = c;
var G__18256 = d;
var G__18257 = e;
var G__18258 = f;
var G__18259 = g;
var G__18260 = h;
var G__18261 = i;
var G__18262 = j;
var G__18263 = k;
var G__18264 = l;
var G__18265 = m;
var G__18266 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18253,G__18254,G__18255,G__18256,G__18257,G__18258,G__18259,G__18260,G__18261,G__18262,G__18263,G__18264,G__18265,G__18266) : self__.dispatch_fn.call(null,G__18253,G__18254,G__18255,G__18256,G__18257,G__18258,G__18259,G__18260,G__18261,G__18262,G__18263,G__18264,G__18265,G__18266));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18267 = a;
var G__18268 = b;
var G__18269 = c;
var G__18270 = d;
var G__18271 = e;
var G__18272 = f;
var G__18273 = g;
var G__18274 = h;
var G__18275 = i;
var G__18276 = j;
var G__18277 = k;
var G__18278 = l;
var G__18279 = m;
var G__18280 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18267,G__18268,G__18269,G__18270,G__18271,G__18272,G__18273,G__18274,G__18275,G__18276,G__18277,G__18278,G__18279,G__18280) : target_fn.call(null,G__18267,G__18268,G__18269,G__18270,G__18271,G__18272,G__18273,G__18274,G__18275,G__18276,G__18277,G__18278,G__18279,G__18280));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18281 = a;
var G__18282 = b;
var G__18283 = c;
var G__18284 = d;
var G__18285 = e;
var G__18286 = f;
var G__18287 = g;
var G__18288 = h;
var G__18289 = i;
var G__18290 = j;
var G__18291 = k;
var G__18292 = l;
var G__18293 = m;
var G__18294 = n;
var G__18295 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287,G__18288,G__18289,G__18290,G__18291,G__18292,G__18293,G__18294,G__18295) : self__.dispatch_fn.call(null,G__18281,G__18282,G__18283,G__18284,G__18285,G__18286,G__18287,G__18288,G__18289,G__18290,G__18291,G__18292,G__18293,G__18294,G__18295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18296 = a;
var G__18297 = b;
var G__18298 = c;
var G__18299 = d;
var G__18300 = e;
var G__18301 = f;
var G__18302 = g;
var G__18303 = h;
var G__18304 = i;
var G__18305 = j;
var G__18306 = k;
var G__18307 = l;
var G__18308 = m;
var G__18309 = n;
var G__18310 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304,G__18305,G__18306,G__18307,G__18308,G__18309,G__18310) : target_fn.call(null,G__18296,G__18297,G__18298,G__18299,G__18300,G__18301,G__18302,G__18303,G__18304,G__18305,G__18306,G__18307,G__18308,G__18309,G__18310));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18311 = a;
var G__18312 = b;
var G__18313 = c;
var G__18314 = d;
var G__18315 = e;
var G__18316 = f;
var G__18317 = g;
var G__18318 = h;
var G__18319 = i;
var G__18320 = j;
var G__18321 = k;
var G__18322 = l;
var G__18323 = m;
var G__18324 = n;
var G__18325 = o;
var G__18326 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18311,G__18312,G__18313,G__18314,G__18315,G__18316,G__18317,G__18318,G__18319,G__18320,G__18321,G__18322,G__18323,G__18324,G__18325,G__18326) : self__.dispatch_fn.call(null,G__18311,G__18312,G__18313,G__18314,G__18315,G__18316,G__18317,G__18318,G__18319,G__18320,G__18321,G__18322,G__18323,G__18324,G__18325,G__18326));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18327 = a;
var G__18328 = b;
var G__18329 = c;
var G__18330 = d;
var G__18331 = e;
var G__18332 = f;
var G__18333 = g;
var G__18334 = h;
var G__18335 = i;
var G__18336 = j;
var G__18337 = k;
var G__18338 = l;
var G__18339 = m;
var G__18340 = n;
var G__18341 = o;
var G__18342 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18327,G__18328,G__18329,G__18330,G__18331,G__18332,G__18333,G__18334,G__18335,G__18336,G__18337,G__18338,G__18339,G__18340,G__18341,G__18342) : target_fn.call(null,G__18327,G__18328,G__18329,G__18330,G__18331,G__18332,G__18333,G__18334,G__18335,G__18336,G__18337,G__18338,G__18339,G__18340,G__18341,G__18342));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18343 = a;
var G__18344 = b;
var G__18345 = c;
var G__18346 = d;
var G__18347 = e;
var G__18348 = f;
var G__18349 = g;
var G__18350 = h;
var G__18351 = i;
var G__18352 = j;
var G__18353 = k;
var G__18354 = l;
var G__18355 = m;
var G__18356 = n;
var G__18357 = o;
var G__18358 = p;
var G__18359 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359) : self__.dispatch_fn.call(null,G__18343,G__18344,G__18345,G__18346,G__18347,G__18348,G__18349,G__18350,G__18351,G__18352,G__18353,G__18354,G__18355,G__18356,G__18357,G__18358,G__18359));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18360 = a;
var G__18361 = b;
var G__18362 = c;
var G__18363 = d;
var G__18364 = e;
var G__18365 = f;
var G__18366 = g;
var G__18367 = h;
var G__18368 = i;
var G__18369 = j;
var G__18370 = k;
var G__18371 = l;
var G__18372 = m;
var G__18373 = n;
var G__18374 = o;
var G__18375 = p;
var G__18376 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18360,G__18361,G__18362,G__18363,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376) : target_fn.call(null,G__18360,G__18361,G__18362,G__18363,G__18364,G__18365,G__18366,G__18367,G__18368,G__18369,G__18370,G__18371,G__18372,G__18373,G__18374,G__18375,G__18376));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18377 = a;
var G__18378 = b;
var G__18379 = c;
var G__18380 = d;
var G__18381 = e;
var G__18382 = f;
var G__18383 = g;
var G__18384 = h;
var G__18385 = i;
var G__18386 = j;
var G__18387 = k;
var G__18388 = l;
var G__18389 = m;
var G__18390 = n;
var G__18391 = o;
var G__18392 = p;
var G__18393 = q;
var G__18394 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392,G__18393,G__18394) : self__.dispatch_fn.call(null,G__18377,G__18378,G__18379,G__18380,G__18381,G__18382,G__18383,G__18384,G__18385,G__18386,G__18387,G__18388,G__18389,G__18390,G__18391,G__18392,G__18393,G__18394));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18395 = a;
var G__18396 = b;
var G__18397 = c;
var G__18398 = d;
var G__18399 = e;
var G__18400 = f;
var G__18401 = g;
var G__18402 = h;
var G__18403 = i;
var G__18404 = j;
var G__18405 = k;
var G__18406 = l;
var G__18407 = m;
var G__18408 = n;
var G__18409 = o;
var G__18410 = p;
var G__18411 = q;
var G__18412 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412) : target_fn.call(null,G__18395,G__18396,G__18397,G__18398,G__18399,G__18400,G__18401,G__18402,G__18403,G__18404,G__18405,G__18406,G__18407,G__18408,G__18409,G__18410,G__18411,G__18412));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18413 = a;
var G__18414 = b;
var G__18415 = c;
var G__18416 = d;
var G__18417 = e;
var G__18418 = f;
var G__18419 = g;
var G__18420 = h;
var G__18421 = i;
var G__18422 = j;
var G__18423 = k;
var G__18424 = l;
var G__18425 = m;
var G__18426 = n;
var G__18427 = o;
var G__18428 = p;
var G__18429 = q;
var G__18430 = r;
var G__18431 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431) : self__.dispatch_fn.call(null,G__18413,G__18414,G__18415,G__18416,G__18417,G__18418,G__18419,G__18420,G__18421,G__18422,G__18423,G__18424,G__18425,G__18426,G__18427,G__18428,G__18429,G__18430,G__18431));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18432 = a;
var G__18433 = b;
var G__18434 = c;
var G__18435 = d;
var G__18436 = e;
var G__18437 = f;
var G__18438 = g;
var G__18439 = h;
var G__18440 = i;
var G__18441 = j;
var G__18442 = k;
var G__18443 = l;
var G__18444 = m;
var G__18445 = n;
var G__18446 = o;
var G__18447 = p;
var G__18448 = q;
var G__18449 = r;
var G__18450 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450) : target_fn.call(null,G__18432,G__18433,G__18434,G__18435,G__18436,G__18437,G__18438,G__18439,G__18440,G__18441,G__18442,G__18443,G__18444,G__18445,G__18446,G__18447,G__18448,G__18449,G__18450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__18451 = a;
var G__18452 = b;
var G__18453 = c;
var G__18454 = d;
var G__18455 = e;
var G__18456 = f;
var G__18457 = g;
var G__18458 = h;
var G__18459 = i;
var G__18460 = j;
var G__18461 = k;
var G__18462 = l;
var G__18463 = m;
var G__18464 = n;
var G__18465 = o;
var G__18466 = p;
var G__18467 = q;
var G__18468 = r;
var G__18469 = s;
var G__18470 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469,G__18470) : self__.dispatch_fn.call(null,G__18451,G__18452,G__18453,G__18454,G__18455,G__18456,G__18457,G__18458,G__18459,G__18460,G__18461,G__18462,G__18463,G__18464,G__18465,G__18466,G__18467,G__18468,G__18469,G__18470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__18471 = a;
var G__18472 = b;
var G__18473 = c;
var G__18474 = d;
var G__18475 = e;
var G__18476 = f;
var G__18477 = g;
var G__18478 = h;
var G__18479 = i;
var G__18480 = j;
var G__18481 = k;
var G__18482 = l;
var G__18483 = m;
var G__18484 = n;
var G__18485 = o;
var G__18486 = p;
var G__18487 = q;
var G__18488 = r;
var G__18489 = s;
var G__18490 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490) : target_fn.call(null,G__18471,G__18472,G__18473,G__18474,G__18475,G__18476,G__18477,G__18478,G__18479,G__18480,G__18481,G__18482,G__18483,G__18484,G__18485,G__18486,G__18487,G__18488,G__18489,G__18490));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__18492 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__18492);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4346__auto__,writer__4347__auto__,opt__4348__auto__){
return cljs.core._write(writer__4347__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__18497 = msg;
return Error(G__18497);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__18502 = x;
var G__18503 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18502,G__18503) : pred.call(null,G__18502,G__18503));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__18504 = y;
var G__18505 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18504,G__18505) : pred.call(null,G__18504,G__18505));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map
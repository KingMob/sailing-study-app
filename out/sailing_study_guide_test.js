if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2342";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__19290__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__19290 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19290__delegate.call(this, args);
    };
    G__19290.cljs$lang$maxFixedArity = 0;
    G__19290.cljs$lang$applyTo = function(arglist__19291) {
      var args = cljs.core.seq(arglist__19291);
      return G__19290__delegate(args);
    };
    G__19290.cljs$core$IFn$_invoke$arity$variadic = G__19290__delegate;
    return G__19290;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3614__auto__ = ty;
    if (cljs.core.truth_(and__3614__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3614__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4495__auto___19292 = len;
  var i_19293 = 0;
  while (true) {
    if (i_19293 < n__4495__auto___19292) {
      new_arr[i_19293] = arr[i_19293];
      var G__19294 = i_19293 + 1;
      i_19293 = G__19294;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__19295__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__19295 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19295__delegate.call(this, array, i, idxs);
    };
    G__19295.cljs$lang$maxFixedArity = 2;
    G__19295.cljs$lang$applyTo = function(arglist__19296) {
      var array = cljs.core.first(arglist__19296);
      arglist__19296 = cljs.core.next(arglist__19296);
      var i = cljs.core.first(arglist__19296);
      var idxs = cljs.core.rest(arglist__19296);
      return G__19295__delegate(array, i, idxs);
    };
    G__19295.cljs$core$IFn$_invoke$arity$variadic = G__19295__delegate;
    return G__19295;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__19297__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__19297 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19297__delegate.call(this, array, idx, idx2, idxv);
    };
    G__19297.cljs$lang$maxFixedArity = 3;
    G__19297.cljs$lang$applyTo = function(arglist__19298) {
      var array = cljs.core.first(arglist__19298);
      arglist__19298 = cljs.core.next(arglist__19298);
      var idx = cljs.core.first(arglist__19298);
      arglist__19298 = cljs.core.next(arglist__19298);
      var idx2 = cljs.core.first(arglist__19298);
      var idxv = cljs.core.rest(arglist__19298);
      return G__19297__delegate(array, idx, idx2, idxv);
    };
    G__19297.cljs$core$IFn$_invoke$arity$variadic = G__19297__delegate;
    return G__19297;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj19300 = {};
  return obj19300;
}();
cljs.core.IFn = function() {
  var obj19302 = {};
  return obj19302;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = cljs.core._invoke[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._invoke["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj19304 = {};
  return obj19304;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3614__auto__ = value;
    if (and__3614__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4262__auto__ = value == null ? null : value;
    return function() {
      var or__3626__auto__ = cljs.core._clone[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._clone["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj19306 = {};
  return obj19306;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._count[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._count["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj19308 = {};
  return obj19308;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._empty[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._empty["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj19310 = {};
  return obj19310;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._conj[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._conj["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj19312 = {};
  return obj19312;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3614__auto__ = coll;
      if (and__3614__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4262__auto__ = coll == null ? null : coll;
      return function() {
        var or__3626__auto__ = cljs.core._nth[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._nth["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3614__auto__ = coll;
      if (and__3614__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4262__auto__ = coll == null ? null : coll;
      return function() {
        var or__3626__auto__ = cljs.core._nth[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._nth["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj19314 = {};
  return obj19314;
}();
cljs.core.ISeq = function() {
  var obj19316 = {};
  return obj19316;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._first[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._first["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._rest[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._rest["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj19318 = {};
  return obj19318;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._next[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._next["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj19320 = {};
  return obj19320;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3614__auto__ = o;
      if (and__3614__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4262__auto__ = o == null ? null : o;
      return function() {
        var or__3626__auto__ = cljs.core._lookup[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._lookup["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3614__auto__ = o;
      if (and__3614__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4262__auto__ = o == null ? null : o;
      return function() {
        var or__3626__auto__ = cljs.core._lookup[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._lookup["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj19322 = {};
  return obj19322;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._assoc[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._assoc["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj19324 = {};
  return obj19324;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._dissoc[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._dissoc["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj19326 = {};
  return obj19326;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._key[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._key["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._val[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._val["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj19328 = {};
  return obj19328;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._disjoin[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._disjoin["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj19330 = {};
  return obj19330;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._peek[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._peek["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._pop[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._pop["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj19332 = {};
  return obj19332;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._assoc_n[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj19334 = {};
  return obj19334;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._deref[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._deref["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj19336 = {};
  return obj19336;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj19338 = {};
  return obj19338;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._meta[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._meta["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj19340 = {};
  return obj19340;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._with_meta[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._with_meta["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj19342 = {};
  return obj19342;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3614__auto__ = coll;
      if (and__3614__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4262__auto__ = coll == null ? null : coll;
      return function() {
        var or__3626__auto__ = cljs.core._reduce[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._reduce["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3614__auto__ = coll;
      if (and__3614__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4262__auto__ = coll == null ? null : coll;
      return function() {
        var or__3626__auto__ = cljs.core._reduce[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._reduce["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj19344 = {};
  return obj19344;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj19346 = {};
  return obj19346;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._equiv[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._equiv["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj19348 = {};
  return obj19348;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._hash[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._hash["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj19350 = {};
  return obj19350;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._seq[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._seq["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj19352 = {};
  return obj19352;
}();
cljs.core.IList = function() {
  var obj19354 = {};
  return obj19354;
}();
cljs.core.IRecord = function() {
  var obj19356 = {};
  return obj19356;
}();
cljs.core.IReversible = function() {
  var obj19358 = {};
  return obj19358;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._rseq[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._rseq["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj19360 = {};
  return obj19360;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._entry_key[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._entry_key["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._comparator[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._comparator["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj19362 = {};
  return obj19362;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3614__auto__ = writer;
    if (and__3614__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4262__auto__ = writer == null ? null : writer;
    return function() {
      var or__3626__auto__ = cljs.core._write[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._write["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3614__auto__ = writer;
    if (and__3614__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4262__auto__ = writer == null ? null : writer;
    return function() {
      var or__3626__auto__ = cljs.core._flush[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._flush["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj19364 = {};
  return obj19364;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._pr_writer[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj19366 = {};
  return obj19366;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3614__auto__ = d;
    if (and__3614__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4262__auto__ = d == null ? null : d;
    return function() {
      var or__3626__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj19368 = {};
  return obj19368;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = cljs.core._notify_watches[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = cljs.core._add_watch[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._add_watch["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = cljs.core._remove_watch[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj19370 = {};
  return obj19370;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._as_transient[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._as_transient["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj19372 = {};
  return obj19372;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3614__auto__ = tcoll;
    if (and__3614__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4262__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3626__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3614__auto__ = tcoll;
    if (and__3614__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4262__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3626__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj19374 = {};
  return obj19374;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3614__auto__ = tcoll;
    if (and__3614__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4262__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3626__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj19376 = {};
  return obj19376;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3614__auto__ = tcoll;
    if (and__3614__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4262__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3626__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj19378 = {};
  return obj19378;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3614__auto__ = tcoll;
    if (and__3614__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4262__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3626__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3614__auto__ = tcoll;
    if (and__3614__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4262__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3626__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj19380 = {};
  return obj19380;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3614__auto__ = tcoll;
    if (and__3614__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4262__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3626__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj19382 = {};
  return obj19382;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = cljs.core._compare[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._compare["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj19384 = {};
  return obj19384;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._drop_first[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._drop_first["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj19386 = {};
  return obj19386;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._chunked_first[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj19388 = {};
  return obj19388;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3614__auto__ = coll;
    if (and__3614__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4262__auto__ = coll == null ? null : coll;
    return function() {
      var or__3626__auto__ = cljs.core._chunked_next[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj19390 = {};
  return obj19390;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = cljs.core._name[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._name["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = cljs.core._namespace[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._namespace["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj19392 = {};
  return obj19392;
}();
cljs.core.IReset = function() {
  var obj19394 = {};
  return obj19394;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3614__auto__ = o;
    if (and__3614__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4262__auto__ = o == null ? null : o;
    return function() {
      var or__3626__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj19396 = {};
  return obj19396;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3614__auto__ = o;
      if (and__3614__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4262__auto__ = o == null ? null : o;
      return function() {
        var or__3626__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3614__auto__ = o;
      if (and__3614__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4262__auto__ = o == null ? null : o;
      return function() {
        var or__3626__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3614__auto__ = o;
      if (and__3614__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4262__auto__ = o == null ? null : o;
      return function() {
        var or__3626__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3614__auto__ = o;
      if (and__3614__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4262__auto__ = o == null ? null : o;
      return function() {
        var or__3626__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__19397 = i + 2;
        var G__19398 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__19397;
        h1 = G__19398;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj19400 = {};
  return obj19400;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__19401 = i + 1;
          var G__19402 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__19401;
          hash = G__19402;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj19406 = {};
      return obj19406;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__19408 = o;
    if (G__19408) {
      var bit__4282__auto__ = G__19408.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4282__auto__ || G__19408.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3614__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3614__auto__) {
        return b.ns;
      } else {
        return and__3614__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4037__auto__ = self__._hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__19410 = null;
  var G__19410__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__19410__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__19410 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19410__2.call(this, self__, coll);
      case 3:
        return G__19410__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19410.cljs$core$IFn$_invoke$arity$2 = G__19410__2;
  G__19410.cljs$core$IFn$_invoke$arity$3 = G__19410__3;
  return G__19410;
}();
cljs.core.Symbol.prototype.apply = function(self__, args19409) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19409)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__19412 = value;
  if (G__19412) {
    var bit__4289__auto__ = G__19412.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4289__auto__ || G__19412.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__19412.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__19412);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__19412);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__19414 = coll;
      if (G__19414) {
        var bit__4282__auto__ = G__19414.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4282__auto__ || G__19414.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__19416 = coll;
      if (G__19416) {
        var bit__4282__auto__ = G__19416.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4282__auto__ || G__19416.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__19418 = coll;
      if (G__19418) {
        var bit__4282__auto__ = G__19418.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4282__auto__ || G__19418.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__19420 = coll;
      if (G__19420) {
        var bit__4282__auto__ = G__19420.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4282__auto__ || G__19420.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__19421__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__19422 = y;
            var G__19423 = cljs.core.first.call(null, more);
            var G__19424 = cljs.core.next.call(null, more);
            x = G__19422;
            y = G__19423;
            more = G__19424;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19421 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19421__delegate.call(this, x, y, more);
    };
    G__19421.cljs$lang$maxFixedArity = 2;
    G__19421.cljs$lang$applyTo = function(arglist__19425) {
      var x = cljs.core.first(arglist__19425);
      arglist__19425 = cljs.core.next(arglist__19425);
      var y = cljs.core.first(arglist__19425);
      var more = cljs.core.rest(arglist__19425);
      return G__19421__delegate(x, y, more);
    };
    G__19421.cljs$core$IFn$_invoke$arity$variadic = G__19421__delegate;
    return G__19421;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__19426 = n + 1;
      var G__19427 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__19428 = cljs.core.next.call(null, coll__$1);
      n = G__19426;
      hash_code = G__19427;
      coll__$1 = G__19428;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__19429 = n + 1;
      var G__19430 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__19431 = cljs.core.next.call(null, coll__$1);
      n = G__19429;
      hash_code = G__19430;
      coll__$1 = G__19431;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__19432 = nval;
            var G__19433 = n + 1;
            val = G__19432;
            n = G__19433;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19434 = nval;
          var G__19435 = n + 1;
          val__$1 = G__19434;
          n = G__19435;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19436 = nval;
          var G__19437 = n + 1;
          val__$1 = G__19436;
          n = G__19437;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__19438 = nval;
            var G__19439 = n + 1;
            val = G__19438;
            n = G__19439;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19440 = nval;
          var G__19441 = n + 1;
          val__$1 = G__19440;
          n = G__19441;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19442 = nval;
          var G__19443 = n + 1;
          val__$1 = G__19442;
          n = G__19443;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__19445 = x;
  if (G__19445) {
    var bit__4289__auto__ = G__19445.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4289__auto__ || G__19445.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__19445.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__19445);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__19445);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__19447 = x;
  if (G__19447) {
    var bit__4289__auto__ = G__19447.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4289__auto__ || G__19447.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__19447.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__19447);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__19447);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__19448 = sn;
      s = G__19448;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__19449__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__19450 = conj.call(null, coll, x);
          var G__19451 = cljs.core.first.call(null, xs);
          var G__19452 = cljs.core.next.call(null, xs);
          coll = G__19450;
          x = G__19451;
          xs = G__19452;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__19449 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19449__delegate.call(this, coll, x, xs);
    };
    G__19449.cljs$lang$maxFixedArity = 2;
    G__19449.cljs$lang$applyTo = function(arglist__19453) {
      var coll = cljs.core.first(arglist__19453);
      arglist__19453 = cljs.core.next(arglist__19453);
      var x = cljs.core.first(arglist__19453);
      var xs = cljs.core.rest(arglist__19453);
      return G__19449__delegate(coll, x, xs);
    };
    G__19449.cljs$core$IFn$_invoke$arity$variadic = G__19449__delegate;
    return G__19449;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__19454 = cljs.core.next.call(null, s);
      var G__19455 = acc + 1;
      s = G__19454;
      acc = G__19455;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__19457 = coll;
      if (G__19457) {
        var bit__4282__auto__ = G__19457.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4282__auto__ || G__19457.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__19458 = cljs.core.next.call(null, coll);
              var G__19459 = n - 1;
              coll = G__19458;
              n = G__19459;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__19460 = cljs.core.next.call(null, coll);
              var G__19461 = n - 1;
              var G__19462 = not_found;
              coll = G__19460;
              n = G__19461;
              not_found = G__19462;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__19467 = coll;
          if (G__19467) {
            var bit__4282__auto__ = G__19467.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4282__auto__ || G__19467.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__19468 = coll;
                  if (G__19468) {
                    var bit__4289__auto__ = G__19468.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4289__auto__ || G__19468.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__19468.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19468);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19468);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__19469 = coll;
          if (G__19469) {
            var bit__4282__auto__ = G__19469.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4282__auto__ || G__19469.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__19470 = coll;
                  if (G__19470) {
                    var bit__4289__auto__ = G__19470.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4289__auto__ || G__19470.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__19470.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19470);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19470);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__19473 = o;
        if (G__19473) {
          var bit__4282__auto__ = G__19473.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4282__auto__ || G__19473.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__19474 = o;
        if (G__19474) {
          var bit__4282__auto__ = G__19474.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4282__auto__ || G__19474.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__19475__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__19476 = ret;
          var G__19477 = cljs.core.first.call(null, kvs);
          var G__19478 = cljs.core.second.call(null, kvs);
          var G__19479 = cljs.core.nnext.call(null, kvs);
          coll = G__19476;
          k = G__19477;
          v = G__19478;
          kvs = G__19479;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__19475 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19475__delegate.call(this, coll, k, v, kvs);
    };
    G__19475.cljs$lang$maxFixedArity = 3;
    G__19475.cljs$lang$applyTo = function(arglist__19480) {
      var coll = cljs.core.first(arglist__19480);
      arglist__19480 = cljs.core.next(arglist__19480);
      var k = cljs.core.first(arglist__19480);
      arglist__19480 = cljs.core.next(arglist__19480);
      var v = cljs.core.first(arglist__19480);
      var kvs = cljs.core.rest(arglist__19480);
      return G__19475__delegate(coll, k, v, kvs);
    };
    G__19475.cljs$core$IFn$_invoke$arity$variadic = G__19475__delegate;
    return G__19475;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__19481__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__19482 = ret;
            var G__19483 = cljs.core.first.call(null, ks);
            var G__19484 = cljs.core.next.call(null, ks);
            coll = G__19482;
            k = G__19483;
            ks = G__19484;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__19481 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19481__delegate.call(this, coll, k, ks);
    };
    G__19481.cljs$lang$maxFixedArity = 2;
    G__19481.cljs$lang$applyTo = function(arglist__19485) {
      var coll = cljs.core.first(arglist__19485);
      arglist__19485 = cljs.core.next(arglist__19485);
      var k = cljs.core.first(arglist__19485);
      var ks = cljs.core.rest(arglist__19485);
      return G__19481__delegate(coll, k, ks);
    };
    G__19481.cljs$core$IFn$_invoke$arity$variadic = G__19481__delegate;
    return G__19481;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3626__auto__ = goog.isFunction(f);
  if (or__3626__auto__) {
    return or__3626__auto__;
  } else {
    var G__19489 = f;
    if (G__19489) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto____$1 = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto____$1)) {
          return or__3626__auto____$1;
        } else {
          return G__19489.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__19489.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__19489);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__19489);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__19491 = null;
  var G__19491__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__19491__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__19491__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__19491__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__19491__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__19491__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__19491__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__19491__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__19491__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__19491__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__19491__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__19491__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__19491__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__19491__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__19491__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__19491__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__19491__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__19491__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__19491__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__19491__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__19491__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__19491__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__19491 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__19491__1.call(this, self__);
      case 2:
        return G__19491__2.call(this, self__, a);
      case 3:
        return G__19491__3.call(this, self__, a, b);
      case 4:
        return G__19491__4.call(this, self__, a, b, c);
      case 5:
        return G__19491__5.call(this, self__, a, b, c, d);
      case 6:
        return G__19491__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__19491__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__19491__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__19491__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__19491__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__19491__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__19491__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__19491__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__19491__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__19491__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__19491__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__19491__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__19491__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__19491__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__19491__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__19491__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__19491__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19491.cljs$core$IFn$_invoke$arity$1 = G__19491__1;
  G__19491.cljs$core$IFn$_invoke$arity$2 = G__19491__2;
  G__19491.cljs$core$IFn$_invoke$arity$3 = G__19491__3;
  G__19491.cljs$core$IFn$_invoke$arity$4 = G__19491__4;
  G__19491.cljs$core$IFn$_invoke$arity$5 = G__19491__5;
  G__19491.cljs$core$IFn$_invoke$arity$6 = G__19491__6;
  G__19491.cljs$core$IFn$_invoke$arity$7 = G__19491__7;
  G__19491.cljs$core$IFn$_invoke$arity$8 = G__19491__8;
  G__19491.cljs$core$IFn$_invoke$arity$9 = G__19491__9;
  G__19491.cljs$core$IFn$_invoke$arity$10 = G__19491__10;
  G__19491.cljs$core$IFn$_invoke$arity$11 = G__19491__11;
  G__19491.cljs$core$IFn$_invoke$arity$12 = G__19491__12;
  G__19491.cljs$core$IFn$_invoke$arity$13 = G__19491__13;
  G__19491.cljs$core$IFn$_invoke$arity$14 = G__19491__14;
  G__19491.cljs$core$IFn$_invoke$arity$15 = G__19491__15;
  G__19491.cljs$core$IFn$_invoke$arity$16 = G__19491__16;
  G__19491.cljs$core$IFn$_invoke$arity$17 = G__19491__17;
  G__19491.cljs$core$IFn$_invoke$arity$18 = G__19491__18;
  G__19491.cljs$core$IFn$_invoke$arity$19 = G__19491__19;
  G__19491.cljs$core$IFn$_invoke$arity$20 = G__19491__20;
  G__19491.cljs$core$IFn$_invoke$arity$21 = G__19491__21;
  G__19491.cljs$core$IFn$_invoke$arity$22 = G__19491__22;
  return G__19491;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args19490) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19490)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__19495 = o;
    if (G__19495) {
      var bit__4289__auto__ = G__19495.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4289__auto__ || G__19495.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__19495.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19495);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__19495);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3614__auto__ = !(o == null);
    if (and__3614__auto__) {
      var G__19499 = o;
      if (G__19499) {
        var bit__4289__auto__ = G__19499.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4289__auto__ || G__19499.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__19499.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19499);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__19499);
      }
    } else {
      return and__3614__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__19500__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__19501 = ret;
            var G__19502 = cljs.core.first.call(null, ks);
            var G__19503 = cljs.core.next.call(null, ks);
            coll = G__19501;
            k = G__19502;
            ks = G__19503;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__19500 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19500__delegate.call(this, coll, k, ks);
    };
    G__19500.cljs$lang$maxFixedArity = 2;
    G__19500.cljs$lang$applyTo = function(arglist__19504) {
      var coll = cljs.core.first(arglist__19504);
      arglist__19504 = cljs.core.next(arglist__19504);
      var k = cljs.core.first(arglist__19504);
      var ks = cljs.core.rest(arglist__19504);
      return G__19500__delegate(coll, k, ks);
    };
    G__19500.cljs$core$IFn$_invoke$arity$variadic = G__19500__delegate;
    return G__19500;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19506 = x;
    if (G__19506) {
      var bit__4289__auto__ = G__19506.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4289__auto__ || G__19506.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__19506.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__19506);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__19506);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19508 = x;
    if (G__19508) {
      var bit__4289__auto__ = G__19508.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4289__auto__ || G__19508.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__19508.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__19508);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__19508);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__19510 = x;
  if (G__19510) {
    var bit__4289__auto__ = G__19510.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4289__auto__ || G__19510.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__19510.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__19510);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__19510);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__19512 = x;
  if (G__19512) {
    var bit__4289__auto__ = G__19512.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4289__auto__ || G__19512.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__19512.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__19512);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__19512);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__19514 = x;
  if (G__19514) {
    var bit__4289__auto__ = G__19514.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4289__auto__ || G__19514.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__19514.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__19514);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__19514);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__19516 = x;
  if (G__19516) {
    var bit__4289__auto__ = G__19516.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4289__auto__ || G__19516.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__19516.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__19516);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__19516);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__19518 = x;
    if (G__19518) {
      var bit__4289__auto__ = G__19518.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4289__auto__ || G__19518.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__19518.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__19518);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__19518);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__19520 = x;
  if (G__19520) {
    var bit__4289__auto__ = G__19520.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4289__auto__ || G__19520.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__19520.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__19520);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__19520);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__19522 = x;
  if (G__19522) {
    var bit__4282__auto__ = G__19522.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4282__auto__ || G__19522.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj19526 = {};
    return obj19526;
  };
  var js_obj__1 = function() {
    var G__19527__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__19527 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19527__delegate.call(this, keyvals);
    };
    G__19527.cljs$lang$maxFixedArity = 0;
    G__19527.cljs$lang$applyTo = function(arglist__19528) {
      var keyvals = cljs.core.seq(arglist__19528);
      return G__19527__delegate(keyvals);
    };
    G__19527.cljs$core$IFn$_invoke$arity$variadic = G__19527__delegate;
    return G__19527;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__19529 = i__$1 + 1;
      var G__19530 = j__$1 + 1;
      var G__19531 = len__$1 - 1;
      i__$1 = G__19529;
      j__$1 = G__19530;
      len__$1 = G__19531;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__19532 = i__$1 - 1;
      var G__19533 = j__$1 - 1;
      var G__19534 = len__$1 - 1;
      i__$1 = G__19532;
      j__$1 = G__19533;
      len__$1 = G__19534;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj19536 = {};
  return obj19536;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__19538 = s;
    if (G__19538) {
      var bit__4289__auto__ = G__19538.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4289__auto__ || G__19538.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__19538.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19538);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__19538);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__19540 = s;
  if (G__19540) {
    var bit__4289__auto__ = G__19540.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4289__auto__ || G__19540.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__19540.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__19540);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__19540);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3626__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3626__auto__) {
    return or__3626__auto__;
  } else {
    var G__19544 = f;
    if (G__19544) {
      var bit__4289__auto__ = G__19544.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4289__auto__ || G__19544.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__19544.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__19544);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__19544);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__19545__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__19546 = cljs.core.conj.call(null, s, x__$1);
              var G__19547 = etc;
              s = G__19546;
              xs = G__19547;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__19545 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19545__delegate.call(this, x, y, more);
    };
    G__19545.cljs$lang$maxFixedArity = 2;
    G__19545.cljs$lang$applyTo = function(arglist__19548) {
      var x = cljs.core.first(arglist__19548);
      arglist__19548 = cljs.core.next(arglist__19548);
      var y = cljs.core.first(arglist__19548);
      var more = cljs.core.rest(arglist__19548);
      return G__19545__delegate(x, y, more);
    };
    G__19545.cljs$core$IFn$_invoke$arity$variadic = G__19545__delegate;
    return G__19545;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3626__auto__ = cljs.core.seq.call(null, coll);
    if (or__3626__auto__) {
      return or__3626__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__19550 = x;
            if (G__19550) {
              var bit__4282__auto__ = G__19550.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4282__auto__ || G__19550.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__19551 = xs;
        var G__19552 = ys;
        var G__19553 = len;
        var G__19554 = n + 1;
        xs = G__19551;
        ys = G__19552;
        len = G__19553;
        n = G__19554;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__19555 = nval;
          var G__19556 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__19555;
          coll__$1 = G__19556;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__19559 = coll;
      if (G__19559) {
        var bit__4282__auto__ = G__19559.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4282__auto__ || G__19559.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__19560 = coll;
      if (G__19560) {
        var bit__4282__auto__ = G__19560.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4282__auto__ || G__19560.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__19561 = null;
      var G__19561__0 = function() {
        return f.call(null);
      };
      var G__19561__1 = function(x) {
        return cf.call(null, x);
      };
      var G__19561__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__19561 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__19561__0.call(this);
          case 1:
            return G__19561__1.call(this, x);
          case 2:
            return G__19561__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19561.cljs$core$IFn$_invoke$arity$0 = G__19561__0;
      G__19561.cljs$core$IFn$_invoke$arity$1 = G__19561__1;
      G__19561.cljs$core$IFn$_invoke$arity$2 = G__19561__2;
      return G__19561;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__19562__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__19562 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19562__delegate.call(this, x, y, more);
    };
    G__19562.cljs$lang$maxFixedArity = 2;
    G__19562.cljs$lang$applyTo = function(arglist__19563) {
      var x = cljs.core.first(arglist__19563);
      arglist__19563 = cljs.core.next(arglist__19563);
      var y = cljs.core.first(arglist__19563);
      var more = cljs.core.rest(arglist__19563);
      return G__19562__delegate(x, y, more);
    };
    G__19562.cljs$core$IFn$_invoke$arity$variadic = G__19562__delegate;
    return G__19562;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__19564__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__19564 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19564__delegate.call(this, x, y, more);
    };
    G__19564.cljs$lang$maxFixedArity = 2;
    G__19564.cljs$lang$applyTo = function(arglist__19565) {
      var x = cljs.core.first(arglist__19565);
      arglist__19565 = cljs.core.next(arglist__19565);
      var y = cljs.core.first(arglist__19565);
      var more = cljs.core.rest(arglist__19565);
      return G__19564__delegate(x, y, more);
    };
    G__19564.cljs$core$IFn$_invoke$arity$variadic = G__19564__delegate;
    return G__19564;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__19566__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__19566 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19566__delegate.call(this, x, y, more);
    };
    G__19566.cljs$lang$maxFixedArity = 2;
    G__19566.cljs$lang$applyTo = function(arglist__19567) {
      var x = cljs.core.first(arglist__19567);
      arglist__19567 = cljs.core.next(arglist__19567);
      var y = cljs.core.first(arglist__19567);
      var more = cljs.core.rest(arglist__19567);
      return G__19566__delegate(x, y, more);
    };
    G__19566.cljs$core$IFn$_invoke$arity$variadic = G__19566__delegate;
    return G__19566;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__19568__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__19568 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19568__delegate.call(this, x, y, more);
    };
    G__19568.cljs$lang$maxFixedArity = 2;
    G__19568.cljs$lang$applyTo = function(arglist__19569) {
      var x = cljs.core.first(arglist__19569);
      arglist__19569 = cljs.core.next(arglist__19569);
      var y = cljs.core.first(arglist__19569);
      var more = cljs.core.rest(arglist__19569);
      return G__19568__delegate(x, y, more);
    };
    G__19568.cljs$core$IFn$_invoke$arity$variadic = G__19568__delegate;
    return G__19568;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__19570__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__19571 = y;
            var G__19572 = cljs.core.first.call(null, more);
            var G__19573 = cljs.core.next.call(null, more);
            x = G__19571;
            y = G__19572;
            more = G__19573;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19570 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19570__delegate.call(this, x, y, more);
    };
    G__19570.cljs$lang$maxFixedArity = 2;
    G__19570.cljs$lang$applyTo = function(arglist__19574) {
      var x = cljs.core.first(arglist__19574);
      arglist__19574 = cljs.core.next(arglist__19574);
      var y = cljs.core.first(arglist__19574);
      var more = cljs.core.rest(arglist__19574);
      return G__19570__delegate(x, y, more);
    };
    G__19570.cljs$core$IFn$_invoke$arity$variadic = G__19570__delegate;
    return G__19570;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__19575__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__19576 = y;
            var G__19577 = cljs.core.first.call(null, more);
            var G__19578 = cljs.core.next.call(null, more);
            x = G__19576;
            y = G__19577;
            more = G__19578;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19575 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19575__delegate.call(this, x, y, more);
    };
    G__19575.cljs$lang$maxFixedArity = 2;
    G__19575.cljs$lang$applyTo = function(arglist__19579) {
      var x = cljs.core.first(arglist__19579);
      arglist__19579 = cljs.core.next(arglist__19579);
      var y = cljs.core.first(arglist__19579);
      var more = cljs.core.rest(arglist__19579);
      return G__19575__delegate(x, y, more);
    };
    G__19575.cljs$core$IFn$_invoke$arity$variadic = G__19575__delegate;
    return G__19575;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__19580__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__19581 = y;
            var G__19582 = cljs.core.first.call(null, more);
            var G__19583 = cljs.core.next.call(null, more);
            x = G__19581;
            y = G__19582;
            more = G__19583;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19580 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19580__delegate.call(this, x, y, more);
    };
    G__19580.cljs$lang$maxFixedArity = 2;
    G__19580.cljs$lang$applyTo = function(arglist__19584) {
      var x = cljs.core.first(arglist__19584);
      arglist__19584 = cljs.core.next(arglist__19584);
      var y = cljs.core.first(arglist__19584);
      var more = cljs.core.rest(arglist__19584);
      return G__19580__delegate(x, y, more);
    };
    G__19580.cljs$core$IFn$_invoke$arity$variadic = G__19580__delegate;
    return G__19580;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__19585__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__19586 = y;
            var G__19587 = cljs.core.first.call(null, more);
            var G__19588 = cljs.core.next.call(null, more);
            x = G__19586;
            y = G__19587;
            more = G__19588;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19585 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19585__delegate.call(this, x, y, more);
    };
    G__19585.cljs$lang$maxFixedArity = 2;
    G__19585.cljs$lang$applyTo = function(arglist__19589) {
      var x = cljs.core.first(arglist__19589);
      arglist__19589 = cljs.core.next(arglist__19589);
      var y = cljs.core.first(arglist__19589);
      var more = cljs.core.rest(arglist__19589);
      return G__19585__delegate(x, y, more);
    };
    G__19585.cljs$core$IFn$_invoke$arity$variadic = G__19585__delegate;
    return G__19585;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3933__auto__ = x;
    var y__3934__auto__ = y;
    return x__3933__auto__ > y__3934__auto__ ? x__3933__auto__ : y__3934__auto__;
  };
  var max__3 = function() {
    var G__19590__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3933__auto__ = x;
        var y__3934__auto__ = y;
        return x__3933__auto__ > y__3934__auto__ ? x__3933__auto__ : y__3934__auto__;
      }(), more);
    };
    var G__19590 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19590__delegate.call(this, x, y, more);
    };
    G__19590.cljs$lang$maxFixedArity = 2;
    G__19590.cljs$lang$applyTo = function(arglist__19591) {
      var x = cljs.core.first(arglist__19591);
      arglist__19591 = cljs.core.next(arglist__19591);
      var y = cljs.core.first(arglist__19591);
      var more = cljs.core.rest(arglist__19591);
      return G__19590__delegate(x, y, more);
    };
    G__19590.cljs$core$IFn$_invoke$arity$variadic = G__19590__delegate;
    return G__19590;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3940__auto__ = x;
    var y__3941__auto__ = y;
    return x__3940__auto__ < y__3941__auto__ ? x__3940__auto__ : y__3941__auto__;
  };
  var min__3 = function() {
    var G__19592__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3940__auto__ = x;
        var y__3941__auto__ = y;
        return x__3940__auto__ < y__3941__auto__ ? x__3940__auto__ : y__3941__auto__;
      }(), more);
    };
    var G__19592 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19592__delegate.call(this, x, y, more);
    };
    G__19592.cljs$lang$maxFixedArity = 2;
    G__19592.cljs$lang$applyTo = function(arglist__19593) {
      var x = cljs.core.first(arglist__19593);
      arglist__19593 = cljs.core.next(arglist__19593);
      var y = cljs.core.first(arglist__19593);
      var more = cljs.core.rest(arglist__19593);
      return G__19592__delegate(x, y, more);
    };
    G__19592.cljs$core$IFn$_invoke$arity$variadic = G__19592__delegate;
    return G__19592;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__19594__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__19594 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19594__delegate.call(this, x, y, more);
    };
    G__19594.cljs$lang$maxFixedArity = 2;
    G__19594.cljs$lang$applyTo = function(arglist__19595) {
      var x = cljs.core.first(arglist__19595);
      arglist__19595 = cljs.core.next(arglist__19595);
      var y = cljs.core.first(arglist__19595);
      var more = cljs.core.rest(arglist__19595);
      return G__19594__delegate(x, y, more);
    };
    G__19594.cljs$core$IFn$_invoke$arity$variadic = G__19594__delegate;
    return G__19594;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__19596__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__19596 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19596__delegate.call(this, x, y, more);
    };
    G__19596.cljs$lang$maxFixedArity = 2;
    G__19596.cljs$lang$applyTo = function(arglist__19597) {
      var x = cljs.core.first(arglist__19597);
      arglist__19597 = cljs.core.next(arglist__19597);
      var y = cljs.core.first(arglist__19597);
      var more = cljs.core.rest(arglist__19597);
      return G__19596__delegate(x, y, more);
    };
    G__19596.cljs$core$IFn$_invoke$arity$variadic = G__19596__delegate;
    return G__19596;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__19598__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__19598 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19598__delegate.call(this, x, y, more);
    };
    G__19598.cljs$lang$maxFixedArity = 2;
    G__19598.cljs$lang$applyTo = function(arglist__19599) {
      var x = cljs.core.first(arglist__19599);
      arglist__19599 = cljs.core.next(arglist__19599);
      var y = cljs.core.first(arglist__19599);
      var more = cljs.core.rest(arglist__19599);
      return G__19598__delegate(x, y, more);
    };
    G__19598.cljs$core$IFn$_invoke$arity$variadic = G__19598__delegate;
    return G__19598;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__19600__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__19600 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19600__delegate.call(this, x, y, more);
    };
    G__19600.cljs$lang$maxFixedArity = 2;
    G__19600.cljs$lang$applyTo = function(arglist__19601) {
      var x = cljs.core.first(arglist__19601);
      arglist__19601 = cljs.core.next(arglist__19601);
      var y = cljs.core.first(arglist__19601);
      var more = cljs.core.rest(arglist__19601);
      return G__19600__delegate(x, y, more);
    };
    G__19600.cljs$core$IFn$_invoke$arity$variadic = G__19600__delegate;
    return G__19600;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__19602__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__19602 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19602__delegate.call(this, x, y, more);
    };
    G__19602.cljs$lang$maxFixedArity = 2;
    G__19602.cljs$lang$applyTo = function(arglist__19603) {
      var x = cljs.core.first(arglist__19603);
      arglist__19603 = cljs.core.next(arglist__19603);
      var y = cljs.core.first(arglist__19603);
      var more = cljs.core.rest(arglist__19603);
      return G__19602__delegate(x, y, more);
    };
    G__19602.cljs$core$IFn$_invoke$arity$variadic = G__19602__delegate;
    return G__19602;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__19604__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__19604 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19604__delegate.call(this, x, y, more);
    };
    G__19604.cljs$lang$maxFixedArity = 2;
    G__19604.cljs$lang$applyTo = function(arglist__19605) {
      var x = cljs.core.first(arglist__19605);
      arglist__19605 = cljs.core.next(arglist__19605);
      var y = cljs.core.first(arglist__19605);
      var more = cljs.core.rest(arglist__19605);
      return G__19604__delegate(x, y, more);
    };
    G__19604.cljs$core$IFn$_invoke$arity$variadic = G__19604__delegate;
    return G__19604;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__19606__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__19606 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19606__delegate.call(this, x, y, more);
    };
    G__19606.cljs$lang$maxFixedArity = 2;
    G__19606.cljs$lang$applyTo = function(arglist__19607) {
      var x = cljs.core.first(arglist__19607);
      arglist__19607 = cljs.core.next(arglist__19607);
      var y = cljs.core.first(arglist__19607);
      var more = cljs.core.rest(arglist__19607);
      return G__19606__delegate(x, y, more);
    };
    G__19606.cljs$core$IFn$_invoke$arity$variadic = G__19606__delegate;
    return G__19606;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__19608__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__19609 = y;
            var G__19610 = cljs.core.first.call(null, more);
            var G__19611 = cljs.core.next.call(null, more);
            x = G__19609;
            y = G__19610;
            more = G__19611;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__19608 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19608__delegate.call(this, x, y, more);
    };
    G__19608.cljs$lang$maxFixedArity = 2;
    G__19608.cljs$lang$applyTo = function(arglist__19612) {
      var x = cljs.core.first(arglist__19612);
      arglist__19612 = cljs.core.next(arglist__19612);
      var y = cljs.core.first(arglist__19612);
      var more = cljs.core.rest(arglist__19612);
      return G__19608__delegate(x, y, more);
    };
    G__19608.cljs$core$IFn$_invoke$arity$variadic = G__19608__delegate;
    return G__19608;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__19613 = n__$1 - 1;
      var G__19614 = cljs.core.next.call(null, xs);
      n__$1 = G__19613;
      xs = G__19614;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return "" + x;
    }
  };
  var str__2 = function() {
    var G__19615__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__19616 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__19617 = cljs.core.next.call(null, more);
          sb = G__19616;
          more = G__19617;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__19615 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19615__delegate.call(this, x, ys);
    };
    G__19615.cljs$lang$maxFixedArity = 1;
    G__19615.cljs$lang$applyTo = function(arglist__19618) {
      var x = cljs.core.first(arglist__19618);
      var ys = cljs.core.rest(arglist__19618);
      return G__19615__delegate(x, ys);
    };
    G__19615.cljs$core$IFn$_invoke$arity$variadic = G__19615__delegate;
    return G__19615;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__19619 = cljs.core.next.call(null, xs);
            var G__19620 = cljs.core.next.call(null, ys);
            xs = G__19619;
            ys = G__19620;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__19621 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__19622 = cljs.core.next.call(null, s);
        res = G__19621;
        s = G__19622;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__19623 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__19624 = cljs.core.next.call(null, s);
      h = G__19623;
      s = G__19624;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__19625 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__19626 = cljs.core.next.call(null, s__$1);
      h = G__19625;
      s__$1 = G__19626;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__19633_19639 = cljs.core.seq.call(null, fn_map);
  var chunk__19634_19640 = null;
  var count__19635_19641 = 0;
  var i__19636_19642 = 0;
  while (true) {
    if (i__19636_19642 < count__19635_19641) {
      var vec__19637_19643 = cljs.core._nth.call(null, chunk__19634_19640, i__19636_19642);
      var key_name_19644 = cljs.core.nth.call(null, vec__19637_19643, 0, null);
      var f_19645 = cljs.core.nth.call(null, vec__19637_19643, 1, null);
      var str_name_19646 = cljs.core.name.call(null, key_name_19644);
      obj[str_name_19646] = f_19645;
      var G__19647 = seq__19633_19639;
      var G__19648 = chunk__19634_19640;
      var G__19649 = count__19635_19641;
      var G__19650 = i__19636_19642 + 1;
      seq__19633_19639 = G__19647;
      chunk__19634_19640 = G__19648;
      count__19635_19641 = G__19649;
      i__19636_19642 = G__19650;
      continue;
    } else {
      var temp__4126__auto___19651 = cljs.core.seq.call(null, seq__19633_19639);
      if (temp__4126__auto___19651) {
        var seq__19633_19652__$1 = temp__4126__auto___19651;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19633_19652__$1)) {
          var c__4395__auto___19653 = cljs.core.chunk_first.call(null, seq__19633_19652__$1);
          var G__19654 = cljs.core.chunk_rest.call(null, seq__19633_19652__$1);
          var G__19655 = c__4395__auto___19653;
          var G__19656 = cljs.core.count.call(null, c__4395__auto___19653);
          var G__19657 = 0;
          seq__19633_19639 = G__19654;
          chunk__19634_19640 = G__19655;
          count__19635_19641 = G__19656;
          i__19636_19642 = G__19657;
          continue;
        } else {
          var vec__19638_19658 = cljs.core.first.call(null, seq__19633_19652__$1);
          var key_name_19659 = cljs.core.nth.call(null, vec__19638_19658, 0, null);
          var f_19660 = cljs.core.nth.call(null, vec__19638_19658, 1, null);
          var str_name_19661 = cljs.core.name.call(null, key_name_19659);
          obj[str_name_19661] = f_19660;
          var G__19662 = cljs.core.next.call(null, seq__19633_19652__$1);
          var G__19663 = null;
          var G__19664 = 0;
          var G__19665 = 0;
          seq__19633_19639 = G__19662;
          chunk__19634_19640 = G__19663;
          count__19635_19641 = G__19664;
          i__19636_19642 = G__19665;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__19667 = coll;
  if (G__19667) {
    var bit__4289__auto__ = G__19667.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4289__auto__ || G__19667.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__19667.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__19667);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__19667);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__19668 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__19668;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__19669 = i - 1;
        var G__19670 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__19669;
        r = G__19670;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__19671) {
    var xs = cljs.core.seq(arglist__19671);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3626__auto__ = coll == null;
    if (or__3626__auto__) {
      return or__3626__auto__;
    } else {
      var G__19675 = coll;
      if (G__19675) {
        var bit__4282__auto__ = G__19675.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4282__auto__ || G__19675.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__19677 = x;
  if (G__19677) {
    var bit__4289__auto__ = G__19677.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4289__auto__ || G__19677.cljs$core$IList$) {
      return true;
    } else {
      if (!G__19677.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__19677);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__19677);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4037__auto__ = self__._hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__19679 = null;
  var G__19679__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__19679__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__19679 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19679__2.call(this, self__, coll);
      case 3:
        return G__19679__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19679.cljs$core$IFn$_invoke$arity$2 = G__19679__2;
  G__19679.cljs$core$IFn$_invoke$arity$3 = G__19679__3;
  return G__19679;
}();
cljs.core.Keyword.prototype.apply = function(self__, args19678) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19678)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__19681 = x;
    if (G__19681) {
      var bit__4282__auto__ = G__19681.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4282__auto__ || G__19681.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__19682 = ls.sval();
        ls = G__19682;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__19684 = s;
    if (G__19684) {
      var bit__4282__auto__ = G__19684.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4282__auto__ || G__19684.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__19685 = cljs.core.next.call(null, s__$1);
      s__$1 = G__19685;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_19686 = 0;
  var xs_19687 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_19687) {
      ret[i_19686] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_19687));
      var G__19688 = i_19686 + 1;
      var G__19689 = cljs.core.next.call(null, xs_19687);
      i_19686 = G__19688;
      xs_19687 = G__19689;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19690 = i + 1;
          var G__19691 = cljs.core.next.call(null, s__$1);
          i = G__19690;
          s__$1 = G__19691;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4495__auto___19692 = size;
      var i_19693 = 0;
      while (true) {
        if (i_19693 < n__4495__auto___19692) {
          a[i_19693] = init_val_or_seq;
          var G__19694 = i_19693 + 1;
          i_19693 = G__19694;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19695 = i + 1;
          var G__19696 = cljs.core.next.call(null, s__$1);
          i = G__19695;
          s__$1 = G__19696;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4495__auto___19697 = size;
      var i_19698 = 0;
      while (true) {
        if (i_19698 < n__4495__auto___19697) {
          a[i_19698] = init_val_or_seq;
          var G__19699 = i_19698 + 1;
          i_19698 = G__19699;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19700 = i + 1;
          var G__19701 = cljs.core.next.call(null, s__$1);
          i = G__19700;
          s__$1 = G__19701;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4495__auto___19702 = size;
      var i_19703 = 0;
      while (true) {
        if (i_19703 < n__4495__auto___19702) {
          a[i_19703] = init_val_or_seq;
          var G__19704 = i_19703 + 1;
          i_19703 = G__19704;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__19705 = i + 1;
          var G__19706 = cljs.core.next.call(null, s__$1);
          i = G__19705;
          s__$1 = G__19706;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4495__auto___19707 = size;
      var i_19708 = 0;
      while (true) {
        if (i_19708 < n__4495__auto___19707) {
          a[i_19708] = init_val_or_seq;
          var G__19709 = i_19708 + 1;
          i_19708 = G__19709;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__19710 = cljs.core.next.call(null, s__$1);
        var G__19711 = i - 1;
        var G__19712 = sum + 1;
        s__$1 = G__19710;
        i = G__19711;
        sum = G__19712;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__19713__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__19713 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19713__delegate.call(this, x, y, zs);
    };
    G__19713.cljs$lang$maxFixedArity = 2;
    G__19713.cljs$lang$applyTo = function(arglist__19714) {
      var x = cljs.core.first(arglist__19714);
      arglist__19714 = cljs.core.next(arglist__19714);
      var y = cljs.core.first(arglist__19714);
      var zs = cljs.core.rest(arglist__19714);
      return G__19713__delegate(x, y, zs);
    };
    G__19713.cljs$core$IFn$_invoke$arity$variadic = G__19713__delegate;
    return G__19713;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__19715__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__19715 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19715__delegate.call(this, a, b, c, d, more);
    };
    G__19715.cljs$lang$maxFixedArity = 4;
    G__19715.cljs$lang$applyTo = function(arglist__19716) {
      var a = cljs.core.first(arglist__19716);
      arglist__19716 = cljs.core.next(arglist__19716);
      var b = cljs.core.first(arglist__19716);
      arglist__19716 = cljs.core.next(arglist__19716);
      var c = cljs.core.first(arglist__19716);
      arglist__19716 = cljs.core.next(arglist__19716);
      var d = cljs.core.first(arglist__19716);
      var more = cljs.core.rest(arglist__19716);
      return G__19715__delegate(a, b, c, d, more);
    };
    G__19715.cljs$core$IFn$_invoke$arity$variadic = G__19715__delegate;
    return G__19715;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__19717__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19718 = ntcoll;
          var G__19719 = cljs.core.first.call(null, vals);
          var G__19720 = cljs.core.next.call(null, vals);
          tcoll = G__19718;
          val = G__19719;
          vals = G__19720;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19717 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19717__delegate.call(this, tcoll, val, vals);
    };
    G__19717.cljs$lang$maxFixedArity = 2;
    G__19717.cljs$lang$applyTo = function(arglist__19721) {
      var tcoll = cljs.core.first(arglist__19721);
      arglist__19721 = cljs.core.next(arglist__19721);
      var val = cljs.core.first(arglist__19721);
      var vals = cljs.core.rest(arglist__19721);
      return G__19717__delegate(tcoll, val, vals);
    };
    G__19717.cljs$core$IFn$_invoke$arity$variadic = G__19717__delegate;
    return G__19717;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__19722__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__19723 = ntcoll;
          var G__19724 = cljs.core.first.call(null, kvs);
          var G__19725 = cljs.core.second.call(null, kvs);
          var G__19726 = cljs.core.nnext.call(null, kvs);
          tcoll = G__19723;
          key = G__19724;
          val = G__19725;
          kvs = G__19726;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19722 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19722__delegate.call(this, tcoll, key, val, kvs);
    };
    G__19722.cljs$lang$maxFixedArity = 3;
    G__19722.cljs$lang$applyTo = function(arglist__19727) {
      var tcoll = cljs.core.first(arglist__19727);
      arglist__19727 = cljs.core.next(arglist__19727);
      var key = cljs.core.first(arglist__19727);
      arglist__19727 = cljs.core.next(arglist__19727);
      var val = cljs.core.first(arglist__19727);
      var kvs = cljs.core.rest(arglist__19727);
      return G__19722__delegate(tcoll, key, val, kvs);
    };
    G__19722.cljs$core$IFn$_invoke$arity$variadic = G__19722__delegate;
    return G__19722;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__19728__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__19729 = ntcoll;
          var G__19730 = cljs.core.first.call(null, ks);
          var G__19731 = cljs.core.next.call(null, ks);
          tcoll = G__19729;
          key = G__19730;
          ks = G__19731;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19728 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19728__delegate.call(this, tcoll, key, ks);
    };
    G__19728.cljs$lang$maxFixedArity = 2;
    G__19728.cljs$lang$applyTo = function(arglist__19732) {
      var tcoll = cljs.core.first(arglist__19732);
      arglist__19732 = cljs.core.next(arglist__19732);
      var key = cljs.core.first(arglist__19732);
      var ks = cljs.core.rest(arglist__19732);
      return G__19728__delegate(tcoll, key, ks);
    };
    G__19728.cljs$core$IFn$_invoke$arity$variadic = G__19728__delegate;
    return G__19728;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__19733__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__19734 = ntcoll;
          var G__19735 = cljs.core.first.call(null, vals);
          var G__19736 = cljs.core.next.call(null, vals);
          tcoll = G__19734;
          val = G__19735;
          vals = G__19736;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__19733 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19733__delegate.call(this, tcoll, val, vals);
    };
    G__19733.cljs$lang$maxFixedArity = 2;
    G__19733.cljs$lang$applyTo = function(arglist__19737) {
      var tcoll = cljs.core.first(arglist__19737);
      arglist__19737 = cljs.core.next(arglist__19737);
      var val = cljs.core.first(arglist__19737);
      var vals = cljs.core.rest(arglist__19737);
      return G__19733__delegate(tcoll, val, vals);
    };
    G__19733.cljs$core$IFn$_invoke$arity$variadic = G__19733__delegate;
    return G__19733;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4539 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4539);
      } else {
        return f.call(null, a4539);
      }
    } else {
      var b4540 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4539, b4540);
        } else {
          return f.call(null, a4539, b4540);
        }
      } else {
        var c4541 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4539, b4540, c4541);
          } else {
            return f.call(null, a4539, b4540, c4541);
          }
        } else {
          var d4542 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4539, b4540, c4541, d4542);
            } else {
              return f.call(null, a4539, b4540, c4541, d4542);
            }
          } else {
            var e4543 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4539, b4540, c4541, d4542, e4543);
              } else {
                return f.call(null, a4539, b4540, c4541, d4542, e4543);
              }
            } else {
              var f4544 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4539, b4540, c4541, d4542, e4543, f4544);
                } else {
                  return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544);
                }
              } else {
                var g4545 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4539, b4540, c4541, d4542, e4543, f4544, g4545);
                  } else {
                    return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545);
                  }
                } else {
                  var h4546 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546);
                    } else {
                      return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546);
                    }
                  } else {
                    var i4547 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547);
                      } else {
                        return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547);
                      }
                    } else {
                      var j4548 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548);
                        } else {
                          return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548);
                        }
                      } else {
                        var k4549 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549);
                          } else {
                            return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549);
                          }
                        } else {
                          var l4550 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550);
                            } else {
                              return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550);
                            }
                          } else {
                            var m4551 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551);
                              } else {
                                return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551);
                              }
                            } else {
                              var n4552 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552);
                                } else {
                                  return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552);
                                }
                              } else {
                                var o4553 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553);
                                  } else {
                                    return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553);
                                  }
                                } else {
                                  var p4554 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554);
                                    } else {
                                      return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554);
                                    }
                                  } else {
                                    var q4555 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555);
                                      } else {
                                        return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555);
                                      }
                                    } else {
                                      var r4556 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555, r4556);
                                        } else {
                                          return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555, r4556);
                                        }
                                      } else {
                                        var s4557 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555, r4556, s4557);
                                          } else {
                                            return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555, r4556, s4557);
                                          }
                                        } else {
                                          var t4558 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555, r4556, s4557, t4558);
                                            } else {
                                              return f.call(null, a4539, b4540, c4541, d4542, e4543, f4544, g4545, h4546, i4547, j4548, k4549, l4550, m4551, n4552, o4553, p4554, q4555, r4556, s4557, t4558);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__19738__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__19738 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__19738__delegate.call(this, f, a, b, c, d, args);
    };
    G__19738.cljs$lang$maxFixedArity = 5;
    G__19738.cljs$lang$applyTo = function(arglist__19739) {
      var f = cljs.core.first(arglist__19739);
      arglist__19739 = cljs.core.next(arglist__19739);
      var a = cljs.core.first(arglist__19739);
      arglist__19739 = cljs.core.next(arglist__19739);
      var b = cljs.core.first(arglist__19739);
      arglist__19739 = cljs.core.next(arglist__19739);
      var c = cljs.core.first(arglist__19739);
      arglist__19739 = cljs.core.next(arglist__19739);
      var d = cljs.core.first(arglist__19739);
      var args = cljs.core.rest(arglist__19739);
      return G__19738__delegate(f, a, b, c, d, args);
    };
    G__19738.cljs$core$IFn$_invoke$arity$variadic = G__19738__delegate;
    return G__19738;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__19740__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__19740 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__19740__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__19740.cljs$lang$maxFixedArity = 6;
    G__19740.cljs$lang$applyTo = function(arglist__19741) {
      var obj = cljs.core.first(arglist__19741);
      arglist__19741 = cljs.core.next(arglist__19741);
      var f = cljs.core.first(arglist__19741);
      arglist__19741 = cljs.core.next(arglist__19741);
      var a = cljs.core.first(arglist__19741);
      arglist__19741 = cljs.core.next(arglist__19741);
      var b = cljs.core.first(arglist__19741);
      arglist__19741 = cljs.core.next(arglist__19741);
      var c = cljs.core.first(arglist__19741);
      arglist__19741 = cljs.core.next(arglist__19741);
      var d = cljs.core.first(arglist__19741);
      var args = cljs.core.rest(arglist__19741);
      return G__19740__delegate(obj, f, a, b, c, d, args);
    };
    G__19740.cljs$core$IFn$_invoke$arity$variadic = G__19740__delegate;
    return G__19740;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__19742__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__19742 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19742__delegate.call(this, x, y, more);
    };
    G__19742.cljs$lang$maxFixedArity = 2;
    G__19742.cljs$lang$applyTo = function(arglist__19743) {
      var x = cljs.core.first(arglist__19743);
      arglist__19743 = cljs.core.next(arglist__19743);
      var y = cljs.core.first(arglist__19743);
      var more = cljs.core.rest(arglist__19743);
      return G__19742__delegate(x, y, more);
    };
    G__19742.cljs$core$IFn$_invoke$arity$variadic = G__19742__delegate;
    return G__19742;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t19747 !== "undefined") {
  } else {
    cljs.core.t19747 = function(nil_iter, meta19748) {
      this.nil_iter = nil_iter;
      this.meta19748 = meta19748;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t19747.cljs$lang$type = true;
    cljs.core.t19747.cljs$lang$ctorStr = "cljs.core/t19747";
    cljs.core.t19747.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/t19747");
    };
    cljs.core.t19747.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t19747.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t19747.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t19747.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19749) {
      var self__ = this;
      var _19749__$1 = this;
      return self__.meta19748;
    };
    cljs.core.t19747.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19749, meta19748__$1) {
      var self__ = this;
      var _19749__$1 = this;
      return new cljs.core.t19747(self__.nil_iter, meta19748__$1);
    };
    cljs.core.__GT_t19747 = function __GT_t19747(nil_iter__$1, meta19748) {
      return new cljs.core.t19747(nil_iter__$1, meta19748);
    };
  }
  return new cljs.core.t19747(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        return cljs.core.seq_iter.call(null, coll);
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3614__auto__ = !(lt.stepper == null);
      if (and__3614__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3614__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__19750 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__19750;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4495__auto___19751 = self__.iters.length;
  var i_19752 = 0;
  while (true) {
    if (i_19752 < n__4495__auto___19751) {
      self__.nexts[i_19752] = self__.iters[i_19752].next();
      var G__19753 = i_19752 + 1;
      i_19752 = G__19753;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3614__auto__ = !(lt.stepper == null);
      if (and__3614__auto__) {
        return this$.hasNext();
      } else {
        return and__3614__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__19754_19758 = cljs.core.seq.call(null, colls);
  var chunk__19755_19759 = null;
  var count__19756_19760 = 0;
  var i__19757_19761 = 0;
  while (true) {
    if (i__19757_19761 < count__19756_19760) {
      var coll_19762 = cljs.core._nth.call(null, chunk__19755_19759, i__19757_19761);
      iters.push(cljs.core.iter.call(null, coll_19762));
      var G__19763 = seq__19754_19758;
      var G__19764 = chunk__19755_19759;
      var G__19765 = count__19756_19760;
      var G__19766 = i__19757_19761 + 1;
      seq__19754_19758 = G__19763;
      chunk__19755_19759 = G__19764;
      count__19756_19760 = G__19765;
      i__19757_19761 = G__19766;
      continue;
    } else {
      var temp__4126__auto___19767 = cljs.core.seq.call(null, seq__19754_19758);
      if (temp__4126__auto___19767) {
        var seq__19754_19768__$1 = temp__4126__auto___19767;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19754_19768__$1)) {
          var c__4395__auto___19769 = cljs.core.chunk_first.call(null, seq__19754_19768__$1);
          var G__19770 = cljs.core.chunk_rest.call(null, seq__19754_19768__$1);
          var G__19771 = c__4395__auto___19769;
          var G__19772 = cljs.core.count.call(null, c__4395__auto___19769);
          var G__19773 = 0;
          seq__19754_19758 = G__19770;
          chunk__19755_19759 = G__19771;
          count__19756_19760 = G__19772;
          i__19757_19761 = G__19773;
          continue;
        } else {
          var coll_19774 = cljs.core.first.call(null, seq__19754_19768__$1);
          iters.push(cljs.core.iter.call(null, coll_19774));
          var G__19775 = cljs.core.next.call(null, seq__19754_19768__$1);
          var G__19776 = null;
          var G__19777 = 0;
          var G__19778 = 0;
          seq__19754_19758 = G__19775;
          chunk__19755_19759 = G__19776;
          count__19756_19760 = G__19777;
          i__19757_19761 = G__19778;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3626__auto__ = cljs.core.seq.call(null, coll);
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__19779__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__19779 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19779__delegate.call(this, xform, coll, colls);
    };
    G__19779.cljs$lang$maxFixedArity = 2;
    G__19779.cljs$lang$applyTo = function(arglist__19780) {
      var xform = cljs.core.first(arglist__19780);
      arglist__19780 = cljs.core.next(arglist__19780);
      var coll = cljs.core.first(arglist__19780);
      var colls = cljs.core.rest(arglist__19780);
      return G__19779__delegate(xform, coll, colls);
    };
    G__19779.cljs$core$IFn$_invoke$arity$variadic = G__19779__delegate;
    return G__19779;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__19781 = pred;
        var G__19782 = cljs.core.next.call(null, coll);
        pred = G__19781;
        coll = G__19782;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3626__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        var G__19783 = pred;
        var G__19784 = cljs.core.next.call(null, coll);
        pred = G__19783;
        coll = G__19784;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__19785 = null;
    var G__19785__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__19785__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__19785__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__19785__3 = function() {
      var G__19786__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__19786 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__19786__delegate.call(this, x, y, zs);
      };
      G__19786.cljs$lang$maxFixedArity = 2;
      G__19786.cljs$lang$applyTo = function(arglist__19787) {
        var x = cljs.core.first(arglist__19787);
        arglist__19787 = cljs.core.next(arglist__19787);
        var y = cljs.core.first(arglist__19787);
        var zs = cljs.core.rest(arglist__19787);
        return G__19786__delegate(x, y, zs);
      };
      G__19786.cljs$core$IFn$_invoke$arity$variadic = G__19786__delegate;
      return G__19786;
    }();
    G__19785 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__19785__0.call(this);
        case 1:
          return G__19785__1.call(this, x);
        case 2:
          return G__19785__2.call(this, x, y);
        default:
          return G__19785__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__19785.cljs$lang$maxFixedArity = 2;
    G__19785.cljs$lang$applyTo = G__19785__3.cljs$lang$applyTo;
    G__19785.cljs$core$IFn$_invoke$arity$0 = G__19785__0;
    G__19785.cljs$core$IFn$_invoke$arity$1 = G__19785__1;
    G__19785.cljs$core$IFn$_invoke$arity$2 = G__19785__2;
    G__19785.cljs$core$IFn$_invoke$arity$variadic = G__19785__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__19785;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__19788__delegate = function(args) {
      return x;
    };
    var G__19788 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__19788__delegate.call(this, args);
    };
    G__19788.cljs$lang$maxFixedArity = 0;
    G__19788.cljs$lang$applyTo = function(arglist__19789) {
      var args = cljs.core.seq(arglist__19789);
      return G__19788__delegate(args);
    };
    G__19788.cljs$core$IFn$_invoke$arity$variadic = G__19788__delegate;
    return G__19788;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__19790 = null;
      var G__19790__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__19790__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__19790__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__19790__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__19790__4 = function() {
        var G__19791__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__19791 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19791__delegate.call(this, x, y, z, args);
        };
        G__19791.cljs$lang$maxFixedArity = 3;
        G__19791.cljs$lang$applyTo = function(arglist__19792) {
          var x = cljs.core.first(arglist__19792);
          arglist__19792 = cljs.core.next(arglist__19792);
          var y = cljs.core.first(arglist__19792);
          arglist__19792 = cljs.core.next(arglist__19792);
          var z = cljs.core.first(arglist__19792);
          var args = cljs.core.rest(arglist__19792);
          return G__19791__delegate(x, y, z, args);
        };
        G__19791.cljs$core$IFn$_invoke$arity$variadic = G__19791__delegate;
        return G__19791;
      }();
      G__19790 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19790__0.call(this);
          case 1:
            return G__19790__1.call(this, x);
          case 2:
            return G__19790__2.call(this, x, y);
          case 3:
            return G__19790__3.call(this, x, y, z);
          default:
            return G__19790__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19790.cljs$lang$maxFixedArity = 3;
      G__19790.cljs$lang$applyTo = G__19790__4.cljs$lang$applyTo;
      G__19790.cljs$core$IFn$_invoke$arity$0 = G__19790__0;
      G__19790.cljs$core$IFn$_invoke$arity$1 = G__19790__1;
      G__19790.cljs$core$IFn$_invoke$arity$2 = G__19790__2;
      G__19790.cljs$core$IFn$_invoke$arity$3 = G__19790__3;
      G__19790.cljs$core$IFn$_invoke$arity$variadic = G__19790__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19790;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__19793 = null;
      var G__19793__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__19793__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__19793__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__19793__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__19793__4 = function() {
        var G__19794__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__19794 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19794__delegate.call(this, x, y, z, args);
        };
        G__19794.cljs$lang$maxFixedArity = 3;
        G__19794.cljs$lang$applyTo = function(arglist__19795) {
          var x = cljs.core.first(arglist__19795);
          arglist__19795 = cljs.core.next(arglist__19795);
          var y = cljs.core.first(arglist__19795);
          arglist__19795 = cljs.core.next(arglist__19795);
          var z = cljs.core.first(arglist__19795);
          var args = cljs.core.rest(arglist__19795);
          return G__19794__delegate(x, y, z, args);
        };
        G__19794.cljs$core$IFn$_invoke$arity$variadic = G__19794__delegate;
        return G__19794;
      }();
      G__19793 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__19793__0.call(this);
          case 1:
            return G__19793__1.call(this, x);
          case 2:
            return G__19793__2.call(this, x, y);
          case 3:
            return G__19793__3.call(this, x, y, z);
          default:
            return G__19793__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19793.cljs$lang$maxFixedArity = 3;
      G__19793.cljs$lang$applyTo = G__19793__4.cljs$lang$applyTo;
      G__19793.cljs$core$IFn$_invoke$arity$0 = G__19793__0;
      G__19793.cljs$core$IFn$_invoke$arity$1 = G__19793__1;
      G__19793.cljs$core$IFn$_invoke$arity$2 = G__19793__2;
      G__19793.cljs$core$IFn$_invoke$arity$3 = G__19793__3;
      G__19793.cljs$core$IFn$_invoke$arity$variadic = G__19793__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19793;
    }();
  };
  var comp__4 = function() {
    var G__19796__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__19797__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__19798 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__19799 = cljs.core.next.call(null, fs__$2);
                ret = G__19798;
                fs__$2 = G__19799;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__19797 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__19797__delegate.call(this, args);
          };
          G__19797.cljs$lang$maxFixedArity = 0;
          G__19797.cljs$lang$applyTo = function(arglist__19800) {
            var args = cljs.core.seq(arglist__19800);
            return G__19797__delegate(args);
          };
          G__19797.cljs$core$IFn$_invoke$arity$variadic = G__19797__delegate;
          return G__19797;
        }();
      }(fs__$1);
    };
    var G__19796 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19796__delegate.call(this, f1, f2, f3, fs);
    };
    G__19796.cljs$lang$maxFixedArity = 3;
    G__19796.cljs$lang$applyTo = function(arglist__19801) {
      var f1 = cljs.core.first(arglist__19801);
      arglist__19801 = cljs.core.next(arglist__19801);
      var f2 = cljs.core.first(arglist__19801);
      arglist__19801 = cljs.core.next(arglist__19801);
      var f3 = cljs.core.first(arglist__19801);
      var fs = cljs.core.rest(arglist__19801);
      return G__19796__delegate(f1, f2, f3, fs);
    };
    G__19796.cljs$core$IFn$_invoke$arity$variadic = G__19796__delegate;
    return G__19796;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__19802__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__19802 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19802__delegate.call(this, args);
      };
      G__19802.cljs$lang$maxFixedArity = 0;
      G__19802.cljs$lang$applyTo = function(arglist__19803) {
        var args = cljs.core.seq(arglist__19803);
        return G__19802__delegate(args);
      };
      G__19802.cljs$core$IFn$_invoke$arity$variadic = G__19802__delegate;
      return G__19802;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__19804__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__19804 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19804__delegate.call(this, args);
      };
      G__19804.cljs$lang$maxFixedArity = 0;
      G__19804.cljs$lang$applyTo = function(arglist__19805) {
        var args = cljs.core.seq(arglist__19805);
        return G__19804__delegate(args);
      };
      G__19804.cljs$core$IFn$_invoke$arity$variadic = G__19804__delegate;
      return G__19804;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__19806__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__19806 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__19806__delegate.call(this, args);
      };
      G__19806.cljs$lang$maxFixedArity = 0;
      G__19806.cljs$lang$applyTo = function(arglist__19807) {
        var args = cljs.core.seq(arglist__19807);
        return G__19806__delegate(args);
      };
      G__19806.cljs$core$IFn$_invoke$arity$variadic = G__19806__delegate;
      return G__19806;
    }();
  };
  var partial__5 = function() {
    var G__19808__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__19809__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__19809 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__19809__delegate.call(this, args);
        };
        G__19809.cljs$lang$maxFixedArity = 0;
        G__19809.cljs$lang$applyTo = function(arglist__19810) {
          var args = cljs.core.seq(arglist__19810);
          return G__19809__delegate(args);
        };
        G__19809.cljs$core$IFn$_invoke$arity$variadic = G__19809__delegate;
        return G__19809;
      }();
    };
    var G__19808 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19808__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__19808.cljs$lang$maxFixedArity = 4;
    G__19808.cljs$lang$applyTo = function(arglist__19811) {
      var f = cljs.core.first(arglist__19811);
      arglist__19811 = cljs.core.next(arglist__19811);
      var arg1 = cljs.core.first(arglist__19811);
      arglist__19811 = cljs.core.next(arglist__19811);
      var arg2 = cljs.core.first(arglist__19811);
      arglist__19811 = cljs.core.next(arglist__19811);
      var arg3 = cljs.core.first(arglist__19811);
      var more = cljs.core.rest(arglist__19811);
      return G__19808__delegate(f, arg1, arg2, arg3, more);
    };
    G__19808.cljs$core$IFn$_invoke$arity$variadic = G__19808__delegate;
    return G__19808;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__19812 = null;
      var G__19812__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__19812__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__19812__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__19812__4 = function() {
        var G__19813__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__19813 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19813__delegate.call(this, a, b, c, ds);
        };
        G__19813.cljs$lang$maxFixedArity = 3;
        G__19813.cljs$lang$applyTo = function(arglist__19814) {
          var a = cljs.core.first(arglist__19814);
          arglist__19814 = cljs.core.next(arglist__19814);
          var b = cljs.core.first(arglist__19814);
          arglist__19814 = cljs.core.next(arglist__19814);
          var c = cljs.core.first(arglist__19814);
          var ds = cljs.core.rest(arglist__19814);
          return G__19813__delegate(a, b, c, ds);
        };
        G__19813.cljs$core$IFn$_invoke$arity$variadic = G__19813__delegate;
        return G__19813;
      }();
      G__19812 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__19812__1.call(this, a);
          case 2:
            return G__19812__2.call(this, a, b);
          case 3:
            return G__19812__3.call(this, a, b, c);
          default:
            return G__19812__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19812.cljs$lang$maxFixedArity = 3;
      G__19812.cljs$lang$applyTo = G__19812__4.cljs$lang$applyTo;
      G__19812.cljs$core$IFn$_invoke$arity$1 = G__19812__1;
      G__19812.cljs$core$IFn$_invoke$arity$2 = G__19812__2;
      G__19812.cljs$core$IFn$_invoke$arity$3 = G__19812__3;
      G__19812.cljs$core$IFn$_invoke$arity$variadic = G__19812__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19812;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__19815 = null;
      var G__19815__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__19815__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__19815__4 = function() {
        var G__19816__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__19816 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19816__delegate.call(this, a, b, c, ds);
        };
        G__19816.cljs$lang$maxFixedArity = 3;
        G__19816.cljs$lang$applyTo = function(arglist__19817) {
          var a = cljs.core.first(arglist__19817);
          arglist__19817 = cljs.core.next(arglist__19817);
          var b = cljs.core.first(arglist__19817);
          arglist__19817 = cljs.core.next(arglist__19817);
          var c = cljs.core.first(arglist__19817);
          var ds = cljs.core.rest(arglist__19817);
          return G__19816__delegate(a, b, c, ds);
        };
        G__19816.cljs$core$IFn$_invoke$arity$variadic = G__19816__delegate;
        return G__19816;
      }();
      G__19815 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__19815__2.call(this, a, b);
          case 3:
            return G__19815__3.call(this, a, b, c);
          default:
            return G__19815__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19815.cljs$lang$maxFixedArity = 3;
      G__19815.cljs$lang$applyTo = G__19815__4.cljs$lang$applyTo;
      G__19815.cljs$core$IFn$_invoke$arity$2 = G__19815__2;
      G__19815.cljs$core$IFn$_invoke$arity$3 = G__19815__3;
      G__19815.cljs$core$IFn$_invoke$arity$variadic = G__19815__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19815;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__19818 = null;
      var G__19818__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__19818__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__19818__4 = function() {
        var G__19819__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__19819 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19819__delegate.call(this, a, b, c, ds);
        };
        G__19819.cljs$lang$maxFixedArity = 3;
        G__19819.cljs$lang$applyTo = function(arglist__19820) {
          var a = cljs.core.first(arglist__19820);
          arglist__19820 = cljs.core.next(arglist__19820);
          var b = cljs.core.first(arglist__19820);
          arglist__19820 = cljs.core.next(arglist__19820);
          var c = cljs.core.first(arglist__19820);
          var ds = cljs.core.rest(arglist__19820);
          return G__19819__delegate(a, b, c, ds);
        };
        G__19819.cljs$core$IFn$_invoke$arity$variadic = G__19819__delegate;
        return G__19819;
      }();
      G__19818 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__19818__2.call(this, a, b);
          case 3:
            return G__19818__3.call(this, a, b, c);
          default:
            return G__19818__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__19818.cljs$lang$maxFixedArity = 3;
      G__19818.cljs$lang$applyTo = G__19818__4.cljs$lang$applyTo;
      G__19818.cljs$core$IFn$_invoke$arity$2 = G__19818__2;
      G__19818.cljs$core$IFn$_invoke$arity$3 = G__19818__3;
      G__19818.cljs$core$IFn$_invoke$arity$variadic = G__19818__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__19818;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4495__auto___19821 = size;
          var i_19822 = 0;
          while (true) {
            if (i_19822 < n__4495__auto___19821) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_19822, cljs.core._nth.call(null, c, i_19822)));
              var G__19823 = i_19822 + 1;
              i_19822 = G__19823;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19824 = null;
        var G__19824__0 = function() {
          return f1.call(null);
        };
        var G__19824__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19824__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__19824 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19824__0.call(this);
            case 1:
              return G__19824__1.call(this, result);
            case 2:
              return G__19824__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19824.cljs$core$IFn$_invoke$arity$0 = G__19824__0;
        G__19824.cljs$core$IFn$_invoke$arity$1 = G__19824__1;
        G__19824.cljs$core$IFn$_invoke$arity$2 = G__19824__2;
        return G__19824;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4495__auto___19825 = size;
          var i_19826 = 0;
          while (true) {
            if (i_19826 < n__4495__auto___19825) {
              var x_19827 = f.call(null, cljs.core._nth.call(null, c, i_19826));
              if (x_19827 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_19827);
              }
              var G__19828 = i_19826 + 1;
              i_19826 = G__19828;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__19829 = cljs.core.seq.call(null, self__.watches);
  var chunk__19830 = null;
  var count__19831 = 0;
  var i__19832 = 0;
  while (true) {
    if (i__19832 < count__19831) {
      var vec__19833 = cljs.core._nth.call(null, chunk__19830, i__19832);
      var key = cljs.core.nth.call(null, vec__19833, 0, null);
      var f = cljs.core.nth.call(null, vec__19833, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__19835 = seq__19829;
      var G__19836 = chunk__19830;
      var G__19837 = count__19831;
      var G__19838 = i__19832 + 1;
      seq__19829 = G__19835;
      chunk__19830 = G__19836;
      count__19831 = G__19837;
      i__19832 = G__19838;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__19829);
      if (temp__4126__auto__) {
        var seq__19829__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__19829__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__19829__$1);
          var G__19839 = cljs.core.chunk_rest.call(null, seq__19829__$1);
          var G__19840 = c__4395__auto__;
          var G__19841 = cljs.core.count.call(null, c__4395__auto__);
          var G__19842 = 0;
          seq__19829 = G__19839;
          chunk__19830 = G__19840;
          count__19831 = G__19841;
          i__19832 = G__19842;
          continue;
        } else {
          var vec__19834 = cljs.core.first.call(null, seq__19829__$1);
          var key = cljs.core.nth.call(null, vec__19834, 0, null);
          var f = cljs.core.nth.call(null, vec__19834, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__19843 = cljs.core.next.call(null, seq__19829__$1);
          var G__19844 = null;
          var G__19845 = 0;
          var G__19846 = 0;
          seq__19829 = G__19843;
          chunk__19830 = G__19844;
          count__19831 = G__19845;
          i__19832 = G__19846;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__19850__delegate = function(x, p__19847) {
      var map__19849 = p__19847;
      var map__19849__$1 = cljs.core.seq_QMARK_.call(null, map__19849) ? cljs.core.apply.call(null, cljs.core.hash_map, map__19849) : map__19849;
      var validator = cljs.core.get.call(null, map__19849__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__19849__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__19850 = function(x, var_args) {
      var p__19847 = null;
      if (arguments.length > 1) {
        p__19847 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19850__delegate.call(this, x, p__19847);
    };
    G__19850.cljs$lang$maxFixedArity = 1;
    G__19850.cljs$lang$applyTo = function(arglist__19851) {
      var x = cljs.core.first(arglist__19851);
      var p__19847 = cljs.core.rest(arglist__19851);
      return G__19850__delegate(x, p__19847);
    };
    G__19850.cljs$core$IFn$_invoke$arity$variadic = G__19850__delegate;
    return G__19850;
  }();
  atom = function(x, var_args) {
    var p__19847 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__19852__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__19852 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19852__delegate.call(this, a, f, x, y, more);
    };
    G__19852.cljs$lang$maxFixedArity = 4;
    G__19852.cljs$lang$applyTo = function(arglist__19853) {
      var a = cljs.core.first(arglist__19853);
      arglist__19853 = cljs.core.next(arglist__19853);
      var f = cljs.core.first(arglist__19853);
      arglist__19853 = cljs.core.next(arglist__19853);
      var x = cljs.core.first(arglist__19853);
      arglist__19853 = cljs.core.next(arglist__19853);
      var y = cljs.core.first(arglist__19853);
      var more = cljs.core.rest(arglist__19853);
      return G__19852__delegate(a, f, x, y, more);
    };
    G__19852.cljs$core$IFn$_invoke$arity$variadic = G__19852__delegate;
    return G__19852;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__19854 = null;
          var G__19854__0 = function() {
            return f1.call(null);
          };
          var G__19854__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19854__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__19854 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19854__0.call(this);
              case 1:
                return G__19854__1.call(this, result);
              case 2:
                return G__19854__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19854.cljs$core$IFn$_invoke$arity$0 = G__19854__0;
          G__19854.cljs$core$IFn$_invoke$arity$1 = G__19854__1;
          G__19854.cljs$core$IFn$_invoke$arity$2 = G__19854__2;
          return G__19854;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4495__auto___19855 = size;
            var i_19856 = 0;
            while (true) {
              if (i_19856 < n__4495__auto___19855) {
                var x_19857 = f.call(null, idx + i_19856, cljs.core._nth.call(null, c, i_19856));
                if (x_19857 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_19857);
                }
                var G__19858 = i_19856 + 1;
                i_19856 = G__19858;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            return p.call(null, y);
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            var and__3614__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3614__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3614__auto____$1;
            }
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__19865__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__19865 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19865__delegate.call(this, x, y, z, args);
        };
        G__19865.cljs$lang$maxFixedArity = 3;
        G__19865.cljs$lang$applyTo = function(arglist__19866) {
          var x = cljs.core.first(arglist__19866);
          arglist__19866 = cljs.core.next(arglist__19866);
          var y = cljs.core.first(arglist__19866);
          arglist__19866 = cljs.core.next(arglist__19866);
          var z = cljs.core.first(arglist__19866);
          var args = cljs.core.rest(arglist__19866);
          return G__19865__delegate(x, y, z, args);
        };
        G__19865.cljs$core$IFn$_invoke$arity$variadic = G__19865__delegate;
        return G__19865;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            var and__3614__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3614__auto____$1)) {
              var and__3614__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3614__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3614__auto____$2;
              }
            } else {
              return and__3614__auto____$1;
            }
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            var and__3614__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3614__auto____$1)) {
              var and__3614__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3614__auto____$2)) {
                var and__3614__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3614__auto____$3)) {
                  var and__3614__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3614__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3614__auto____$4;
                  }
                } else {
                  return and__3614__auto____$3;
                }
              } else {
                return and__3614__auto____$2;
              }
            } else {
              return and__3614__auto____$1;
            }
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__19867__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__19859_SHARP_) {
            var and__3614__auto__ = p1.call(null, p1__19859_SHARP_);
            if (cljs.core.truth_(and__3614__auto__)) {
              return p2.call(null, p1__19859_SHARP_);
            } else {
              return and__3614__auto__;
            }
          }, args));
        };
        var G__19867 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19867__delegate.call(this, x, y, z, args);
        };
        G__19867.cljs$lang$maxFixedArity = 3;
        G__19867.cljs$lang$applyTo = function(arglist__19868) {
          var x = cljs.core.first(arglist__19868);
          arglist__19868 = cljs.core.next(arglist__19868);
          var y = cljs.core.first(arglist__19868);
          arglist__19868 = cljs.core.next(arglist__19868);
          var z = cljs.core.first(arglist__19868);
          var args = cljs.core.rest(arglist__19868);
          return G__19867__delegate(x, y, z, args);
        };
        G__19867.cljs$core$IFn$_invoke$arity$variadic = G__19867__delegate;
        return G__19867;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            var and__3614__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3614__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3614__auto____$1;
            }
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            var and__3614__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3614__auto____$1)) {
              var and__3614__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3614__auto____$2)) {
                var and__3614__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3614__auto____$3)) {
                  var and__3614__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3614__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3614__auto____$4;
                  }
                } else {
                  return and__3614__auto____$3;
                }
              } else {
                return and__3614__auto____$2;
              }
            } else {
              return and__3614__auto____$1;
            }
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3614__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3614__auto__)) {
            var and__3614__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3614__auto____$1)) {
              var and__3614__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3614__auto____$2)) {
                var and__3614__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3614__auto____$3)) {
                  var and__3614__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3614__auto____$4)) {
                    var and__3614__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3614__auto____$5)) {
                      var and__3614__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3614__auto____$6)) {
                        var and__3614__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3614__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3614__auto____$7;
                        }
                      } else {
                        return and__3614__auto____$6;
                      }
                    } else {
                      return and__3614__auto____$5;
                    }
                  } else {
                    return and__3614__auto____$4;
                  }
                } else {
                  return and__3614__auto____$3;
                }
              } else {
                return and__3614__auto____$2;
              }
            } else {
              return and__3614__auto____$1;
            }
          } else {
            return and__3614__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__19869__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__19860_SHARP_) {
            var and__3614__auto__ = p1.call(null, p1__19860_SHARP_);
            if (cljs.core.truth_(and__3614__auto__)) {
              var and__3614__auto____$1 = p2.call(null, p1__19860_SHARP_);
              if (cljs.core.truth_(and__3614__auto____$1)) {
                return p3.call(null, p1__19860_SHARP_);
              } else {
                return and__3614__auto____$1;
              }
            } else {
              return and__3614__auto__;
            }
          }, args));
        };
        var G__19869 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19869__delegate.call(this, x, y, z, args);
        };
        G__19869.cljs$lang$maxFixedArity = 3;
        G__19869.cljs$lang$applyTo = function(arglist__19870) {
          var x = cljs.core.first(arglist__19870);
          arglist__19870 = cljs.core.next(arglist__19870);
          var y = cljs.core.first(arglist__19870);
          arglist__19870 = cljs.core.next(arglist__19870);
          var z = cljs.core.first(arglist__19870);
          var args = cljs.core.rest(arglist__19870);
          return G__19869__delegate(x, y, z, args);
        };
        G__19869.cljs$core$IFn$_invoke$arity$variadic = G__19869__delegate;
        return G__19869;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__19871__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19861_SHARP_) {
                return p1__19861_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19862_SHARP_) {
                var and__3614__auto__ = p1__19862_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3614__auto__)) {
                  return p1__19862_SHARP_.call(null, y);
                } else {
                  return and__3614__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__19863_SHARP_) {
                var and__3614__auto__ = p1__19863_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3614__auto__)) {
                  var and__3614__auto____$1 = p1__19863_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3614__auto____$1)) {
                    return p1__19863_SHARP_.call(null, z);
                  } else {
                    return and__3614__auto____$1;
                  }
                } else {
                  return and__3614__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__19872__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__19864_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__19864_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__19872 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19872__delegate.call(this, x, y, z, args);
            };
            G__19872.cljs$lang$maxFixedArity = 3;
            G__19872.cljs$lang$applyTo = function(arglist__19873) {
              var x = cljs.core.first(arglist__19873);
              arglist__19873 = cljs.core.next(arglist__19873);
              var y = cljs.core.first(arglist__19873);
              arglist__19873 = cljs.core.next(arglist__19873);
              var z = cljs.core.first(arglist__19873);
              var args = cljs.core.rest(arglist__19873);
              return G__19872__delegate(x, y, z, args);
            };
            G__19872.cljs$core$IFn$_invoke$arity$variadic = G__19872__delegate;
            return G__19872;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__19871 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19871__delegate.call(this, p1, p2, p3, ps);
    };
    G__19871.cljs$lang$maxFixedArity = 3;
    G__19871.cljs$lang$applyTo = function(arglist__19874) {
      var p1 = cljs.core.first(arglist__19874);
      arglist__19874 = cljs.core.next(arglist__19874);
      var p2 = cljs.core.first(arglist__19874);
      arglist__19874 = cljs.core.next(arglist__19874);
      var p3 = cljs.core.first(arglist__19874);
      var ps = cljs.core.rest(arglist__19874);
      return G__19871__delegate(p1, p2, p3, ps);
    };
    G__19871.cljs$core$IFn$_invoke$arity$variadic = G__19871__delegate;
    return G__19871;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3626__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3626__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3626__auto____$1)) {
            return or__3626__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__19881__delegate = function(x, y, z, args) {
          var or__3626__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__19881 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19881__delegate.call(this, x, y, z, args);
        };
        G__19881.cljs$lang$maxFixedArity = 3;
        G__19881.cljs$lang$applyTo = function(arglist__19882) {
          var x = cljs.core.first(arglist__19882);
          arglist__19882 = cljs.core.next(arglist__19882);
          var y = cljs.core.first(arglist__19882);
          arglist__19882 = cljs.core.next(arglist__19882);
          var z = cljs.core.first(arglist__19882);
          var args = cljs.core.rest(arglist__19882);
          return G__19881__delegate(x, y, z, args);
        };
        G__19881.cljs$core$IFn$_invoke$arity$variadic = G__19881__delegate;
        return G__19881;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3626__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3626__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3626__auto____$1)) {
            return or__3626__auto____$1;
          } else {
            var or__3626__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3626__auto____$2)) {
              return or__3626__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3626__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3626__auto____$1)) {
            return or__3626__auto____$1;
          } else {
            var or__3626__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3626__auto____$2)) {
              return or__3626__auto____$2;
            } else {
              var or__3626__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3626__auto____$3)) {
                return or__3626__auto____$3;
              } else {
                var or__3626__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3626__auto____$4)) {
                  return or__3626__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__19883__delegate = function(x, y, z, args) {
          var or__3626__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3626__auto__) {
              return function(p1__19875_SHARP_) {
                var or__3626__auto____$1 = p1.call(null, p1__19875_SHARP_);
                if (cljs.core.truth_(or__3626__auto____$1)) {
                  return or__3626__auto____$1;
                } else {
                  return p2.call(null, p1__19875_SHARP_);
                }
              };
            }(or__3626__auto__), args);
          }
        };
        var G__19883 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19883__delegate.call(this, x, y, z, args);
        };
        G__19883.cljs$lang$maxFixedArity = 3;
        G__19883.cljs$lang$applyTo = function(arglist__19884) {
          var x = cljs.core.first(arglist__19884);
          arglist__19884 = cljs.core.next(arglist__19884);
          var y = cljs.core.first(arglist__19884);
          arglist__19884 = cljs.core.next(arglist__19884);
          var z = cljs.core.first(arglist__19884);
          var args = cljs.core.rest(arglist__19884);
          return G__19883__delegate(x, y, z, args);
        };
        G__19883.cljs$core$IFn$_invoke$arity$variadic = G__19883__delegate;
        return G__19883;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3626__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3626__auto____$1)) {
            return or__3626__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3626__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3626__auto____$1)) {
            return or__3626__auto____$1;
          } else {
            var or__3626__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3626__auto____$2)) {
              return or__3626__auto____$2;
            } else {
              var or__3626__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3626__auto____$3)) {
                return or__3626__auto____$3;
              } else {
                var or__3626__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3626__auto____$4)) {
                  return or__3626__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3626__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3626__auto____$1)) {
            return or__3626__auto____$1;
          } else {
            var or__3626__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3626__auto____$2)) {
              return or__3626__auto____$2;
            } else {
              var or__3626__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3626__auto____$3)) {
                return or__3626__auto____$3;
              } else {
                var or__3626__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3626__auto____$4)) {
                  return or__3626__auto____$4;
                } else {
                  var or__3626__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3626__auto____$5)) {
                    return or__3626__auto____$5;
                  } else {
                    var or__3626__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3626__auto____$6)) {
                      return or__3626__auto____$6;
                    } else {
                      var or__3626__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3626__auto____$7)) {
                        return or__3626__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__19885__delegate = function(x, y, z, args) {
          var or__3626__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3626__auto__) {
              return function(p1__19876_SHARP_) {
                var or__3626__auto____$1 = p1.call(null, p1__19876_SHARP_);
                if (cljs.core.truth_(or__3626__auto____$1)) {
                  return or__3626__auto____$1;
                } else {
                  var or__3626__auto____$2 = p2.call(null, p1__19876_SHARP_);
                  if (cljs.core.truth_(or__3626__auto____$2)) {
                    return or__3626__auto____$2;
                  } else {
                    return p3.call(null, p1__19876_SHARP_);
                  }
                }
              };
            }(or__3626__auto__), args);
          }
        };
        var G__19885 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__19885__delegate.call(this, x, y, z, args);
        };
        G__19885.cljs$lang$maxFixedArity = 3;
        G__19885.cljs$lang$applyTo = function(arglist__19886) {
          var x = cljs.core.first(arglist__19886);
          arglist__19886 = cljs.core.next(arglist__19886);
          var y = cljs.core.first(arglist__19886);
          arglist__19886 = cljs.core.next(arglist__19886);
          var z = cljs.core.first(arglist__19886);
          var args = cljs.core.rest(arglist__19886);
          return G__19885__delegate(x, y, z, args);
        };
        G__19885.cljs$core$IFn$_invoke$arity$variadic = G__19885__delegate;
        return G__19885;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__19887__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19877_SHARP_) {
                return p1__19877_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19878_SHARP_) {
                var or__3626__auto__ = p1__19878_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3626__auto__)) {
                  return or__3626__auto__;
                } else {
                  return p1__19878_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__19879_SHARP_) {
                var or__3626__auto__ = p1__19879_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3626__auto__)) {
                  return or__3626__auto__;
                } else {
                  var or__3626__auto____$1 = p1__19879_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3626__auto____$1)) {
                    return or__3626__auto____$1;
                  } else {
                    return p1__19879_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__19888__delegate = function(x, y, z, args) {
              var or__3626__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3626__auto__)) {
                return or__3626__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3626__auto__, ps__$1) {
                  return function(p1__19880_SHARP_) {
                    return cljs.core.some.call(null, p1__19880_SHARP_, args);
                  };
                }(or__3626__auto__, ps__$1), ps__$1);
              }
            };
            var G__19888 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__19888__delegate.call(this, x, y, z, args);
            };
            G__19888.cljs$lang$maxFixedArity = 3;
            G__19888.cljs$lang$applyTo = function(arglist__19889) {
              var x = cljs.core.first(arglist__19889);
              arglist__19889 = cljs.core.next(arglist__19889);
              var y = cljs.core.first(arglist__19889);
              arglist__19889 = cljs.core.next(arglist__19889);
              var z = cljs.core.first(arglist__19889);
              var args = cljs.core.rest(arglist__19889);
              return G__19888__delegate(x, y, z, args);
            };
            G__19888.cljs$core$IFn$_invoke$arity$variadic = G__19888__delegate;
            return G__19888;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__19887 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__19887__delegate.call(this, p1, p2, p3, ps);
    };
    G__19887.cljs$lang$maxFixedArity = 3;
    G__19887.cljs$lang$applyTo = function(arglist__19890) {
      var p1 = cljs.core.first(arglist__19890);
      arglist__19890 = cljs.core.next(arglist__19890);
      var p2 = cljs.core.first(arglist__19890);
      arglist__19890 = cljs.core.next(arglist__19890);
      var p3 = cljs.core.first(arglist__19890);
      var ps = cljs.core.rest(arglist__19890);
      return G__19887__delegate(p1, p2, p3, ps);
    };
    G__19887.cljs$core$IFn$_invoke$arity$variadic = G__19887__delegate;
    return G__19887;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__19892 = null;
        var G__19892__0 = function() {
          return f1.call(null);
        };
        var G__19892__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19892__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__19892__3 = function() {
          var G__19893__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__19893 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__19893__delegate.call(this, result, input, inputs);
          };
          G__19893.cljs$lang$maxFixedArity = 2;
          G__19893.cljs$lang$applyTo = function(arglist__19894) {
            var result = cljs.core.first(arglist__19894);
            arglist__19894 = cljs.core.next(arglist__19894);
            var input = cljs.core.first(arglist__19894);
            var inputs = cljs.core.rest(arglist__19894);
            return G__19893__delegate(result, input, inputs);
          };
          G__19893.cljs$core$IFn$_invoke$arity$variadic = G__19893__delegate;
          return G__19893;
        }();
        G__19892 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__19892__0.call(this);
            case 1:
              return G__19892__1.call(this, result);
            case 2:
              return G__19892__2.call(this, result, input);
            default:
              return G__19892__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19892.cljs$lang$maxFixedArity = 2;
        G__19892.cljs$lang$applyTo = G__19892__3.cljs$lang$applyTo;
        G__19892.cljs$core$IFn$_invoke$arity$0 = G__19892__0;
        G__19892.cljs$core$IFn$_invoke$arity$1 = G__19892__1;
        G__19892.cljs$core$IFn$_invoke$arity$2 = G__19892__2;
        G__19892.cljs$core$IFn$_invoke$arity$variadic = G__19892__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__19892;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4495__auto___19895 = size;
          var i_19896 = 0;
          while (true) {
            if (i_19896 < n__4495__auto___19895) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_19896)));
              var G__19897 = i_19896 + 1;
              i_19896 = G__19897;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__19898__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__19891_SHARP_) {
          return cljs.core.apply.call(null, f, p1__19891_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__19898 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19898__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19898.cljs$lang$maxFixedArity = 4;
    G__19898.cljs$lang$applyTo = function(arglist__19899) {
      var f = cljs.core.first(arglist__19899);
      arglist__19899 = cljs.core.next(arglist__19899);
      var c1 = cljs.core.first(arglist__19899);
      arglist__19899 = cljs.core.next(arglist__19899);
      var c2 = cljs.core.first(arglist__19899);
      arglist__19899 = cljs.core.next(arglist__19899);
      var c3 = cljs.core.first(arglist__19899);
      var colls = cljs.core.rest(arglist__19899);
      return G__19898__delegate(f, c1, c2, c3, colls);
    };
    G__19898.cljs$core$IFn$_invoke$arity$variadic = G__19898__delegate;
    return G__19898;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__19900 = null;
          var G__19900__0 = function() {
            return f1.call(null);
          };
          var G__19900__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19900__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__19900 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19900__0.call(this);
              case 1:
                return G__19900__1.call(this, result);
              case 2:
                return G__19900__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19900.cljs$core$IFn$_invoke$arity$0 = G__19900__0;
          G__19900.cljs$core$IFn$_invoke$arity$1 = G__19900__1;
          G__19900.cljs$core$IFn$_invoke$arity$2 = G__19900__2;
          return G__19900;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__19901 = null;
          var G__19901__0 = function() {
            return f1.call(null);
          };
          var G__19901__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19901__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__19901 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19901__0.call(this);
              case 1:
                return G__19901__1.call(this, result);
              case 2:
                return G__19901__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19901.cljs$core$IFn$_invoke$arity$0 = G__19901__0;
          G__19901.cljs$core$IFn$_invoke$arity$1 = G__19901__1;
          G__19901.cljs$core$IFn$_invoke$arity$2 = G__19901__2;
          return G__19901;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__19902 = n__$1 - 1;
          var G__19903 = cljs.core.rest.call(null, s);
          n__$1 = G__19902;
          coll__$1 = G__19903;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__19904 = cljs.core.next.call(null, s);
      var G__19905 = cljs.core.next.call(null, lead);
      s = G__19904;
      lead = G__19905;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__19906 = null;
          var G__19906__0 = function() {
            return f1.call(null);
          };
          var G__19906__1 = function(result) {
            return f1.call(null, result);
          };
          var G__19906__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3614__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3614__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3614__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__19906 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__19906__0.call(this);
              case 1:
                return G__19906__1.call(this, result);
              case 2:
                return G__19906__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19906.cljs$core$IFn$_invoke$arity$0 = G__19906__0;
          G__19906.cljs$core$IFn$_invoke$arity$1 = G__19906__1;
          G__19906.cljs$core$IFn$_invoke$arity$2 = G__19906__2;
          return G__19906;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3614__auto__ = s;
          if (and__3614__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3614__auto__;
          }
        }())) {
          var G__19907 = pred__$1;
          var G__19908 = cljs.core.rest.call(null, s);
          pred__$1 = G__19907;
          coll__$1 = G__19908;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__19909__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__19909 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__19909__delegate.call(this, c1, c2, colls);
    };
    G__19909.cljs$lang$maxFixedArity = 2;
    G__19909.cljs$lang$applyTo = function(arglist__19910) {
      var c1 = cljs.core.first(arglist__19910);
      arglist__19910 = cljs.core.next(arglist__19910);
      var c2 = cljs.core.first(arglist__19910);
      var colls = cljs.core.rest(arglist__19910);
      return G__19909__delegate(c1, c2, colls);
    };
    G__19909.cljs$core$IFn$_invoke$arity$variadic = G__19909__delegate;
    return G__19909;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__19911__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__19911 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__19911__delegate.call(this, f, colls);
    };
    G__19911.cljs$lang$maxFixedArity = 1;
    G__19911.cljs$lang$applyTo = function(arglist__19912) {
      var f = cljs.core.first(arglist__19912);
      var colls = cljs.core.rest(arglist__19912);
      return G__19911__delegate(f, colls);
    };
    G__19911.cljs$core$IFn$_invoke$arity$variadic = G__19911__delegate;
    return G__19911;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__19913 = null;
        var G__19913__0 = function() {
          return f1.call(null);
        };
        var G__19913__1 = function(result) {
          return f1.call(null, result);
        };
        var G__19913__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__19913 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__19913__0.call(this);
            case 1:
              return G__19913__1.call(this, result);
            case 2:
              return G__19913__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__19913.cljs$core$IFn$_invoke$arity$0 = G__19913__0;
        G__19913.cljs$core$IFn$_invoke$arity$1 = G__19913__1;
        G__19913.cljs$core$IFn$_invoke$arity$2 = G__19913__2;
        return G__19913;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4495__auto___19914 = size;
          var i_19915 = 0;
          while (true) {
            if (i_19915 < n__4495__auto___19914) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_19915)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_19915));
              } else {
              }
              var G__19916 = i_19915 + 1;
              i_19915 = G__19916;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__19917_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__19917_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__19920 = to;
        if (G__19920) {
          var bit__4282__auto__ = G__19920.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4282__auto__ || G__19920.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__19921 = to;
      if (G__19921) {
        var bit__4282__auto__ = G__19921.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4282__auto__ || G__19921.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__19922__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__19922 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__19922__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__19922.cljs$lang$maxFixedArity = 4;
    G__19922.cljs$lang$applyTo = function(arglist__19923) {
      var f = cljs.core.first(arglist__19923);
      arglist__19923 = cljs.core.next(arglist__19923);
      var c1 = cljs.core.first(arglist__19923);
      arglist__19923 = cljs.core.next(arglist__19923);
      var c2 = cljs.core.first(arglist__19923);
      arglist__19923 = cljs.core.next(arglist__19923);
      var c3 = cljs.core.first(arglist__19923);
      var colls = cljs.core.rest(arglist__19923);
      return G__19922__delegate(f, c1, c2, c3, colls);
    };
    G__19922.cljs$core$IFn$_invoke$arity$variadic = G__19922__delegate;
    return G__19922;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__19925 = m__$1;
          if (G__19925) {
            var bit__4289__auto__ = G__19925.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4289__auto__ || G__19925.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__19925.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__19925);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__19925);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__19926 = sentinel;
            var G__19927 = m__$2;
            var G__19928 = cljs.core.next.call(null, ks__$1);
            sentinel = G__19926;
            m__$1 = G__19927;
            ks__$1 = G__19928;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__19929, v) {
  var vec__19931 = p__19929;
  var k = cljs.core.nth.call(null, vec__19931, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__19931, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__19932, f) {
    var vec__19942 = p__19932;
    var k = cljs.core.nth.call(null, vec__19942, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19942, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__19933, f, a) {
    var vec__19943 = p__19933;
    var k = cljs.core.nth.call(null, vec__19943, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19943, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__19934, f, a, b) {
    var vec__19944 = p__19934;
    var k = cljs.core.nth.call(null, vec__19944, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19944, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__19935, f, a, b, c) {
    var vec__19945 = p__19935;
    var k = cljs.core.nth.call(null, vec__19945, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__19945, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__19947__delegate = function(m, p__19936, f, a, b, c, args) {
      var vec__19946 = p__19936;
      var k = cljs.core.nth.call(null, vec__19946, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__19946, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__19947 = function(m, p__19936, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__19947__delegate.call(this, m, p__19936, f, a, b, c, args);
    };
    G__19947.cljs$lang$maxFixedArity = 6;
    G__19947.cljs$lang$applyTo = function(arglist__19948) {
      var m = cljs.core.first(arglist__19948);
      arglist__19948 = cljs.core.next(arglist__19948);
      var p__19936 = cljs.core.first(arglist__19948);
      arglist__19948 = cljs.core.next(arglist__19948);
      var f = cljs.core.first(arglist__19948);
      arglist__19948 = cljs.core.next(arglist__19948);
      var a = cljs.core.first(arglist__19948);
      arglist__19948 = cljs.core.next(arglist__19948);
      var b = cljs.core.first(arglist__19948);
      arglist__19948 = cljs.core.next(arglist__19948);
      var c = cljs.core.first(arglist__19948);
      var args = cljs.core.rest(arglist__19948);
      return G__19947__delegate(m, p__19936, f, a, b, c, args);
    };
    G__19947.cljs$core$IFn$_invoke$arity$variadic = G__19947__delegate;
    return G__19947;
  }();
  update_in = function(m, p__19936, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__19936, f);
      case 4:
        return update_in__4.call(this, m, p__19936, f, a);
      case 5:
        return update_in__5.call(this, m, p__19936, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__19936, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__19936, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4205__auto__, writer__4206__auto__, opts__4207__auto__) {
  return cljs.core._write.call(null, writer__4206__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__19949 = ll - 5;
      var G__19950 = r;
      ll = G__19949;
      ret = G__19950;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__19951 = cljs.core.pv_aget.call(null, node, 0);
      var G__19952 = level - 5;
      node = G__19951;
      level = G__19952;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__19953 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__19954 = level - 5;
        node = G__19953;
        level = G__19954;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while (true) {
          if (j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2;
            } else {
              var G__19956 = j + 1;
              var G__19957 = init__$2;
              j = G__19956;
              init__$1 = G__19957;
              continue;
            }
          } else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1);
      } else {
        var G__19958 = i + step_init[0];
        i = G__19958;
        continue;
      }
    } else {
      return step_init[1];
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start);
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4495__auto___19959 = len;
    var i_19960 = 0;
    while (true) {
      if (i_19960 < n__4495__auto___19959) {
        new_tail[i_19960] = self__.tail[i_19960];
        var G__19961 = i_19960 + 1;
        i_19960 = G__19961;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__19962 = null;
  var G__19962__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19962__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19962 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19962__2.call(this, self__, k);
      case 3:
        return G__19962__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19962.cljs$core$IFn$_invoke$arity$2 = G__19962__2;
  G__19962.cljs$core$IFn$_invoke$arity$3 = G__19962__3;
  return G__19962;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args19955) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19955)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__19963 = i + 1;
        var G__19964 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__19963;
        out = G__19964;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__19965) {
    var args = cljs.core.seq(arglist__19965);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3933__auto__ = self__.end;
    var y__3934__auto__ = v_pos + 1;
    return x__3933__auto__ > y__3934__auto__ ? x__3933__auto__ : y__3934__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__19967 = null;
  var G__19967__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__19967__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__19967 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19967__2.call(this, self__, k);
      case 3:
        return G__19967__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19967.cljs$core$IFn$_invoke$arity$2 = G__19967__2;
  G__19967.cljs$core$IFn$_invoke$arity$3 = G__19967__3;
  return G__19967;
}();
cljs.core.Subvec.prototype.apply = function(self__, args19966) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19966)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__19968 = meta;
      var G__19969 = v.v;
      var G__19970 = v.start + start;
      var G__19971 = v.start + end;
      var G__19972 = __hash;
      meta = G__19968;
      v = G__19969;
      start = G__19970;
      end = G__19971;
      __hash = G__19972;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj19976 = {};
    return obj19976;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__19977 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__19978 = level - 5;
        node = G__19977;
        level = G__19978;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__19980 = null;
  var G__19980__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19980__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19980 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19980__2.call(this, self__, k);
      case 3:
        return G__19980__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19980.cljs$core$IFn$_invoke$arity$2 = G__19980__2;
  G__19980.cljs$core$IFn$_invoke$arity$3 = G__19980__3;
  return G__19980;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args19979) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19979)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3626__auto__ = self__.front;
    if (cljs.core.truth_(or__3626__auto__)) {
      return or__3626__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3626__auto__ = self__.rear;
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__19981 = i + incr;
        i = G__19981;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__19982 = i + 1;
      var G__19983 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__19982;
      out = G__19983;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj19987 = {};
    return obj19987;
  }();
  var l = ks.length;
  var i_19988 = 0;
  while (true) {
    if (i_19988 < l) {
      var k_19989 = ks[i_19988];
      new_obj[k_19989] = obj[k_19989];
      var G__19990 = i_19988 + 1;
      i_19988 = G__19990;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__19993 = cljs.core.rest.call(null, keys__$1);
        var G__19994 = init__$2;
        keys__$1 = G__19993;
        init__$1 = G__19994;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__19991_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__19991_SHARP_, self__.strobj[p1__19991_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__19995 = null;
  var G__19995__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__19995__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__19995 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__19995__2.call(this, self__, k);
      case 3:
        return G__19995__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__19995.cljs$core$IFn$_invoke$arity$2 = G__19995__2;
  G__19995.cljs$core$IFn$_invoke$arity$3 = G__19995__3;
  return G__19995;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args19992) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args19992)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj19997 = {};
  return obj19997;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__19998 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__19998, 0, null);
    var v = cljs.core.nth.call(null, vec__19998, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__19999 = i + 2;
        i = G__19999;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__20000 = i + 2;
        i = G__20000;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__20001 = i + 2;
        i = G__20001;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__20002 = i + 2;
        i = G__20002;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__20003 = i + 2;
        i = G__20003;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_20004 = 0;
  while (true) {
    if (i_20004 < l) {
      narr[i_20004] = arr[i_20004];
      var G__20005 = i_20004 + 1;
      i_20004 = G__20005;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20007 = cljs.core.seq.call(null, coll);
  var chunk__20008 = null;
  var count__20009 = 0;
  var i__20010 = 0;
  while (true) {
    if (i__20010 < count__20009) {
      var vec__20011 = cljs.core._nth.call(null, chunk__20008, i__20010);
      var k = cljs.core.nth.call(null, vec__20011, 0, null);
      var v = cljs.core.nth.call(null, vec__20011, 1, null);
      f.call(null, v, k);
      var G__20016 = seq__20007;
      var G__20017 = chunk__20008;
      var G__20018 = count__20009;
      var G__20019 = i__20010 + 1;
      seq__20007 = G__20016;
      chunk__20008 = G__20017;
      count__20009 = G__20018;
      i__20010 = G__20019;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20007);
      if (temp__4126__auto__) {
        var seq__20007__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20007__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__20007__$1);
          var G__20020 = cljs.core.chunk_rest.call(null, seq__20007__$1);
          var G__20021 = c__4395__auto__;
          var G__20022 = cljs.core.count.call(null, c__4395__auto__);
          var G__20023 = 0;
          seq__20007 = G__20020;
          chunk__20008 = G__20021;
          count__20009 = G__20022;
          i__20010 = G__20023;
          continue;
        } else {
          var vec__20012 = cljs.core.first.call(null, seq__20007__$1);
          var k = cljs.core.nth.call(null, vec__20012, 0, null);
          var v = cljs.core.nth.call(null, vec__20012, 1, null);
          f.call(null, v, k);
          var G__20024 = cljs.core.next.call(null, seq__20007__$1);
          var G__20025 = null;
          var G__20026 = 0;
          var G__20027 = 0;
          seq__20007 = G__20024;
          chunk__20008 = G__20025;
          count__20009 = G__20026;
          i__20010 = G__20027;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__20028 = i + 2;
        var G__20029 = init__$2;
        i = G__20028;
        init__$1 = G__20029;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj20014 = {};
    return obj20014;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__20030 = s + 2;
            var G__20031 = d;
            s = G__20030;
            d = G__20031;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__20032 = s + 2;
            var G__20033 = d + 2;
            s = G__20032;
            d = G__20033;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__20015 = cljs.core.aclone.call(null, self__.arr);
        G__20015[idx + 1] = v;
        return G__20015;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__20034 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__20035 = cljs.core.next.call(null, es);
          ret = G__20034;
          es = G__20035;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__20036 = null;
  var G__20036__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20036__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20036 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20036__2.call(this, self__, k);
      case 3:
        return G__20036__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20036.cljs$core$IFn$_invoke$arity$2 = G__20036__2;
  G__20036.cljs$core$IFn$_invoke$arity$3 = G__20036__3;
  return G__20036;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args20006) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20006)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20037 = i + 2;
        var G__20038 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__20037;
        ret = G__20038;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__20039_20041 = self__.arr;
      G__20039_20041.pop();
      G__20039_20041.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__20040 = o;
      if (G__20040) {
        var bit__4289__auto__ = G__20040.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4289__auto__ || G__20040.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20040.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__20040);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__20040);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20042 = cljs.core.next.call(null, es);
          var G__20043 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__20042;
          tcoll__$2 = G__20043;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__20044 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__20045 = i + 2;
      out = G__20044;
      i = G__20045;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4205__auto__, writer__4206__auto__, opts__4207__auto__) {
  return cljs.core._write.call(null, writer__4206__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__20048 = cljs.core.aclone.call(null, arr);
    G__20048[i] = a;
    return G__20048;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__20049 = cljs.core.aclone.call(null, arr);
    G__20049[i] = a;
    G__20049[j] = b;
    return G__20049;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__20050 = i + 2;
        var G__20051 = init__$2;
        i = G__20050;
        init__$1 = G__20051;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_20052 = 0;
        var j_20053 = 0;
        while (true) {
          if (i_20052 < 32) {
            if ((self__.bitmap >>> i_20052 & 1) === 0) {
              var G__20054 = i_20052 + 1;
              var G__20055 = j_20053;
              i_20052 = G__20054;
              j_20053 = G__20055;
              continue;
            } else {
              nodes[i_20052] = !(self__.arr[j_20053] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_20053]), self__.arr[j_20053], self__.arr[j_20053 + 1], added_leaf_QMARK_) : self__.arr[j_20053 + 1];
              var G__20056 = i_20052 + 1;
              var G__20057 = j_20053 + 2;
              i_20052 = G__20056;
              j_20053 = G__20057;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_20058 = 0;
      var j_20059 = 0;
      while (true) {
        if (i_20058 < 32) {
          if ((self__.bitmap >>> i_20058 & 1) === 0) {
            var G__20060 = i_20058 + 1;
            var G__20061 = j_20059;
            i_20058 = G__20060;
            j_20059 = G__20061;
            continue;
          } else {
            nodes[i_20058] = !(self__.arr[j_20059] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_20059]), self__.arr[j_20059], self__.arr[j_20059 + 1], added_leaf_QMARK_) : self__.arr[j_20059 + 1];
            var G__20062 = i_20058 + 1;
            var G__20063 = j_20059 + 2;
            i_20058 = G__20062;
            j_20059 = G__20063;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__20064 = i + 1;
        var G__20065 = j + 2;
        var G__20066 = bitmap | 1 << i;
        i = G__20064;
        j = G__20065;
        bitmap = G__20066;
        continue;
      } else {
        var G__20067 = i + 1;
        var G__20068 = j;
        var G__20069 = bitmap;
        i = G__20067;
        j = G__20068;
        bitmap = G__20069;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__20070 = i + 1;
          var G__20071 = init__$2;
          i = G__20070;
          init__$1 = G__20071;
          continue;
        }
      } else {
        var G__20072 = i + 1;
        var G__20073 = init__$1;
        i = G__20072;
        init__$1 = G__20073;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__20074 = i + 2;
        i = G__20074;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__20075 = j + 2;
                j = G__20075;
                continue;
              }
            } else {
              var G__20076 = j + 2;
              j = G__20076;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__20077 = j + 1;
              j = G__20077;
              continue;
            }
          } else {
            var G__20078 = j + 1;
            j = G__20078;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20080 = cljs.core.seq.call(null, coll);
  var chunk__20081 = null;
  var count__20082 = 0;
  var i__20083 = 0;
  while (true) {
    if (i__20083 < count__20082) {
      var vec__20084 = cljs.core._nth.call(null, chunk__20081, i__20083);
      var k = cljs.core.nth.call(null, vec__20084, 0, null);
      var v = cljs.core.nth.call(null, vec__20084, 1, null);
      f.call(null, v, k);
      var G__20088 = seq__20080;
      var G__20089 = chunk__20081;
      var G__20090 = count__20082;
      var G__20091 = i__20083 + 1;
      seq__20080 = G__20088;
      chunk__20081 = G__20089;
      count__20082 = G__20090;
      i__20083 = G__20091;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20080);
      if (temp__4126__auto__) {
        var seq__20080__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20080__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__20080__$1);
          var G__20092 = cljs.core.chunk_rest.call(null, seq__20080__$1);
          var G__20093 = c__4395__auto__;
          var G__20094 = cljs.core.count.call(null, c__4395__auto__);
          var G__20095 = 0;
          seq__20080 = G__20092;
          chunk__20081 = G__20093;
          count__20082 = G__20094;
          i__20083 = G__20095;
          continue;
        } else {
          var vec__20085 = cljs.core.first.call(null, seq__20080__$1);
          var k = cljs.core.nth.call(null, vec__20085, 0, null);
          var v = cljs.core.nth.call(null, vec__20085, 1, null);
          f.call(null, v, k);
          var G__20096 = cljs.core.next.call(null, seq__20080__$1);
          var G__20097 = null;
          var G__20098 = 0;
          var G__20099 = 0;
          seq__20080 = G__20096;
          chunk__20081 = G__20097;
          count__20082 = G__20098;
          i__20083 = G__20099;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj20087 = {};
    return obj20087;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__20100 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__20101 = cljs.core.next.call(null, es);
          ret = G__20100;
          es = G__20101;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__20102 = null;
  var G__20102__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20102__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20102 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20102__2.call(this, self__, k);
      case 3:
        return G__20102__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20102.cljs$core$IFn$_invoke$arity$2 = G__20102__2;
  G__20102.cljs$core$IFn$_invoke$arity$3 = G__20102__3;
  return G__20102;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args20079) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20079)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__20103 = i + 1;
      var G__20104 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__20103;
      out = G__20104;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__20105 = o;
      if (G__20105) {
        var bit__4289__auto__ = G__20105.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4289__auto__ || G__20105.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__20105.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__20105);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__20105);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__20106 = cljs.core.next.call(null, es);
          var G__20107 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__20106;
          tcoll__$1 = G__20107;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__20108 = ascending_QMARK_ ? t.left : t.right;
      var G__20109 = cljs.core.conj.call(null, stack__$1, t);
      t = G__20108;
      stack__$1 = G__20109;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__20111 = null;
  var G__20111__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20111__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20111 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20111__2.call(this, self__, k);
      case 3:
        return G__20111__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20111.cljs$core$IFn$_invoke$arity$2 = G__20111__2;
  G__20111.cljs$core$IFn$_invoke$arity$3 = G__20111__3;
  return G__20111;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args20110) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20110)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__20113 = null;
  var G__20113__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20113__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20113 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20113__2.call(this, self__, k);
      case 3:
        return G__20113__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20113.cljs$core$IFn$_invoke$arity$2 = G__20113__2;
  G__20113.cljs$core$IFn$_invoke$arity$3 = G__20113__3;
  return G__20113;
}();
cljs.core.RedNode.prototype.apply = function(self__, args20112) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20112)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20115 = cljs.core.seq.call(null, coll);
  var chunk__20116 = null;
  var count__20117 = 0;
  var i__20118 = 0;
  while (true) {
    if (i__20118 < count__20117) {
      var vec__20119 = cljs.core._nth.call(null, chunk__20116, i__20118);
      var k = cljs.core.nth.call(null, vec__20119, 0, null);
      var v = cljs.core.nth.call(null, vec__20119, 1, null);
      f.call(null, v, k);
      var G__20121 = seq__20115;
      var G__20122 = chunk__20116;
      var G__20123 = count__20117;
      var G__20124 = i__20118 + 1;
      seq__20115 = G__20121;
      chunk__20116 = G__20122;
      count__20117 = G__20123;
      i__20118 = G__20124;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20115);
      if (temp__4126__auto__) {
        var seq__20115__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20115__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__20115__$1);
          var G__20125 = cljs.core.chunk_rest.call(null, seq__20115__$1);
          var G__20126 = c__4395__auto__;
          var G__20127 = cljs.core.count.call(null, c__4395__auto__);
          var G__20128 = 0;
          seq__20115 = G__20125;
          chunk__20116 = G__20126;
          count__20117 = G__20127;
          i__20118 = G__20128;
          continue;
        } else {
          var vec__20120 = cljs.core.first.call(null, seq__20115__$1);
          var k = cljs.core.nth.call(null, vec__20120, 0, null);
          var v = cljs.core.nth.call(null, vec__20120, 1, null);
          f.call(null, v, k);
          var G__20129 = cljs.core.next.call(null, seq__20115__$1);
          var G__20130 = null;
          var G__20131 = 0;
          var G__20132 = 0;
          seq__20115 = G__20129;
          chunk__20116 = G__20130;
          count__20117 = G__20131;
          i__20118 = G__20132;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__20133 = t.left;
          t = G__20133;
          continue;
        } else {
          var G__20134 = t.right;
          t = G__20134;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__20135 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__20136 = cljs.core.next.call(null, es);
          ret = G__20135;
          es = G__20136;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__20137 = null;
  var G__20137__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20137__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20137 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20137__2.call(this, self__, k);
      case 3:
        return G__20137__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20137.cljs$core$IFn$_invoke$arity$2 = G__20137__2;
  G__20137.cljs$core$IFn$_invoke$arity$3 = G__20137__3;
  return G__20137;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args20114) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20114)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__20138 = cljs.core.conj.call(null, stack, t);
              var G__20139 = t.left;
              stack = G__20138;
              t = G__20139;
              continue;
            } else {
              var G__20140 = stack;
              var G__20141 = t.right;
              stack = G__20140;
              t = G__20141;
              continue;
            }
          } else {
            if (c > 0) {
              var G__20142 = cljs.core.conj.call(null, stack, t);
              var G__20143 = t.right;
              stack = G__20142;
              t = G__20143;
              continue;
            } else {
              var G__20144 = stack;
              var G__20145 = t.left;
              stack = G__20144;
              t = G__20145;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__20146 = cljs.core.nnext.call(null, in$);
        var G__20147 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__20146;
        out = G__20147;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__20148) {
    var keyvals = cljs.core.seq(arglist__20148);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__20149) {
    var keyvals = cljs.core.seq(arglist__20149);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj20153 = {};
      return obj20153;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__20154 = cljs.core.nnext.call(null, kvs);
        kvs = G__20154;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__20155) {
    var keyvals = cljs.core.seq(arglist__20155);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__20156 = cljs.core.nnext.call(null, in$);
        var G__20157 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__20156;
        out = G__20157;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__20158) {
    var keyvals = cljs.core.seq(arglist__20158);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__20159 = cljs.core.nnext.call(null, in$);
        var G__20160 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__20159;
        out = G__20160;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__20161) {
    var comparator = cljs.core.first(arglist__20161);
    var keyvals = cljs.core.rest(arglist__20161);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20162 = self__.mseq;
    if (G__20162) {
      var bit__4289__auto__ = G__20162.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4289__auto__ || G__20162.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20162.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20162);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20162);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20163 = self__.mseq;
    if (G__20163) {
      var bit__4289__auto__ = G__20163.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4289__auto__ || G__20163.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20163.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20163);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20163);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20164 = self__.mseq;
    if (G__20164) {
      var bit__4289__auto__ = G__20164.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4289__auto__ || G__20164.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20164.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20164);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20164);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__20165 = self__.mseq;
    if (G__20165) {
      var bit__4289__auto__ = G__20165.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4289__auto__ || G__20165.cljs$core$INext$) {
        return true;
      } else {
        if (!G__20165.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20165);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__20165);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__20166_SHARP_, p2__20167_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3626__auto__ = p1__20166_SHARP_;
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__20167_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__20168) {
    var maps = cljs.core.seq(arglist__20168);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3626__auto__ = m1;
            if (cljs.core.truth_(or__3626__auto__)) {
              return or__3626__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__20169) {
    var f = cljs.core.first(arglist__20169);
    var maps = cljs.core.rest(arglist__20169);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__20170 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__20171 = cljs.core.next.call(null, keys);
      ret = G__20170;
      keys = G__20171;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20174 = cljs.core.seq.call(null, coll);
  var chunk__20175 = null;
  var count__20176 = 0;
  var i__20177 = 0;
  while (true) {
    if (i__20177 < count__20176) {
      var vec__20178 = cljs.core._nth.call(null, chunk__20175, i__20177);
      var k = cljs.core.nth.call(null, vec__20178, 0, null);
      var v = cljs.core.nth.call(null, vec__20178, 1, null);
      f.call(null, v, k);
      var G__20180 = seq__20174;
      var G__20181 = chunk__20175;
      var G__20182 = count__20176;
      var G__20183 = i__20177 + 1;
      seq__20174 = G__20180;
      chunk__20175 = G__20181;
      count__20176 = G__20182;
      i__20177 = G__20183;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20174);
      if (temp__4126__auto__) {
        var seq__20174__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20174__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__20174__$1);
          var G__20184 = cljs.core.chunk_rest.call(null, seq__20174__$1);
          var G__20185 = c__4395__auto__;
          var G__20186 = cljs.core.count.call(null, c__4395__auto__);
          var G__20187 = 0;
          seq__20174 = G__20184;
          chunk__20175 = G__20185;
          count__20176 = G__20186;
          i__20177 = G__20187;
          continue;
        } else {
          var vec__20179 = cljs.core.first.call(null, seq__20174__$1);
          var k = cljs.core.nth.call(null, vec__20179, 0, null);
          var v = cljs.core.nth.call(null, vec__20179, 1, null);
          f.call(null, v, k);
          var G__20188 = cljs.core.next.call(null, seq__20174__$1);
          var G__20189 = null;
          var G__20190 = 0;
          var G__20191 = 0;
          seq__20174 = G__20188;
          chunk__20175 = G__20189;
          count__20176 = G__20190;
          i__20177 = G__20191;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__20172_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__20172_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__20192 = null;
  var G__20192__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20192__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20192 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20192__2.call(this, self__, k);
      case 3:
        return G__20192__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20192.cljs$core$IFn$_invoke$arity$2 = G__20192__2;
  G__20192.cljs$core$IFn$_invoke$arity$3 = G__20192__3;
  return G__20192;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args20173) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20173)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__20193 = i + 1;
        var G__20194 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__20193;
        out = G__20194;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__20195 = i + 1;
        var G__20196 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__20195;
        out = G__20196;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__20198 = null;
  var G__20198__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__20198__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__20198 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20198__2.call(this, self__, k);
      case 3:
        return G__20198__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20198.cljs$core$IFn$_invoke$arity$2 = G__20198__2;
  G__20198.cljs$core$IFn$_invoke$arity$3 = G__20198__3;
  return G__20198;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args20197) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20197)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__20201 = cljs.core.seq.call(null, coll);
  var chunk__20202 = null;
  var count__20203 = 0;
  var i__20204 = 0;
  while (true) {
    if (i__20204 < count__20203) {
      var vec__20205 = cljs.core._nth.call(null, chunk__20202, i__20204);
      var k = cljs.core.nth.call(null, vec__20205, 0, null);
      var v = cljs.core.nth.call(null, vec__20205, 1, null);
      f.call(null, v, k);
      var G__20207 = seq__20201;
      var G__20208 = chunk__20202;
      var G__20209 = count__20203;
      var G__20210 = i__20204 + 1;
      seq__20201 = G__20207;
      chunk__20202 = G__20208;
      count__20203 = G__20209;
      i__20204 = G__20210;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20201);
      if (temp__4126__auto__) {
        var seq__20201__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20201__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__20201__$1);
          var G__20211 = cljs.core.chunk_rest.call(null, seq__20201__$1);
          var G__20212 = c__4395__auto__;
          var G__20213 = cljs.core.count.call(null, c__4395__auto__);
          var G__20214 = 0;
          seq__20201 = G__20211;
          chunk__20202 = G__20212;
          count__20203 = G__20213;
          i__20204 = G__20214;
          continue;
        } else {
          var vec__20206 = cljs.core.first.call(null, seq__20201__$1);
          var k = cljs.core.nth.call(null, vec__20206, 0, null);
          var v = cljs.core.nth.call(null, vec__20206, 1, null);
          f.call(null, v, k);
          var G__20215 = cljs.core.next.call(null, seq__20201__$1);
          var G__20216 = null;
          var G__20217 = 0;
          var G__20218 = 0;
          seq__20201 = G__20215;
          chunk__20202 = G__20216;
          count__20203 = G__20217;
          i__20204 = G__20218;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__20199_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__20199_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__20219 = null;
  var G__20219__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__20219__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__20219 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20219__2.call(this, self__, k);
      case 3:
        return G__20219__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20219.cljs$core$IFn$_invoke$arity$2 = G__20219__2;
  G__20219.cljs$core$IFn$_invoke$arity$3 = G__20219__3;
  return G__20219;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args20200) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20200)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4489__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4489__auto__.length) {
        var G__20220 = i + 1;
        var G__20221 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__20220;
        res = G__20221;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__20222 = cljs.core._next.call(null, in$__$1);
          var G__20223 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__20222;
          out = G__20223;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__20224__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__20224 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__20224__delegate.call(this, keys);
    };
    G__20224.cljs$lang$maxFixedArity = 0;
    G__20224.cljs$lang$applyTo = function(arglist__20225) {
      var keys = cljs.core.seq(arglist__20225);
      return G__20224__delegate(keys);
    };
    G__20224.cljs$core$IFn$_invoke$arity$variadic = G__20224__delegate;
    return G__20224;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__20226) {
    var keys = cljs.core.seq(arglist__20226);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__20227) {
    var comparator = cljs.core.first(arglist__20227);
    var keys = cljs.core.rest(arglist__20227);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__20228_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__20228_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__20228_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__20229_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__20229_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__20229_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__20236, seen__$1) {
        while (true) {
          var vec__20237 = p__20236;
          var f = cljs.core.nth.call(null, vec__20237, 0, null);
          var xs__$1 = vec__20237;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__20238 = cljs.core.rest.call(null, s);
              var G__20239 = seen__$1;
              p__20236 = G__20238;
              seen__$1 = G__20239;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__20240 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__20241 = cljs.core.next.call(null, s__$1);
      ret = G__20240;
      s__$1 = G__20241;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__20243 = x;
    if (G__20243) {
      var bit__4282__auto__ = G__20243.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4282__auto__ || G__20243.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__20244 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__20245 = cljs.core.next.call(null, ks);
      var G__20246 = cljs.core.next.call(null, vs);
      map = G__20244;
      ks = G__20245;
      vs = G__20246;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__20249__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__20247_SHARP_, p2__20248_SHARP_) {
        return max_key.call(null, k, p1__20247_SHARP_, p2__20248_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__20249 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__20249__delegate.call(this, k, x, y, more);
    };
    G__20249.cljs$lang$maxFixedArity = 3;
    G__20249.cljs$lang$applyTo = function(arglist__20250) {
      var k = cljs.core.first(arglist__20250);
      arglist__20250 = cljs.core.next(arglist__20250);
      var x = cljs.core.first(arglist__20250);
      arglist__20250 = cljs.core.next(arglist__20250);
      var y = cljs.core.first(arglist__20250);
      var more = cljs.core.rest(arglist__20250);
      return G__20249__delegate(k, x, y, more);
    };
    G__20249.cljs$core$IFn$_invoke$arity$variadic = G__20249__delegate;
    return G__20249;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__20253__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__20251_SHARP_, p2__20252_SHARP_) {
        return min_key.call(null, k, p1__20251_SHARP_, p2__20252_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__20253 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__20253__delegate.call(this, k, x, y, more);
    };
    G__20253.cljs$lang$maxFixedArity = 3;
    G__20253.cljs$lang$applyTo = function(arglist__20254) {
      var k = cljs.core.first(arglist__20254);
      arglist__20254 = cljs.core.next(arglist__20254);
      var x = cljs.core.first(arglist__20254);
      arglist__20254 = cljs.core.next(arglist__20254);
      var y = cljs.core.first(arglist__20254);
      var more = cljs.core.rest(arglist__20254);
      return G__20253__delegate(k, x, y, more);
    };
    G__20253.cljs$core$IFn$_invoke$arity$variadic = G__20253__delegate;
    return G__20253;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__20255 = null;
          var G__20255__0 = function() {
            return f1.call(null);
          };
          var G__20255__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__20255__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__20255 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20255__0.call(this);
              case 1:
                return G__20255__1.call(this, result);
              case 2:
                return G__20255__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20255.cljs$core$IFn$_invoke$arity$0 = G__20255__0;
          G__20255.cljs$core$IFn$_invoke$arity$1 = G__20255__1;
          G__20255.cljs$core$IFn$_invoke$arity$2 = G__20255__2;
          return G__20255;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__20256 = null;
        var G__20256__0 = function() {
          return f1.call(null);
        };
        var G__20256__1 = function(result) {
          return f1.call(null, result);
        };
        var G__20256__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__20256 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__20256__0.call(this);
            case 1:
              return G__20256__1.call(this, result);
            case 2:
              return G__20256__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__20256.cljs$core$IFn$_invoke$arity$0 = G__20256__0;
        G__20256.cljs$core$IFn$_invoke$arity$1 = G__20256__1;
        G__20256.cljs$core$IFn$_invoke$arity$2 = G__20256__2;
        return G__20256;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20259 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__20259, 0, null);
        var s = vec__20259;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20260 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__20260, 0, null);
      var s = vec__20260;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__20263 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__20263, 0, null);
        var s = vec__20263;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__20264 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__20264, 0, null);
      var s = vec__20264;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__20265 = null;
          var G__20265__0 = function() {
            return f1.call(null);
          };
          var G__20265__1 = function(result) {
            return f1.call(null, result);
          };
          var G__20265__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__20265 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20265__0.call(this);
              case 1:
                return G__20265__1.call(this, result);
              case 2:
                return G__20265__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20265.cljs$core$IFn$_invoke$arity$0 = G__20265__0;
          G__20265.cljs$core$IFn$_invoke$arity$1 = G__20265__1;
          G__20265.cljs$core$IFn$_invoke$arity$2 = G__20265__2;
          return G__20265;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__20267 = null;
          var G__20267__0 = function() {
            return f1.call(null);
          };
          var G__20267__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__20267__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = f1.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__20267 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20267__0.call(this);
              case 1:
                return G__20267__1.call(this, result);
              case 2:
                return G__20267__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20267.cljs$core$IFn$_invoke$arity$0 = G__20267__0;
          G__20267.cljs$core$IFn$_invoke$arity$1 = G__20267__1;
          G__20267.cljs$core$IFn$_invoke$arity$2 = G__20267__2;
          return G__20267;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__20266_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__20266_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__20278 = null;
      var G__20278__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__20278__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__20278__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__20278__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__20278__4 = function() {
        var G__20279__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__20279 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__20279__delegate.call(this, x, y, z, args);
        };
        G__20279.cljs$lang$maxFixedArity = 3;
        G__20279.cljs$lang$applyTo = function(arglist__20280) {
          var x = cljs.core.first(arglist__20280);
          arglist__20280 = cljs.core.next(arglist__20280);
          var y = cljs.core.first(arglist__20280);
          arglist__20280 = cljs.core.next(arglist__20280);
          var z = cljs.core.first(arglist__20280);
          var args = cljs.core.rest(arglist__20280);
          return G__20279__delegate(x, y, z, args);
        };
        G__20279.cljs$core$IFn$_invoke$arity$variadic = G__20279__delegate;
        return G__20279;
      }();
      G__20278 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20278__0.call(this);
          case 1:
            return G__20278__1.call(this, x);
          case 2:
            return G__20278__2.call(this, x, y);
          case 3:
            return G__20278__3.call(this, x, y, z);
          default:
            return G__20278__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20278.cljs$lang$maxFixedArity = 3;
      G__20278.cljs$lang$applyTo = G__20278__4.cljs$lang$applyTo;
      G__20278.cljs$core$IFn$_invoke$arity$0 = G__20278__0;
      G__20278.cljs$core$IFn$_invoke$arity$1 = G__20278__1;
      G__20278.cljs$core$IFn$_invoke$arity$2 = G__20278__2;
      G__20278.cljs$core$IFn$_invoke$arity$3 = G__20278__3;
      G__20278.cljs$core$IFn$_invoke$arity$variadic = G__20278__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20278;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__20281 = null;
      var G__20281__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__20281__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__20281__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__20281__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__20281__4 = function() {
        var G__20282__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__20282 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__20282__delegate.call(this, x, y, z, args);
        };
        G__20282.cljs$lang$maxFixedArity = 3;
        G__20282.cljs$lang$applyTo = function(arglist__20283) {
          var x = cljs.core.first(arglist__20283);
          arglist__20283 = cljs.core.next(arglist__20283);
          var y = cljs.core.first(arglist__20283);
          arglist__20283 = cljs.core.next(arglist__20283);
          var z = cljs.core.first(arglist__20283);
          var args = cljs.core.rest(arglist__20283);
          return G__20282__delegate(x, y, z, args);
        };
        G__20282.cljs$core$IFn$_invoke$arity$variadic = G__20282__delegate;
        return G__20282;
      }();
      G__20281 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20281__0.call(this);
          case 1:
            return G__20281__1.call(this, x);
          case 2:
            return G__20281__2.call(this, x, y);
          case 3:
            return G__20281__3.call(this, x, y, z);
          default:
            return G__20281__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20281.cljs$lang$maxFixedArity = 3;
      G__20281.cljs$lang$applyTo = G__20281__4.cljs$lang$applyTo;
      G__20281.cljs$core$IFn$_invoke$arity$0 = G__20281__0;
      G__20281.cljs$core$IFn$_invoke$arity$1 = G__20281__1;
      G__20281.cljs$core$IFn$_invoke$arity$2 = G__20281__2;
      G__20281.cljs$core$IFn$_invoke$arity$3 = G__20281__3;
      G__20281.cljs$core$IFn$_invoke$arity$variadic = G__20281__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20281;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__20284 = null;
      var G__20284__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__20284__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__20284__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__20284__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__20284__4 = function() {
        var G__20285__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__20285 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__20285__delegate.call(this, x, y, z, args);
        };
        G__20285.cljs$lang$maxFixedArity = 3;
        G__20285.cljs$lang$applyTo = function(arglist__20286) {
          var x = cljs.core.first(arglist__20286);
          arglist__20286 = cljs.core.next(arglist__20286);
          var y = cljs.core.first(arglist__20286);
          arglist__20286 = cljs.core.next(arglist__20286);
          var z = cljs.core.first(arglist__20286);
          var args = cljs.core.rest(arglist__20286);
          return G__20285__delegate(x, y, z, args);
        };
        G__20285.cljs$core$IFn$_invoke$arity$variadic = G__20285__delegate;
        return G__20285;
      }();
      G__20284 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__20284__0.call(this);
          case 1:
            return G__20284__1.call(this, x);
          case 2:
            return G__20284__2.call(this, x, y);
          case 3:
            return G__20284__3.call(this, x, y, z);
          default:
            return G__20284__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20284.cljs$lang$maxFixedArity = 3;
      G__20284.cljs$lang$applyTo = G__20284__4.cljs$lang$applyTo;
      G__20284.cljs$core$IFn$_invoke$arity$0 = G__20284__0;
      G__20284.cljs$core$IFn$_invoke$arity$1 = G__20284__1;
      G__20284.cljs$core$IFn$_invoke$arity$2 = G__20284__2;
      G__20284.cljs$core$IFn$_invoke$arity$3 = G__20284__3;
      G__20284.cljs$core$IFn$_invoke$arity$variadic = G__20284__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__20284;
    }();
  };
  var juxt__4 = function() {
    var G__20287__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__20288 = null;
          var G__20288__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20268_SHARP_, p2__20269_SHARP_) {
                return cljs.core.conj.call(null, p1__20268_SHARP_, p2__20269_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20288__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20270_SHARP_, p2__20271_SHARP_) {
                return cljs.core.conj.call(null, p1__20270_SHARP_, p2__20271_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20288__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20272_SHARP_, p2__20273_SHARP_) {
                return cljs.core.conj.call(null, p1__20272_SHARP_, p2__20273_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20288__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__20274_SHARP_, p2__20275_SHARP_) {
                return cljs.core.conj.call(null, p1__20274_SHARP_, p2__20275_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__20288__4 = function() {
            var G__20289__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__20276_SHARP_, p2__20277_SHARP_) {
                  return cljs.core.conj.call(null, p1__20276_SHARP_, cljs.core.apply.call(null, p2__20277_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__20289 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__20289__delegate.call(this, x, y, z, args);
            };
            G__20289.cljs$lang$maxFixedArity = 3;
            G__20289.cljs$lang$applyTo = function(arglist__20290) {
              var x = cljs.core.first(arglist__20290);
              arglist__20290 = cljs.core.next(arglist__20290);
              var y = cljs.core.first(arglist__20290);
              arglist__20290 = cljs.core.next(arglist__20290);
              var z = cljs.core.first(arglist__20290);
              var args = cljs.core.rest(arglist__20290);
              return G__20289__delegate(x, y, z, args);
            };
            G__20289.cljs$core$IFn$_invoke$arity$variadic = G__20289__delegate;
            return G__20289;
          }();
          G__20288 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__20288__0.call(this);
              case 1:
                return G__20288__1.call(this, x);
              case 2:
                return G__20288__2.call(this, x, y);
              case 3:
                return G__20288__3.call(this, x, y, z);
              default:
                return G__20288__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20288.cljs$lang$maxFixedArity = 3;
          G__20288.cljs$lang$applyTo = G__20288__4.cljs$lang$applyTo;
          G__20288.cljs$core$IFn$_invoke$arity$0 = G__20288__0;
          G__20288.cljs$core$IFn$_invoke$arity$1 = G__20288__1;
          G__20288.cljs$core$IFn$_invoke$arity$2 = G__20288__2;
          G__20288.cljs$core$IFn$_invoke$arity$3 = G__20288__3;
          G__20288.cljs$core$IFn$_invoke$arity$variadic = G__20288__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__20288;
        }();
      }(fs__$1);
    };
    var G__20287 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__20287__delegate.call(this, f, g, h, fs);
    };
    G__20287.cljs$lang$maxFixedArity = 3;
    G__20287.cljs$lang$applyTo = function(arglist__20291) {
      var f = cljs.core.first(arglist__20291);
      arglist__20291 = cljs.core.next(arglist__20291);
      var g = cljs.core.first(arglist__20291);
      arglist__20291 = cljs.core.next(arglist__20291);
      var h = cljs.core.first(arglist__20291);
      var fs = cljs.core.rest(arglist__20291);
      return G__20287__delegate(f, g, h, fs);
    };
    G__20287.cljs$core$IFn$_invoke$arity$variadic = G__20287__delegate;
    return G__20287;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__20292 = cljs.core.next.call(null, coll);
        coll = G__20292;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__20293 = n - 1;
        var G__20294 = cljs.core.next.call(null, coll);
        n = G__20293;
        coll = G__20294;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__20296 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__20296, 0, null);
  var flags = cljs.core.nth.call(null, vec__20296, 1, null);
  var pattern = cljs.core.nth.call(null, vec__20296, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_20298 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_20299__$1 = cljs.core.next.call(null, coll);
      var n_20300 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_20299__$1 && (n_20300 == null || !(n_20300 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_20299__$1), writer, opts);
          var G__20301 = cljs.core.next.call(null, coll_20299__$1);
          var G__20302 = n_20300 - 1;
          coll_20299__$1 = G__20301;
          n_20300 = G__20302;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_20299__$1) && n_20300 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_20298;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__20307 = cljs.core.seq.call(null, ss);
    var chunk__20308 = null;
    var count__20309 = 0;
    var i__20310 = 0;
    while (true) {
      if (i__20310 < count__20309) {
        var s = cljs.core._nth.call(null, chunk__20308, i__20310);
        cljs.core._write.call(null, writer, s);
        var G__20311 = seq__20307;
        var G__20312 = chunk__20308;
        var G__20313 = count__20309;
        var G__20314 = i__20310 + 1;
        seq__20307 = G__20311;
        chunk__20308 = G__20312;
        count__20309 = G__20313;
        i__20310 = G__20314;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__20307);
        if (temp__4126__auto__) {
          var seq__20307__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__20307__$1)) {
            var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__20307__$1);
            var G__20315 = cljs.core.chunk_rest.call(null, seq__20307__$1);
            var G__20316 = c__4395__auto__;
            var G__20317 = cljs.core.count.call(null, c__4395__auto__);
            var G__20318 = 0;
            seq__20307 = G__20315;
            chunk__20308 = G__20316;
            count__20309 = G__20317;
            i__20310 = G__20318;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__20307__$1);
            cljs.core._write.call(null, writer, s);
            var G__20319 = cljs.core.next.call(null, seq__20307__$1);
            var G__20320 = null;
            var G__20321 = 0;
            var G__20322 = 0;
            seq__20307 = G__20319;
            chunk__20308 = G__20320;
            count__20309 = G__20321;
            i__20310 = G__20322;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__20323) {
    var writer = cljs.core.first(arglist__20323);
    var ss = cljs.core.rest(arglist__20323);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj20325 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj20325;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3614__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3614__auto__)) {
          var and__3614__auto____$1 = function() {
            var G__20331 = obj;
            if (G__20331) {
              var bit__4289__auto__ = G__20331.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4289__auto__ || G__20331.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__20331.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__20331);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__20331);
            }
          }();
          if (and__3614__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3614__auto____$1;
          }
        } else {
          return and__3614__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__20332 = obj;
            if (G__20332) {
              var bit__4282__auto__ = G__20332.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4282__auto__ || G__20332.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__20334 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__20334;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__20333 = obj;
                            if (G__20333) {
                              var bit__4289__auto__ = G__20333.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4289__auto__ || G__20333.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__20333.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__20333);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__20333);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__20339 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__20340 = null;
  var count__20341 = 0;
  var i__20342 = 0;
  while (true) {
    if (i__20342 < count__20341) {
      var obj = cljs.core._nth.call(null, chunk__20340, i__20342);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__20343 = seq__20339;
      var G__20344 = chunk__20340;
      var G__20345 = count__20341;
      var G__20346 = i__20342 + 1;
      seq__20339 = G__20343;
      chunk__20340 = G__20344;
      count__20341 = G__20345;
      i__20342 = G__20346;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__20339);
      if (temp__4126__auto__) {
        var seq__20339__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__20339__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__20339__$1);
          var G__20347 = cljs.core.chunk_rest.call(null, seq__20339__$1);
          var G__20348 = c__4395__auto__;
          var G__20349 = cljs.core.count.call(null, c__4395__auto__);
          var G__20350 = 0;
          seq__20339 = G__20347;
          chunk__20340 = G__20348;
          count__20341 = G__20349;
          i__20342 = G__20350;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__20339__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__20351 = cljs.core.next.call(null, seq__20339__$1);
          var G__20352 = null;
          var G__20353 = 0;
          var G__20354 = 0;
          seq__20339 = G__20351;
          chunk__20340 = G__20352;
          count__20341 = G__20353;
          i__20342 = G__20354;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__20355) {
    var objs = cljs.core.seq(arglist__20355);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__20356) {
    var objs = cljs.core.seq(arglist__20356);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__20357) {
    var objs = cljs.core.seq(arglist__20357);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__20358) {
    var objs = cljs.core.seq(arglist__20358);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__20359) {
    var objs = cljs.core.seq(arglist__20359);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__20360) {
    var objs = cljs.core.seq(arglist__20360);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__20361) {
    var objs = cljs.core.seq(arglist__20361);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__20362) {
    var objs = cljs.core.seq(arglist__20362);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__20363) {
    var iref = cljs.core.first(arglist__20363);
    arglist__20363 = cljs.core.next(arglist__20363);
    var f = cljs.core.first(arglist__20363);
    var args = cljs.core.rest(arglist__20363);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__20364_SHARP_, p2__20365_SHARP_) {
    var ret = f1.call(null, p1__20364_SHARP_, p2__20365_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(f1) {
  var rf1 = cljs.core.preserving_reduced.call(null, f1);
  return function(rf1) {
    return function() {
      var G__20366 = null;
      var G__20366__0 = function() {
        return f1.call(null);
      };
      var G__20366__1 = function(result) {
        return f1.call(null, result);
      };
      var G__20366__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__20366 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__20366__0.call(this);
          case 1:
            return G__20366__1.call(this, result);
          case 2:
            return G__20366__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__20366.cljs$core$IFn$_invoke$arity$0 = G__20366__0;
      G__20366.cljs$core$IFn$_invoke$arity$1 = G__20366__1;
      G__20366.cljs$core$IFn$_invoke$arity$2 = G__20366__2;
      return G__20366;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__20367 = null;
          var G__20367__0 = function() {
            return f1.call(null);
          };
          var G__20367__1 = function(result) {
            return f1.call(null, result);
          };
          var G__20367__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__20367 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__20367__0.call(this);
              case 1:
                return G__20367__1.call(this, result);
              case 2:
                return G__20367__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__20367.cljs$core$IFn$_invoke$arity$0 = G__20367__0;
          G__20367.cljs$core$IFn$_invoke$arity$1 = G__20367__1;
          G__20367.cljs$core$IFn$_invoke$arity$2 = G__20367__2;
          return G__20367;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__20369_SHARP_, p2__20368_SHARP_) {
    return proc.call(null, p2__20368_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj20371 = {};
  return obj20371;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__20373 = k;
    if (G__20373) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__20373.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__20373.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20373);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20373);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__20387 = x;
      if (G__20387) {
        var bit__4289__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3626__auto__ = bit__4289__auto__;
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return G__20387.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__20387.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20387);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__20387);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj20389 = {};
              return obj20389;
            }();
            var seq__20390_20400 = cljs.core.seq.call(null, x);
            var chunk__20391_20401 = null;
            var count__20392_20402 = 0;
            var i__20393_20403 = 0;
            while (true) {
              if (i__20393_20403 < count__20392_20402) {
                var vec__20394_20404 = cljs.core._nth.call(null, chunk__20391_20401, i__20393_20403);
                var k_20405 = cljs.core.nth.call(null, vec__20394_20404, 0, null);
                var v_20406 = cljs.core.nth.call(null, vec__20394_20404, 1, null);
                m[cljs.core.key__GT_js.call(null, k_20405)] = clj__GT_js.call(null, v_20406);
                var G__20407 = seq__20390_20400;
                var G__20408 = chunk__20391_20401;
                var G__20409 = count__20392_20402;
                var G__20410 = i__20393_20403 + 1;
                seq__20390_20400 = G__20407;
                chunk__20391_20401 = G__20408;
                count__20392_20402 = G__20409;
                i__20393_20403 = G__20410;
                continue;
              } else {
                var temp__4126__auto___20411 = cljs.core.seq.call(null, seq__20390_20400);
                if (temp__4126__auto___20411) {
                  var seq__20390_20412__$1 = temp__4126__auto___20411;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__20390_20412__$1)) {
                    var c__4395__auto___20413 = cljs.core.chunk_first.call(null, seq__20390_20412__$1);
                    var G__20414 = cljs.core.chunk_rest.call(null, seq__20390_20412__$1);
                    var G__20415 = c__4395__auto___20413;
                    var G__20416 = cljs.core.count.call(null, c__4395__auto___20413);
                    var G__20417 = 0;
                    seq__20390_20400 = G__20414;
                    chunk__20391_20401 = G__20415;
                    count__20392_20402 = G__20416;
                    i__20393_20403 = G__20417;
                    continue;
                  } else {
                    var vec__20395_20418 = cljs.core.first.call(null, seq__20390_20412__$1);
                    var k_20419 = cljs.core.nth.call(null, vec__20395_20418, 0, null);
                    var v_20420 = cljs.core.nth.call(null, vec__20395_20418, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_20419)] = clj__GT_js.call(null, v_20420);
                    var G__20421 = cljs.core.next.call(null, seq__20390_20412__$1);
                    var G__20422 = null;
                    var G__20423 = 0;
                    var G__20424 = 0;
                    seq__20390_20400 = G__20421;
                    chunk__20391_20401 = G__20422;
                    count__20392_20402 = G__20423;
                    i__20393_20403 = G__20424;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__20396_20425 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__20397_20426 = null;
              var count__20398_20427 = 0;
              var i__20399_20428 = 0;
              while (true) {
                if (i__20399_20428 < count__20398_20427) {
                  var x_20429__$1 = cljs.core._nth.call(null, chunk__20397_20426, i__20399_20428);
                  arr.push(x_20429__$1);
                  var G__20430 = seq__20396_20425;
                  var G__20431 = chunk__20397_20426;
                  var G__20432 = count__20398_20427;
                  var G__20433 = i__20399_20428 + 1;
                  seq__20396_20425 = G__20430;
                  chunk__20397_20426 = G__20431;
                  count__20398_20427 = G__20432;
                  i__20399_20428 = G__20433;
                  continue;
                } else {
                  var temp__4126__auto___20434 = cljs.core.seq.call(null, seq__20396_20425);
                  if (temp__4126__auto___20434) {
                    var seq__20396_20435__$1 = temp__4126__auto___20434;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__20396_20435__$1)) {
                      var c__4395__auto___20436 = cljs.core.chunk_first.call(null, seq__20396_20435__$1);
                      var G__20437 = cljs.core.chunk_rest.call(null, seq__20396_20435__$1);
                      var G__20438 = c__4395__auto___20436;
                      var G__20439 = cljs.core.count.call(null, c__4395__auto___20436);
                      var G__20440 = 0;
                      seq__20396_20425 = G__20437;
                      chunk__20397_20426 = G__20438;
                      count__20398_20427 = G__20439;
                      i__20399_20428 = G__20440;
                      continue;
                    } else {
                      var x_20441__$1 = cljs.core.first.call(null, seq__20396_20435__$1);
                      arr.push(x_20441__$1);
                      var G__20442 = cljs.core.next.call(null, seq__20396_20435__$1);
                      var G__20443 = null;
                      var G__20444 = 0;
                      var G__20445 = 0;
                      seq__20396_20425 = G__20442;
                      chunk__20397_20426 = G__20443;
                      count__20398_20427 = G__20444;
                      i__20399_20428 = G__20445;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj20447 = {};
  return obj20447;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__20468__delegate = function(x, opts) {
      if (function() {
        var G__20458 = x;
        if (G__20458) {
          var bit__4289__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3626__auto__ = bit__4289__auto__;
            if (cljs.core.truth_(or__3626__auto__)) {
              return or__3626__auto__;
            } else {
              return G__20458.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__20458.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__20458);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__20458);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__20459 = opts;
          var map__20459__$1 = cljs.core.seq_QMARK_.call(null, map__20459) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20459) : map__20459;
          var keywordize_keys = cljs.core.get.call(null, map__20459__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__20459, map__20459__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4364__auto__ = function(map__20459, map__20459__$1, keywordize_keys, keyfn) {
                          return function iter__20464(s__20465) {
                            return new cljs.core.LazySeq(null, function(map__20459, map__20459__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__20465__$1 = s__20465;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__20465__$1);
                                  if (temp__4126__auto__) {
                                    var s__20465__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__20465__$2)) {
                                      var c__4362__auto__ = cljs.core.chunk_first.call(null, s__20465__$2);
                                      var size__4363__auto__ = cljs.core.count.call(null, c__4362__auto__);
                                      var b__20467 = cljs.core.chunk_buffer.call(null, size__4363__auto__);
                                      if (function() {
                                        var i__20466 = 0;
                                        while (true) {
                                          if (i__20466 < size__4363__auto__) {
                                            var k = cljs.core._nth.call(null, c__4362__auto__, i__20466);
                                            cljs.core.chunk_append.call(null, b__20467, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__20469 = i__20466 + 1;
                                            i__20466 = G__20469;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20467), iter__20464.call(null, cljs.core.chunk_rest.call(null, s__20465__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__20467), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__20465__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__20464.call(null, cljs.core.rest.call(null, s__20465__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__20459, map__20459__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__20459, map__20459__$1, keywordize_keys, keyfn);
                        return iter__4364__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__20459, map__20459__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__20468 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__20468__delegate.call(this, x, opts);
    };
    G__20468.cljs$lang$maxFixedArity = 1;
    G__20468.cljs$lang$applyTo = function(arglist__20470) {
      var x = cljs.core.first(arglist__20470);
      var opts = cljs.core.rest(arglist__20470);
      return G__20468__delegate(x, opts);
    };
    G__20468.cljs$core$IFn$_invoke$arity$variadic = G__20468__delegate;
    return G__20468;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__20471__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__20471 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__20471__delegate.call(this, args);
      };
      G__20471.cljs$lang$maxFixedArity = 0;
      G__20471.cljs$lang$applyTo = function(arglist__20472) {
        var args = cljs.core.seq(arglist__20472);
        return G__20471__delegate(args);
      };
      G__20471.cljs$core$IFn$_invoke$arity$variadic = G__20471__delegate;
      return G__20471;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__20473 = ret;
        f = G__20473;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__20474__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__20474 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__20474__delegate.call(this, f, args);
    };
    G__20474.cljs$lang$maxFixedArity = 1;
    G__20474.cljs$lang$applyTo = function(arglist__20475) {
      var f = cljs.core.first(arglist__20475);
      var args = cljs.core.rest(arglist__20475);
      return G__20474__delegate(f, args);
    };
    G__20474.cljs$core$IFn$_invoke$arity$variadic = G__20474__delegate;
    return G__20474;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__20476) {
    var f = cljs.core.first(arglist__20476);
    var args = cljs.core.rest(arglist__20476);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3626__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3626__auto__) {
      return or__3626__auto__;
    } else {
      var or__3626__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3626__auto____$1) {
        return or__3626__auto____$1;
      } else {
        var and__3614__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3614__auto__) {
          var and__3614__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3614__auto____$1) {
            var and__3614__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3614__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__20477 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__20478 = i + 1;
                  ret = G__20477;
                  i = G__20478;
                  continue;
                }
                break;
              }
            } else {
              return and__3614__auto____$2;
            }
          } else {
            return and__3614__auto____$1;
          }
        } else {
          return and__3614__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3626__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3626__auto__)) {
      return or__3626__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__20479_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__20479_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__20479_SHARP_), cljs.core.second.call(null, p1__20479_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__20480_SHARP_, p2__20481_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__20480_SHARP_, p2__20481_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3626__auto__ = cljs.core.truth_(function() {
    var and__3614__auto__ = xprefs;
    if (cljs.core.truth_(and__3614__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3614__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3626__auto__)) {
    return or__3626__auto__;
  } else {
    var or__3626__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__20482 = cljs.core.rest.call(null, ps);
          ps = G__20482;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3626__auto____$1)) {
      return or__3626__auto____$1;
    } else {
      var or__3626__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__20483 = cljs.core.rest.call(null, ps);
            ps = G__20483;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3626__auto____$2)) {
        return or__3626__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3626__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3626__auto__)) {
    return or__3626__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__20486) {
    var vec__20487 = p__20486;
    var k = cljs.core.nth.call(null, vec__20487, 0, null);
    var _ = cljs.core.nth.call(null, vec__20487, 1, null);
    var e = vec__20487;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3626__auto__ = be == null;
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj20489 = {};
  return obj20489;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3614__auto__ = mf;
    if (and__3614__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4262__auto__ = mf == null ? null : mf;
    return function() {
      var or__3626__auto__ = cljs.core._reset[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._reset["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3614__auto__ = mf;
    if (and__3614__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4262__auto__ = mf == null ? null : mf;
    return function() {
      var or__3626__auto__ = cljs.core._add_method[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._add_method["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3614__auto__ = mf;
    if (and__3614__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4262__auto__ = mf == null ? null : mf;
    return function() {
      var or__3626__auto__ = cljs.core._remove_method[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._remove_method["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3614__auto__ = mf;
    if (and__3614__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4262__auto__ = mf == null ? null : mf;
    return function() {
      var or__3626__auto__ = cljs.core._prefer_method[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3614__auto__ = mf;
    if (and__3614__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4262__auto__ = mf == null ? null : mf;
    return function() {
      var or__3626__auto__ = cljs.core._get_method[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._get_method["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3614__auto__ = mf;
    if (and__3614__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4262__auto__ = mf == null ? null : mf;
    return function() {
      var or__3626__auto__ = cljs.core._methods[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._methods["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3614__auto__ = mf;
    if (and__3614__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4262__auto__ = mf == null ? null : mf;
    return function() {
      var or__3626__auto__ = cljs.core._prefers[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core._prefers["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__20491 = null;
  var G__20491__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__20491__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__20491__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__20491__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__20491__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__20491__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__20491__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__20491__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__20491__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__20491__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__20491__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__20491__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__20491__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__20491__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__20491__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__20491__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__20491__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__20491__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__20491__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__20491__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__20491__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__20491 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__20491__2.call(this, self__, a);
      case 3:
        return G__20491__3.call(this, self__, a, b);
      case 4:
        return G__20491__4.call(this, self__, a, b, c);
      case 5:
        return G__20491__5.call(this, self__, a, b, c, d);
      case 6:
        return G__20491__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__20491__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__20491__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__20491__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__20491__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__20491__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__20491__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__20491__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__20491__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__20491__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__20491__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__20491__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__20491__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__20491__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__20491__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__20491__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__20491__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20491.cljs$core$IFn$_invoke$arity$2 = G__20491__2;
  G__20491.cljs$core$IFn$_invoke$arity$3 = G__20491__3;
  G__20491.cljs$core$IFn$_invoke$arity$4 = G__20491__4;
  G__20491.cljs$core$IFn$_invoke$arity$5 = G__20491__5;
  G__20491.cljs$core$IFn$_invoke$arity$6 = G__20491__6;
  G__20491.cljs$core$IFn$_invoke$arity$7 = G__20491__7;
  G__20491.cljs$core$IFn$_invoke$arity$8 = G__20491__8;
  G__20491.cljs$core$IFn$_invoke$arity$9 = G__20491__9;
  G__20491.cljs$core$IFn$_invoke$arity$10 = G__20491__10;
  G__20491.cljs$core$IFn$_invoke$arity$11 = G__20491__11;
  G__20491.cljs$core$IFn$_invoke$arity$12 = G__20491__12;
  G__20491.cljs$core$IFn$_invoke$arity$13 = G__20491__13;
  G__20491.cljs$core$IFn$_invoke$arity$14 = G__20491__14;
  G__20491.cljs$core$IFn$_invoke$arity$15 = G__20491__15;
  G__20491.cljs$core$IFn$_invoke$arity$16 = G__20491__16;
  G__20491.cljs$core$IFn$_invoke$arity$17 = G__20491__17;
  G__20491.cljs$core$IFn$_invoke$arity$18 = G__20491__18;
  G__20491.cljs$core$IFn$_invoke$arity$19 = G__20491__19;
  G__20491.cljs$core$IFn$_invoke$arity$20 = G__20491__20;
  G__20491.cljs$core$IFn$_invoke$arity$21 = G__20491__21;
  G__20491.cljs$core$IFn$_invoke$arity$22 = G__20491__22;
  return G__20491;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args20490) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args20490)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4205__auto__, writer__4206__auto__, opts__4207__auto__) {
  return cljs.core._write.call(null, writer__4206__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj23768 = {};
  return obj23768;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3614__auto__ = port;
    if (and__3614__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4262__auto__ = port == null ? null : port;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj23770 = {};
  return obj23770;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3614__auto__ = port;
    if (and__3614__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4262__auto__ = port == null ? null : port;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj23772 = {};
  return obj23772;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3614__auto__ = chan;
    if (and__3614__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4262__auto__ = chan == null ? null : chan;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3614__auto__ = chan;
    if (and__3614__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4262__auto__ = chan == null ? null : chan;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj23774 = {};
  return obj23774;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3614__auto__ = h;
    if (and__3614__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4262__auto__ = h == null ? null : h;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3614__auto__ = h;
    if (and__3614__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4262__auto__ = h == null ? null : h;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj23776 = {};
  return obj23776;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3614__auto__ = b;
    if (and__3614__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4262__auto__ = b == null ? null : b;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3614__auto__ = b;
    if (and__3614__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4262__auto__ = b == null ? null : b;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3614__auto__ = b;
    if (and__3614__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4262__auto__ = b == null ? null : b;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null))))));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj23778 = {};
  return obj23778;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__23779 = cnt + 1;
      cnt = G__23779;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4495__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4495__auto__) {
      var v_23780 = this$.pop();
      if (keep_QMARK_.call(null, v_23780)) {
        this$.unshift(v_23780);
      } else {
      }
      var G__23781 = x + 1;
      x = G__23781;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_23782 = 0;
  while (true) {
    var m_23783 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_23783 == null) {
    } else {
      m_23783.call(null);
      if (count_23782 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__23784 = count_23782 + 1;
        count_23782 = G__23784;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
if (typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null);
  };
} else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3614__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (and__3614__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3614__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if (typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0);
    } else {
      if (typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages);
      } else {
        return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0);
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t23788 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t23788 = function(val, box, meta23789) {
      this.val = val;
      this.box = box;
      this.meta23789 = meta23789;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t23788.cljs$lang$type = true;
    cljs.core.async.impl.channels.t23788.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t23788";
    cljs.core.async.impl.channels.t23788.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.channels/t23788");
    };
    cljs.core.async.impl.channels.t23788.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t23788.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23790) {
      var self__ = this;
      var _23790__$1 = this;
      return self__.meta23789;
    };
    cljs.core.async.impl.channels.t23788.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23790, meta23789__$1) {
      var self__ = this;
      var _23790__$1 = this;
      return new cljs.core.async.impl.channels.t23788(self__.val, self__.box, meta23789__$1);
    };
    cljs.core.async.impl.channels.__GT_t23788 = function __GT_t23788(val__$1, box__$1, meta23789) {
      return new cljs.core.async.impl.channels.t23788(val__$1, box__$1, meta23789);
    };
  }
  return new cljs.core.async.impl.channels.t23788(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4205__auto__, writer__4206__auto__, opts__4207__auto__) {
  return cljs.core._write.call(null, writer__4206__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj23792 = {};
  return obj23792;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3614__auto__ = self__.buf;
      if (cljs.core.truth_(and__3614__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3614__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_23793 = self__.takes.pop();
      if (taker_23793 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23793)) {
          var take_cb_23794 = cljs.core.async.impl.protocols.commit.call(null, taker_23793);
          var val_23795 = cljs.core.truth_(function() {
            var and__3614__auto__ = self__.buf;
            if (cljs.core.truth_(and__3614__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3614__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23794, val_23795, taker_23793, this$__$1) {
            return function() {
              return take_cb_23794.call(null, val_23795);
            };
          }(take_cb_23794, val_23795, taker_23793, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_23796 = self__.puts.pop();
          if (putter_23796 == null) {
          } else {
            var put_handler_23797 = putter_23796.handler;
            var val_23798 = putter_23796.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23797)) {
              var put_cb_23799 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23797);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23799, put_handler_23797, val_23798, putter_23796, _, retval, this$__$1) {
                return function() {
                  return put_cb_23799.call(null, true);
                };
              }(put_cb_23799, put_handler_23797, val_23798, putter_23796, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_23798))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3614__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3614__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3614__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3614__auto__ = self__.buf;
              if (cljs.core.truth_(and__3614__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3614__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
            "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3614__auto__ = self__.buf;
      if (cljs.core.truth_(and__3614__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3614__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_23800 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23800)) {
            var take_cb_23801 = cljs.core.async.impl.protocols.commit.call(null, taker_23800);
            var val_23802__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23801, val_23802__$1, taker_23800, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_23801.call(null, val_23802__$1);
              };
            }(take_cb_23801, val_23802__$1, taker_23800, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_23803 = self__.puts.pop();
    if (putter_23803 == null) {
    } else {
      var put_handler_23804 = putter_23803.handler;
      var val_23805 = putter_23803.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23804)) {
        var put_cb_23806 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23804);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23806, put_handler_23804, val_23805, putter_23803, this$__$1) {
          return function() {
            return put_cb_23806.call(null, true);
          };
        }(put_cb_23806, put_handler_23804, val_23805, putter_23803, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3626__auto__ = exh;
    if (cljs.core.truth_(or__3626__auto__)) {
      return or__3626__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__23811 = null;
          var G__23811__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e23809) {
              var t = e23809;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__23811__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e23810) {
              var t = e23810;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__23811 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__23811__1.call(this, buf__$1);
              case 2:
                return G__23811__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__23811.cljs$core$IFn$_invoke$arity$1 = G__23811__1;
          G__23811.cljs$core$IFn$_invoke$arity$2 = G__23811__2;
          return G__23811;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t23715 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t23715 = function(f, fn_handler, meta23716) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta23716 = meta23716;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t23715.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t23715.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t23715";
    cljs.core.async.impl.ioc_helpers.t23715.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.ioc-helpers/t23715");
    };
    cljs.core.async.impl.ioc_helpers.t23715.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t23715.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t23715.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t23715.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23717) {
      var self__ = this;
      var _23717__$1 = this;
      return self__.meta23716;
    };
    cljs.core.async.impl.ioc_helpers.t23715.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23717, meta23716__$1) {
      var self__ = this;
      var _23717__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t23715(self__.f, self__.fn_handler, meta23716__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t23715 = function __GT_t23715(f__$1, fn_handler__$1, meta23716) {
      return new cljs.core.async.impl.ioc_helpers.t23715(f__$1, fn_handler__$1, meta23716);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t23715(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e23719) {
    if (e23719 instanceof Object) {
      var ex = e23719;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e23719;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_23722_23724 = state;
    statearr_23722_23724[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_23722_23724[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_23723_23725 = state;
    statearr_23723_23725[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_23723_23725[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_23728_23730 = state;
    statearr_23728_23730[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_23728_23730[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_23729_23731 = state;
    statearr_23729_23731[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_23729_23731[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__23732) {
    var map__23737 = p__23732;
    var map__23737__$1 = cljs.core.seq_QMARK_.call(null, map__23737) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23737) : map__23737;
    var opts = map__23737__$1;
    var statearr_23738_23741 = state;
    statearr_23738_23741[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__23737, map__23737__$1, opts) {
      return function(val) {
        var statearr_23739_23742 = state;
        statearr_23739_23742[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__23737, map__23737__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_23740_23743 = state;
      statearr_23740_23743[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__23732 = null;
    if (arguments.length > 3) {
      p__23732 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__23732);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__23744) {
    var state = cljs.core.first(arglist__23744);
    arglist__23744 = cljs.core.next(arglist__23744);
    var cont_block = cljs.core.first(arglist__23744);
    arglist__23744 = cljs.core.next(arglist__23744);
    var ports = cljs.core.first(arglist__23744);
    var p__23732 = cljs.core.rest(arglist__23744);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__23732);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4221__auto__, k__4222__auto__) {
  var self__ = this;
  var this__4221__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4221__auto____$1, k__4222__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4223__auto__, k23746, else__4224__auto__) {
  var self__ = this;
  var this__4223__auto____$1 = this;
  var G__23748 = k23746 instanceof cljs.core.Keyword ? k23746.fqn : null;
  switch(G__23748) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k23746, else__4224__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4235__auto__, writer__4236__auto__, opts__4237__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  var pr_pair__4238__auto__ = function(this__4235__auto____$1) {
    return function(keyval__4239__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4236__auto__, cljs.core.pr_writer, "", " ", "", opts__4237__auto__, keyval__4239__auto__);
    };
  }(this__4235__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4236__auto__, pr_pair__4238__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4237__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4219__auto__) {
  var self__ = this;
  var this__4219__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4215__auto__) {
  var self__ = this;
  var this__4215__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4216__auto__) {
  var self__ = this;
  var this__4216__auto____$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_imap.call(null, this__4216__auto____$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4217__auto__, other__4218__auto__) {
  var self__ = this;
  var this__4217__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3614__auto__ = other__4218__auto__;
    if (cljs.core.truth_(and__3614__auto__)) {
      return this__4217__auto____$1.constructor === other__4218__auto__.constructor && cljs.core.equiv_map.call(null, this__4217__auto____$1, other__4218__auto__);
    } else {
      return and__3614__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4230__auto__, k__4231__auto__) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4231__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4230__auto____$1), self__.__meta), k__4231__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4231__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4228__auto__, k__4229__auto__, G__23745) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  var pred__23749 = cljs.core.keyword_identical_QMARK_;
  var expr__23750 = k__4229__auto__;
  if (cljs.core.truth_(pred__23749.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__23750))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__23745, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__23749.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__23750))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__23745, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__23749.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__23750))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__23745, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__23749.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__23750))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__23745, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__23749.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__23750))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__23745, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4229__auto__, G__23745), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4233__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4220__auto__, G__23745) {
  var self__ = this;
  var this__4220__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__23745, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4226__auto__, entry__4227__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4227__auto__)) {
    return cljs.core._assoc.call(null, this__4226__auto____$1, cljs.core._nth.call(null, entry__4227__auto__, 0), cljs.core._nth.call(null, entry__4227__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4226__auto____$1, entry__4227__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4255__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4255__auto__, writer__4256__auto__) {
  return cljs.core._write.call(null, writer__4256__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__23747) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__23747), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__23747), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__23747), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__23747), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__23747), null, cljs.core.dissoc.call(null, G__23747, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_23754 = state;
  statearr_23754[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_23754;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3614__auto__ = exception;
      if (cljs.core.truth_(and__3614__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3614__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3614__auto__ = exception;
        if (cljs.core.truth_(and__3614__auto__)) {
          var and__3614__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3614__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3614__auto____$1;
          }
        } else {
          return and__3614__auto__;
        }
      }())) {
        var statearr_23760 = state;
        statearr_23760[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_23760[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_23760[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_23760[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_23760;
      } else {
        if (cljs.core.truth_(function() {
          var and__3614__auto__ = exception;
          if (cljs.core.truth_(and__3614__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3614__auto__;
          }
        }())) {
          var statearr_23761_23765 = state;
          statearr_23761_23765[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__23766 = state;
          state = G__23766;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3614__auto__ = exception;
            if (cljs.core.truth_(and__3614__auto__)) {
              var and__3614__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3614__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3614__auto____$1;
              }
            } else {
              return and__3614__auto__;
            }
          }())) {
            var statearr_23762 = state;
            statearr_23762[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_23762[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_23762;
          } else {
            if (cljs.core.truth_(function() {
              var and__3614__auto__ = cljs.core.not.call(null, exception);
              if (and__3614__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3614__auto__;
              }
            }())) {
              var statearr_23763 = state;
              statearr_23763[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_23763[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_23763;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_23764 = state;
                statearr_23764[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_23764[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_23764;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__23688 = level + 1;
        level = G__23688;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_23689 = 0;
    while (true) {
      if (i_23689 < arr.length) {
        arr[i_23689] = null;
        var G__23690 = i_23689 + 1;
        i_23689 = G__23690;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__23691 = x_SINGLEQUOTE_;
                x__$1 = G__23691;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__23692 = x__$1;
        var G__23693 = k;
        var G__23694 = level - 1;
        var G__23695 = update;
        x = G__23692;
        k = G__23693;
        level = G__23694;
        update = G__23695;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_23696 = self__.level + 1;
      while (true) {
        if (i_23696 <= new_level + 1) {
          update[i_23696] = self__.header;
          var G__23697 = i_23696 + 1;
          i_23696 = G__23697;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_23698 = 0;
    while (true) {
      if (i_23698 <= self__.level) {
        var links_23699 = update[i_23698].forward;
        if (links_23699[i_23698] === x__$1) {
          links_23699[i_23698] = x__$1.forward[i_23698];
          var G__23700 = i_23698 + 1;
          i_23698 = G__23700;
          continue;
        } else {
          var G__23701 = i_23698 + 1;
          i_23698 = G__23701;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__23702 = x_SINGLEQUOTE_;
              x__$1 = G__23702;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__23703 = nx;
        var G__23704 = level__$1 - 1;
        x = G__23703;
        level__$1 = G__23704;
        continue;
      } else {
        var G__23705 = x;
        var G__23706 = level__$1 - 1;
        x = G__23705;
        level__$1 = G__23706;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__23707 = x_SINGLEQUOTE_;
              x__$1 = G__23707;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__23708 = nx;
        var G__23709 = level__$1 - 1;
        x = G__23708;
        level__$1 = G__23709;
        continue;
      } else {
        var G__23710 = x;
        var G__23711 = level__$1 - 1;
        x = G__23710;
        level__$1 = G__23711;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3626__auto__ = cljs.core.truth_(function() {
    var and__3614__auto__ = me;
    if (cljs.core.truth_(and__3614__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3614__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3626__auto__)) {
    return or__3626__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3626__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3626__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t20616 !== "undefined") {
  } else {
    cljs.core.async.t20616 = function(f, fn_handler, meta20617) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta20617 = meta20617;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20616.cljs$lang$type = true;
    cljs.core.async.t20616.cljs$lang$ctorStr = "cljs.core.async/t20616";
    cljs.core.async.t20616.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t20616");
    };
    cljs.core.async.t20616.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t20616.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t20616.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t20616.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20618) {
      var self__ = this;
      var _20618__$1 = this;
      return self__.meta20617;
    };
    cljs.core.async.t20616.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20618, meta20617__$1) {
      var self__ = this;
      var _20618__$1 = this;
      return new cljs.core.async.t20616(self__.f, self__.fn_handler, meta20617__$1);
    };
    cljs.core.async.__GT_t20616 = function __GT_t20616(f__$1, fn_handler__$1, meta20617) {
      return new cljs.core.async.t20616(f__$1, fn_handler__$1, meta20617);
    };
  }
  return new cljs.core.async.t20616(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__20620 = buff;
  if (G__20620) {
    var bit__4289__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3626__auto__ = bit__4289__auto__;
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return G__20620.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__20620.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__20620);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__20620);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error("Assert failed: buffer must be supplied when transducer is\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null))));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_20621 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_20621);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_20621, ret) {
          return function() {
            return fn1.call(null, val_20621);
          };
        }(val_20621, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4495__auto___20622 = n;
  var x_20623 = 0;
  while (true) {
    if (x_20623 < n__4495__auto___20622) {
      a[x_20623] = 0;
      var G__20624 = x_20623 + 1;
      x_20623 = G__20624;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__20625 = i + 1;
      i = G__20625;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t20629 !== "undefined") {
  } else {
    cljs.core.async.t20629 = function(flag, alt_flag, meta20630) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta20630 = meta20630;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20629.cljs$lang$type = true;
    cljs.core.async.t20629.cljs$lang$ctorStr = "cljs.core.async/t20629";
    cljs.core.async.t20629.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
        return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t20629");
      };
    }(flag);
    cljs.core.async.t20629.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t20629.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t20629.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t20629.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_20631) {
        var self__ = this;
        var _20631__$1 = this;
        return self__.meta20630;
      };
    }(flag);
    cljs.core.async.t20629.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_20631, meta20630__$1) {
        var self__ = this;
        var _20631__$1 = this;
        return new cljs.core.async.t20629(self__.flag, self__.alt_flag, meta20630__$1);
      };
    }(flag);
    cljs.core.async.__GT_t20629 = function(flag) {
      return function __GT_t20629(flag__$1, alt_flag__$1, meta20630) {
        return new cljs.core.async.t20629(flag__$1, alt_flag__$1, meta20630);
      };
    }(flag);
  }
  return new cljs.core.async.t20629(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t20635 !== "undefined") {
  } else {
    cljs.core.async.t20635 = function(cb, flag, alt_handler, meta20636) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta20636 = meta20636;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t20635.cljs$lang$type = true;
    cljs.core.async.t20635.cljs$lang$ctorStr = "cljs.core.async/t20635";
    cljs.core.async.t20635.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t20635");
    };
    cljs.core.async.t20635.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t20635.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t20635.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t20635.prototype.cljs$core$IMeta$_meta$arity$1 = function(_20637) {
      var self__ = this;
      var _20637__$1 = this;
      return self__.meta20636;
    };
    cljs.core.async.t20635.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_20637, meta20636__$1) {
      var self__ = this;
      var _20637__$1 = this;
      return new cljs.core.async.t20635(self__.cb, self__.flag, self__.alt_handler, meta20636__$1);
    };
    cljs.core.async.__GT_t20635 = function __GT_t20635(cb__$1, flag__$1, alt_handler__$1, meta20636) {
      return new cljs.core.async.t20635(cb__$1, flag__$1, alt_handler__$1, meta20636);
    };
  }
  return new cljs.core.async.t20635(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__20638_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20638_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__20639_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__20639_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3626__auto__ = wport;
            if (cljs.core.truth_(or__3626__auto__)) {
              return or__3626__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__20640 = i + 1;
          i = G__20640;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3626__auto__ = ret;
  if (cljs.core.truth_(or__3626__auto__)) {
    return or__3626__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3614__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3614__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3614__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__20641) {
    var map__20643 = p__20641;
    var map__20643__$1 = cljs.core.seq_QMARK_.call(null, map__20643) ? cljs.core.apply.call(null, cljs.core.hash_map, map__20643) : map__20643;
    var opts = map__20643__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__20641 = null;
    if (arguments.length > 1) {
      p__20641 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__20641);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__20644) {
    var ports = cljs.core.first(arglist__20644);
    var p__20641 = cljs.core.rest(arglist__20644);
    return alts_BANG___delegate(ports, p__20641);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6831__auto___20739 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___20739) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___20739) {
            return function(state_20715) {
              var state_val_20716 = state_20715[1];
              if (state_val_20716 === 7) {
                var inst_20711 = state_20715[2];
                var state_20715__$1 = state_20715;
                var statearr_20717_20740 = state_20715__$1;
                statearr_20717_20740[2] = inst_20711;
                statearr_20717_20740[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_20716 === 1) {
                  var state_20715__$1 = state_20715;
                  var statearr_20718_20741 = state_20715__$1;
                  statearr_20718_20741[2] = null;
                  statearr_20718_20741[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_20716 === 4) {
                    var inst_20694 = state_20715[7];
                    var inst_20694__$1 = state_20715[2];
                    var inst_20695 = inst_20694__$1 == null;
                    var state_20715__$1 = function() {
                      var statearr_20719 = state_20715;
                      statearr_20719[7] = inst_20694__$1;
                      return statearr_20719;
                    }();
                    if (cljs.core.truth_(inst_20695)) {
                      var statearr_20720_20742 = state_20715__$1;
                      statearr_20720_20742[1] = 5;
                    } else {
                      var statearr_20721_20743 = state_20715__$1;
                      statearr_20721_20743[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_20716 === 13) {
                      var state_20715__$1 = state_20715;
                      var statearr_20722_20744 = state_20715__$1;
                      statearr_20722_20744[2] = null;
                      statearr_20722_20744[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20716 === 6) {
                        var inst_20694 = state_20715[7];
                        var state_20715__$1 = state_20715;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20715__$1, 11, to, inst_20694);
                      } else {
                        if (state_val_20716 === 3) {
                          var inst_20713 = state_20715[2];
                          var state_20715__$1 = state_20715;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20715__$1, inst_20713);
                        } else {
                          if (state_val_20716 === 12) {
                            var state_20715__$1 = state_20715;
                            var statearr_20723_20745 = state_20715__$1;
                            statearr_20723_20745[2] = null;
                            statearr_20723_20745[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20716 === 2) {
                              var state_20715__$1 = state_20715;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20715__$1, 4, from);
                            } else {
                              if (state_val_20716 === 11) {
                                var inst_20704 = state_20715[2];
                                var state_20715__$1 = state_20715;
                                if (cljs.core.truth_(inst_20704)) {
                                  var statearr_20724_20746 = state_20715__$1;
                                  statearr_20724_20746[1] = 12;
                                } else {
                                  var statearr_20725_20747 = state_20715__$1;
                                  statearr_20725_20747[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_20716 === 9) {
                                  var state_20715__$1 = state_20715;
                                  var statearr_20726_20748 = state_20715__$1;
                                  statearr_20726_20748[2] = null;
                                  statearr_20726_20748[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_20716 === 5) {
                                    var state_20715__$1 = state_20715;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_20727_20749 = state_20715__$1;
                                      statearr_20727_20749[1] = 8;
                                    } else {
                                      var statearr_20728_20750 = state_20715__$1;
                                      statearr_20728_20750[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_20716 === 14) {
                                      var inst_20709 = state_20715[2];
                                      var state_20715__$1 = state_20715;
                                      var statearr_20729_20751 = state_20715__$1;
                                      statearr_20729_20751[2] = inst_20709;
                                      statearr_20729_20751[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_20716 === 10) {
                                        var inst_20701 = state_20715[2];
                                        var state_20715__$1 = state_20715;
                                        var statearr_20730_20752 = state_20715__$1;
                                        statearr_20730_20752[2] = inst_20701;
                                        statearr_20730_20752[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_20716 === 8) {
                                          var inst_20698 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_20715__$1 = state_20715;
                                          var statearr_20731_20753 = state_20715__$1;
                                          statearr_20731_20753[2] = inst_20698;
                                          statearr_20731_20753[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___20739);
          return function(switch__6816__auto__, c__6831__auto___20739) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_20735 = [null, null, null, null, null, null, null, null];
                statearr_20735[0] = state_machine__6817__auto__;
                statearr_20735[1] = 1;
                return statearr_20735;
              };
              var state_machine__6817__auto____1 = function(state_20715) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_20715);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e20736) {
                      if (e20736 instanceof Object) {
                        var ex__6820__auto__ = e20736;
                        var statearr_20737_20754 = state_20715;
                        statearr_20737_20754[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20715);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e20736;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__20755 = state_20715;
                    state_20715 = G__20755;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_20715) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_20715);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___20739);
        }();
        var state__6833__auto__ = function() {
          var statearr_20738 = f__6832__auto__.call(null);
          statearr_20738[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___20739;
          return statearr_20738;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___20739));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)))));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__20939) {
      var vec__20940 = p__20939;
      var v = cljs.core.nth.call(null, vec__20940, 0, null);
      var p = cljs.core.nth.call(null, vec__20940, 1, null);
      var job = vec__20940;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6831__auto___21122 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___21122, res, vec__20940, v, p, job, jobs, results) {
          return function() {
            var f__6832__auto__ = function() {
              var switch__6816__auto__ = function(c__6831__auto___21122, res, vec__20940, v, p, job, jobs, results) {
                return function(state_20945) {
                  var state_val_20946 = state_20945[1];
                  if (state_val_20946 === 2) {
                    var inst_20942 = state_20945[2];
                    var inst_20943 = cljs.core.async.close_BANG_.call(null, res);
                    var state_20945__$1 = function() {
                      var statearr_20947 = state_20945;
                      statearr_20947[7] = inst_20942;
                      return statearr_20947;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20945__$1, inst_20943);
                  } else {
                    if (state_val_20946 === 1) {
                      var state_20945__$1 = state_20945;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_20945__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6831__auto___21122, res, vec__20940, v, p, job, jobs, results);
              return function(switch__6816__auto__, c__6831__auto___21122, res, vec__20940, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6817__auto__ = null;
                  var state_machine__6817__auto____0 = function() {
                    var statearr_20951 = [null, null, null, null, null, null, null, null];
                    statearr_20951[0] = state_machine__6817__auto__;
                    statearr_20951[1] = 1;
                    return statearr_20951;
                  };
                  var state_machine__6817__auto____1 = function(state_20945) {
                    while (true) {
                      var ret_value__6818__auto__ = function() {
                        try {
                          while (true) {
                            var result__6819__auto__ = switch__6816__auto__.call(null, state_20945);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6819__auto__;
                            }
                            break;
                          }
                        } catch (e20952) {
                          if (e20952 instanceof Object) {
                            var ex__6820__auto__ = e20952;
                            var statearr_20953_21123 = state_20945;
                            statearr_20953_21123[5] = ex__6820__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20945);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e20952;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__21124 = state_20945;
                        state_20945 = G__21124;
                        continue;
                      } else {
                        return ret_value__6818__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6817__auto__ = function(state_20945) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6817__auto____0.call(this);
                      case 1:
                        return state_machine__6817__auto____1.call(this, state_20945);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
                  state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
                  return state_machine__6817__auto__;
                }();
              }(switch__6816__auto__, c__6831__auto___21122, res, vec__20940, v, p, job, jobs, results);
            }();
            var state__6833__auto__ = function() {
              var statearr_20954 = f__6832__auto__.call(null);
              statearr_20954[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___21122;
              return statearr_20954;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
          };
        }(c__6831__auto___21122, res, vec__20940, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__20955) {
      var vec__20956 = p__20955;
      var v = cljs.core.nth.call(null, vec__20956, 0, null);
      var p = cljs.core.nth.call(null, vec__20956, 1, null);
      var job = vec__20956;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4495__auto___21125 = n;
  var __21126 = 0;
  while (true) {
    if (__21126 < n__4495__auto___21125) {
      var G__20957_21127 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__20957_21127) {
        case "async":
          var c__6831__auto___21129 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__21126, c__6831__auto___21129, G__20957_21127, n__4495__auto___21125, jobs, results, process, async) {
            return function() {
              var f__6832__auto__ = function() {
                var switch__6816__auto__ = function(__21126, c__6831__auto___21129, G__20957_21127, n__4495__auto___21125, jobs, results, process, async) {
                  return function(state_20970) {
                    var state_val_20971 = state_20970[1];
                    if (state_val_20971 === 7) {
                      var inst_20966 = state_20970[2];
                      var state_20970__$1 = state_20970;
                      var statearr_20972_21130 = state_20970__$1;
                      statearr_20972_21130[2] = inst_20966;
                      statearr_20972_21130[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20971 === 6) {
                        var state_20970__$1 = state_20970;
                        var statearr_20973_21131 = state_20970__$1;
                        statearr_20973_21131[2] = null;
                        statearr_20973_21131[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20971 === 5) {
                          var state_20970__$1 = state_20970;
                          var statearr_20974_21132 = state_20970__$1;
                          statearr_20974_21132[2] = null;
                          statearr_20974_21132[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20971 === 4) {
                            var inst_20960 = state_20970[2];
                            var inst_20961 = async.call(null, inst_20960);
                            var state_20970__$1 = state_20970;
                            if (cljs.core.truth_(inst_20961)) {
                              var statearr_20975_21133 = state_20970__$1;
                              statearr_20975_21133[1] = 5;
                            } else {
                              var statearr_20976_21134 = state_20970__$1;
                              statearr_20976_21134[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20971 === 3) {
                              var inst_20968 = state_20970[2];
                              var state_20970__$1 = state_20970;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20970__$1, inst_20968);
                            } else {
                              if (state_val_20971 === 2) {
                                var state_20970__$1 = state_20970;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20970__$1, 4, jobs);
                              } else {
                                if (state_val_20971 === 1) {
                                  var state_20970__$1 = state_20970;
                                  var statearr_20977_21135 = state_20970__$1;
                                  statearr_20977_21135[2] = null;
                                  statearr_20977_21135[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__21126, c__6831__auto___21129, G__20957_21127, n__4495__auto___21125, jobs, results, process, async);
                return function(__21126, switch__6816__auto__, c__6831__auto___21129, G__20957_21127, n__4495__auto___21125, jobs, results, process, async) {
                  return function() {
                    var state_machine__6817__auto__ = null;
                    var state_machine__6817__auto____0 = function() {
                      var statearr_20981 = [null, null, null, null, null, null, null];
                      statearr_20981[0] = state_machine__6817__auto__;
                      statearr_20981[1] = 1;
                      return statearr_20981;
                    };
                    var state_machine__6817__auto____1 = function(state_20970) {
                      while (true) {
                        var ret_value__6818__auto__ = function() {
                          try {
                            while (true) {
                              var result__6819__auto__ = switch__6816__auto__.call(null, state_20970);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6819__auto__;
                              }
                              break;
                            }
                          } catch (e20982) {
                            if (e20982 instanceof Object) {
                              var ex__6820__auto__ = e20982;
                              var statearr_20983_21136 = state_20970;
                              statearr_20983_21136[5] = ex__6820__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20970);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e20982;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__21137 = state_20970;
                          state_20970 = G__21137;
                          continue;
                        } else {
                          return ret_value__6818__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6817__auto__ = function(state_20970) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6817__auto____0.call(this);
                        case 1:
                          return state_machine__6817__auto____1.call(this, state_20970);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
                    state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
                    return state_machine__6817__auto__;
                  }();
                }(__21126, switch__6816__auto__, c__6831__auto___21129, G__20957_21127, n__4495__auto___21125, jobs, results, process, async);
              }();
              var state__6833__auto__ = function() {
                var statearr_20984 = f__6832__auto__.call(null);
                statearr_20984[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___21129;
                return statearr_20984;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
            };
          }(__21126, c__6831__auto___21129, G__20957_21127, n__4495__auto___21125, jobs, results, process, async));
          break;
        case "compute":
          var c__6831__auto___21138 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__21126, c__6831__auto___21138, G__20957_21127, n__4495__auto___21125, jobs, results, process, async) {
            return function() {
              var f__6832__auto__ = function() {
                var switch__6816__auto__ = function(__21126, c__6831__auto___21138, G__20957_21127, n__4495__auto___21125, jobs, results, process, async) {
                  return function(state_20997) {
                    var state_val_20998 = state_20997[1];
                    if (state_val_20998 === 7) {
                      var inst_20993 = state_20997[2];
                      var state_20997__$1 = state_20997;
                      var statearr_20999_21139 = state_20997__$1;
                      statearr_20999_21139[2] = inst_20993;
                      statearr_20999_21139[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_20998 === 6) {
                        var state_20997__$1 = state_20997;
                        var statearr_21000_21140 = state_20997__$1;
                        statearr_21000_21140[2] = null;
                        statearr_21000_21140[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_20998 === 5) {
                          var state_20997__$1 = state_20997;
                          var statearr_21001_21141 = state_20997__$1;
                          statearr_21001_21141[2] = null;
                          statearr_21001_21141[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_20998 === 4) {
                            var inst_20987 = state_20997[2];
                            var inst_20988 = process.call(null, inst_20987);
                            var state_20997__$1 = state_20997;
                            if (cljs.core.truth_(inst_20988)) {
                              var statearr_21002_21142 = state_20997__$1;
                              statearr_21002_21142[1] = 5;
                            } else {
                              var statearr_21003_21143 = state_20997__$1;
                              statearr_21003_21143[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_20998 === 3) {
                              var inst_20995 = state_20997[2];
                              var state_20997__$1 = state_20997;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_20997__$1, inst_20995);
                            } else {
                              if (state_val_20998 === 2) {
                                var state_20997__$1 = state_20997;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_20997__$1, 4, jobs);
                              } else {
                                if (state_val_20998 === 1) {
                                  var state_20997__$1 = state_20997;
                                  var statearr_21004_21144 = state_20997__$1;
                                  statearr_21004_21144[2] = null;
                                  statearr_21004_21144[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__21126, c__6831__auto___21138, G__20957_21127, n__4495__auto___21125, jobs, results, process, async);
                return function(__21126, switch__6816__auto__, c__6831__auto___21138, G__20957_21127, n__4495__auto___21125, jobs, results, process, async) {
                  return function() {
                    var state_machine__6817__auto__ = null;
                    var state_machine__6817__auto____0 = function() {
                      var statearr_21008 = [null, null, null, null, null, null, null];
                      statearr_21008[0] = state_machine__6817__auto__;
                      statearr_21008[1] = 1;
                      return statearr_21008;
                    };
                    var state_machine__6817__auto____1 = function(state_20997) {
                      while (true) {
                        var ret_value__6818__auto__ = function() {
                          try {
                            while (true) {
                              var result__6819__auto__ = switch__6816__auto__.call(null, state_20997);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6819__auto__;
                              }
                              break;
                            }
                          } catch (e21009) {
                            if (e21009 instanceof Object) {
                              var ex__6820__auto__ = e21009;
                              var statearr_21010_21145 = state_20997;
                              statearr_21010_21145[5] = ex__6820__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_20997);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e21009;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__21146 = state_20997;
                          state_20997 = G__21146;
                          continue;
                        } else {
                          return ret_value__6818__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6817__auto__ = function(state_20997) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6817__auto____0.call(this);
                        case 1:
                          return state_machine__6817__auto____1.call(this, state_20997);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
                    state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
                    return state_machine__6817__auto__;
                  }();
                }(__21126, switch__6816__auto__, c__6831__auto___21138, G__20957_21127, n__4495__auto___21125, jobs, results, process, async);
              }();
              var state__6833__auto__ = function() {
                var statearr_21011 = f__6832__auto__.call(null);
                statearr_21011[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___21138;
                return statearr_21011;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
            };
          }(__21126, c__6831__auto___21138, G__20957_21127, n__4495__auto___21125, jobs, results, process, async));
          break;
        default:
          throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type));;
      }
      var G__21147 = __21126 + 1;
      __21126 = G__21147;
      continue;
    } else {
    }
    break;
  }
  var c__6831__auto___21148 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___21148, jobs, results, process, async) {
    return function() {
      var f__6832__auto__ = function() {
        var switch__6816__auto__ = function(c__6831__auto___21148, jobs, results, process, async) {
          return function(state_21033) {
            var state_val_21034 = state_21033[1];
            if (state_val_21034 === 9) {
              var inst_21026 = state_21033[2];
              var state_21033__$1 = function() {
                var statearr_21035 = state_21033;
                statearr_21035[7] = inst_21026;
                return statearr_21035;
              }();
              var statearr_21036_21149 = state_21033__$1;
              statearr_21036_21149[2] = null;
              statearr_21036_21149[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21034 === 8) {
                var inst_21019 = state_21033[8];
                var inst_21024 = state_21033[2];
                var state_21033__$1 = function() {
                  var statearr_21037 = state_21033;
                  statearr_21037[9] = inst_21024;
                  return statearr_21037;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21033__$1, 9, results, inst_21019);
              } else {
                if (state_val_21034 === 7) {
                  var inst_21029 = state_21033[2];
                  var state_21033__$1 = state_21033;
                  var statearr_21038_21150 = state_21033__$1;
                  statearr_21038_21150[2] = inst_21029;
                  statearr_21038_21150[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21034 === 6) {
                    var inst_21014 = state_21033[10];
                    var inst_21019 = state_21033[8];
                    var inst_21019__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_21020 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_21021 = [inst_21014, inst_21019__$1];
                    var inst_21022 = new cljs.core.PersistentVector(null, 2, 5, inst_21020, inst_21021, null);
                    var state_21033__$1 = function() {
                      var statearr_21039 = state_21033;
                      statearr_21039[8] = inst_21019__$1;
                      return statearr_21039;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21033__$1, 8, jobs, inst_21022);
                  } else {
                    if (state_val_21034 === 5) {
                      var inst_21017 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_21033__$1 = state_21033;
                      var statearr_21040_21151 = state_21033__$1;
                      statearr_21040_21151[2] = inst_21017;
                      statearr_21040_21151[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21034 === 4) {
                        var inst_21014 = state_21033[10];
                        var inst_21014__$1 = state_21033[2];
                        var inst_21015 = inst_21014__$1 == null;
                        var state_21033__$1 = function() {
                          var statearr_21041 = state_21033;
                          statearr_21041[10] = inst_21014__$1;
                          return statearr_21041;
                        }();
                        if (cljs.core.truth_(inst_21015)) {
                          var statearr_21042_21152 = state_21033__$1;
                          statearr_21042_21152[1] = 5;
                        } else {
                          var statearr_21043_21153 = state_21033__$1;
                          statearr_21043_21153[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21034 === 3) {
                          var inst_21031 = state_21033[2];
                          var state_21033__$1 = state_21033;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21033__$1, inst_21031);
                        } else {
                          if (state_val_21034 === 2) {
                            var state_21033__$1 = state_21033;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21033__$1, 4, from);
                          } else {
                            if (state_val_21034 === 1) {
                              var state_21033__$1 = state_21033;
                              var statearr_21044_21154 = state_21033__$1;
                              statearr_21044_21154[2] = null;
                              statearr_21044_21154[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6831__auto___21148, jobs, results, process, async);
        return function(switch__6816__auto__, c__6831__auto___21148, jobs, results, process, async) {
          return function() {
            var state_machine__6817__auto__ = null;
            var state_machine__6817__auto____0 = function() {
              var statearr_21048 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_21048[0] = state_machine__6817__auto__;
              statearr_21048[1] = 1;
              return statearr_21048;
            };
            var state_machine__6817__auto____1 = function(state_21033) {
              while (true) {
                var ret_value__6818__auto__ = function() {
                  try {
                    while (true) {
                      var result__6819__auto__ = switch__6816__auto__.call(null, state_21033);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6819__auto__;
                      }
                      break;
                    }
                  } catch (e21049) {
                    if (e21049 instanceof Object) {
                      var ex__6820__auto__ = e21049;
                      var statearr_21050_21155 = state_21033;
                      statearr_21050_21155[5] = ex__6820__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21033);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21049;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21156 = state_21033;
                  state_21033 = G__21156;
                  continue;
                } else {
                  return ret_value__6818__auto__;
                }
                break;
              }
            };
            state_machine__6817__auto__ = function(state_21033) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6817__auto____0.call(this);
                case 1:
                  return state_machine__6817__auto____1.call(this, state_21033);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
            return state_machine__6817__auto__;
          }();
        }(switch__6816__auto__, c__6831__auto___21148, jobs, results, process, async);
      }();
      var state__6833__auto__ = function() {
        var statearr_21051 = f__6832__auto__.call(null);
        statearr_21051[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___21148;
        return statearr_21051;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
    };
  }(c__6831__auto___21148, jobs, results, process, async));
  var c__6831__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto__, jobs, results, process, async) {
    return function() {
      var f__6832__auto__ = function() {
        var switch__6816__auto__ = function(c__6831__auto__, jobs, results, process, async) {
          return function(state_21089) {
            var state_val_21090 = state_21089[1];
            if (state_val_21090 === 7) {
              var inst_21085 = state_21089[2];
              var state_21089__$1 = state_21089;
              var statearr_21091_21157 = state_21089__$1;
              statearr_21091_21157[2] = inst_21085;
              statearr_21091_21157[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21090 === 20) {
                var state_21089__$1 = state_21089;
                var statearr_21092_21158 = state_21089__$1;
                statearr_21092_21158[2] = null;
                statearr_21092_21158[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21090 === 1) {
                  var state_21089__$1 = state_21089;
                  var statearr_21093_21159 = state_21089__$1;
                  statearr_21093_21159[2] = null;
                  statearr_21093_21159[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21090 === 4) {
                    var inst_21054 = state_21089[7];
                    var inst_21054__$1 = state_21089[2];
                    var inst_21055 = inst_21054__$1 == null;
                    var state_21089__$1 = function() {
                      var statearr_21094 = state_21089;
                      statearr_21094[7] = inst_21054__$1;
                      return statearr_21094;
                    }();
                    if (cljs.core.truth_(inst_21055)) {
                      var statearr_21095_21160 = state_21089__$1;
                      statearr_21095_21160[1] = 5;
                    } else {
                      var statearr_21096_21161 = state_21089__$1;
                      statearr_21096_21161[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21090 === 15) {
                      var inst_21067 = state_21089[8];
                      var state_21089__$1 = state_21089;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21089__$1, 18, to, inst_21067);
                    } else {
                      if (state_val_21090 === 21) {
                        var inst_21080 = state_21089[2];
                        var state_21089__$1 = state_21089;
                        var statearr_21097_21162 = state_21089__$1;
                        statearr_21097_21162[2] = inst_21080;
                        statearr_21097_21162[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21090 === 13) {
                          var inst_21082 = state_21089[2];
                          var state_21089__$1 = function() {
                            var statearr_21098 = state_21089;
                            statearr_21098[9] = inst_21082;
                            return statearr_21098;
                          }();
                          var statearr_21099_21163 = state_21089__$1;
                          statearr_21099_21163[2] = null;
                          statearr_21099_21163[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21090 === 6) {
                            var inst_21054 = state_21089[7];
                            var state_21089__$1 = state_21089;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21089__$1, 11, inst_21054);
                          } else {
                            if (state_val_21090 === 17) {
                              var inst_21075 = state_21089[2];
                              var state_21089__$1 = state_21089;
                              if (cljs.core.truth_(inst_21075)) {
                                var statearr_21100_21164 = state_21089__$1;
                                statearr_21100_21164[1] = 19;
                              } else {
                                var statearr_21101_21165 = state_21089__$1;
                                statearr_21101_21165[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21090 === 3) {
                                var inst_21087 = state_21089[2];
                                var state_21089__$1 = state_21089;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21089__$1, inst_21087);
                              } else {
                                if (state_val_21090 === 12) {
                                  var inst_21064 = state_21089[10];
                                  var state_21089__$1 = state_21089;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21089__$1, 14, inst_21064);
                                } else {
                                  if (state_val_21090 === 2) {
                                    var state_21089__$1 = state_21089;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21089__$1, 4, results);
                                  } else {
                                    if (state_val_21090 === 19) {
                                      var state_21089__$1 = state_21089;
                                      var statearr_21102_21166 = state_21089__$1;
                                      statearr_21102_21166[2] = null;
                                      statearr_21102_21166[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21090 === 11) {
                                        var inst_21064 = state_21089[2];
                                        var state_21089__$1 = function() {
                                          var statearr_21103 = state_21089;
                                          statearr_21103[10] = inst_21064;
                                          return statearr_21103;
                                        }();
                                        var statearr_21104_21167 = state_21089__$1;
                                        statearr_21104_21167[2] = null;
                                        statearr_21104_21167[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21090 === 9) {
                                          var state_21089__$1 = state_21089;
                                          var statearr_21105_21168 = state_21089__$1;
                                          statearr_21105_21168[2] = null;
                                          statearr_21105_21168[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21090 === 5) {
                                            var state_21089__$1 = state_21089;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_21106_21169 = state_21089__$1;
                                              statearr_21106_21169[1] = 8;
                                            } else {
                                              var statearr_21107_21170 = state_21089__$1;
                                              statearr_21107_21170[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21090 === 14) {
                                              var inst_21067 = state_21089[8];
                                              var inst_21069 = state_21089[11];
                                              var inst_21067__$1 = state_21089[2];
                                              var inst_21068 = inst_21067__$1 == null;
                                              var inst_21069__$1 = cljs.core.not.call(null, inst_21068);
                                              var state_21089__$1 = function() {
                                                var statearr_21108 = state_21089;
                                                statearr_21108[8] = inst_21067__$1;
                                                statearr_21108[11] = inst_21069__$1;
                                                return statearr_21108;
                                              }();
                                              if (inst_21069__$1) {
                                                var statearr_21109_21171 = state_21089__$1;
                                                statearr_21109_21171[1] = 15;
                                              } else {
                                                var statearr_21110_21172 = state_21089__$1;
                                                statearr_21110_21172[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21090 === 16) {
                                                var inst_21069 = state_21089[11];
                                                var state_21089__$1 = state_21089;
                                                var statearr_21111_21173 = state_21089__$1;
                                                statearr_21111_21173[2] = inst_21069;
                                                statearr_21111_21173[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_21090 === 10) {
                                                  var inst_21061 = state_21089[2];
                                                  var state_21089__$1 = state_21089;
                                                  var statearr_21112_21174 = state_21089__$1;
                                                  statearr_21112_21174[2] = inst_21061;
                                                  statearr_21112_21174[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21090 === 18) {
                                                    var inst_21072 = state_21089[2];
                                                    var state_21089__$1 = state_21089;
                                                    var statearr_21113_21175 = state_21089__$1;
                                                    statearr_21113_21175[2] = inst_21072;
                                                    statearr_21113_21175[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21090 === 8) {
                                                      var inst_21058 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_21089__$1 = state_21089;
                                                      var statearr_21114_21176 = state_21089__$1;
                                                      statearr_21114_21176[2] = inst_21058;
                                                      statearr_21114_21176[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6831__auto__, jobs, results, process, async);
        return function(switch__6816__auto__, c__6831__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6817__auto__ = null;
            var state_machine__6817__auto____0 = function() {
              var statearr_21118 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_21118[0] = state_machine__6817__auto__;
              statearr_21118[1] = 1;
              return statearr_21118;
            };
            var state_machine__6817__auto____1 = function(state_21089) {
              while (true) {
                var ret_value__6818__auto__ = function() {
                  try {
                    while (true) {
                      var result__6819__auto__ = switch__6816__auto__.call(null, state_21089);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6819__auto__;
                      }
                      break;
                    }
                  } catch (e21119) {
                    if (e21119 instanceof Object) {
                      var ex__6820__auto__ = e21119;
                      var statearr_21120_21177 = state_21089;
                      statearr_21120_21177[5] = ex__6820__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21089);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21119;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21178 = state_21089;
                  state_21089 = G__21178;
                  continue;
                } else {
                  return ret_value__6818__auto__;
                }
                break;
              }
            };
            state_machine__6817__auto__ = function(state_21089) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6817__auto____0.call(this);
                case 1:
                  return state_machine__6817__auto____1.call(this, state_21089);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
            return state_machine__6817__auto__;
          }();
        }(switch__6816__auto__, c__6831__auto__, jobs, results, process, async);
      }();
      var state__6833__auto__ = function() {
        var statearr_21121 = f__6832__auto__.call(null);
        statearr_21121[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto__;
        return statearr_21121;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
    };
  }(c__6831__auto__, jobs, results, process, async));
  return c__6831__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6831__auto___21279 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___21279, tc, fc) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___21279, tc, fc) {
            return function(state_21254) {
              var state_val_21255 = state_21254[1];
              if (state_val_21255 === 7) {
                var inst_21250 = state_21254[2];
                var state_21254__$1 = state_21254;
                var statearr_21256_21280 = state_21254__$1;
                statearr_21256_21280[2] = inst_21250;
                statearr_21256_21280[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21255 === 1) {
                  var state_21254__$1 = state_21254;
                  var statearr_21257_21281 = state_21254__$1;
                  statearr_21257_21281[2] = null;
                  statearr_21257_21281[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21255 === 4) {
                    var inst_21231 = state_21254[7];
                    var inst_21231__$1 = state_21254[2];
                    var inst_21232 = inst_21231__$1 == null;
                    var state_21254__$1 = function() {
                      var statearr_21258 = state_21254;
                      statearr_21258[7] = inst_21231__$1;
                      return statearr_21258;
                    }();
                    if (cljs.core.truth_(inst_21232)) {
                      var statearr_21259_21282 = state_21254__$1;
                      statearr_21259_21282[1] = 5;
                    } else {
                      var statearr_21260_21283 = state_21254__$1;
                      statearr_21260_21283[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21255 === 13) {
                      var state_21254__$1 = state_21254;
                      var statearr_21261_21284 = state_21254__$1;
                      statearr_21261_21284[2] = null;
                      statearr_21261_21284[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21255 === 6) {
                        var inst_21231 = state_21254[7];
                        var inst_21237 = p.call(null, inst_21231);
                        var state_21254__$1 = state_21254;
                        if (cljs.core.truth_(inst_21237)) {
                          var statearr_21262_21285 = state_21254__$1;
                          statearr_21262_21285[1] = 9;
                        } else {
                          var statearr_21263_21286 = state_21254__$1;
                          statearr_21263_21286[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21255 === 3) {
                          var inst_21252 = state_21254[2];
                          var state_21254__$1 = state_21254;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21254__$1, inst_21252);
                        } else {
                          if (state_val_21255 === 12) {
                            var state_21254__$1 = state_21254;
                            var statearr_21264_21287 = state_21254__$1;
                            statearr_21264_21287[2] = null;
                            statearr_21264_21287[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21255 === 2) {
                              var state_21254__$1 = state_21254;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21254__$1, 4, ch);
                            } else {
                              if (state_val_21255 === 11) {
                                var inst_21231 = state_21254[7];
                                var inst_21241 = state_21254[2];
                                var state_21254__$1 = state_21254;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21254__$1, 8, inst_21241, inst_21231);
                              } else {
                                if (state_val_21255 === 9) {
                                  var state_21254__$1 = state_21254;
                                  var statearr_21265_21288 = state_21254__$1;
                                  statearr_21265_21288[2] = tc;
                                  statearr_21265_21288[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21255 === 5) {
                                    var inst_21234 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_21235 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_21254__$1 = function() {
                                      var statearr_21266 = state_21254;
                                      statearr_21266[8] = inst_21234;
                                      return statearr_21266;
                                    }();
                                    var statearr_21267_21289 = state_21254__$1;
                                    statearr_21267_21289[2] = inst_21235;
                                    statearr_21267_21289[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21255 === 14) {
                                      var inst_21248 = state_21254[2];
                                      var state_21254__$1 = state_21254;
                                      var statearr_21268_21290 = state_21254__$1;
                                      statearr_21268_21290[2] = inst_21248;
                                      statearr_21268_21290[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21255 === 10) {
                                        var state_21254__$1 = state_21254;
                                        var statearr_21269_21291 = state_21254__$1;
                                        statearr_21269_21291[2] = fc;
                                        statearr_21269_21291[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21255 === 8) {
                                          var inst_21243 = state_21254[2];
                                          var state_21254__$1 = state_21254;
                                          if (cljs.core.truth_(inst_21243)) {
                                            var statearr_21270_21292 = state_21254__$1;
                                            statearr_21270_21292[1] = 12;
                                          } else {
                                            var statearr_21271_21293 = state_21254__$1;
                                            statearr_21271_21293[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___21279, tc, fc);
          return function(switch__6816__auto__, c__6831__auto___21279, tc, fc) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_21275 = [null, null, null, null, null, null, null, null, null];
                statearr_21275[0] = state_machine__6817__auto__;
                statearr_21275[1] = 1;
                return statearr_21275;
              };
              var state_machine__6817__auto____1 = function(state_21254) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_21254);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e21276) {
                      if (e21276 instanceof Object) {
                        var ex__6820__auto__ = e21276;
                        var statearr_21277_21294 = state_21254;
                        statearr_21277_21294[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21254);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21276;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21295 = state_21254;
                    state_21254 = G__21295;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_21254) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_21254);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___21279, tc, fc);
        }();
        var state__6833__auto__ = function() {
          var statearr_21278 = f__6832__auto__.call(null);
          statearr_21278[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___21279;
          return statearr_21278;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___21279, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6831__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto__) {
    return function() {
      var f__6832__auto__ = function() {
        var switch__6816__auto__ = function(c__6831__auto__) {
          return function(state_21342) {
            var state_val_21343 = state_21342[1];
            if (state_val_21343 === 7) {
              var inst_21338 = state_21342[2];
              var state_21342__$1 = state_21342;
              var statearr_21344_21360 = state_21342__$1;
              statearr_21344_21360[2] = inst_21338;
              statearr_21344_21360[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21343 === 6) {
                var inst_21328 = state_21342[7];
                var inst_21331 = state_21342[8];
                var inst_21335 = f.call(null, inst_21328, inst_21331);
                var inst_21328__$1 = inst_21335;
                var state_21342__$1 = function() {
                  var statearr_21345 = state_21342;
                  statearr_21345[7] = inst_21328__$1;
                  return statearr_21345;
                }();
                var statearr_21346_21361 = state_21342__$1;
                statearr_21346_21361[2] = null;
                statearr_21346_21361[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21343 === 5) {
                  var inst_21328 = state_21342[7];
                  var state_21342__$1 = state_21342;
                  var statearr_21347_21362 = state_21342__$1;
                  statearr_21347_21362[2] = inst_21328;
                  statearr_21347_21362[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21343 === 4) {
                    var inst_21331 = state_21342[8];
                    var inst_21331__$1 = state_21342[2];
                    var inst_21332 = inst_21331__$1 == null;
                    var state_21342__$1 = function() {
                      var statearr_21348 = state_21342;
                      statearr_21348[8] = inst_21331__$1;
                      return statearr_21348;
                    }();
                    if (cljs.core.truth_(inst_21332)) {
                      var statearr_21349_21363 = state_21342__$1;
                      statearr_21349_21363[1] = 5;
                    } else {
                      var statearr_21350_21364 = state_21342__$1;
                      statearr_21350_21364[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21343 === 3) {
                      var inst_21340 = state_21342[2];
                      var state_21342__$1 = state_21342;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21342__$1, inst_21340);
                    } else {
                      if (state_val_21343 === 2) {
                        var state_21342__$1 = state_21342;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21342__$1, 4, ch);
                      } else {
                        if (state_val_21343 === 1) {
                          var inst_21328 = init;
                          var state_21342__$1 = function() {
                            var statearr_21351 = state_21342;
                            statearr_21351[7] = inst_21328;
                            return statearr_21351;
                          }();
                          var statearr_21352_21365 = state_21342__$1;
                          statearr_21352_21365[2] = null;
                          statearr_21352_21365[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6831__auto__);
        return function(switch__6816__auto__, c__6831__auto__) {
          return function() {
            var state_machine__6817__auto__ = null;
            var state_machine__6817__auto____0 = function() {
              var statearr_21356 = [null, null, null, null, null, null, null, null, null];
              statearr_21356[0] = state_machine__6817__auto__;
              statearr_21356[1] = 1;
              return statearr_21356;
            };
            var state_machine__6817__auto____1 = function(state_21342) {
              while (true) {
                var ret_value__6818__auto__ = function() {
                  try {
                    while (true) {
                      var result__6819__auto__ = switch__6816__auto__.call(null, state_21342);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6819__auto__;
                      }
                      break;
                    }
                  } catch (e21357) {
                    if (e21357 instanceof Object) {
                      var ex__6820__auto__ = e21357;
                      var statearr_21358_21366 = state_21342;
                      statearr_21358_21366[5] = ex__6820__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21342);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21357;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21367 = state_21342;
                  state_21342 = G__21367;
                  continue;
                } else {
                  return ret_value__6818__auto__;
                }
                break;
              }
            };
            state_machine__6817__auto__ = function(state_21342) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6817__auto____0.call(this);
                case 1:
                  return state_machine__6817__auto____1.call(this, state_21342);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
            return state_machine__6817__auto__;
          }();
        }(switch__6816__auto__, c__6831__auto__);
      }();
      var state__6833__auto__ = function() {
        var statearr_21359 = f__6832__auto__.call(null);
        statearr_21359[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto__;
        return statearr_21359;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
    };
  }(c__6831__auto__));
  return c__6831__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6831__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto__) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto__) {
            return function(state_21441) {
              var state_val_21442 = state_21441[1];
              if (state_val_21442 === 7) {
                var inst_21423 = state_21441[2];
                var state_21441__$1 = state_21441;
                var statearr_21443_21466 = state_21441__$1;
                statearr_21443_21466[2] = inst_21423;
                statearr_21443_21466[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21442 === 1) {
                  var inst_21417 = cljs.core.seq.call(null, coll);
                  var inst_21418 = inst_21417;
                  var state_21441__$1 = function() {
                    var statearr_21444 = state_21441;
                    statearr_21444[7] = inst_21418;
                    return statearr_21444;
                  }();
                  var statearr_21445_21467 = state_21441__$1;
                  statearr_21445_21467[2] = null;
                  statearr_21445_21467[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21442 === 4) {
                    var inst_21418 = state_21441[7];
                    var inst_21421 = cljs.core.first.call(null, inst_21418);
                    var state_21441__$1 = state_21441;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_21441__$1, 7, ch, inst_21421);
                  } else {
                    if (state_val_21442 === 13) {
                      var inst_21435 = state_21441[2];
                      var state_21441__$1 = state_21441;
                      var statearr_21446_21468 = state_21441__$1;
                      statearr_21446_21468[2] = inst_21435;
                      statearr_21446_21468[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21442 === 6) {
                        var inst_21426 = state_21441[2];
                        var state_21441__$1 = state_21441;
                        if (cljs.core.truth_(inst_21426)) {
                          var statearr_21447_21469 = state_21441__$1;
                          statearr_21447_21469[1] = 8;
                        } else {
                          var statearr_21448_21470 = state_21441__$1;
                          statearr_21448_21470[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21442 === 3) {
                          var inst_21439 = state_21441[2];
                          var state_21441__$1 = state_21441;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21441__$1, inst_21439);
                        } else {
                          if (state_val_21442 === 12) {
                            var state_21441__$1 = state_21441;
                            var statearr_21449_21471 = state_21441__$1;
                            statearr_21449_21471[2] = null;
                            statearr_21449_21471[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21442 === 2) {
                              var inst_21418 = state_21441[7];
                              var state_21441__$1 = state_21441;
                              if (cljs.core.truth_(inst_21418)) {
                                var statearr_21450_21472 = state_21441__$1;
                                statearr_21450_21472[1] = 4;
                              } else {
                                var statearr_21451_21473 = state_21441__$1;
                                statearr_21451_21473[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21442 === 11) {
                                var inst_21432 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_21441__$1 = state_21441;
                                var statearr_21452_21474 = state_21441__$1;
                                statearr_21452_21474[2] = inst_21432;
                                statearr_21452_21474[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21442 === 9) {
                                  var state_21441__$1 = state_21441;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_21453_21475 = state_21441__$1;
                                    statearr_21453_21475[1] = 11;
                                  } else {
                                    var statearr_21454_21476 = state_21441__$1;
                                    statearr_21454_21476[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21442 === 5) {
                                    var inst_21418 = state_21441[7];
                                    var state_21441__$1 = state_21441;
                                    var statearr_21455_21477 = state_21441__$1;
                                    statearr_21455_21477[2] = inst_21418;
                                    statearr_21455_21477[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21442 === 10) {
                                      var inst_21437 = state_21441[2];
                                      var state_21441__$1 = state_21441;
                                      var statearr_21456_21478 = state_21441__$1;
                                      statearr_21456_21478[2] = inst_21437;
                                      statearr_21456_21478[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21442 === 8) {
                                        var inst_21418 = state_21441[7];
                                        var inst_21428 = cljs.core.next.call(null, inst_21418);
                                        var inst_21418__$1 = inst_21428;
                                        var state_21441__$1 = function() {
                                          var statearr_21457 = state_21441;
                                          statearr_21457[7] = inst_21418__$1;
                                          return statearr_21457;
                                        }();
                                        var statearr_21458_21479 = state_21441__$1;
                                        statearr_21458_21479[2] = null;
                                        statearr_21458_21479[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto__);
          return function(switch__6816__auto__, c__6831__auto__) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_21462 = [null, null, null, null, null, null, null, null];
                statearr_21462[0] = state_machine__6817__auto__;
                statearr_21462[1] = 1;
                return statearr_21462;
              };
              var state_machine__6817__auto____1 = function(state_21441) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_21441);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e21463) {
                      if (e21463 instanceof Object) {
                        var ex__6820__auto__ = e21463;
                        var statearr_21464_21480 = state_21441;
                        statearr_21464_21480[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21441);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e21463;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__21481 = state_21441;
                    state_21441 = G__21481;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_21441) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_21441);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto__);
        }();
        var state__6833__auto__ = function() {
          var statearr_21465 = f__6832__auto__.call(null);
          statearr_21465[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto__;
          return statearr_21465;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto__));
    return c__6831__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj21483 = {};
  return obj21483;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3614__auto__ = _;
    if (and__3614__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4262__auto__ = _ == null ? null : _;
    return function() {
      var or__3626__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj21485 = {};
  return obj21485;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t21707 !== "undefined") {
    } else {
      cljs.core.async.t21707 = function(cs, ch, mult, meta21708) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta21708 = meta21708;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t21707.cljs$lang$type = true;
      cljs.core.async.t21707.cljs$lang$ctorStr = "cljs.core.async/t21707";
      cljs.core.async.t21707.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
          return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t21707");
        };
      }(cs);
      cljs.core.async.t21707.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t21707.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t21707.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t21707.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t21707.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t21707.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t21707.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_21709) {
          var self__ = this;
          var _21709__$1 = this;
          return self__.meta21708;
        };
      }(cs);
      cljs.core.async.t21707.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_21709, meta21708__$1) {
          var self__ = this;
          var _21709__$1 = this;
          return new cljs.core.async.t21707(self__.cs, self__.ch, self__.mult, meta21708__$1);
        };
      }(cs);
      cljs.core.async.__GT_t21707 = function(cs) {
        return function __GT_t21707(cs__$1, ch__$1, mult__$1, meta21708) {
          return new cljs.core.async.t21707(cs__$1, ch__$1, mult__$1, meta21708);
        };
      }(cs);
    }
    return new cljs.core.async.t21707(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6831__auto___21928 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___21928, cs, m, dchan, dctr, done) {
    return function() {
      var f__6832__auto__ = function() {
        var switch__6816__auto__ = function(c__6831__auto___21928, cs, m, dchan, dctr, done) {
          return function(state_21840) {
            var state_val_21841 = state_21840[1];
            if (state_val_21841 === 7) {
              var inst_21836 = state_21840[2];
              var state_21840__$1 = state_21840;
              var statearr_21842_21929 = state_21840__$1;
              statearr_21842_21929[2] = inst_21836;
              statearr_21842_21929[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_21841 === 20) {
                var inst_21741 = state_21840[7];
                var inst_21751 = cljs.core.first.call(null, inst_21741);
                var inst_21752 = cljs.core.nth.call(null, inst_21751, 0, null);
                var inst_21753 = cljs.core.nth.call(null, inst_21751, 1, null);
                var state_21840__$1 = function() {
                  var statearr_21843 = state_21840;
                  statearr_21843[8] = inst_21752;
                  return statearr_21843;
                }();
                if (cljs.core.truth_(inst_21753)) {
                  var statearr_21844_21930 = state_21840__$1;
                  statearr_21844_21930[1] = 22;
                } else {
                  var statearr_21845_21931 = state_21840__$1;
                  statearr_21845_21931[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_21841 === 27) {
                  var inst_21788 = state_21840[9];
                  var inst_21781 = state_21840[10];
                  var inst_21712 = state_21840[11];
                  var inst_21783 = state_21840[12];
                  var inst_21788__$1 = cljs.core._nth.call(null, inst_21781, inst_21783);
                  var inst_21789 = cljs.core.async.put_BANG_.call(null, inst_21788__$1, inst_21712, done);
                  var state_21840__$1 = function() {
                    var statearr_21846 = state_21840;
                    statearr_21846[9] = inst_21788__$1;
                    return statearr_21846;
                  }();
                  if (cljs.core.truth_(inst_21789)) {
                    var statearr_21847_21932 = state_21840__$1;
                    statearr_21847_21932[1] = 30;
                  } else {
                    var statearr_21848_21933 = state_21840__$1;
                    statearr_21848_21933[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_21841 === 1) {
                    var state_21840__$1 = state_21840;
                    var statearr_21849_21934 = state_21840__$1;
                    statearr_21849_21934[2] = null;
                    statearr_21849_21934[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_21841 === 24) {
                      var inst_21741 = state_21840[7];
                      var inst_21758 = state_21840[2];
                      var inst_21759 = cljs.core.next.call(null, inst_21741);
                      var inst_21721 = inst_21759;
                      var inst_21722 = null;
                      var inst_21723 = 0;
                      var inst_21724 = 0;
                      var state_21840__$1 = function() {
                        var statearr_21850 = state_21840;
                        statearr_21850[13] = inst_21724;
                        statearr_21850[14] = inst_21722;
                        statearr_21850[15] = inst_21723;
                        statearr_21850[16] = inst_21758;
                        statearr_21850[17] = inst_21721;
                        return statearr_21850;
                      }();
                      var statearr_21851_21935 = state_21840__$1;
                      statearr_21851_21935[2] = null;
                      statearr_21851_21935[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_21841 === 39) {
                        var state_21840__$1 = state_21840;
                        var statearr_21855_21936 = state_21840__$1;
                        statearr_21855_21936[2] = null;
                        statearr_21855_21936[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_21841 === 4) {
                          var inst_21712 = state_21840[11];
                          var inst_21712__$1 = state_21840[2];
                          var inst_21713 = inst_21712__$1 == null;
                          var state_21840__$1 = function() {
                            var statearr_21856 = state_21840;
                            statearr_21856[11] = inst_21712__$1;
                            return statearr_21856;
                          }();
                          if (cljs.core.truth_(inst_21713)) {
                            var statearr_21857_21937 = state_21840__$1;
                            statearr_21857_21937[1] = 5;
                          } else {
                            var statearr_21858_21938 = state_21840__$1;
                            statearr_21858_21938[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_21841 === 15) {
                            var inst_21724 = state_21840[13];
                            var inst_21722 = state_21840[14];
                            var inst_21723 = state_21840[15];
                            var inst_21721 = state_21840[17];
                            var inst_21737 = state_21840[2];
                            var inst_21738 = inst_21724 + 1;
                            var tmp21852 = inst_21722;
                            var tmp21853 = inst_21723;
                            var tmp21854 = inst_21721;
                            var inst_21721__$1 = tmp21854;
                            var inst_21722__$1 = tmp21852;
                            var inst_21723__$1 = tmp21853;
                            var inst_21724__$1 = inst_21738;
                            var state_21840__$1 = function() {
                              var statearr_21859 = state_21840;
                              statearr_21859[13] = inst_21724__$1;
                              statearr_21859[14] = inst_21722__$1;
                              statearr_21859[15] = inst_21723__$1;
                              statearr_21859[17] = inst_21721__$1;
                              statearr_21859[18] = inst_21737;
                              return statearr_21859;
                            }();
                            var statearr_21860_21939 = state_21840__$1;
                            statearr_21860_21939[2] = null;
                            statearr_21860_21939[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_21841 === 21) {
                              var inst_21762 = state_21840[2];
                              var state_21840__$1 = state_21840;
                              var statearr_21864_21940 = state_21840__$1;
                              statearr_21864_21940[2] = inst_21762;
                              statearr_21864_21940[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_21841 === 31) {
                                var inst_21788 = state_21840[9];
                                var inst_21792 = done.call(null, null);
                                var inst_21793 = cljs.core.async.untap_STAR_.call(null, m, inst_21788);
                                var state_21840__$1 = function() {
                                  var statearr_21865 = state_21840;
                                  statearr_21865[19] = inst_21792;
                                  return statearr_21865;
                                }();
                                var statearr_21866_21941 = state_21840__$1;
                                statearr_21866_21941[2] = inst_21793;
                                statearr_21866_21941[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_21841 === 32) {
                                  var inst_21780 = state_21840[20];
                                  var inst_21781 = state_21840[10];
                                  var inst_21782 = state_21840[21];
                                  var inst_21783 = state_21840[12];
                                  var inst_21795 = state_21840[2];
                                  var inst_21796 = inst_21783 + 1;
                                  var tmp21861 = inst_21780;
                                  var tmp21862 = inst_21781;
                                  var tmp21863 = inst_21782;
                                  var inst_21780__$1 = tmp21861;
                                  var inst_21781__$1 = tmp21862;
                                  var inst_21782__$1 = tmp21863;
                                  var inst_21783__$1 = inst_21796;
                                  var state_21840__$1 = function() {
                                    var statearr_21867 = state_21840;
                                    statearr_21867[22] = inst_21795;
                                    statearr_21867[20] = inst_21780__$1;
                                    statearr_21867[10] = inst_21781__$1;
                                    statearr_21867[21] = inst_21782__$1;
                                    statearr_21867[12] = inst_21783__$1;
                                    return statearr_21867;
                                  }();
                                  var statearr_21868_21942 = state_21840__$1;
                                  statearr_21868_21942[2] = null;
                                  statearr_21868_21942[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_21841 === 40) {
                                    var inst_21808 = state_21840[23];
                                    var inst_21812 = done.call(null, null);
                                    var inst_21813 = cljs.core.async.untap_STAR_.call(null, m, inst_21808);
                                    var state_21840__$1 = function() {
                                      var statearr_21869 = state_21840;
                                      statearr_21869[24] = inst_21812;
                                      return statearr_21869;
                                    }();
                                    var statearr_21870_21943 = state_21840__$1;
                                    statearr_21870_21943[2] = inst_21813;
                                    statearr_21870_21943[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_21841 === 33) {
                                      var inst_21799 = state_21840[25];
                                      var inst_21801 = cljs.core.chunked_seq_QMARK_.call(null, inst_21799);
                                      var state_21840__$1 = state_21840;
                                      if (inst_21801) {
                                        var statearr_21871_21944 = state_21840__$1;
                                        statearr_21871_21944[1] = 36;
                                      } else {
                                        var statearr_21872_21945 = state_21840__$1;
                                        statearr_21872_21945[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_21841 === 13) {
                                        var inst_21731 = state_21840[26];
                                        var inst_21734 = cljs.core.async.close_BANG_.call(null, inst_21731);
                                        var state_21840__$1 = state_21840;
                                        var statearr_21873_21946 = state_21840__$1;
                                        statearr_21873_21946[2] = inst_21734;
                                        statearr_21873_21946[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_21841 === 22) {
                                          var inst_21752 = state_21840[8];
                                          var inst_21755 = cljs.core.async.close_BANG_.call(null, inst_21752);
                                          var state_21840__$1 = state_21840;
                                          var statearr_21874_21947 = state_21840__$1;
                                          statearr_21874_21947[2] = inst_21755;
                                          statearr_21874_21947[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_21841 === 36) {
                                            var inst_21799 = state_21840[25];
                                            var inst_21803 = cljs.core.chunk_first.call(null, inst_21799);
                                            var inst_21804 = cljs.core.chunk_rest.call(null, inst_21799);
                                            var inst_21805 = cljs.core.count.call(null, inst_21803);
                                            var inst_21780 = inst_21804;
                                            var inst_21781 = inst_21803;
                                            var inst_21782 = inst_21805;
                                            var inst_21783 = 0;
                                            var state_21840__$1 = function() {
                                              var statearr_21875 = state_21840;
                                              statearr_21875[20] = inst_21780;
                                              statearr_21875[10] = inst_21781;
                                              statearr_21875[21] = inst_21782;
                                              statearr_21875[12] = inst_21783;
                                              return statearr_21875;
                                            }();
                                            var statearr_21876_21948 = state_21840__$1;
                                            statearr_21876_21948[2] = null;
                                            statearr_21876_21948[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_21841 === 41) {
                                              var inst_21799 = state_21840[25];
                                              var inst_21815 = state_21840[2];
                                              var inst_21816 = cljs.core.next.call(null, inst_21799);
                                              var inst_21780 = inst_21816;
                                              var inst_21781 = null;
                                              var inst_21782 = 0;
                                              var inst_21783 = 0;
                                              var state_21840__$1 = function() {
                                                var statearr_21877 = state_21840;
                                                statearr_21877[20] = inst_21780;
                                                statearr_21877[27] = inst_21815;
                                                statearr_21877[10] = inst_21781;
                                                statearr_21877[21] = inst_21782;
                                                statearr_21877[12] = inst_21783;
                                                return statearr_21877;
                                              }();
                                              var statearr_21878_21949 = state_21840__$1;
                                              statearr_21878_21949[2] = null;
                                              statearr_21878_21949[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_21841 === 43) {
                                                var state_21840__$1 = state_21840;
                                                var statearr_21879_21950 = state_21840__$1;
                                                statearr_21879_21950[2] = null;
                                                statearr_21879_21950[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_21841 === 29) {
                                                  var inst_21824 = state_21840[2];
                                                  var state_21840__$1 = state_21840;
                                                  var statearr_21880_21951 = state_21840__$1;
                                                  statearr_21880_21951[2] = inst_21824;
                                                  statearr_21880_21951[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_21841 === 44) {
                                                    var inst_21833 = state_21840[2];
                                                    var state_21840__$1 = function() {
                                                      var statearr_21881 = state_21840;
                                                      statearr_21881[28] = inst_21833;
                                                      return statearr_21881;
                                                    }();
                                                    var statearr_21882_21952 = state_21840__$1;
                                                    statearr_21882_21952[2] = null;
                                                    statearr_21882_21952[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_21841 === 6) {
                                                      var inst_21772 = state_21840[29];
                                                      var inst_21771 = cljs.core.deref.call(null, cs);
                                                      var inst_21772__$1 = cljs.core.keys.call(null, inst_21771);
                                                      var inst_21773 = cljs.core.count.call(null, inst_21772__$1);
                                                      var inst_21774 = cljs.core.reset_BANG_.call(null, dctr, inst_21773);
                                                      var inst_21779 = cljs.core.seq.call(null, inst_21772__$1);
                                                      var inst_21780 = inst_21779;
                                                      var inst_21781 = null;
                                                      var inst_21782 = 0;
                                                      var inst_21783 = 0;
                                                      var state_21840__$1 = function() {
                                                        var statearr_21883 = state_21840;
                                                        statearr_21883[20] = inst_21780;
                                                        statearr_21883[29] = inst_21772__$1;
                                                        statearr_21883[30] = inst_21774;
                                                        statearr_21883[10] = inst_21781;
                                                        statearr_21883[21] = inst_21782;
                                                        statearr_21883[12] = inst_21783;
                                                        return statearr_21883;
                                                      }();
                                                      var statearr_21884_21953 = state_21840__$1;
                                                      statearr_21884_21953[2] = null;
                                                      statearr_21884_21953[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_21841 === 28) {
                                                        var inst_21780 = state_21840[20];
                                                        var inst_21799 = state_21840[25];
                                                        var inst_21799__$1 = cljs.core.seq.call(null, inst_21780);
                                                        var state_21840__$1 = function() {
                                                          var statearr_21885 = state_21840;
                                                          statearr_21885[25] = inst_21799__$1;
                                                          return statearr_21885;
                                                        }();
                                                        if (inst_21799__$1) {
                                                          var statearr_21886_21954 = state_21840__$1;
                                                          statearr_21886_21954[1] = 33;
                                                        } else {
                                                          var statearr_21887_21955 = state_21840__$1;
                                                          statearr_21887_21955[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_21841 === 25) {
                                                          var inst_21782 = state_21840[21];
                                                          var inst_21783 = state_21840[12];
                                                          var inst_21785 = inst_21783 < inst_21782;
                                                          var inst_21786 = inst_21785;
                                                          var state_21840__$1 = state_21840;
                                                          if (cljs.core.truth_(inst_21786)) {
                                                            var statearr_21888_21956 = state_21840__$1;
                                                            statearr_21888_21956[1] = 27;
                                                          } else {
                                                            var statearr_21889_21957 = state_21840__$1;
                                                            statearr_21889_21957[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_21841 === 34) {
                                                            var state_21840__$1 = state_21840;
                                                            var statearr_21890_21958 = state_21840__$1;
                                                            statearr_21890_21958[2] = null;
                                                            statearr_21890_21958[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_21841 === 17) {
                                                              var state_21840__$1 = state_21840;
                                                              var statearr_21891_21959 = state_21840__$1;
                                                              statearr_21891_21959[2] = null;
                                                              statearr_21891_21959[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_21841 === 3) {
                                                                var inst_21838 = state_21840[2];
                                                                var state_21840__$1 = state_21840;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_21840__$1, inst_21838);
                                                              } else {
                                                                if (state_val_21841 === 12) {
                                                                  var inst_21767 = state_21840[2];
                                                                  var state_21840__$1 = state_21840;
                                                                  var statearr_21892_21960 = state_21840__$1;
                                                                  statearr_21892_21960[2] = inst_21767;
                                                                  statearr_21892_21960[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_21841 === 2) {
                                                                    var state_21840__$1 = state_21840;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21840__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_21841 === 23) {
                                                                      var state_21840__$1 = state_21840;
                                                                      var statearr_21893_21961 = state_21840__$1;
                                                                      statearr_21893_21961[2] = null;
                                                                      statearr_21893_21961[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_21841 === 35) {
                                                                        var inst_21822 = state_21840[2];
                                                                        var state_21840__$1 = state_21840;
                                                                        var statearr_21894_21962 = state_21840__$1;
                                                                        statearr_21894_21962[2] = inst_21822;
                                                                        statearr_21894_21962[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_21841 === 19) {
                                                                          var inst_21741 = state_21840[7];
                                                                          var inst_21745 = cljs.core.chunk_first.call(null, inst_21741);
                                                                          var inst_21746 = cljs.core.chunk_rest.call(null, inst_21741);
                                                                          var inst_21747 = cljs.core.count.call(null, inst_21745);
                                                                          var inst_21721 = inst_21746;
                                                                          var inst_21722 = inst_21745;
                                                                          var inst_21723 = inst_21747;
                                                                          var inst_21724 = 0;
                                                                          var state_21840__$1 = function() {
                                                                            var statearr_21895 = state_21840;
                                                                            statearr_21895[13] = inst_21724;
                                                                            statearr_21895[14] = inst_21722;
                                                                            statearr_21895[15] = inst_21723;
                                                                            statearr_21895[17] = inst_21721;
                                                                            return statearr_21895;
                                                                          }();
                                                                          var statearr_21896_21963 = state_21840__$1;
                                                                          statearr_21896_21963[2] = null;
                                                                          statearr_21896_21963[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_21841 === 11) {
                                                                            var inst_21721 = state_21840[17];
                                                                            var inst_21741 = state_21840[7];
                                                                            var inst_21741__$1 = cljs.core.seq.call(null, inst_21721);
                                                                            var state_21840__$1 = function() {
                                                                              var statearr_21897 = state_21840;
                                                                              statearr_21897[7] = inst_21741__$1;
                                                                              return statearr_21897;
                                                                            }();
                                                                            if (inst_21741__$1) {
                                                                              var statearr_21898_21964 = state_21840__$1;
                                                                              statearr_21898_21964[1] = 16;
                                                                            } else {
                                                                              var statearr_21899_21965 = state_21840__$1;
                                                                              statearr_21899_21965[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_21841 === 9) {
                                                                              var inst_21769 = state_21840[2];
                                                                              var state_21840__$1 = state_21840;
                                                                              var statearr_21900_21966 = state_21840__$1;
                                                                              statearr_21900_21966[2] = inst_21769;
                                                                              statearr_21900_21966[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_21841 === 5) {
                                                                                var inst_21719 = cljs.core.deref.call(null, cs);
                                                                                var inst_21720 = cljs.core.seq.call(null, inst_21719);
                                                                                var inst_21721 = inst_21720;
                                                                                var inst_21722 = null;
                                                                                var inst_21723 = 0;
                                                                                var inst_21724 = 0;
                                                                                var state_21840__$1 = function() {
                                                                                  var statearr_21901 = state_21840;
                                                                                  statearr_21901[13] = inst_21724;
                                                                                  statearr_21901[14] = inst_21722;
                                                                                  statearr_21901[15] = inst_21723;
                                                                                  statearr_21901[17] = inst_21721;
                                                                                  return statearr_21901;
                                                                                }();
                                                                                var statearr_21902_21967 = state_21840__$1;
                                                                                statearr_21902_21967[2] = null;
                                                                                statearr_21902_21967[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_21841 === 14) {
                                                                                  var state_21840__$1 = state_21840;
                                                                                  var statearr_21903_21968 = state_21840__$1;
                                                                                  statearr_21903_21968[2] = null;
                                                                                  statearr_21903_21968[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_21841 === 45) {
                                                                                    var inst_21830 = state_21840[2];
                                                                                    var state_21840__$1 = state_21840;
                                                                                    var statearr_21904_21969 = state_21840__$1;
                                                                                    statearr_21904_21969[2] = inst_21830;
                                                                                    statearr_21904_21969[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_21841 === 26) {
                                                                                      var inst_21772 = state_21840[29];
                                                                                      var inst_21826 = state_21840[2];
                                                                                      var inst_21827 = cljs.core.seq.call(null, inst_21772);
                                                                                      var state_21840__$1 = function() {
                                                                                        var statearr_21905 = state_21840;
                                                                                        statearr_21905[31] = inst_21826;
                                                                                        return statearr_21905;
                                                                                      }();
                                                                                      if (inst_21827) {
                                                                                        var statearr_21906_21970 = state_21840__$1;
                                                                                        statearr_21906_21970[1] = 42;
                                                                                      } else {
                                                                                        var statearr_21907_21971 = state_21840__$1;
                                                                                        statearr_21907_21971[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_21841 === 16) {
                                                                                        var inst_21741 = state_21840[7];
                                                                                        var inst_21743 = cljs.core.chunked_seq_QMARK_.call(null, inst_21741);
                                                                                        var state_21840__$1 = state_21840;
                                                                                        if (inst_21743) {
                                                                                          var statearr_21908_21972 = state_21840__$1;
                                                                                          statearr_21908_21972[1] = 19;
                                                                                        } else {
                                                                                          var statearr_21909_21973 = state_21840__$1;
                                                                                          statearr_21909_21973[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_21841 === 38) {
                                                                                          var inst_21819 = state_21840[2];
                                                                                          var state_21840__$1 = state_21840;
                                                                                          var statearr_21910_21974 = state_21840__$1;
                                                                                          statearr_21910_21974[2] = inst_21819;
                                                                                          statearr_21910_21974[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_21841 === 30) {
                                                                                            var state_21840__$1 = state_21840;
                                                                                            var statearr_21911_21975 = state_21840__$1;
                                                                                            statearr_21911_21975[2] = null;
                                                                                            statearr_21911_21975[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_21841 === 10) {
                                                                                              var inst_21724 = state_21840[13];
                                                                                              var inst_21722 = state_21840[14];
                                                                                              var inst_21730 = cljs.core._nth.call(null, inst_21722, inst_21724);
                                                                                              var inst_21731 = cljs.core.nth.call(null, inst_21730, 0, null);
                                                                                              var inst_21732 = cljs.core.nth.call(null, inst_21730, 1, null);
                                                                                              var state_21840__$1 = function() {
                                                                                                var statearr_21912 = state_21840;
                                                                                                statearr_21912[26] = inst_21731;
                                                                                                return statearr_21912;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_21732)) {
                                                                                                var statearr_21913_21976 = state_21840__$1;
                                                                                                statearr_21913_21976[1] = 13;
                                                                                              } else {
                                                                                                var statearr_21914_21977 = state_21840__$1;
                                                                                                statearr_21914_21977[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_21841 === 18) {
                                                                                                var inst_21765 = state_21840[2];
                                                                                                var state_21840__$1 = state_21840;
                                                                                                var statearr_21915_21978 = state_21840__$1;
                                                                                                statearr_21915_21978[2] = inst_21765;
                                                                                                statearr_21915_21978[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_21841 === 42) {
                                                                                                  var state_21840__$1 = state_21840;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_21840__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_21841 === 37) {
                                                                                                    var inst_21799 = state_21840[25];
                                                                                                    var inst_21808 = state_21840[23];
                                                                                                    var inst_21712 = state_21840[11];
                                                                                                    var inst_21808__$1 = cljs.core.first.call(null, inst_21799);
                                                                                                    var inst_21809 = cljs.core.async.put_BANG_.call(null, inst_21808__$1, inst_21712, done);
                                                                                                    var state_21840__$1 = function() {
                                                                                                      var statearr_21916 = state_21840;
                                                                                                      statearr_21916[23] = inst_21808__$1;
                                                                                                      return statearr_21916;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_21809)) {
                                                                                                      var statearr_21917_21979 = state_21840__$1;
                                                                                                      statearr_21917_21979[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_21918_21980 = state_21840__$1;
                                                                                                      statearr_21918_21980[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_21841 === 8) {
                                                                                                      var inst_21724 = state_21840[13];
                                                                                                      var inst_21723 = state_21840[15];
                                                                                                      var inst_21726 = inst_21724 < inst_21723;
                                                                                                      var inst_21727 = inst_21726;
                                                                                                      var state_21840__$1 = state_21840;
                                                                                                      if (cljs.core.truth_(inst_21727)) {
                                                                                                        var statearr_21919_21981 = state_21840__$1;
                                                                                                        statearr_21919_21981[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_21920_21982 = state_21840__$1;
                                                                                                        statearr_21920_21982[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6831__auto___21928, cs, m, dchan, dctr, done);
        return function(switch__6816__auto__, c__6831__auto___21928, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6817__auto__ = null;
            var state_machine__6817__auto____0 = function() {
              var statearr_21924 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_21924[0] = state_machine__6817__auto__;
              statearr_21924[1] = 1;
              return statearr_21924;
            };
            var state_machine__6817__auto____1 = function(state_21840) {
              while (true) {
                var ret_value__6818__auto__ = function() {
                  try {
                    while (true) {
                      var result__6819__auto__ = switch__6816__auto__.call(null, state_21840);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6819__auto__;
                      }
                      break;
                    }
                  } catch (e21925) {
                    if (e21925 instanceof Object) {
                      var ex__6820__auto__ = e21925;
                      var statearr_21926_21983 = state_21840;
                      statearr_21926_21983[5] = ex__6820__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_21840);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e21925;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__21984 = state_21840;
                  state_21840 = G__21984;
                  continue;
                } else {
                  return ret_value__6818__auto__;
                }
                break;
              }
            };
            state_machine__6817__auto__ = function(state_21840) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6817__auto____0.call(this);
                case 1:
                  return state_machine__6817__auto____1.call(this, state_21840);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
            return state_machine__6817__auto__;
          }();
        }(switch__6816__auto__, c__6831__auto___21928, cs, m, dchan, dctr, done);
      }();
      var state__6833__auto__ = function() {
        var statearr_21927 = f__6832__auto__.call(null);
        statearr_21927[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___21928;
        return statearr_21927;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
    };
  }(c__6831__auto___21928, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj21986 = {};
  return obj21986;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3614__auto__ = m;
    if (and__3614__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4262__auto__ = m == null ? null : m;
    return function() {
      var or__3626__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t22106 !== "undefined") {
    } else {
      cljs.core.async.t22106 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta22107) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta22107 = meta22107;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t22106.cljs$lang$type = true;
      cljs.core.async.t22106.cljs$lang$ctorStr = "cljs.core.async/t22106";
      cljs.core.async.t22106.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
          return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t22106");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t22106.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t22106.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_22108) {
          var self__ = this;
          var _22108__$1 = this;
          return self__.meta22107;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t22106.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_22108, meta22107__$1) {
          var self__ = this;
          var _22108__$1 = this;
          return new cljs.core.async.t22106(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta22107__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t22106 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t22106(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta22107) {
          return new cljs.core.async.t22106(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta22107);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t22106(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__6831__auto___22225 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___22225, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6832__auto__ = function() {
        var switch__6816__auto__ = function(c__6831__auto___22225, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_22178) {
            var state_val_22179 = state_22178[1];
            if (state_val_22179 === 7) {
              var inst_22122 = state_22178[7];
              var inst_22127 = cljs.core.apply.call(null, cljs.core.hash_map, inst_22122);
              var state_22178__$1 = state_22178;
              var statearr_22180_22226 = state_22178__$1;
              statearr_22180_22226[2] = inst_22127;
              statearr_22180_22226[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_22179 === 20) {
                var inst_22137 = state_22178[8];
                var state_22178__$1 = state_22178;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22178__$1, 23, out, inst_22137);
              } else {
                if (state_val_22179 === 1) {
                  var inst_22112 = state_22178[9];
                  var inst_22112__$1 = calc_state.call(null);
                  var inst_22113 = cljs.core.seq_QMARK_.call(null, inst_22112__$1);
                  var state_22178__$1 = function() {
                    var statearr_22181 = state_22178;
                    statearr_22181[9] = inst_22112__$1;
                    return statearr_22181;
                  }();
                  if (inst_22113) {
                    var statearr_22182_22227 = state_22178__$1;
                    statearr_22182_22227[1] = 2;
                  } else {
                    var statearr_22183_22228 = state_22178__$1;
                    statearr_22183_22228[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22179 === 24) {
                    var inst_22130 = state_22178[10];
                    var inst_22122 = inst_22130;
                    var state_22178__$1 = function() {
                      var statearr_22184 = state_22178;
                      statearr_22184[7] = inst_22122;
                      return statearr_22184;
                    }();
                    var statearr_22185_22229 = state_22178__$1;
                    statearr_22185_22229[2] = null;
                    statearr_22185_22229[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22179 === 4) {
                      var inst_22112 = state_22178[9];
                      var inst_22118 = state_22178[2];
                      var inst_22119 = cljs.core.get.call(null, inst_22118, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_22120 = cljs.core.get.call(null, inst_22118, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_22121 = cljs.core.get.call(null, inst_22118, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_22122 = inst_22112;
                      var state_22178__$1 = function() {
                        var statearr_22186 = state_22178;
                        statearr_22186[11] = inst_22119;
                        statearr_22186[7] = inst_22122;
                        statearr_22186[12] = inst_22121;
                        statearr_22186[13] = inst_22120;
                        return statearr_22186;
                      }();
                      var statearr_22187_22230 = state_22178__$1;
                      statearr_22187_22230[2] = null;
                      statearr_22187_22230[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22179 === 15) {
                        var state_22178__$1 = state_22178;
                        var statearr_22188_22231 = state_22178__$1;
                        statearr_22188_22231[2] = null;
                        statearr_22188_22231[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22179 === 21) {
                          var inst_22130 = state_22178[10];
                          var inst_22122 = inst_22130;
                          var state_22178__$1 = function() {
                            var statearr_22189 = state_22178;
                            statearr_22189[7] = inst_22122;
                            return statearr_22189;
                          }();
                          var statearr_22190_22232 = state_22178__$1;
                          statearr_22190_22232[2] = null;
                          statearr_22190_22232[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22179 === 13) {
                            var inst_22174 = state_22178[2];
                            var state_22178__$1 = state_22178;
                            var statearr_22191_22233 = state_22178__$1;
                            statearr_22191_22233[2] = inst_22174;
                            statearr_22191_22233[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22179 === 22) {
                              var inst_22172 = state_22178[2];
                              var state_22178__$1 = state_22178;
                              var statearr_22192_22234 = state_22178__$1;
                              statearr_22192_22234[2] = inst_22172;
                              statearr_22192_22234[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22179 === 6) {
                                var inst_22176 = state_22178[2];
                                var state_22178__$1 = state_22178;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22178__$1, inst_22176);
                              } else {
                                if (state_val_22179 === 25) {
                                  var state_22178__$1 = state_22178;
                                  var statearr_22193_22235 = state_22178__$1;
                                  statearr_22193_22235[2] = null;
                                  statearr_22193_22235[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22179 === 17) {
                                    var inst_22152 = state_22178[14];
                                    var state_22178__$1 = state_22178;
                                    var statearr_22194_22236 = state_22178__$1;
                                    statearr_22194_22236[2] = inst_22152;
                                    statearr_22194_22236[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22179 === 3) {
                                      var inst_22112 = state_22178[9];
                                      var state_22178__$1 = state_22178;
                                      var statearr_22195_22237 = state_22178__$1;
                                      statearr_22195_22237[2] = inst_22112;
                                      statearr_22195_22237[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22179 === 12) {
                                        var inst_22152 = state_22178[14];
                                        var inst_22138 = state_22178[15];
                                        var inst_22133 = state_22178[16];
                                        var inst_22152__$1 = inst_22133.call(null, inst_22138);
                                        var state_22178__$1 = function() {
                                          var statearr_22196 = state_22178;
                                          statearr_22196[14] = inst_22152__$1;
                                          return statearr_22196;
                                        }();
                                        if (cljs.core.truth_(inst_22152__$1)) {
                                          var statearr_22197_22238 = state_22178__$1;
                                          statearr_22197_22238[1] = 17;
                                        } else {
                                          var statearr_22198_22239 = state_22178__$1;
                                          statearr_22198_22239[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_22179 === 2) {
                                          var inst_22112 = state_22178[9];
                                          var inst_22115 = cljs.core.apply.call(null, cljs.core.hash_map, inst_22112);
                                          var state_22178__$1 = state_22178;
                                          var statearr_22199_22240 = state_22178__$1;
                                          statearr_22199_22240[2] = inst_22115;
                                          statearr_22199_22240[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22179 === 23) {
                                            var inst_22163 = state_22178[2];
                                            var state_22178__$1 = state_22178;
                                            if (cljs.core.truth_(inst_22163)) {
                                              var statearr_22200_22241 = state_22178__$1;
                                              statearr_22200_22241[1] = 24;
                                            } else {
                                              var statearr_22201_22242 = state_22178__$1;
                                              statearr_22201_22242[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22179 === 19) {
                                              var inst_22160 = state_22178[2];
                                              var state_22178__$1 = state_22178;
                                              if (cljs.core.truth_(inst_22160)) {
                                                var statearr_22202_22243 = state_22178__$1;
                                                statearr_22202_22243[1] = 20;
                                              } else {
                                                var statearr_22203_22244 = state_22178__$1;
                                                statearr_22203_22244[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22179 === 11) {
                                                var inst_22137 = state_22178[8];
                                                var inst_22143 = inst_22137 == null;
                                                var state_22178__$1 = state_22178;
                                                if (cljs.core.truth_(inst_22143)) {
                                                  var statearr_22204_22245 = state_22178__$1;
                                                  statearr_22204_22245[1] = 14;
                                                } else {
                                                  var statearr_22205_22246 = state_22178__$1;
                                                  statearr_22205_22246[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_22179 === 9) {
                                                  var inst_22130 = state_22178[10];
                                                  var inst_22130__$1 = state_22178[2];
                                                  var inst_22131 = cljs.core.get.call(null, inst_22130__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_22132 = cljs.core.get.call(null, inst_22130__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_22133 = cljs.core.get.call(null, inst_22130__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_22178__$1 = function() {
                                                    var statearr_22206 = state_22178;
                                                    statearr_22206[17] = inst_22132;
                                                    statearr_22206[10] = inst_22130__$1;
                                                    statearr_22206[16] = inst_22133;
                                                    return statearr_22206;
                                                  }();
                                                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_22178__$1, 10, inst_22131);
                                                } else {
                                                  if (state_val_22179 === 5) {
                                                    var inst_22122 = state_22178[7];
                                                    var inst_22125 = cljs.core.seq_QMARK_.call(null, inst_22122);
                                                    var state_22178__$1 = state_22178;
                                                    if (inst_22125) {
                                                      var statearr_22207_22247 = state_22178__$1;
                                                      statearr_22207_22247[1] = 7;
                                                    } else {
                                                      var statearr_22208_22248 = state_22178__$1;
                                                      statearr_22208_22248[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22179 === 14) {
                                                      var inst_22138 = state_22178[15];
                                                      var inst_22145 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_22138);
                                                      var state_22178__$1 = state_22178;
                                                      var statearr_22209_22249 = state_22178__$1;
                                                      statearr_22209_22249[2] = inst_22145;
                                                      statearr_22209_22249[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22179 === 26) {
                                                        var inst_22168 = state_22178[2];
                                                        var state_22178__$1 = state_22178;
                                                        var statearr_22210_22250 = state_22178__$1;
                                                        statearr_22210_22250[2] = inst_22168;
                                                        statearr_22210_22250[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_22179 === 16) {
                                                          var inst_22148 = state_22178[2];
                                                          var inst_22149 = calc_state.call(null);
                                                          var inst_22122 = inst_22149;
                                                          var state_22178__$1 = function() {
                                                            var statearr_22211 = state_22178;
                                                            statearr_22211[18] = inst_22148;
                                                            statearr_22211[7] = inst_22122;
                                                            return statearr_22211;
                                                          }();
                                                          var statearr_22212_22251 = state_22178__$1;
                                                          statearr_22212_22251[2] = null;
                                                          statearr_22212_22251[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22179 === 10) {
                                                            var inst_22138 = state_22178[15];
                                                            var inst_22137 = state_22178[8];
                                                            var inst_22136 = state_22178[2];
                                                            var inst_22137__$1 = cljs.core.nth.call(null, inst_22136, 0, null);
                                                            var inst_22138__$1 = cljs.core.nth.call(null, inst_22136, 1, null);
                                                            var inst_22139 = inst_22137__$1 == null;
                                                            var inst_22140 = cljs.core._EQ_.call(null, inst_22138__$1, change);
                                                            var inst_22141 = inst_22139 || inst_22140;
                                                            var state_22178__$1 = function() {
                                                              var statearr_22213 = state_22178;
                                                              statearr_22213[15] = inst_22138__$1;
                                                              statearr_22213[8] = inst_22137__$1;
                                                              return statearr_22213;
                                                            }();
                                                            if (cljs.core.truth_(inst_22141)) {
                                                              var statearr_22214_22252 = state_22178__$1;
                                                              statearr_22214_22252[1] = 11;
                                                            } else {
                                                              var statearr_22215_22253 = state_22178__$1;
                                                              statearr_22215_22253[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_22179 === 18) {
                                                              var inst_22138 = state_22178[15];
                                                              var inst_22132 = state_22178[17];
                                                              var inst_22133 = state_22178[16];
                                                              var inst_22155 = cljs.core.empty_QMARK_.call(null, inst_22133);
                                                              var inst_22156 = inst_22132.call(null, inst_22138);
                                                              var inst_22157 = cljs.core.not.call(null, inst_22156);
                                                              var inst_22158 = inst_22155 && inst_22157;
                                                              var state_22178__$1 = state_22178;
                                                              var statearr_22216_22254 = state_22178__$1;
                                                              statearr_22216_22254[2] = inst_22158;
                                                              statearr_22216_22254[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_22179 === 8) {
                                                                var inst_22122 = state_22178[7];
                                                                var state_22178__$1 = state_22178;
                                                                var statearr_22217_22255 = state_22178__$1;
                                                                statearr_22217_22255[2] = inst_22122;
                                                                statearr_22217_22255[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6831__auto___22225, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6816__auto__, c__6831__auto___22225, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6817__auto__ = null;
            var state_machine__6817__auto____0 = function() {
              var statearr_22221 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_22221[0] = state_machine__6817__auto__;
              statearr_22221[1] = 1;
              return statearr_22221;
            };
            var state_machine__6817__auto____1 = function(state_22178) {
              while (true) {
                var ret_value__6818__auto__ = function() {
                  try {
                    while (true) {
                      var result__6819__auto__ = switch__6816__auto__.call(null, state_22178);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6819__auto__;
                      }
                      break;
                    }
                  } catch (e22222) {
                    if (e22222 instanceof Object) {
                      var ex__6820__auto__ = e22222;
                      var statearr_22223_22256 = state_22178;
                      statearr_22223_22256[5] = ex__6820__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22178);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e22222;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__22257 = state_22178;
                  state_22178 = G__22257;
                  continue;
                } else {
                  return ret_value__6818__auto__;
                }
                break;
              }
            };
            state_machine__6817__auto__ = function(state_22178) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6817__auto____0.call(this);
                case 1:
                  return state_machine__6817__auto____1.call(this, state_22178);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
            return state_machine__6817__auto__;
          }();
        }(switch__6816__auto__, c__6831__auto___22225, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6833__auto__ = function() {
        var statearr_22224 = f__6832__auto__.call(null);
        statearr_22224[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___22225;
        return statearr_22224;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
    };
  }(c__6831__auto___22225, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj22259 = {};
  return obj22259;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3614__auto__ = p;
    if (and__3614__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4262__auto__ = p == null ? null : p;
    return function() {
      var or__3626__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3614__auto__ = p;
    if (and__3614__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4262__auto__ = p == null ? null : p;
    return function() {
      var or__3626__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3614__auto__ = p;
      if (and__3614__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4262__auto__ = p == null ? null : p;
      return function() {
        var or__3626__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3614__auto__ = p;
      if (and__3614__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4262__auto__ = p == null ? null : p;
      return function() {
        var or__3626__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3626__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3626__auto__, mults) {
            return function(p1__22260_SHARP_) {
              if (cljs.core.truth_(p1__22260_SHARP_.call(null, topic))) {
                return p1__22260_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__22260_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3626__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t22383 !== "undefined") {
      } else {
        cljs.core.async.t22383 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta22384) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta22384 = meta22384;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t22383.cljs$lang$type = true;
        cljs.core.async.t22383.cljs$lang$ctorStr = "cljs.core.async/t22383";
        cljs.core.async.t22383.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
            return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t22383");
          };
        }(mults, ensure_mult);
        cljs.core.async.t22383.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t22383.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t22383.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t22383.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t22383.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t22383.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t22383.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t22383.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_22385) {
            var self__ = this;
            var _22385__$1 = this;
            return self__.meta22384;
          };
        }(mults, ensure_mult);
        cljs.core.async.t22383.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_22385, meta22384__$1) {
            var self__ = this;
            var _22385__$1 = this;
            return new cljs.core.async.t22383(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta22384__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t22383 = function(mults, ensure_mult) {
          return function __GT_t22383(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta22384) {
            return new cljs.core.async.t22383(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta22384);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t22383(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6831__auto___22505 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___22505, mults, ensure_mult, p) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___22505, mults, ensure_mult, p) {
            return function(state_22457) {
              var state_val_22458 = state_22457[1];
              if (state_val_22458 === 7) {
                var inst_22453 = state_22457[2];
                var state_22457__$1 = state_22457;
                var statearr_22459_22506 = state_22457__$1;
                statearr_22459_22506[2] = inst_22453;
                statearr_22459_22506[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22458 === 20) {
                  var state_22457__$1 = state_22457;
                  var statearr_22460_22507 = state_22457__$1;
                  statearr_22460_22507[2] = null;
                  statearr_22460_22507[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22458 === 1) {
                    var state_22457__$1 = state_22457;
                    var statearr_22461_22508 = state_22457__$1;
                    statearr_22461_22508[2] = null;
                    statearr_22461_22508[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22458 === 24) {
                      var inst_22436 = state_22457[7];
                      var inst_22445 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_22436);
                      var state_22457__$1 = state_22457;
                      var statearr_22462_22509 = state_22457__$1;
                      statearr_22462_22509[2] = inst_22445;
                      statearr_22462_22509[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22458 === 4) {
                        var inst_22388 = state_22457[8];
                        var inst_22388__$1 = state_22457[2];
                        var inst_22389 = inst_22388__$1 == null;
                        var state_22457__$1 = function() {
                          var statearr_22463 = state_22457;
                          statearr_22463[8] = inst_22388__$1;
                          return statearr_22463;
                        }();
                        if (cljs.core.truth_(inst_22389)) {
                          var statearr_22464_22510 = state_22457__$1;
                          statearr_22464_22510[1] = 5;
                        } else {
                          var statearr_22465_22511 = state_22457__$1;
                          statearr_22465_22511[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22458 === 15) {
                          var inst_22430 = state_22457[2];
                          var state_22457__$1 = state_22457;
                          var statearr_22466_22512 = state_22457__$1;
                          statearr_22466_22512[2] = inst_22430;
                          statearr_22466_22512[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22458 === 21) {
                            var inst_22450 = state_22457[2];
                            var state_22457__$1 = function() {
                              var statearr_22467 = state_22457;
                              statearr_22467[9] = inst_22450;
                              return statearr_22467;
                            }();
                            var statearr_22468_22513 = state_22457__$1;
                            statearr_22468_22513[2] = null;
                            statearr_22468_22513[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22458 === 13) {
                              var inst_22412 = state_22457[10];
                              var inst_22414 = cljs.core.chunked_seq_QMARK_.call(null, inst_22412);
                              var state_22457__$1 = state_22457;
                              if (inst_22414) {
                                var statearr_22469_22514 = state_22457__$1;
                                statearr_22469_22514[1] = 16;
                              } else {
                                var statearr_22470_22515 = state_22457__$1;
                                statearr_22470_22515[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22458 === 22) {
                                var inst_22442 = state_22457[2];
                                var state_22457__$1 = state_22457;
                                if (cljs.core.truth_(inst_22442)) {
                                  var statearr_22471_22516 = state_22457__$1;
                                  statearr_22471_22516[1] = 23;
                                } else {
                                  var statearr_22472_22517 = state_22457__$1;
                                  statearr_22472_22517[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22458 === 6) {
                                  var inst_22436 = state_22457[7];
                                  var inst_22388 = state_22457[8];
                                  var inst_22438 = state_22457[11];
                                  var inst_22436__$1 = topic_fn.call(null, inst_22388);
                                  var inst_22437 = cljs.core.deref.call(null, mults);
                                  var inst_22438__$1 = cljs.core.get.call(null, inst_22437, inst_22436__$1);
                                  var state_22457__$1 = function() {
                                    var statearr_22473 = state_22457;
                                    statearr_22473[7] = inst_22436__$1;
                                    statearr_22473[11] = inst_22438__$1;
                                    return statearr_22473;
                                  }();
                                  if (cljs.core.truth_(inst_22438__$1)) {
                                    var statearr_22474_22518 = state_22457__$1;
                                    statearr_22474_22518[1] = 19;
                                  } else {
                                    var statearr_22475_22519 = state_22457__$1;
                                    statearr_22475_22519[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22458 === 25) {
                                    var inst_22447 = state_22457[2];
                                    var state_22457__$1 = state_22457;
                                    var statearr_22476_22520 = state_22457__$1;
                                    statearr_22476_22520[2] = inst_22447;
                                    statearr_22476_22520[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22458 === 17) {
                                      var inst_22412 = state_22457[10];
                                      var inst_22421 = cljs.core.first.call(null, inst_22412);
                                      var inst_22422 = cljs.core.async.muxch_STAR_.call(null, inst_22421);
                                      var inst_22423 = cljs.core.async.close_BANG_.call(null, inst_22422);
                                      var inst_22424 = cljs.core.next.call(null, inst_22412);
                                      var inst_22398 = inst_22424;
                                      var inst_22399 = null;
                                      var inst_22400 = 0;
                                      var inst_22401 = 0;
                                      var state_22457__$1 = function() {
                                        var statearr_22477 = state_22457;
                                        statearr_22477[12] = inst_22423;
                                        statearr_22477[13] = inst_22401;
                                        statearr_22477[14] = inst_22400;
                                        statearr_22477[15] = inst_22398;
                                        statearr_22477[16] = inst_22399;
                                        return statearr_22477;
                                      }();
                                      var statearr_22478_22521 = state_22457__$1;
                                      statearr_22478_22521[2] = null;
                                      statearr_22478_22521[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_22458 === 3) {
                                        var inst_22455 = state_22457[2];
                                        var state_22457__$1 = state_22457;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22457__$1, inst_22455);
                                      } else {
                                        if (state_val_22458 === 12) {
                                          var inst_22432 = state_22457[2];
                                          var state_22457__$1 = state_22457;
                                          var statearr_22479_22522 = state_22457__$1;
                                          statearr_22479_22522[2] = inst_22432;
                                          statearr_22479_22522[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22458 === 2) {
                                            var state_22457__$1 = state_22457;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22457__$1, 4, ch);
                                          } else {
                                            if (state_val_22458 === 23) {
                                              var state_22457__$1 = state_22457;
                                              var statearr_22480_22523 = state_22457__$1;
                                              statearr_22480_22523[2] = null;
                                              statearr_22480_22523[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_22458 === 19) {
                                                var inst_22388 = state_22457[8];
                                                var inst_22438 = state_22457[11];
                                                var inst_22440 = cljs.core.async.muxch_STAR_.call(null, inst_22438);
                                                var state_22457__$1 = state_22457;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22457__$1, 22, inst_22440, inst_22388);
                                              } else {
                                                if (state_val_22458 === 11) {
                                                  var inst_22412 = state_22457[10];
                                                  var inst_22398 = state_22457[15];
                                                  var inst_22412__$1 = cljs.core.seq.call(null, inst_22398);
                                                  var state_22457__$1 = function() {
                                                    var statearr_22481 = state_22457;
                                                    statearr_22481[10] = inst_22412__$1;
                                                    return statearr_22481;
                                                  }();
                                                  if (inst_22412__$1) {
                                                    var statearr_22482_22524 = state_22457__$1;
                                                    statearr_22482_22524[1] = 13;
                                                  } else {
                                                    var statearr_22483_22525 = state_22457__$1;
                                                    statearr_22483_22525[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_22458 === 9) {
                                                    var inst_22434 = state_22457[2];
                                                    var state_22457__$1 = state_22457;
                                                    var statearr_22484_22526 = state_22457__$1;
                                                    statearr_22484_22526[2] = inst_22434;
                                                    statearr_22484_22526[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_22458 === 5) {
                                                      var inst_22395 = cljs.core.deref.call(null, mults);
                                                      var inst_22396 = cljs.core.vals.call(null, inst_22395);
                                                      var inst_22397 = cljs.core.seq.call(null, inst_22396);
                                                      var inst_22398 = inst_22397;
                                                      var inst_22399 = null;
                                                      var inst_22400 = 0;
                                                      var inst_22401 = 0;
                                                      var state_22457__$1 = function() {
                                                        var statearr_22485 = state_22457;
                                                        statearr_22485[13] = inst_22401;
                                                        statearr_22485[14] = inst_22400;
                                                        statearr_22485[15] = inst_22398;
                                                        statearr_22485[16] = inst_22399;
                                                        return statearr_22485;
                                                      }();
                                                      var statearr_22486_22527 = state_22457__$1;
                                                      statearr_22486_22527[2] = null;
                                                      statearr_22486_22527[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_22458 === 14) {
                                                        var state_22457__$1 = state_22457;
                                                        var statearr_22490_22528 = state_22457__$1;
                                                        statearr_22490_22528[2] = null;
                                                        statearr_22490_22528[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_22458 === 16) {
                                                          var inst_22412 = state_22457[10];
                                                          var inst_22416 = cljs.core.chunk_first.call(null, inst_22412);
                                                          var inst_22417 = cljs.core.chunk_rest.call(null, inst_22412);
                                                          var inst_22418 = cljs.core.count.call(null, inst_22416);
                                                          var inst_22398 = inst_22417;
                                                          var inst_22399 = inst_22416;
                                                          var inst_22400 = inst_22418;
                                                          var inst_22401 = 0;
                                                          var state_22457__$1 = function() {
                                                            var statearr_22491 = state_22457;
                                                            statearr_22491[13] = inst_22401;
                                                            statearr_22491[14] = inst_22400;
                                                            statearr_22491[15] = inst_22398;
                                                            statearr_22491[16] = inst_22399;
                                                            return statearr_22491;
                                                          }();
                                                          var statearr_22492_22529 = state_22457__$1;
                                                          statearr_22492_22529[2] = null;
                                                          statearr_22492_22529[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_22458 === 10) {
                                                            var inst_22401 = state_22457[13];
                                                            var inst_22400 = state_22457[14];
                                                            var inst_22398 = state_22457[15];
                                                            var inst_22399 = state_22457[16];
                                                            var inst_22406 = cljs.core._nth.call(null, inst_22399, inst_22401);
                                                            var inst_22407 = cljs.core.async.muxch_STAR_.call(null, inst_22406);
                                                            var inst_22408 = cljs.core.async.close_BANG_.call(null, inst_22407);
                                                            var inst_22409 = inst_22401 + 1;
                                                            var tmp22487 = inst_22400;
                                                            var tmp22488 = inst_22398;
                                                            var tmp22489 = inst_22399;
                                                            var inst_22398__$1 = tmp22488;
                                                            var inst_22399__$1 = tmp22489;
                                                            var inst_22400__$1 = tmp22487;
                                                            var inst_22401__$1 = inst_22409;
                                                            var state_22457__$1 = function() {
                                                              var statearr_22493 = state_22457;
                                                              statearr_22493[17] = inst_22408;
                                                              statearr_22493[13] = inst_22401__$1;
                                                              statearr_22493[14] = inst_22400__$1;
                                                              statearr_22493[15] = inst_22398__$1;
                                                              statearr_22493[16] = inst_22399__$1;
                                                              return statearr_22493;
                                                            }();
                                                            var statearr_22494_22530 = state_22457__$1;
                                                            statearr_22494_22530[2] = null;
                                                            statearr_22494_22530[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_22458 === 18) {
                                                              var inst_22427 = state_22457[2];
                                                              var state_22457__$1 = state_22457;
                                                              var statearr_22495_22531 = state_22457__$1;
                                                              statearr_22495_22531[2] = inst_22427;
                                                              statearr_22495_22531[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_22458 === 8) {
                                                                var inst_22401 = state_22457[13];
                                                                var inst_22400 = state_22457[14];
                                                                var inst_22403 = inst_22401 < inst_22400;
                                                                var inst_22404 = inst_22403;
                                                                var state_22457__$1 = state_22457;
                                                                if (cljs.core.truth_(inst_22404)) {
                                                                  var statearr_22496_22532 = state_22457__$1;
                                                                  statearr_22496_22532[1] = 10;
                                                                } else {
                                                                  var statearr_22497_22533 = state_22457__$1;
                                                                  statearr_22497_22533[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___22505, mults, ensure_mult, p);
          return function(switch__6816__auto__, c__6831__auto___22505, mults, ensure_mult, p) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_22501 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22501[0] = state_machine__6817__auto__;
                statearr_22501[1] = 1;
                return statearr_22501;
              };
              var state_machine__6817__auto____1 = function(state_22457) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_22457);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e22502) {
                      if (e22502 instanceof Object) {
                        var ex__6820__auto__ = e22502;
                        var statearr_22503_22534 = state_22457;
                        statearr_22503_22534[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22457);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22502;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22535 = state_22457;
                    state_22457 = G__22535;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_22457) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_22457);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___22505, mults, ensure_mult, p);
        }();
        var state__6833__auto__ = function() {
          var statearr_22504 = f__6832__auto__.call(null);
          statearr_22504[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___22505;
          return statearr_22504;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___22505, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6831__auto___22672 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___22672, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___22672, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_22642) {
              var state_val_22643 = state_22642[1];
              if (state_val_22643 === 7) {
                var state_22642__$1 = state_22642;
                var statearr_22644_22673 = state_22642__$1;
                statearr_22644_22673[2] = null;
                statearr_22644_22673[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22643 === 1) {
                  var state_22642__$1 = state_22642;
                  var statearr_22645_22674 = state_22642__$1;
                  statearr_22645_22674[2] = null;
                  statearr_22645_22674[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22643 === 4) {
                    var inst_22606 = state_22642[7];
                    var inst_22608 = inst_22606 < cnt;
                    var state_22642__$1 = state_22642;
                    if (cljs.core.truth_(inst_22608)) {
                      var statearr_22646_22675 = state_22642__$1;
                      statearr_22646_22675[1] = 6;
                    } else {
                      var statearr_22647_22676 = state_22642__$1;
                      statearr_22647_22676[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_22643 === 15) {
                      var inst_22638 = state_22642[2];
                      var state_22642__$1 = state_22642;
                      var statearr_22648_22677 = state_22642__$1;
                      statearr_22648_22677[2] = inst_22638;
                      statearr_22648_22677[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22643 === 13) {
                        var inst_22631 = cljs.core.async.close_BANG_.call(null, out);
                        var state_22642__$1 = state_22642;
                        var statearr_22649_22678 = state_22642__$1;
                        statearr_22649_22678[2] = inst_22631;
                        statearr_22649_22678[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_22643 === 6) {
                          var state_22642__$1 = state_22642;
                          var statearr_22650_22679 = state_22642__$1;
                          statearr_22650_22679[2] = null;
                          statearr_22650_22679[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22643 === 3) {
                            var inst_22640 = state_22642[2];
                            var state_22642__$1 = state_22642;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22642__$1, inst_22640);
                          } else {
                            if (state_val_22643 === 12) {
                              var inst_22628 = state_22642[8];
                              var inst_22628__$1 = state_22642[2];
                              var inst_22629 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_22628__$1);
                              var state_22642__$1 = function() {
                                var statearr_22651 = state_22642;
                                statearr_22651[8] = inst_22628__$1;
                                return statearr_22651;
                              }();
                              if (cljs.core.truth_(inst_22629)) {
                                var statearr_22652_22680 = state_22642__$1;
                                statearr_22652_22680[1] = 13;
                              } else {
                                var statearr_22653_22681 = state_22642__$1;
                                statearr_22653_22681[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22643 === 2) {
                                var inst_22605 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_22606 = 0;
                                var state_22642__$1 = function() {
                                  var statearr_22654 = state_22642;
                                  statearr_22654[9] = inst_22605;
                                  statearr_22654[7] = inst_22606;
                                  return statearr_22654;
                                }();
                                var statearr_22655_22682 = state_22642__$1;
                                statearr_22655_22682[2] = null;
                                statearr_22655_22682[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22643 === 11) {
                                  var inst_22606 = state_22642[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_22642, 10, Object, null, 9);
                                  var inst_22615 = chs__$1.call(null, inst_22606);
                                  var inst_22616 = done.call(null, inst_22606);
                                  var inst_22617 = cljs.core.async.take_BANG_.call(null, inst_22615, inst_22616);
                                  var state_22642__$1 = state_22642;
                                  var statearr_22656_22683 = state_22642__$1;
                                  statearr_22656_22683[2] = inst_22617;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22642__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22643 === 9) {
                                    var inst_22606 = state_22642[7];
                                    var inst_22619 = state_22642[2];
                                    var inst_22620 = inst_22606 + 1;
                                    var inst_22606__$1 = inst_22620;
                                    var state_22642__$1 = function() {
                                      var statearr_22657 = state_22642;
                                      statearr_22657[10] = inst_22619;
                                      statearr_22657[7] = inst_22606__$1;
                                      return statearr_22657;
                                    }();
                                    var statearr_22658_22684 = state_22642__$1;
                                    statearr_22658_22684[2] = null;
                                    statearr_22658_22684[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_22643 === 5) {
                                      var inst_22626 = state_22642[2];
                                      var state_22642__$1 = function() {
                                        var statearr_22659 = state_22642;
                                        statearr_22659[11] = inst_22626;
                                        return statearr_22659;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22642__$1, 12, dchan);
                                    } else {
                                      if (state_val_22643 === 14) {
                                        var inst_22628 = state_22642[8];
                                        var inst_22633 = cljs.core.apply.call(null, f, inst_22628);
                                        var state_22642__$1 = state_22642;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22642__$1, 16, out, inst_22633);
                                      } else {
                                        if (state_val_22643 === 16) {
                                          var inst_22635 = state_22642[2];
                                          var state_22642__$1 = function() {
                                            var statearr_22660 = state_22642;
                                            statearr_22660[12] = inst_22635;
                                            return statearr_22660;
                                          }();
                                          var statearr_22661_22685 = state_22642__$1;
                                          statearr_22661_22685[2] = null;
                                          statearr_22661_22685[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_22643 === 10) {
                                            var inst_22610 = state_22642[2];
                                            var inst_22611 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_22642__$1 = function() {
                                              var statearr_22662 = state_22642;
                                              statearr_22662[13] = inst_22610;
                                              return statearr_22662;
                                            }();
                                            var statearr_22663_22686 = state_22642__$1;
                                            statearr_22663_22686[2] = inst_22611;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22642__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_22643 === 8) {
                                              var inst_22624 = state_22642[2];
                                              var state_22642__$1 = state_22642;
                                              var statearr_22664_22687 = state_22642__$1;
                                              statearr_22664_22687[2] = inst_22624;
                                              statearr_22664_22687[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___22672, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6816__auto__, c__6831__auto___22672, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_22668 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22668[0] = state_machine__6817__auto__;
                statearr_22668[1] = 1;
                return statearr_22668;
              };
              var state_machine__6817__auto____1 = function(state_22642) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_22642);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e22669) {
                      if (e22669 instanceof Object) {
                        var ex__6820__auto__ = e22669;
                        var statearr_22670_22688 = state_22642;
                        statearr_22670_22688[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22642);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22669;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22689 = state_22642;
                    state_22642 = G__22689;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_22642) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_22642);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___22672, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6833__auto__ = function() {
          var statearr_22671 = f__6832__auto__.call(null);
          statearr_22671[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___22672;
          return statearr_22671;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___22672, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6831__auto___22797 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___22797, out) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___22797, out) {
            return function(state_22773) {
              var state_val_22774 = state_22773[1];
              if (state_val_22774 === 7) {
                var inst_22752 = state_22773[7];
                var inst_22753 = state_22773[8];
                var inst_22752__$1 = state_22773[2];
                var inst_22753__$1 = cljs.core.nth.call(null, inst_22752__$1, 0, null);
                var inst_22754 = cljs.core.nth.call(null, inst_22752__$1, 1, null);
                var inst_22755 = inst_22753__$1 == null;
                var state_22773__$1 = function() {
                  var statearr_22775 = state_22773;
                  statearr_22775[7] = inst_22752__$1;
                  statearr_22775[8] = inst_22753__$1;
                  statearr_22775[9] = inst_22754;
                  return statearr_22775;
                }();
                if (cljs.core.truth_(inst_22755)) {
                  var statearr_22776_22798 = state_22773__$1;
                  statearr_22776_22798[1] = 8;
                } else {
                  var statearr_22777_22799 = state_22773__$1;
                  statearr_22777_22799[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22774 === 1) {
                  var inst_22744 = cljs.core.vec.call(null, chs);
                  var inst_22745 = inst_22744;
                  var state_22773__$1 = function() {
                    var statearr_22778 = state_22773;
                    statearr_22778[10] = inst_22745;
                    return statearr_22778;
                  }();
                  var statearr_22779_22800 = state_22773__$1;
                  statearr_22779_22800[2] = null;
                  statearr_22779_22800[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22774 === 4) {
                    var inst_22745 = state_22773[10];
                    var state_22773__$1 = state_22773;
                    return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_22773__$1, 7, inst_22745);
                  } else {
                    if (state_val_22774 === 6) {
                      var inst_22769 = state_22773[2];
                      var state_22773__$1 = state_22773;
                      var statearr_22780_22801 = state_22773__$1;
                      statearr_22780_22801[2] = inst_22769;
                      statearr_22780_22801[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22774 === 3) {
                        var inst_22771 = state_22773[2];
                        var state_22773__$1 = state_22773;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22773__$1, inst_22771);
                      } else {
                        if (state_val_22774 === 2) {
                          var inst_22745 = state_22773[10];
                          var inst_22747 = cljs.core.count.call(null, inst_22745);
                          var inst_22748 = inst_22747 > 0;
                          var state_22773__$1 = state_22773;
                          if (cljs.core.truth_(inst_22748)) {
                            var statearr_22782_22802 = state_22773__$1;
                            statearr_22782_22802[1] = 4;
                          } else {
                            var statearr_22783_22803 = state_22773__$1;
                            statearr_22783_22803[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22774 === 11) {
                            var inst_22745 = state_22773[10];
                            var inst_22762 = state_22773[2];
                            var tmp22781 = inst_22745;
                            var inst_22745__$1 = tmp22781;
                            var state_22773__$1 = function() {
                              var statearr_22784 = state_22773;
                              statearr_22784[10] = inst_22745__$1;
                              statearr_22784[11] = inst_22762;
                              return statearr_22784;
                            }();
                            var statearr_22785_22804 = state_22773__$1;
                            statearr_22785_22804[2] = null;
                            statearr_22785_22804[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22774 === 9) {
                              var inst_22753 = state_22773[8];
                              var state_22773__$1 = state_22773;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22773__$1, 11, out, inst_22753);
                            } else {
                              if (state_val_22774 === 5) {
                                var inst_22767 = cljs.core.async.close_BANG_.call(null, out);
                                var state_22773__$1 = state_22773;
                                var statearr_22786_22805 = state_22773__$1;
                                statearr_22786_22805[2] = inst_22767;
                                statearr_22786_22805[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22774 === 10) {
                                  var inst_22765 = state_22773[2];
                                  var state_22773__$1 = state_22773;
                                  var statearr_22787_22806 = state_22773__$1;
                                  statearr_22787_22806[2] = inst_22765;
                                  statearr_22787_22806[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22774 === 8) {
                                    var inst_22752 = state_22773[7];
                                    var inst_22753 = state_22773[8];
                                    var inst_22745 = state_22773[10];
                                    var inst_22754 = state_22773[9];
                                    var inst_22757 = function() {
                                      var c = inst_22754;
                                      var v = inst_22753;
                                      var vec__22750 = inst_22752;
                                      var cs = inst_22745;
                                      return function(c, v, vec__22750, cs, inst_22752, inst_22753, inst_22745, inst_22754, state_val_22774, c__6831__auto___22797, out) {
                                        return function(p1__22690_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__22690_SHARP_);
                                        };
                                      }(c, v, vec__22750, cs, inst_22752, inst_22753, inst_22745, inst_22754, state_val_22774, c__6831__auto___22797, out);
                                    }();
                                    var inst_22758 = cljs.core.filterv.call(null, inst_22757, inst_22745);
                                    var inst_22745__$1 = inst_22758;
                                    var state_22773__$1 = function() {
                                      var statearr_22788 = state_22773;
                                      statearr_22788[10] = inst_22745__$1;
                                      return statearr_22788;
                                    }();
                                    var statearr_22789_22807 = state_22773__$1;
                                    statearr_22789_22807[2] = null;
                                    statearr_22789_22807[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___22797, out);
          return function(switch__6816__auto__, c__6831__auto___22797, out) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_22793 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_22793[0] = state_machine__6817__auto__;
                statearr_22793[1] = 1;
                return statearr_22793;
              };
              var state_machine__6817__auto____1 = function(state_22773) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_22773);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e22794) {
                      if (e22794 instanceof Object) {
                        var ex__6820__auto__ = e22794;
                        var statearr_22795_22808 = state_22773;
                        statearr_22795_22808[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22773);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22794;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22809 = state_22773;
                    state_22773 = G__22809;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_22773) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_22773);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___22797, out);
        }();
        var state__6833__auto__ = function() {
          var statearr_22796 = f__6832__auto__.call(null);
          statearr_22796[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___22797;
          return statearr_22796;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___22797, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6831__auto___22902 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___22902, out) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___22902, out) {
            return function(state_22879) {
              var state_val_22880 = state_22879[1];
              if (state_val_22880 === 7) {
                var inst_22861 = state_22879[7];
                var inst_22861__$1 = state_22879[2];
                var inst_22862 = inst_22861__$1 == null;
                var inst_22863 = cljs.core.not.call(null, inst_22862);
                var state_22879__$1 = function() {
                  var statearr_22881 = state_22879;
                  statearr_22881[7] = inst_22861__$1;
                  return statearr_22881;
                }();
                if (inst_22863) {
                  var statearr_22882_22903 = state_22879__$1;
                  statearr_22882_22903[1] = 8;
                } else {
                  var statearr_22883_22904 = state_22879__$1;
                  statearr_22883_22904[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_22880 === 1) {
                  var inst_22856 = 0;
                  var state_22879__$1 = function() {
                    var statearr_22884 = state_22879;
                    statearr_22884[8] = inst_22856;
                    return statearr_22884;
                  }();
                  var statearr_22885_22905 = state_22879__$1;
                  statearr_22885_22905[2] = null;
                  statearr_22885_22905[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_22880 === 4) {
                    var state_22879__$1 = state_22879;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22879__$1, 7, ch);
                  } else {
                    if (state_val_22880 === 6) {
                      var inst_22874 = state_22879[2];
                      var state_22879__$1 = state_22879;
                      var statearr_22886_22906 = state_22879__$1;
                      statearr_22886_22906[2] = inst_22874;
                      statearr_22886_22906[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_22880 === 3) {
                        var inst_22876 = state_22879[2];
                        var inst_22877 = cljs.core.async.close_BANG_.call(null, out);
                        var state_22879__$1 = function() {
                          var statearr_22887 = state_22879;
                          statearr_22887[9] = inst_22876;
                          return statearr_22887;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22879__$1, inst_22877);
                      } else {
                        if (state_val_22880 === 2) {
                          var inst_22856 = state_22879[8];
                          var inst_22858 = inst_22856 < n;
                          var state_22879__$1 = state_22879;
                          if (cljs.core.truth_(inst_22858)) {
                            var statearr_22888_22907 = state_22879__$1;
                            statearr_22888_22907[1] = 4;
                          } else {
                            var statearr_22889_22908 = state_22879__$1;
                            statearr_22889_22908[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_22880 === 11) {
                            var inst_22856 = state_22879[8];
                            var inst_22866 = state_22879[2];
                            var inst_22867 = inst_22856 + 1;
                            var inst_22856__$1 = inst_22867;
                            var state_22879__$1 = function() {
                              var statearr_22890 = state_22879;
                              statearr_22890[10] = inst_22866;
                              statearr_22890[8] = inst_22856__$1;
                              return statearr_22890;
                            }();
                            var statearr_22891_22909 = state_22879__$1;
                            statearr_22891_22909[2] = null;
                            statearr_22891_22909[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_22880 === 9) {
                              var state_22879__$1 = state_22879;
                              var statearr_22892_22910 = state_22879__$1;
                              statearr_22892_22910[2] = null;
                              statearr_22892_22910[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_22880 === 5) {
                                var state_22879__$1 = state_22879;
                                var statearr_22893_22911 = state_22879__$1;
                                statearr_22893_22911[2] = null;
                                statearr_22893_22911[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_22880 === 10) {
                                  var inst_22871 = state_22879[2];
                                  var state_22879__$1 = state_22879;
                                  var statearr_22894_22912 = state_22879__$1;
                                  statearr_22894_22912[2] = inst_22871;
                                  statearr_22894_22912[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_22880 === 8) {
                                    var inst_22861 = state_22879[7];
                                    var state_22879__$1 = state_22879;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22879__$1, 11, out, inst_22861);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___22902, out);
          return function(switch__6816__auto__, c__6831__auto___22902, out) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_22898 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_22898[0] = state_machine__6817__auto__;
                statearr_22898[1] = 1;
                return statearr_22898;
              };
              var state_machine__6817__auto____1 = function(state_22879) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_22879);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e22899) {
                      if (e22899 instanceof Object) {
                        var ex__6820__auto__ = e22899;
                        var statearr_22900_22913 = state_22879;
                        statearr_22900_22913[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_22879);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e22899;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__22914 = state_22879;
                    state_22879 = G__22914;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_22879) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_22879);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___22902, out);
        }();
        var state__6833__auto__ = function() {
          var statearr_22901 = f__6832__auto__.call(null);
          statearr_22901[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___22902;
          return statearr_22901;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___22902, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t22922 !== "undefined") {
  } else {
    cljs.core.async.t22922 = function(ch, f, map_LT_, meta22923) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta22923 = meta22923;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22922.cljs$lang$type = true;
    cljs.core.async.t22922.cljs$lang$ctorStr = "cljs.core.async/t22922";
    cljs.core.async.t22922.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t22922");
    };
    cljs.core.async.t22922.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t22922.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t22922.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t22922.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t22925 !== "undefined") {
        } else {
          cljs.core.async.t22925 = function(fn1, _, meta22923, ch, f, map_LT_, meta22926) {
            this.fn1 = fn1;
            this._ = _;
            this.meta22923 = meta22923;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta22926 = meta22926;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t22925.cljs$lang$type = true;
          cljs.core.async.t22925.cljs$lang$ctorStr = "cljs.core.async/t22925";
          cljs.core.async.t22925.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
              return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t22925");
            };
          }(___$1);
          cljs.core.async.t22925.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t22925.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t22925.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t22925.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__22915_SHARP_) {
                  return f1.call(null, p1__22915_SHARP_ == null ? null : self__.f.call(null, p1__22915_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t22925.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_22927) {
              var self__ = this;
              var _22927__$1 = this;
              return self__.meta22926;
            };
          }(___$1);
          cljs.core.async.t22925.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_22927, meta22926__$1) {
              var self__ = this;
              var _22927__$1 = this;
              return new cljs.core.async.t22925(self__.fn1, self__._, self__.meta22923, self__.ch, self__.f, self__.map_LT_, meta22926__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t22925 = function(___$1) {
            return function __GT_t22925(fn1__$1, ___$2, meta22923__$1, ch__$2, f__$2, map_LT___$2, meta22926) {
              return new cljs.core.async.t22925(fn1__$1, ___$2, meta22923__$1, ch__$2, f__$2, map_LT___$2, meta22926);
            };
          }(___$1);
        }
        return new cljs.core.async.t22925(fn1, ___$1, self__.meta22923, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3614__auto__ = ret;
        if (cljs.core.truth_(and__3614__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3614__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t22922.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t22922.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t22922.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t22922.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22924) {
      var self__ = this;
      var _22924__$1 = this;
      return self__.meta22923;
    };
    cljs.core.async.t22922.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22924, meta22923__$1) {
      var self__ = this;
      var _22924__$1 = this;
      return new cljs.core.async.t22922(self__.ch, self__.f, self__.map_LT_, meta22923__$1);
    };
    cljs.core.async.__GT_t22922 = function __GT_t22922(ch__$1, f__$1, map_LT___$1, meta22923) {
      return new cljs.core.async.t22922(ch__$1, f__$1, map_LT___$1, meta22923);
    };
  }
  return new cljs.core.async.t22922(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t22931 !== "undefined") {
  } else {
    cljs.core.async.t22931 = function(ch, f, map_GT_, meta22932) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta22932 = meta22932;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22931.cljs$lang$type = true;
    cljs.core.async.t22931.cljs$lang$ctorStr = "cljs.core.async/t22931";
    cljs.core.async.t22931.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t22931");
    };
    cljs.core.async.t22931.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t22931.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t22931.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t22931.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t22931.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t22931.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t22931.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22933) {
      var self__ = this;
      var _22933__$1 = this;
      return self__.meta22932;
    };
    cljs.core.async.t22931.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22933, meta22932__$1) {
      var self__ = this;
      var _22933__$1 = this;
      return new cljs.core.async.t22931(self__.ch, self__.f, self__.map_GT_, meta22932__$1);
    };
    cljs.core.async.__GT_t22931 = function __GT_t22931(ch__$1, f__$1, map_GT___$1, meta22932) {
      return new cljs.core.async.t22931(ch__$1, f__$1, map_GT___$1, meta22932);
    };
  }
  return new cljs.core.async.t22931(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t22937 !== "undefined") {
  } else {
    cljs.core.async.t22937 = function(ch, p, filter_GT_, meta22938) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta22938 = meta22938;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t22937.cljs$lang$type = true;
    cljs.core.async.t22937.cljs$lang$ctorStr = "cljs.core.async/t22937";
    cljs.core.async.t22937.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "cljs.core.async/t22937");
    };
    cljs.core.async.t22937.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t22937.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t22937.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t22937.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t22937.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t22937.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t22937.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t22937.prototype.cljs$core$IMeta$_meta$arity$1 = function(_22939) {
      var self__ = this;
      var _22939__$1 = this;
      return self__.meta22938;
    };
    cljs.core.async.t22937.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_22939, meta22938__$1) {
      var self__ = this;
      var _22939__$1 = this;
      return new cljs.core.async.t22937(self__.ch, self__.p, self__.filter_GT_, meta22938__$1);
    };
    cljs.core.async.__GT_t22937 = function __GT_t22937(ch__$1, p__$1, filter_GT___$1, meta22938) {
      return new cljs.core.async.t22937(ch__$1, p__$1, filter_GT___$1, meta22938);
    };
  }
  return new cljs.core.async.t22937(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6831__auto___23022 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___23022, out) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___23022, out) {
            return function(state_23001) {
              var state_val_23002 = state_23001[1];
              if (state_val_23002 === 7) {
                var inst_22997 = state_23001[2];
                var state_23001__$1 = state_23001;
                var statearr_23003_23023 = state_23001__$1;
                statearr_23003_23023[2] = inst_22997;
                statearr_23003_23023[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23002 === 1) {
                  var state_23001__$1 = state_23001;
                  var statearr_23004_23024 = state_23001__$1;
                  statearr_23004_23024[2] = null;
                  statearr_23004_23024[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23002 === 4) {
                    var inst_22983 = state_23001[7];
                    var inst_22983__$1 = state_23001[2];
                    var inst_22984 = inst_22983__$1 == null;
                    var state_23001__$1 = function() {
                      var statearr_23005 = state_23001;
                      statearr_23005[7] = inst_22983__$1;
                      return statearr_23005;
                    }();
                    if (cljs.core.truth_(inst_22984)) {
                      var statearr_23006_23025 = state_23001__$1;
                      statearr_23006_23025[1] = 5;
                    } else {
                      var statearr_23007_23026 = state_23001__$1;
                      statearr_23007_23026[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23002 === 6) {
                      var inst_22983 = state_23001[7];
                      var inst_22988 = p.call(null, inst_22983);
                      var state_23001__$1 = state_23001;
                      if (cljs.core.truth_(inst_22988)) {
                        var statearr_23008_23027 = state_23001__$1;
                        statearr_23008_23027[1] = 8;
                      } else {
                        var statearr_23009_23028 = state_23001__$1;
                        statearr_23009_23028[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23002 === 3) {
                        var inst_22999 = state_23001[2];
                        var state_23001__$1 = state_23001;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23001__$1, inst_22999);
                      } else {
                        if (state_val_23002 === 2) {
                          var state_23001__$1 = state_23001;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23001__$1, 4, ch);
                        } else {
                          if (state_val_23002 === 11) {
                            var inst_22991 = state_23001[2];
                            var state_23001__$1 = state_23001;
                            var statearr_23010_23029 = state_23001__$1;
                            statearr_23010_23029[2] = inst_22991;
                            statearr_23010_23029[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23002 === 9) {
                              var state_23001__$1 = state_23001;
                              var statearr_23011_23030 = state_23001__$1;
                              statearr_23011_23030[2] = null;
                              statearr_23011_23030[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23002 === 5) {
                                var inst_22986 = cljs.core.async.close_BANG_.call(null, out);
                                var state_23001__$1 = state_23001;
                                var statearr_23012_23031 = state_23001__$1;
                                statearr_23012_23031[2] = inst_22986;
                                statearr_23012_23031[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23002 === 10) {
                                  var inst_22994 = state_23001[2];
                                  var state_23001__$1 = function() {
                                    var statearr_23013 = state_23001;
                                    statearr_23013[8] = inst_22994;
                                    return statearr_23013;
                                  }();
                                  var statearr_23014_23032 = state_23001__$1;
                                  statearr_23014_23032[2] = null;
                                  statearr_23014_23032[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23002 === 8) {
                                    var inst_22983 = state_23001[7];
                                    var state_23001__$1 = state_23001;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23001__$1, 11, out, inst_22983);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___23022, out);
          return function(switch__6816__auto__, c__6831__auto___23022, out) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_23018 = [null, null, null, null, null, null, null, null, null];
                statearr_23018[0] = state_machine__6817__auto__;
                statearr_23018[1] = 1;
                return statearr_23018;
              };
              var state_machine__6817__auto____1 = function(state_23001) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_23001);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e23019) {
                      if (e23019 instanceof Object) {
                        var ex__6820__auto__ = e23019;
                        var statearr_23020_23033 = state_23001;
                        statearr_23020_23033[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23001);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23019;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23034 = state_23001;
                    state_23001 = G__23034;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_23001) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_23001);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___23022, out);
        }();
        var state__6833__auto__ = function() {
          var statearr_23021 = f__6832__auto__.call(null);
          statearr_23021[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___23022;
          return statearr_23021;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___23022, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6831__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto__) {
    return function() {
      var f__6832__auto__ = function() {
        var switch__6816__auto__ = function(c__6831__auto__) {
          return function(state_23200) {
            var state_val_23201 = state_23200[1];
            if (state_val_23201 === 7) {
              var inst_23196 = state_23200[2];
              var state_23200__$1 = state_23200;
              var statearr_23202_23243 = state_23200__$1;
              statearr_23202_23243[2] = inst_23196;
              statearr_23202_23243[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_23201 === 20) {
                var inst_23166 = state_23200[7];
                var inst_23177 = state_23200[2];
                var inst_23178 = cljs.core.next.call(null, inst_23166);
                var inst_23152 = inst_23178;
                var inst_23153 = null;
                var inst_23154 = 0;
                var inst_23155 = 0;
                var state_23200__$1 = function() {
                  var statearr_23203 = state_23200;
                  statearr_23203[8] = inst_23153;
                  statearr_23203[9] = inst_23177;
                  statearr_23203[10] = inst_23154;
                  statearr_23203[11] = inst_23152;
                  statearr_23203[12] = inst_23155;
                  return statearr_23203;
                }();
                var statearr_23204_23244 = state_23200__$1;
                statearr_23204_23244[2] = null;
                statearr_23204_23244[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23201 === 1) {
                  var state_23200__$1 = state_23200;
                  var statearr_23205_23245 = state_23200__$1;
                  statearr_23205_23245[2] = null;
                  statearr_23205_23245[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23201 === 4) {
                    var inst_23141 = state_23200[13];
                    var inst_23141__$1 = state_23200[2];
                    var inst_23142 = inst_23141__$1 == null;
                    var state_23200__$1 = function() {
                      var statearr_23206 = state_23200;
                      statearr_23206[13] = inst_23141__$1;
                      return statearr_23206;
                    }();
                    if (cljs.core.truth_(inst_23142)) {
                      var statearr_23207_23246 = state_23200__$1;
                      statearr_23207_23246[1] = 5;
                    } else {
                      var statearr_23208_23247 = state_23200__$1;
                      statearr_23208_23247[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23201 === 15) {
                      var state_23200__$1 = state_23200;
                      var statearr_23212_23248 = state_23200__$1;
                      statearr_23212_23248[2] = null;
                      statearr_23212_23248[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23201 === 21) {
                        var state_23200__$1 = state_23200;
                        var statearr_23213_23249 = state_23200__$1;
                        statearr_23213_23249[2] = null;
                        statearr_23213_23249[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23201 === 13) {
                          var inst_23153 = state_23200[8];
                          var inst_23154 = state_23200[10];
                          var inst_23152 = state_23200[11];
                          var inst_23155 = state_23200[12];
                          var inst_23162 = state_23200[2];
                          var inst_23163 = inst_23155 + 1;
                          var tmp23209 = inst_23153;
                          var tmp23210 = inst_23154;
                          var tmp23211 = inst_23152;
                          var inst_23152__$1 = tmp23211;
                          var inst_23153__$1 = tmp23209;
                          var inst_23154__$1 = tmp23210;
                          var inst_23155__$1 = inst_23163;
                          var state_23200__$1 = function() {
                            var statearr_23214 = state_23200;
                            statearr_23214[8] = inst_23153__$1;
                            statearr_23214[14] = inst_23162;
                            statearr_23214[10] = inst_23154__$1;
                            statearr_23214[11] = inst_23152__$1;
                            statearr_23214[12] = inst_23155__$1;
                            return statearr_23214;
                          }();
                          var statearr_23215_23250 = state_23200__$1;
                          statearr_23215_23250[2] = null;
                          statearr_23215_23250[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23201 === 22) {
                            var state_23200__$1 = state_23200;
                            var statearr_23216_23251 = state_23200__$1;
                            statearr_23216_23251[2] = null;
                            statearr_23216_23251[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23201 === 6) {
                              var inst_23141 = state_23200[13];
                              var inst_23150 = f.call(null, inst_23141);
                              var inst_23151 = cljs.core.seq.call(null, inst_23150);
                              var inst_23152 = inst_23151;
                              var inst_23153 = null;
                              var inst_23154 = 0;
                              var inst_23155 = 0;
                              var state_23200__$1 = function() {
                                var statearr_23217 = state_23200;
                                statearr_23217[8] = inst_23153;
                                statearr_23217[10] = inst_23154;
                                statearr_23217[11] = inst_23152;
                                statearr_23217[12] = inst_23155;
                                return statearr_23217;
                              }();
                              var statearr_23218_23252 = state_23200__$1;
                              statearr_23218_23252[2] = null;
                              statearr_23218_23252[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_23201 === 17) {
                                var inst_23166 = state_23200[7];
                                var inst_23170 = cljs.core.chunk_first.call(null, inst_23166);
                                var inst_23171 = cljs.core.chunk_rest.call(null, inst_23166);
                                var inst_23172 = cljs.core.count.call(null, inst_23170);
                                var inst_23152 = inst_23171;
                                var inst_23153 = inst_23170;
                                var inst_23154 = inst_23172;
                                var inst_23155 = 0;
                                var state_23200__$1 = function() {
                                  var statearr_23219 = state_23200;
                                  statearr_23219[8] = inst_23153;
                                  statearr_23219[10] = inst_23154;
                                  statearr_23219[11] = inst_23152;
                                  statearr_23219[12] = inst_23155;
                                  return statearr_23219;
                                }();
                                var statearr_23220_23253 = state_23200__$1;
                                statearr_23220_23253[2] = null;
                                statearr_23220_23253[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23201 === 3) {
                                  var inst_23198 = state_23200[2];
                                  var state_23200__$1 = state_23200;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23200__$1, inst_23198);
                                } else {
                                  if (state_val_23201 === 12) {
                                    var inst_23186 = state_23200[2];
                                    var state_23200__$1 = state_23200;
                                    var statearr_23221_23254 = state_23200__$1;
                                    statearr_23221_23254[2] = inst_23186;
                                    statearr_23221_23254[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_23201 === 2) {
                                      var state_23200__$1 = state_23200;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23200__$1, 4, in$);
                                    } else {
                                      if (state_val_23201 === 23) {
                                        var inst_23194 = state_23200[2];
                                        var state_23200__$1 = state_23200;
                                        var statearr_23222_23255 = state_23200__$1;
                                        statearr_23222_23255[2] = inst_23194;
                                        statearr_23222_23255[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23201 === 19) {
                                          var inst_23181 = state_23200[2];
                                          var state_23200__$1 = state_23200;
                                          var statearr_23223_23256 = state_23200__$1;
                                          statearr_23223_23256[2] = inst_23181;
                                          statearr_23223_23256[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23201 === 11) {
                                            var inst_23152 = state_23200[11];
                                            var inst_23166 = state_23200[7];
                                            var inst_23166__$1 = cljs.core.seq.call(null, inst_23152);
                                            var state_23200__$1 = function() {
                                              var statearr_23224 = state_23200;
                                              statearr_23224[7] = inst_23166__$1;
                                              return statearr_23224;
                                            }();
                                            if (inst_23166__$1) {
                                              var statearr_23225_23257 = state_23200__$1;
                                              statearr_23225_23257[1] = 14;
                                            } else {
                                              var statearr_23226_23258 = state_23200__$1;
                                              statearr_23226_23258[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_23201 === 9) {
                                              var inst_23188 = state_23200[2];
                                              var inst_23189 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_23200__$1 = function() {
                                                var statearr_23227 = state_23200;
                                                statearr_23227[15] = inst_23188;
                                                return statearr_23227;
                                              }();
                                              if (cljs.core.truth_(inst_23189)) {
                                                var statearr_23228_23259 = state_23200__$1;
                                                statearr_23228_23259[1] = 21;
                                              } else {
                                                var statearr_23229_23260 = state_23200__$1;
                                                statearr_23229_23260[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_23201 === 5) {
                                                var inst_23144 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_23200__$1 = state_23200;
                                                var statearr_23230_23261 = state_23200__$1;
                                                statearr_23230_23261[2] = inst_23144;
                                                statearr_23230_23261[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_23201 === 14) {
                                                  var inst_23166 = state_23200[7];
                                                  var inst_23168 = cljs.core.chunked_seq_QMARK_.call(null, inst_23166);
                                                  var state_23200__$1 = state_23200;
                                                  if (inst_23168) {
                                                    var statearr_23231_23262 = state_23200__$1;
                                                    statearr_23231_23262[1] = 17;
                                                  } else {
                                                    var statearr_23232_23263 = state_23200__$1;
                                                    statearr_23232_23263[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_23201 === 16) {
                                                    var inst_23184 = state_23200[2];
                                                    var state_23200__$1 = state_23200;
                                                    var statearr_23233_23264 = state_23200__$1;
                                                    statearr_23233_23264[2] = inst_23184;
                                                    statearr_23233_23264[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_23201 === 10) {
                                                      var inst_23153 = state_23200[8];
                                                      var inst_23155 = state_23200[12];
                                                      var inst_23160 = cljs.core._nth.call(null, inst_23153, inst_23155);
                                                      var state_23200__$1 = state_23200;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23200__$1, 13, out, inst_23160);
                                                    } else {
                                                      if (state_val_23201 === 18) {
                                                        var inst_23166 = state_23200[7];
                                                        var inst_23175 = cljs.core.first.call(null, inst_23166);
                                                        var state_23200__$1 = state_23200;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23200__$1, 20, out, inst_23175);
                                                      } else {
                                                        if (state_val_23201 === 8) {
                                                          var inst_23154 = state_23200[10];
                                                          var inst_23155 = state_23200[12];
                                                          var inst_23157 = inst_23155 < inst_23154;
                                                          var inst_23158 = inst_23157;
                                                          var state_23200__$1 = state_23200;
                                                          if (cljs.core.truth_(inst_23158)) {
                                                            var statearr_23234_23265 = state_23200__$1;
                                                            statearr_23234_23265[1] = 10;
                                                          } else {
                                                            var statearr_23235_23266 = state_23200__$1;
                                                            statearr_23235_23266[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6831__auto__);
        return function(switch__6816__auto__, c__6831__auto__) {
          return function() {
            var state_machine__6817__auto__ = null;
            var state_machine__6817__auto____0 = function() {
              var statearr_23239 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_23239[0] = state_machine__6817__auto__;
              statearr_23239[1] = 1;
              return statearr_23239;
            };
            var state_machine__6817__auto____1 = function(state_23200) {
              while (true) {
                var ret_value__6818__auto__ = function() {
                  try {
                    while (true) {
                      var result__6819__auto__ = switch__6816__auto__.call(null, state_23200);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6819__auto__;
                      }
                      break;
                    }
                  } catch (e23240) {
                    if (e23240 instanceof Object) {
                      var ex__6820__auto__ = e23240;
                      var statearr_23241_23267 = state_23200;
                      statearr_23241_23267[5] = ex__6820__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23200);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e23240;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__23268 = state_23200;
                  state_23200 = G__23268;
                  continue;
                } else {
                  return ret_value__6818__auto__;
                }
                break;
              }
            };
            state_machine__6817__auto__ = function(state_23200) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6817__auto____0.call(this);
                case 1:
                  return state_machine__6817__auto____1.call(this, state_23200);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
            state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
            return state_machine__6817__auto__;
          }();
        }(switch__6816__auto__, c__6831__auto__);
      }();
      var state__6833__auto__ = function() {
        var statearr_23242 = f__6832__auto__.call(null);
        statearr_23242[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto__;
        return statearr_23242;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
    };
  }(c__6831__auto__));
  return c__6831__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6831__auto___23365 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___23365, out) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___23365, out) {
            return function(state_23340) {
              var state_val_23341 = state_23340[1];
              if (state_val_23341 === 7) {
                var inst_23335 = state_23340[2];
                var state_23340__$1 = state_23340;
                var statearr_23342_23366 = state_23340__$1;
                statearr_23342_23366[2] = inst_23335;
                statearr_23342_23366[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23341 === 1) {
                  var inst_23317 = null;
                  var state_23340__$1 = function() {
                    var statearr_23343 = state_23340;
                    statearr_23343[7] = inst_23317;
                    return statearr_23343;
                  }();
                  var statearr_23344_23367 = state_23340__$1;
                  statearr_23344_23367[2] = null;
                  statearr_23344_23367[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23341 === 4) {
                    var inst_23320 = state_23340[8];
                    var inst_23320__$1 = state_23340[2];
                    var inst_23321 = inst_23320__$1 == null;
                    var inst_23322 = cljs.core.not.call(null, inst_23321);
                    var state_23340__$1 = function() {
                      var statearr_23345 = state_23340;
                      statearr_23345[8] = inst_23320__$1;
                      return statearr_23345;
                    }();
                    if (inst_23322) {
                      var statearr_23346_23368 = state_23340__$1;
                      statearr_23346_23368[1] = 5;
                    } else {
                      var statearr_23347_23369 = state_23340__$1;
                      statearr_23347_23369[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23341 === 6) {
                      var state_23340__$1 = state_23340;
                      var statearr_23348_23370 = state_23340__$1;
                      statearr_23348_23370[2] = null;
                      statearr_23348_23370[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23341 === 3) {
                        var inst_23337 = state_23340[2];
                        var inst_23338 = cljs.core.async.close_BANG_.call(null, out);
                        var state_23340__$1 = function() {
                          var statearr_23349 = state_23340;
                          statearr_23349[9] = inst_23337;
                          return statearr_23349;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23340__$1, inst_23338);
                      } else {
                        if (state_val_23341 === 2) {
                          var state_23340__$1 = state_23340;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23340__$1, 4, ch);
                        } else {
                          if (state_val_23341 === 11) {
                            var inst_23320 = state_23340[8];
                            var inst_23329 = state_23340[2];
                            var inst_23317 = inst_23320;
                            var state_23340__$1 = function() {
                              var statearr_23350 = state_23340;
                              statearr_23350[10] = inst_23329;
                              statearr_23350[7] = inst_23317;
                              return statearr_23350;
                            }();
                            var statearr_23351_23371 = state_23340__$1;
                            statearr_23351_23371[2] = null;
                            statearr_23351_23371[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_23341 === 9) {
                              var inst_23320 = state_23340[8];
                              var state_23340__$1 = state_23340;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23340__$1, 11, out, inst_23320);
                            } else {
                              if (state_val_23341 === 5) {
                                var inst_23320 = state_23340[8];
                                var inst_23317 = state_23340[7];
                                var inst_23324 = cljs.core._EQ_.call(null, inst_23320, inst_23317);
                                var state_23340__$1 = state_23340;
                                if (inst_23324) {
                                  var statearr_23353_23372 = state_23340__$1;
                                  statearr_23353_23372[1] = 8;
                                } else {
                                  var statearr_23354_23373 = state_23340__$1;
                                  statearr_23354_23373[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_23341 === 10) {
                                  var inst_23332 = state_23340[2];
                                  var state_23340__$1 = state_23340;
                                  var statearr_23355_23374 = state_23340__$1;
                                  statearr_23355_23374[2] = inst_23332;
                                  statearr_23355_23374[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23341 === 8) {
                                    var inst_23317 = state_23340[7];
                                    var tmp23352 = inst_23317;
                                    var inst_23317__$1 = tmp23352;
                                    var state_23340__$1 = function() {
                                      var statearr_23356 = state_23340;
                                      statearr_23356[7] = inst_23317__$1;
                                      return statearr_23356;
                                    }();
                                    var statearr_23357_23375 = state_23340__$1;
                                    statearr_23357_23375[2] = null;
                                    statearr_23357_23375[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___23365, out);
          return function(switch__6816__auto__, c__6831__auto___23365, out) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_23361 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_23361[0] = state_machine__6817__auto__;
                statearr_23361[1] = 1;
                return statearr_23361;
              };
              var state_machine__6817__auto____1 = function(state_23340) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_23340);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e23362) {
                      if (e23362 instanceof Object) {
                        var ex__6820__auto__ = e23362;
                        var statearr_23363_23376 = state_23340;
                        statearr_23363_23376[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23340);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23362;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23377 = state_23340;
                    state_23340 = G__23377;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_23340) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_23340);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___23365, out);
        }();
        var state__6833__auto__ = function() {
          var statearr_23364 = f__6832__auto__.call(null);
          statearr_23364[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___23365;
          return statearr_23364;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___23365, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6831__auto___23512 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___23512, out) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___23512, out) {
            return function(state_23482) {
              var state_val_23483 = state_23482[1];
              if (state_val_23483 === 7) {
                var inst_23478 = state_23482[2];
                var state_23482__$1 = state_23482;
                var statearr_23484_23513 = state_23482__$1;
                statearr_23484_23513[2] = inst_23478;
                statearr_23484_23513[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23483 === 1) {
                  var inst_23445 = new Array(n);
                  var inst_23446 = inst_23445;
                  var inst_23447 = 0;
                  var state_23482__$1 = function() {
                    var statearr_23485 = state_23482;
                    statearr_23485[7] = inst_23446;
                    statearr_23485[8] = inst_23447;
                    return statearr_23485;
                  }();
                  var statearr_23486_23514 = state_23482__$1;
                  statearr_23486_23514[2] = null;
                  statearr_23486_23514[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23483 === 4) {
                    var inst_23450 = state_23482[9];
                    var inst_23450__$1 = state_23482[2];
                    var inst_23451 = inst_23450__$1 == null;
                    var inst_23452 = cljs.core.not.call(null, inst_23451);
                    var state_23482__$1 = function() {
                      var statearr_23487 = state_23482;
                      statearr_23487[9] = inst_23450__$1;
                      return statearr_23487;
                    }();
                    if (inst_23452) {
                      var statearr_23488_23515 = state_23482__$1;
                      statearr_23488_23515[1] = 5;
                    } else {
                      var statearr_23489_23516 = state_23482__$1;
                      statearr_23489_23516[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23483 === 15) {
                      var inst_23472 = state_23482[2];
                      var state_23482__$1 = state_23482;
                      var statearr_23490_23517 = state_23482__$1;
                      statearr_23490_23517[2] = inst_23472;
                      statearr_23490_23517[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23483 === 13) {
                        var state_23482__$1 = state_23482;
                        var statearr_23491_23518 = state_23482__$1;
                        statearr_23491_23518[2] = null;
                        statearr_23491_23518[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23483 === 6) {
                          var inst_23447 = state_23482[8];
                          var inst_23468 = inst_23447 > 0;
                          var state_23482__$1 = state_23482;
                          if (cljs.core.truth_(inst_23468)) {
                            var statearr_23492_23519 = state_23482__$1;
                            statearr_23492_23519[1] = 12;
                          } else {
                            var statearr_23493_23520 = state_23482__$1;
                            statearr_23493_23520[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23483 === 3) {
                            var inst_23480 = state_23482[2];
                            var state_23482__$1 = state_23482;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23482__$1, inst_23480);
                          } else {
                            if (state_val_23483 === 12) {
                              var inst_23446 = state_23482[7];
                              var inst_23470 = cljs.core.vec.call(null, inst_23446);
                              var state_23482__$1 = state_23482;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23482__$1, 15, out, inst_23470);
                            } else {
                              if (state_val_23483 === 2) {
                                var state_23482__$1 = state_23482;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23482__$1, 4, ch);
                              } else {
                                if (state_val_23483 === 11) {
                                  var inst_23462 = state_23482[2];
                                  var inst_23463 = new Array(n);
                                  var inst_23446 = inst_23463;
                                  var inst_23447 = 0;
                                  var state_23482__$1 = function() {
                                    var statearr_23494 = state_23482;
                                    statearr_23494[10] = inst_23462;
                                    statearr_23494[7] = inst_23446;
                                    statearr_23494[8] = inst_23447;
                                    return statearr_23494;
                                  }();
                                  var statearr_23495_23521 = state_23482__$1;
                                  statearr_23495_23521[2] = null;
                                  statearr_23495_23521[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23483 === 9) {
                                    var inst_23446 = state_23482[7];
                                    var inst_23460 = cljs.core.vec.call(null, inst_23446);
                                    var state_23482__$1 = state_23482;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23482__$1, 11, out, inst_23460);
                                  } else {
                                    if (state_val_23483 === 5) {
                                      var inst_23450 = state_23482[9];
                                      var inst_23446 = state_23482[7];
                                      var inst_23455 = state_23482[11];
                                      var inst_23447 = state_23482[8];
                                      var inst_23454 = inst_23446[inst_23447] = inst_23450;
                                      var inst_23455__$1 = inst_23447 + 1;
                                      var inst_23456 = inst_23455__$1 < n;
                                      var state_23482__$1 = function() {
                                        var statearr_23496 = state_23482;
                                        statearr_23496[12] = inst_23454;
                                        statearr_23496[11] = inst_23455__$1;
                                        return statearr_23496;
                                      }();
                                      if (cljs.core.truth_(inst_23456)) {
                                        var statearr_23497_23522 = state_23482__$1;
                                        statearr_23497_23522[1] = 8;
                                      } else {
                                        var statearr_23498_23523 = state_23482__$1;
                                        statearr_23498_23523[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23483 === 14) {
                                        var inst_23475 = state_23482[2];
                                        var inst_23476 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_23482__$1 = function() {
                                          var statearr_23500 = state_23482;
                                          statearr_23500[13] = inst_23475;
                                          return statearr_23500;
                                        }();
                                        var statearr_23501_23524 = state_23482__$1;
                                        statearr_23501_23524[2] = inst_23476;
                                        statearr_23501_23524[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23483 === 10) {
                                          var inst_23466 = state_23482[2];
                                          var state_23482__$1 = state_23482;
                                          var statearr_23502_23525 = state_23482__$1;
                                          statearr_23502_23525[2] = inst_23466;
                                          statearr_23502_23525[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23483 === 8) {
                                            var inst_23446 = state_23482[7];
                                            var inst_23455 = state_23482[11];
                                            var tmp23499 = inst_23446;
                                            var inst_23446__$1 = tmp23499;
                                            var inst_23447 = inst_23455;
                                            var state_23482__$1 = function() {
                                              var statearr_23503 = state_23482;
                                              statearr_23503[7] = inst_23446__$1;
                                              statearr_23503[8] = inst_23447;
                                              return statearr_23503;
                                            }();
                                            var statearr_23504_23526 = state_23482__$1;
                                            statearr_23504_23526[2] = null;
                                            statearr_23504_23526[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___23512, out);
          return function(switch__6816__auto__, c__6831__auto___23512, out) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_23508 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23508[0] = state_machine__6817__auto__;
                statearr_23508[1] = 1;
                return statearr_23508;
              };
              var state_machine__6817__auto____1 = function(state_23482) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_23482);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e23509) {
                      if (e23509 instanceof Object) {
                        var ex__6820__auto__ = e23509;
                        var statearr_23510_23527 = state_23482;
                        statearr_23510_23527[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23482);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23509;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23528 = state_23482;
                    state_23482 = G__23528;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_23482) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_23482);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___23512, out);
        }();
        var state__6833__auto__ = function() {
          var statearr_23511 = f__6832__auto__.call(null);
          statearr_23511[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___23512;
          return statearr_23511;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___23512, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6831__auto___23671 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto___23671, out) {
      return function() {
        var f__6832__auto__ = function() {
          var switch__6816__auto__ = function(c__6831__auto___23671, out) {
            return function(state_23641) {
              var state_val_23642 = state_23641[1];
              if (state_val_23642 === 7) {
                var inst_23637 = state_23641[2];
                var state_23641__$1 = state_23641;
                var statearr_23643_23672 = state_23641__$1;
                statearr_23643_23672[2] = inst_23637;
                statearr_23643_23672[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_23642 === 1) {
                  var inst_23600 = [];
                  var inst_23601 = inst_23600;
                  var inst_23602 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_23641__$1 = function() {
                    var statearr_23644 = state_23641;
                    statearr_23644[7] = inst_23601;
                    statearr_23644[8] = inst_23602;
                    return statearr_23644;
                  }();
                  var statearr_23645_23673 = state_23641__$1;
                  statearr_23645_23673[2] = null;
                  statearr_23645_23673[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_23642 === 4) {
                    var inst_23605 = state_23641[9];
                    var inst_23605__$1 = state_23641[2];
                    var inst_23606 = inst_23605__$1 == null;
                    var inst_23607 = cljs.core.not.call(null, inst_23606);
                    var state_23641__$1 = function() {
                      var statearr_23646 = state_23641;
                      statearr_23646[9] = inst_23605__$1;
                      return statearr_23646;
                    }();
                    if (inst_23607) {
                      var statearr_23647_23674 = state_23641__$1;
                      statearr_23647_23674[1] = 5;
                    } else {
                      var statearr_23648_23675 = state_23641__$1;
                      statearr_23648_23675[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_23642 === 15) {
                      var inst_23631 = state_23641[2];
                      var state_23641__$1 = state_23641;
                      var statearr_23649_23676 = state_23641__$1;
                      statearr_23649_23676[2] = inst_23631;
                      statearr_23649_23676[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_23642 === 13) {
                        var state_23641__$1 = state_23641;
                        var statearr_23650_23677 = state_23641__$1;
                        statearr_23650_23677[2] = null;
                        statearr_23650_23677[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_23642 === 6) {
                          var inst_23601 = state_23641[7];
                          var inst_23626 = inst_23601.length;
                          var inst_23627 = inst_23626 > 0;
                          var state_23641__$1 = state_23641;
                          if (cljs.core.truth_(inst_23627)) {
                            var statearr_23651_23678 = state_23641__$1;
                            statearr_23651_23678[1] = 12;
                          } else {
                            var statearr_23652_23679 = state_23641__$1;
                            statearr_23652_23679[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_23642 === 3) {
                            var inst_23639 = state_23641[2];
                            var state_23641__$1 = state_23641;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_23641__$1, inst_23639);
                          } else {
                            if (state_val_23642 === 12) {
                              var inst_23601 = state_23641[7];
                              var inst_23629 = cljs.core.vec.call(null, inst_23601);
                              var state_23641__$1 = state_23641;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23641__$1, 15, out, inst_23629);
                            } else {
                              if (state_val_23642 === 2) {
                                var state_23641__$1 = state_23641;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_23641__$1, 4, ch);
                              } else {
                                if (state_val_23642 === 11) {
                                  var inst_23609 = state_23641[10];
                                  var inst_23605 = state_23641[9];
                                  var inst_23619 = state_23641[2];
                                  var inst_23620 = [];
                                  var inst_23621 = inst_23620.push(inst_23605);
                                  var inst_23601 = inst_23620;
                                  var inst_23602 = inst_23609;
                                  var state_23641__$1 = function() {
                                    var statearr_23653 = state_23641;
                                    statearr_23653[11] = inst_23619;
                                    statearr_23653[12] = inst_23621;
                                    statearr_23653[7] = inst_23601;
                                    statearr_23653[8] = inst_23602;
                                    return statearr_23653;
                                  }();
                                  var statearr_23654_23680 = state_23641__$1;
                                  statearr_23654_23680[2] = null;
                                  statearr_23654_23680[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_23642 === 9) {
                                    var inst_23601 = state_23641[7];
                                    var inst_23617 = cljs.core.vec.call(null, inst_23601);
                                    var state_23641__$1 = state_23641;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_23641__$1, 11, out, inst_23617);
                                  } else {
                                    if (state_val_23642 === 5) {
                                      var inst_23609 = state_23641[10];
                                      var inst_23602 = state_23641[8];
                                      var inst_23605 = state_23641[9];
                                      var inst_23609__$1 = f.call(null, inst_23605);
                                      var inst_23610 = cljs.core._EQ_.call(null, inst_23609__$1, inst_23602);
                                      var inst_23611 = cljs.core.keyword_identical_QMARK_.call(null, inst_23602, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_23612 = inst_23610 || inst_23611;
                                      var state_23641__$1 = function() {
                                        var statearr_23655 = state_23641;
                                        statearr_23655[10] = inst_23609__$1;
                                        return statearr_23655;
                                      }();
                                      if (cljs.core.truth_(inst_23612)) {
                                        var statearr_23656_23681 = state_23641__$1;
                                        statearr_23656_23681[1] = 8;
                                      } else {
                                        var statearr_23657_23682 = state_23641__$1;
                                        statearr_23657_23682[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_23642 === 14) {
                                        var inst_23634 = state_23641[2];
                                        var inst_23635 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_23641__$1 = function() {
                                          var statearr_23659 = state_23641;
                                          statearr_23659[13] = inst_23634;
                                          return statearr_23659;
                                        }();
                                        var statearr_23660_23683 = state_23641__$1;
                                        statearr_23660_23683[2] = inst_23635;
                                        statearr_23660_23683[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_23642 === 10) {
                                          var inst_23624 = state_23641[2];
                                          var state_23641__$1 = state_23641;
                                          var statearr_23661_23684 = state_23641__$1;
                                          statearr_23661_23684[2] = inst_23624;
                                          statearr_23661_23684[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_23642 === 8) {
                                            var inst_23609 = state_23641[10];
                                            var inst_23601 = state_23641[7];
                                            var inst_23605 = state_23641[9];
                                            var inst_23614 = inst_23601.push(inst_23605);
                                            var tmp23658 = inst_23601;
                                            var inst_23601__$1 = tmp23658;
                                            var inst_23602 = inst_23609;
                                            var state_23641__$1 = function() {
                                              var statearr_23662 = state_23641;
                                              statearr_23662[14] = inst_23614;
                                              statearr_23662[7] = inst_23601__$1;
                                              statearr_23662[8] = inst_23602;
                                              return statearr_23662;
                                            }();
                                            var statearr_23663_23685 = state_23641__$1;
                                            statearr_23663_23685[2] = null;
                                            statearr_23663_23685[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6831__auto___23671, out);
          return function(switch__6816__auto__, c__6831__auto___23671, out) {
            return function() {
              var state_machine__6817__auto__ = null;
              var state_machine__6817__auto____0 = function() {
                var statearr_23667 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_23667[0] = state_machine__6817__auto__;
                statearr_23667[1] = 1;
                return statearr_23667;
              };
              var state_machine__6817__auto____1 = function(state_23641) {
                while (true) {
                  var ret_value__6818__auto__ = function() {
                    try {
                      while (true) {
                        var result__6819__auto__ = switch__6816__auto__.call(null, state_23641);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6819__auto__;
                        }
                        break;
                      }
                    } catch (e23668) {
                      if (e23668 instanceof Object) {
                        var ex__6820__auto__ = e23668;
                        var statearr_23669_23686 = state_23641;
                        statearr_23669_23686[5] = ex__6820__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_23641);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e23668;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__23687 = state_23641;
                    state_23641 = G__23687;
                    continue;
                  } else {
                    return ret_value__6818__auto__;
                  }
                  break;
                }
              };
              state_machine__6817__auto__ = function(state_23641) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6817__auto____0.call(this);
                  case 1:
                    return state_machine__6817__auto____1.call(this, state_23641);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
              state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
              return state_machine__6817__auto__;
            }();
          }(switch__6816__auto__, c__6831__auto___23671, out);
        }();
        var state__6833__auto__ = function() {
          var statearr_23670 = f__6832__auto__.call(null);
          statearr_23670[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto___23671;
          return statearr_23670;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
      };
    }(c__6831__auto___23671, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("clairvoyant.core");
goog.require("cljs.core");
clairvoyant.core.ITraceEnter = function() {
  var obj23813 = {};
  return obj23813;
}();
clairvoyant.core._trace_enter = function _trace_enter(this$, trace_data) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.clairvoyant$core$ITraceEnter$_trace_enter$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.clairvoyant$core$ITraceEnter$_trace_enter$arity$2(this$, trace_data);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = clairvoyant.core._trace_enter[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = clairvoyant.core._trace_enter["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITraceEnter.-trace-enter", this$);
        }
      }
    }().call(null, this$, trace_data);
  }
};
clairvoyant.core.ITraceError = function() {
  var obj23815 = {};
  return obj23815;
}();
clairvoyant.core._trace_error = function _trace_error(this$, trace_data) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.clairvoyant$core$ITraceError$_trace_error$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.clairvoyant$core$ITraceError$_trace_error$arity$2(this$, trace_data);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = clairvoyant.core._trace_error[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = clairvoyant.core._trace_error["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITraceError.-trace-error", this$);
        }
      }
    }().call(null, this$, trace_data);
  }
};
clairvoyant.core.ITraceExit = function() {
  var obj23817 = {};
  return obj23817;
}();
clairvoyant.core._trace_exit = function _trace_exit(this$, trace_data) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.clairvoyant$core$ITraceExit$_trace_exit$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.clairvoyant$core$ITraceExit$_trace_exit$arity$2(this$, trace_data);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = clairvoyant.core._trace_exit[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = clairvoyant.core._trace_exit["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITraceExit.-trace-exit", this$);
        }
      }
    }().call(null, this$, trace_data);
  }
};
clairvoyant.core.trace_enter = function trace_enter(tracer, trace_data) {
  return clairvoyant.core._trace_enter.call(null, tracer, trace_data);
};
clairvoyant.core.trace_error = function trace_error(tracer, trace_data) {
  return clairvoyant.core._trace_error.call(null, tracer, trace_data);
};
clairvoyant.core.trace_exit = function trace_exit(tracer, trace_data) {
  return clairvoyant.core._trace_exit.call(null, tracer, trace_data);
};
clairvoyant.core.default_tracer = function() {
  var log_binding = function log_binding(form, init) {
    return console.groupCollapsed("%c%s %c%s", "font-weight:bold;", cljs.core.pr_str.call(null, form), "font-weight:normal;", cljs.core.pr_str.call(null, init));
  };
  var has_bindings_QMARK_ = function has_bindings_QMARK_(op) {
    new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, [new cljs.core.Symbol("clojure.core", "let", "clojure.core/let", -407137853, null), null, new cljs.core.Symbol(null, "defmethod", "defmethod", -579171823, null), null, new cljs.core.Symbol("clojure.core", "reify", "clojure.core/reify", 562538906, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "defn", "defn", -126010802, null), null, new cljs.core.Symbol(null, 
    "extend-protocol", "extend-protocol", 306378578, null), null, new cljs.core.Symbol(null, "extend-type", "extend-type", 1123355921, null), null, new cljs.core.Symbol("clojure.core", "defn", "clojure.core/defn", -1504648747, null), null, new cljs.core.Symbol("clojure.core", "extend-type", "clojure.core/extend-type", 1892724878, null), null, new cljs.core.Symbol("clojure.core", "fn", "clojure.core/fn", -980152636, null), null, new cljs.core.Symbol(null, "reify", "reify", 1885539699, null), null, 
    new cljs.core.Symbol(null, "let", "let", 358118826, null), null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), null, new cljs.core.Symbol("clojure.core", "defmethod", "clojure.core/defmethod", -346593352, null), null, new cljs.core.Symbol("clojure.core", "extend-protocol", "clojure.core/extend-protocol", -1004430087, null), null], null), null);
    return op;
  };
  if (typeof clairvoyant.core.t23818 !== "undefined") {
  } else {
    clairvoyant.core.t23818 = function(has_bindings_QMARK_, log_binding, meta23819) {
      this.has_bindings_QMARK_ = has_bindings_QMARK_;
      this.log_binding = log_binding;
      this.meta23819 = meta23819;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clairvoyant.core.t23818.cljs$lang$type = true;
    clairvoyant.core.t23818.cljs$lang$ctorStr = "clairvoyant.core/t23818";
    clairvoyant.core.t23818.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "clairvoyant.core/t23818");
    };
    clairvoyant.core.t23818.prototype.clairvoyant$core$ITraceError$ = true;
    clairvoyant.core.t23818.prototype.clairvoyant$core$ITraceError$_trace_error$arity$2 = function(_, p__23821) {
      var self__ = this;
      var map__23822 = p__23821;
      var map__23822__$1 = cljs.core.seq_QMARK_.call(null, map__23822) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23822) : map__23822;
      var error = cljs.core.get.call(null, map__23822__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
      var form = cljs.core.get.call(null, map__23822__$1, new cljs.core.Keyword(null, "form", "form", -1624062471));
      var op = cljs.core.get.call(null, map__23822__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), null], null), null)).call(null, op))) {
        return console.error(error.stack);
      } else {
        if (cljs.core.truth_(self__.has_bindings_QMARK_.call(null, op))) {
          console.groupEnd();
          console.error(error.stack);
          return console.groupEnd();
        } else {
          return null;
        }
      }
    };
    clairvoyant.core.t23818.prototype.clairvoyant$core$ITraceExit$ = true;
    clairvoyant.core.t23818.prototype.clairvoyant$core$ITraceExit$_trace_exit$arity$2 = function(_, p__23823) {
      var self__ = this;
      var map__23824 = p__23823;
      var map__23824__$1 = cljs.core.seq_QMARK_.call(null, map__23824) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23824) : map__23824;
      var exit = cljs.core.get.call(null, map__23824__$1, new cljs.core.Keyword(null, "exit", "exit", 351849638));
      var op = cljs.core.get.call(null, map__23824__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), null], null), null)).call(null, op))) {
        console.info(exit);
        return console.groupEnd();
      } else {
        if (cljs.core.truth_(self__.has_bindings_QMARK_.call(null, op))) {
          console.groupEnd();
          console.info(exit);
          return console.groupEnd();
        } else {
          return null;
        }
      }
    };
    clairvoyant.core.t23818.prototype.clairvoyant$core$ITraceEnter$ = true;
    clairvoyant.core.t23818.prototype.clairvoyant$core$ITraceEnter$_trace_enter$arity$2 = function(_, p__23825) {
      var self__ = this;
      var map__23826 = p__23825;
      var map__23826__$1 = cljs.core.seq_QMARK_.call(null, map__23826) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23826) : map__23826;
      var form = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "form", "form", -1624062471));
      var args = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "args", "args", 1315556576));
      var dispatch_val = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "dispatch-val", "dispatch-val", -1571470527));
      var protocol = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "protocol", "protocol", 652470118));
      var init = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
      var ns = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
      var name = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var arglist = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "arglist", "arglist", -1808272150));
      var op = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
      var anonymous_QMARK_ = cljs.core.get.call(null, map__23826__$1, new cljs.core.Keyword(null, "anonymous?", "anonymous?", 374098995));
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [new cljs.core.Symbol(null, "defmethod", "defmethod", -579171823, null), null, new cljs.core.Symbol("clojure.core", "reify", "clojure.core/reify", 562538906, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "defn", "defn", -126010802, null), null, new cljs.core.Symbol(null, "extend-protocol", "extend-protocol", 306378578, null), null, 
      new cljs.core.Symbol(null, "extend-type", "extend-type", 1123355921, null), null, new cljs.core.Symbol("clojure.core", "defn", "clojure.core/defn", -1504648747, null), null, new cljs.core.Symbol("clojure.core", "extend-type", "clojure.core/extend-type", 1892724878, null), null, new cljs.core.Symbol("clojure.core", "fn", "clojure.core/fn", -980152636, null), null, new cljs.core.Symbol(null, "reify", "reify", 1885539699, null), null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), null, 
      new cljs.core.Symbol("clojure.core", "defmethod", "clojure.core/defmethod", -346593352, null), null, new cljs.core.Symbol("clojure.core", "extend-protocol", "clojure.core/extend-protocol", -1004430087, null), null], null), null)).call(null, op))) {
        var title = cljs.core.truth_(protocol) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol) + " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(arglist) : "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(dispatch_val) ? " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, dispatch_val)) : 
        null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(" " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(arglist)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(anonymous_QMARK_) ? " (anonymous)" : null);
        var arglist__$1 = cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null], null), null), arglist);
        console.groupCollapsed(title);
        return console.groupCollapsed("bindings");
      } else {
        if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("clojure.core", "let", "clojure.core/let", -407137853, null), null, new cljs.core.Symbol(null, "let", "let", 358118826, null), null], null), null)).call(null, op))) {
          var title = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);
          console.groupCollapsed(title);
          return console.groupCollapsed("bindings");
        } else {
          if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), null], null), null)).call(null, op))) {
            return self__.log_binding.call(null, form, init);
          } else {
            return null;
          }
        }
      }
    };
    clairvoyant.core.t23818.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23820) {
      var self__ = this;
      var _23820__$1 = this;
      return self__.meta23819;
    };
    clairvoyant.core.t23818.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23820, meta23819__$1) {
      var self__ = this;
      var _23820__$1 = this;
      return new clairvoyant.core.t23818(self__.has_bindings_QMARK_, self__.log_binding, meta23819__$1);
    };
    clairvoyant.core.__GT_t23818 = function __GT_t23818(has_bindings_QMARK___$1, log_binding__$1, meta23819) {
      return new clairvoyant.core.t23818(has_bindings_QMARK___$1, log_binding__$1, meta23819);
    };
  }
  return new clairvoyant.core.t23818(has_bindings_QMARK_, log_binding, null);
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__24062 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__24062;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__24066 = cljs.core._EQ_;
    var expr__24067 = limit;
    if (cljs.core.truth_(pred__24066.call(null, 1, expr__24067))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__24066.call(null, 2, expr__24067))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__24069 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__24070 = limit__$1 - 1;
            var G__24071 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__24069;
            limit__$1 = G__24070;
            parts = G__24071;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__24072 = index - 1;
        index = G__24072;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___24073 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___24073)) {
        var replacement_24074 = temp__4124__auto___24073;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_24074));
      } else {
        buffer.append(ch);
      }
      var G__24075 = index + 1;
      index = G__24075;
      continue;
    }
    break;
  }
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test._STAR_entry_point_STAR_ = true;
cemerick.cljs.test._STAR_test_ctx_STAR_ = null;
cemerick.cljs.test.init_test_environment_STAR_ = function init_test_environment_STAR_(aux_data) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), cljs.core.truth_(cemerick.cljs.test._STAR_test_print_fn_STAR_) ? new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143), cemerick.cljs.test._STAR_test_print_fn_STAR_], null) : null), new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128), cljs.core.List.EMPTY), aux_data));
};
cemerick.cljs.test.init_test_environment = function init_test_environment() {
  var G__24077 = cemerick.cljs.test.init_test_environment_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786), cljs.core.List.EMPTY], null));
  cljs.core.swap_BANG_.call(null, G__24077, cljs.core.assoc, new cljs.core.Keyword(null, "async", "async", 1050769601), cemerick.cljs.test.init_test_environment_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY));
  return G__24077;
};
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name, fn) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.assoc, name, fn);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.TestContext = function(test_env, test_name, __meta, __extmap) {
  this.test_env = test_env;
  this.test_name = test_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4221__auto__, k__4222__auto__) {
  var self__ = this;
  var this__4221__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4221__auto____$1, k__4222__auto__, null);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4223__auto__, k24079, else__4224__auto__) {
  var self__ = this;
  var this__4223__auto____$1 = this;
  var G__24081 = k24079 instanceof cljs.core.Keyword ? k24079.fqn : null;
  switch(G__24081) {
    case "test-name":
      return self__.test_name;
      break;
    case "test-env":
      return self__.test_env;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24079, else__4224__auto__);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4235__auto__, writer__4236__auto__, opts__4237__auto__) {
  var self__ = this;
  var this__4235__auto____$1 = this;
  var pr_pair__4238__auto__ = function(this__4235__auto____$1) {
    return function(keyval__4239__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4236__auto__, cljs.core.pr_writer, "", " ", "", opts__4237__auto__, keyval__4239__auto__);
    };
  }(this__4235__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4236__auto__, pr_pair__4238__auto__, "#cemerick.cljs.test.TestContext{", ", ", "}", opts__4237__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4219__auto__) {
  var self__ = this;
  var this__4219__auto____$1 = this;
  return self__.__meta;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4215__auto__) {
  var self__ = this;
  var this__4215__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4225__auto__) {
  var self__ = this;
  var this__4225__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4216__auto__) {
  var self__ = this;
  var this__4216__auto____$1 = this;
  var h__4037__auto__ = self__.__hash;
  if (!(h__4037__auto__ == null)) {
    return h__4037__auto__;
  } else {
    var h__4037__auto____$1 = cljs.core.hash_imap.call(null, this__4216__auto____$1);
    self__.__hash = h__4037__auto____$1;
    return h__4037__auto____$1;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4217__auto__, other__4218__auto__) {
  var self__ = this;
  var this__4217__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3614__auto__ = other__4218__auto__;
    if (cljs.core.truth_(and__3614__auto__)) {
      return this__4217__auto____$1.constructor === other__4218__auto__.constructor && cljs.core.equiv_map.call(null, this__4217__auto____$1, other__4218__auto__);
    } else {
      return and__3614__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4230__auto__, k__4231__auto__) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), null], null), null), k__4231__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4230__auto____$1), self__.__meta), k__4231__auto__);
  } else {
    return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4231__auto__)), null);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4228__auto__, k__4229__auto__, G__24078) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  var pred__24082 = cljs.core.keyword_identical_QMARK_;
  var expr__24083 = k__4229__auto__;
  if (cljs.core.truth_(pred__24082.call(null, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), expr__24083))) {
    return new cemerick.cljs.test.TestContext(G__24078, self__.test_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24082.call(null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), expr__24083))) {
      return new cemerick.cljs.test.TestContext(self__.test_env, G__24078, self__.__meta, self__.__extmap, null);
    } else {
      return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4229__auto__, G__24078), null);
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4233__auto__) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), 
  self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4220__auto__, G__24078) {
  var self__ = this;
  var this__4220__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, G__24078, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4226__auto__, entry__4227__auto__) {
  var self__ = this;
  var this__4226__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4227__auto__)) {
    return cljs.core._assoc.call(null, this__4226__auto____$1, cljs.core._nth.call(null, entry__4227__auto__, 0), cljs.core._nth.call(null, entry__4227__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4226__auto____$1, entry__4227__auto__);
  }
};
cemerick.cljs.test.TestContext.cljs$lang$type = true;
cemerick.cljs.test.TestContext.cljs$lang$ctorPrSeq = function(this__4255__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.TestContext.cljs$lang$ctorPrWriter = function(this__4255__auto__, writer__4256__auto__) {
  return cljs.core._write.call(null, writer__4256__auto__, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.__GT_TestContext = function __GT_TestContext(test_env, test_name) {
  return new cemerick.cljs.test.TestContext(test_env, test_name);
};
cemerick.cljs.test.map__GT_TestContext = function map__GT_TestContext(G__24080) {
  return new cemerick.cljs.test.TestContext((new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(G__24080), (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(G__24080), null, cljs.core.dissoc.call(null, G__24080, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), new cljs.core.Keyword(null, "test-name", "test-name", -675595913)));
};
cemerick.cljs.test.maybe_deref = function maybe_deref(x) {
  if (function() {
    var G__24087 = x;
    if (G__24087) {
      var bit__4289__auto__ = G__24087.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4289__auto__ || G__24087.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__24087.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__24087);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__24087);
    }
  }()) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cemerick.cljs.test.testing_complete_QMARK_ = function testing_complete_QMARK_(test_env) {
  var map__24089 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__24089__$1 = cljs.core.seq_QMARK_.call(null, map__24089) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24089) : map__24089;
  var remaining = cljs.core.get.call(null, map__24089__$1, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312));
  var running = cljs.core.get.call(null, map__24089__$1, new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558));
  var async = cljs.core.get.call(null, map__24089__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var and__3614__auto__ = cljs.core.empty_QMARK_.call(null, remaining);
  if (and__3614__auto__) {
    var and__3614__auto____$1 = cljs.core.empty_QMARK_.call(null, running);
    if (and__3614__auto____$1) {
      var or__3626__auto__ = async == null;
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        return testing_complete_QMARK_.call(null, async);
      }
    } else {
      return and__3614__auto____$1;
    }
  } else {
    return and__3614__auto__;
  }
};
cemerick.cljs.test.on_async_progress = function on_async_progress(test_env, callback) {
  if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env))) {
    setTimeout(function() {
      return callback.call(null, test_env);
    }, 1);
  } else {
    cljs.core.add_watch.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cemerick.cljs.test.maybe_deref.call(null, test_env)), cljs.core.gensym.call(null, "on-progress"), function(key, ref, old, new$) {
      var vec__24092 = cljs.core.map.call(null, function(p1__24090_SHARP_) {
        return cljs.core.select_keys.call(null, p1__24090_SHARP_, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test", "test", 577538877), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "error", "error", -978969032)], null));
      }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old, new$], null));
      var oldv = cljs.core.nth.call(null, vec__24092, 0, null);
      var newv = cljs.core.nth.call(null, vec__24092, 1, null);
      var complete_QMARK_ = cemerick.cljs.test.testing_complete_QMARK_.call(null, new$);
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = complete_QMARK_;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, oldv, newv);
        }
      }())) {
        callback.call(null, cemerick.cljs.test.maybe_deref.call(null, test_env));
      } else {
      }
      if (cljs.core.truth_(complete_QMARK_)) {
        return cljs.core.remove_watch.call(null, ref, key);
      } else {
        return null;
      }
    });
  }
  return test_env;
};
goog.exportSymbol("cemerick.cljs.test.on_async_progress", cemerick.cljs.test.on_async_progress);
cemerick.cljs.test.on_testing_complete = function on_testing_complete(test_env, callback) {
  return cemerick.cljs.test.on_async_progress.call(null, test_env, function(test_env__$1) {
    if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env__$1))) {
      return callback.call(null, test_env__$1);
    } else {
      return null;
    }
  });
};
goog.exportSymbol("cemerick.cljs.test.on_testing_complete", cemerick.cljs.test.on_testing_complete);
cemerick.cljs.test.testing_vars_str = function testing_vars_str(p__24093) {
  var map__24095 = p__24093;
  var map__24095__$1 = cljs.core.seq_QMARK_.call(null, map__24095) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24095) : map__24095;
  var m = map__24095__$1;
  var test_name = cljs.core.get.call(null, map__24095__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
  var test_env = cljs.core.get.call(null, map__24095__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var line = cljs.core.get.call(null, map__24095__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var file = cljs.core.get.call(null, map__24095__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, function() {
    var or__3626__auto__ = cljs.core.seq.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env))));
    if (or__3626__auto__) {
      return or__3626__auto__;
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, test_name);
    }
  }())) + " (" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(file) + ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(line) + ")";
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str(test_env) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))));
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(test_env, name) {
  return cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
};
cemerick.cljs.test.report = function() {
  var method_table__4505__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4506__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4507__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4508__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4509__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report", new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4509__auto__, method_table__4505__auto__, prefer_table__4506__auto__, method_cache__4507__auto__, cached_hierarchy__4508__auto__);
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), error.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function() {
  var do_report = null;
  var do_report__1 = function(m) {
    return cemerick.cljs.test.report.call(null, function() {
      var G__24100 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
      switch(G__24100) {
        case "error":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)), m);
          break;
        case "fail":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
          break;
        default:
          return m;
      }
    }());
  };
  var do_report__2 = function(p__24096, m) {
    var map__24099 = p__24096;
    var map__24099__$1 = cljs.core.seq_QMARK_.call(null, map__24099) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24099) : map__24099;
    var test_ctx = map__24099__$1;
    var test_name = cljs.core.get.call(null, map__24099__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__24099__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null)))));
    }
    return do_report.call(null, cljs.core.merge.call(null, m, test_ctx));
  };
  do_report = function(p__24096, m) {
    switch(arguments.length) {
      case 1:
        return do_report__1.call(this, p__24096);
      case 2:
        return do_report__2.call(this, p__24096, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  do_report.cljs$core$IFn$_invoke$arity$1 = do_report__1;
  do_report.cljs$core$IFn$_invoke$arity$2 = do_report__2;
  return do_report;
}();
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__24102) {
  var map__24103 = p__24102;
  var map__24103__$1 = cljs.core.seq_QMARK_.call(null, map__24103) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24103) : map__24103;
  var m = map__24103__$1;
  var test_env = cljs.core.get.call(null, map__24103__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_24104 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3626__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24104;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1574159993), function(p__24105) {
  var map__24106 = p__24105;
  var map__24106__$1 = cljs.core.seq_QMARK_.call(null, map__24106) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24106) : map__24106;
  var m = map__24106__$1;
  var test_env = cljs.core.get.call(null, map__24106__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_24107 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3626__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24107;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1706214930), function(p__24108) {
  var map__24109 = p__24108;
  var map__24109__$1 = cljs.core.seq_QMARK_.call(null, map__24109) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24109) : map__24109;
  var m = map__24109__$1;
  var test_env = cljs.core.get.call(null, map__24109__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_24110 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3626__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___24111 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___24111)) {
      var message_24112 = temp__4126__auto___24111;
      cljs.core.println.call(null, message_24112);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24110;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", -978969032), function(p__24113) {
  var map__24114 = p__24113;
  var map__24114__$1 = cljs.core.seq_QMARK_.call(null, map__24114) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24114) : map__24114;
  var m = map__24114__$1;
  var test_env = cljs.core.get.call(null, map__24114__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_24115 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3626__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "error", "error", -978969032));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___24116 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___24116)) {
      var message_24117 = temp__4126__auto___24116;
      cljs.core.println.call(null, message_24117);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24115;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), function(p__24118) {
  var map__24119 = p__24118;
  var map__24119__$1 = cljs.core.seq_QMARK_.call(null, map__24119) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24119) : map__24119;
  var m = map__24119__$1;
  var test_env = cljs.core.get.call(null, map__24119__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_24120 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3626__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709));
    cljs.core.println.call(null, "\nWARNING in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var message = temp__4126__auto__;
      return cljs.core.println.call(null, message);
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24120;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 380847952), function(p__24121) {
  var map__24122 = p__24121;
  var map__24122__$1 = cljs.core.seq_QMARK_.call(null, map__24122) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24122) : map__24122;
  var test_env = map__24122__$1;
  var error = cljs.core.get.call(null, map__24122__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__24122__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var pass = cljs.core.get.call(null, map__24122__$1, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  var test = cljs.core.get.call(null, map__24122__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
  var _STAR_print_fn_STAR_24123 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3626__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cljs.core.println.call(null, "\nRan", test, "tests containing", pass + fail + error, "assertions.");
    var temp__4124__auto__ = function() {
      var and__3614__auto__ = cljs.core.not.call(null, cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env));
      if (and__3614__auto__) {
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, cljs.core.juxt.call(null, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312), new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env)))));
      } else {
        return and__3614__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pending_count = temp__4124__auto__;
      return cljs.core.println.call(null, "Waiting on", pending_count, "asynchronous test" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pending_count > 1 ? "s" : null) + " to complete.");
    } else {
      return cljs.core.println.call(null, "Testing complete:", fail, "failures,", error, "errors.");
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24123;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), function(p__24124) {
  var map__24125 = p__24124;
  var map__24125__$1 = cljs.core.seq_QMARK_.call(null, map__24125) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24125) : map__24125;
  var m = map__24125__$1;
  var async = cljs.core.get.call(null, map__24125__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var test_env = cljs.core.get.call(null, map__24125__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var ns = cljs.core.get.call(null, map__24125__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var _STAR_print_fn_STAR_24126 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3626__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.println.call(null, "\nTesting", ns, cljs.core.truth_(async) ? "(async)" : "");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_24126;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), function(p__24127) {
  var map__24128 = p__24127;
  var map__24128__$1 = cljs.core.seq_QMARK_.call(null, map__24128) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24128) : map__24128;
  var m = map__24128__$1;
  var test_env = cljs.core.get.call(null, map__24128__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), function(p__24129) {
  var map__24130 = p__24129;
  var map__24130__$1 = cljs.core.seq_QMARK_.call(null, map__24130) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24130) : map__24130;
  var m = map__24130__$1;
  var test_env = cljs.core.get.call(null, map__24130__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), function(p__24131) {
  var map__24132 = p__24131;
  var map__24132__$1 = cljs.core.seq_QMARK_.call(null, map__24132) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24132) : map__24132;
  var m = map__24132__$1;
  var test_env = cljs.core.get.call(null, map__24132__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      fixture_fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__24133) {
    var ns_sym = cljs.core.first(arglist__24133);
    arglist__24133 = cljs.core.next(arglist__24133);
    var fixture_type = cljs.core.first(arglist__24133);
    var fixture_fns = cljs.core.rest(arglist__24133);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.async_test_QMARK_ = function async_test_QMARK_(test_fn) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, test_fn)));
};
cemerick.cljs.test.test_async_fn = function test_async_fn(async_test_env, test_name, test_fn) {
  cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), test_fn, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name], null));
  cemerick.cljs.test.inc_report_counter.call(null, async_test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
  return test_fn.call(null, new cemerick.cljs.test.TestContext(async_test_env, test_name));
};
cemerick.cljs.test.start_next_async_test = function start_next_async_test(async_test_env) {
  var next_test = cljs.core.atom.call(null, function() {
    return null;
  });
  cljs.core.swap_BANG_.call(null, async_test_env, function(next_test) {
    return function(env) {
      var temp__4124__auto__ = function() {
        var and__3614__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(env));
        if (and__3614__auto__) {
          return cljs.core.first.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(env));
        } else {
          return and__3614__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__24135 = temp__4124__auto__;
        var name = cljs.core.nth.call(null, vec__24135, 0, null);
        var testfn = cljs.core.nth.call(null, vec__24135, 1, null);
        cljs.core.reset_BANG_.call(null, next_test, testfn);
        var ns_24136 = cljs.core.namespace.call(null, name);
        if (cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, async_test_env)), ns_24136)) {
        } else {
          cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_24136, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "async", "async", 1050769601), true], null));
          cljs.core.alter_meta_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), ns_24136);
        }
        return cljs.core.update_in.call(null, cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.dissoc, name), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.assoc, 
        name, new Date);
      } else {
        return env;
      }
    };
  }(next_test));
  setTimeout(function(next_test) {
    return function() {
      return cljs.core.deref.call(null, next_test).call(null);
    };
  }(next_test), 1);
  return async_test_env;
};
cemerick.cljs.test.squelch_internals = function squelch_internals(test_env) {
  var G__24141 = test_env;
  cljs.core.swap_BANG_.call(null, G__24141, function(G__24141) {
    return function(p1__24137_SHARP_) {
      return cljs.core.reduce.call(null, function(G__24141) {
        return function(env, p__24142) {
          var vec__24143 = p__24142;
          var k = cljs.core.nth.call(null, vec__24143, 0, null);
          var v = cljs.core.nth.call(null, vec__24143, 1, null);
          if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, k), cljs.core.namespace.call(null, new cljs.core.Keyword("cemerick.cljs.test", "foo", "cemerick.cljs.test/foo", -1669146357)))) {
            return env;
          } else {
            return cljs.core.assoc.call(null, env, k, v);
          }
        };
      }(G__24141), cljs.core.PersistentArrayMap.EMPTY, p1__24137_SHARP_);
    };
  }(G__24141));
  return G__24141;
};
cemerick.cljs.test.finish_test_entry_point = function finish_test_entry_point(entry_point_QMARK_, test_env) {
  if (cljs.core.truth_(entry_point_QMARK_)) {
    if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))))) {
      cljs.core.swap_BANG_.call(null, test_env, cljs.core.dissoc, new cljs.core.Keyword(null, "async", "async", 1050769601));
    } else {
      cemerick.cljs.test.start_next_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)));
    }
    return cljs.core.deref.call(null, cemerick.cljs.test.squelch_internals.call(null, test_env));
  } else {
    return test_env;
  }
};
cemerick.cljs.test.schedule_async_test = function schedule_async_test(async_test_env, test_name, test_fn) {
  cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.fnil.call(null, cljs.core.assoc, cljs.core.sorted_map.call(null)), test_name, cljs.core.with_meta.call(null, function() {
    return cemerick.cljs.test.test_async_fn.call(null, async_test_env, test_name, test_fn);
  }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), test_name], null)));
  return async_test_env;
};
cemerick.cljs.test.done_STAR_ = function() {
  var done_STAR_ = null;
  var done_STAR___1 = function(p__24145) {
    var map__24149 = p__24145;
    var map__24149__$1 = cljs.core.seq_QMARK_.call(null, map__24149) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24149) : map__24149;
    var test_ctx = map__24149__$1;
    var test_name = cljs.core.get.call(null, map__24149__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var async_test_env = cljs.core.get.call(null, map__24149__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null)))));
    }
    var first_call_QMARK_ = cljs.core.atom.call(null, false);
    cljs.core.swap_BANG_.call(null, async_test_env, function(first_call_QMARK_, map__24149, map__24149__$1, test_ctx, test_name, async_test_env) {
      return function(env) {
        cljs.core.reset_BANG_.call(null, first_call_QMARK_, cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).cljs$core$IFn$_invoke$arity$1(env), test_name));
        return cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.dissoc, test_name);
      };
    }(first_call_QMARK_, map__24149, map__24149__$1, test_ctx, test_name, async_test_env));
    if (cljs.core.truth_(cljs.core.deref.call(null, first_call_QMARK_))) {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), test_name], null), test_ctx));
      if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, async_test_env))) {
        cemerick.cljs.test.squelch_internals.call(null, async_test_env);
      } else {
        cemerick.cljs.test.start_next_async_test.call(null, async_test_env);
      }
    } else {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), new cljs.core.Keyword(null, "message", "message", -406056002), "`(done)` called multiple times to signal end-of-test"], null), test_ctx));
    }
    return async_test_env;
  };
  var done_STAR___2 = function(p__24144, error) {
    var map__24148 = p__24144;
    var map__24148__$1 = cljs.core.seq_QMARK_.call(null, map__24148) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24148) : map__24148;
    var test_ctx = map__24148__$1;
    var test_name = cljs.core.get.call(null, map__24148__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__24148__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null)))));
    }
    cemerick.cljs.test.do_report.call(null, cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    error], null), test_ctx)));
    return done_STAR_.call(null, test_ctx);
  };
  done_STAR_ = function(p__24144, error) {
    switch(arguments.length) {
      case 1:
        return done_STAR___1.call(this, p__24144);
      case 2:
        return done_STAR___2.call(this, p__24144, error);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  done_STAR_.cljs$core$IFn$_invoke$arity$1 = done_STAR___1;
  done_STAR_.cljs$core$IFn$_invoke$arity$2 = done_STAR___2;
  return done_STAR_;
}();
cemerick.cljs.test.stop = function stop(async_test_env) {
  return cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.assoc, new cljs.core.Keyword(null, "stop", "stop", -2140911342), true);
};
cemerick.cljs.test.test_function = function() {
  var test_function = null;
  var test_function__1 = function(v) {
    return test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), v);
  };
  var test_function__2 = function(test_env, v) {
    var entry_point_QMARK___19268__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_24153 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      if (cljs.core.fn_QMARK_.call(null, v)) {
      } else {
        throw new Error("Assert failed: test-var must be passed the function to be tested (not a symbol naming it)\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))));
      }
      var map__24154_24156 = cljs.core.meta.call(null, v);
      var map__24154_24157__$1 = cljs.core.seq_QMARK_.call(null, map__24154_24156) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24154_24156) : map__24154_24156;
      var t_24158 = cljs.core.get.call(null, map__24154_24157__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
      var test_name_24159 = cljs.core.get.call(null, map__24154_24157__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var async_QMARK__24160 = cljs.core.get.call(null, map__24154_24157__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
      if (cljs.core.truth_(t_24158)) {
        if (cljs.core.truth_(async_QMARK__24160)) {
          cemerick.cljs.test.schedule_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), test_name_24159, t_24158);
        } else {
          try {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.conj, function() {
              var or__3626__auto__ = test_name_24159;
              if (cljs.core.truth_(or__3626__auto__)) {
                return or__3626__auto__;
              } else {
                return v;
              }
            }());
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_24159], null));
            cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
            try {
              t_24158.call(null, new cemerick.cljs.test.TestContext(test_env, test_name_24159));
            } catch (e24155) {
              if (e24155 instanceof Error) {
                var e_24161 = e24155;
                cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_24159, new cljs.core.Keyword(null, 
                "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e_24161], null));
              } else {
                throw e24155;
              }
            }
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_24159], null));
          } finally {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.pop);
          }
        }
      } else {
      }
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___19268__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_24153;
    }
  };
  test_function = function(test_env, v) {
    switch(arguments.length) {
      case 1:
        return test_function__1.call(this, test_env);
      case 2:
        return test_function__2.call(this, test_env, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_function.cljs$core$IFn$_invoke$arity$1 = test_function__1;
  test_function.cljs$core$IFn$_invoke$arity$2 = test_function__2;
  return test_function;
}();
cemerick.cljs.test.test_all_vars = function() {
  var test_all_vars = null;
  var test_all_vars__1 = function(ns_sym) {
    return test_all_vars.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_all_vars__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___19268__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_24170 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var tests_24175 = cljs.core.filter.call(null, function(_STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__) {
        return function(p1__24162_SHARP_) {
          return(new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__24162_SHARP_));
        };
      }(_STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__), cljs.core.vals.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym)));
      var once_fixture_fn_24176 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", -262568523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      var each_fixture_fn_24177 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 940016129)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      once_fixture_fn_24176.call(null, function(once_fixture_fn_24176, each_fixture_fn_24177, tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__) {
        return function() {
          var seq__24171 = cljs.core.seq.call(null, cljs.core.remove.call(null, cemerick.cljs.test.async_test_QMARK_, tests_24175));
          var chunk__24172 = null;
          var count__24173 = 0;
          var i__24174 = 0;
          while (true) {
            if (i__24174 < count__24173) {
              var v = cljs.core._nth.call(null, chunk__24172, i__24174);
              each_fixture_fn_24177.call(null, function(seq__24171, chunk__24172, count__24173, i__24174, v, once_fixture_fn_24176, each_fixture_fn_24177, tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__) {
                return function() {
                  return cemerick.cljs.test.test_function.call(null, test_env, v);
                };
              }(seq__24171, chunk__24172, count__24173, i__24174, v, once_fixture_fn_24176, each_fixture_fn_24177, tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__));
              var G__24178 = seq__24171;
              var G__24179 = chunk__24172;
              var G__24180 = count__24173;
              var G__24181 = i__24174 + 1;
              seq__24171 = G__24178;
              chunk__24172 = G__24179;
              count__24173 = G__24180;
              i__24174 = G__24181;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__24171);
              if (temp__4126__auto__) {
                var seq__24171__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__24171__$1)) {
                  var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__24171__$1);
                  var G__24182 = cljs.core.chunk_rest.call(null, seq__24171__$1);
                  var G__24183 = c__4395__auto__;
                  var G__24184 = cljs.core.count.call(null, c__4395__auto__);
                  var G__24185 = 0;
                  seq__24171 = G__24182;
                  chunk__24172 = G__24183;
                  count__24173 = G__24184;
                  i__24174 = G__24185;
                  continue;
                } else {
                  var v = cljs.core.first.call(null, seq__24171__$1);
                  each_fixture_fn_24177.call(null, function(seq__24171, chunk__24172, count__24173, i__24174, v, seq__24171__$1, temp__4126__auto__, once_fixture_fn_24176, each_fixture_fn_24177, tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__) {
                    return function() {
                      return cemerick.cljs.test.test_function.call(null, test_env, v);
                    };
                  }(seq__24171, chunk__24172, count__24173, i__24174, v, seq__24171__$1, temp__4126__auto__, once_fixture_fn_24176, each_fixture_fn_24177, tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__));
                  var G__24186 = cljs.core.next.call(null, seq__24171__$1);
                  var G__24187 = null;
                  var G__24188 = 0;
                  var G__24189 = 0;
                  seq__24171 = G__24186;
                  chunk__24172 = G__24187;
                  count__24173 = G__24188;
                  i__24174 = G__24189;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(once_fixture_fn_24176, each_fixture_fn_24177, tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__));
      cljs.core.reduce.call(null, function(tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__) {
        return function(p1__24163_SHARP_, p2__24164_SHARP_) {
          return cljs.core.apply.call(null, cemerick.cljs.test.schedule_async_test, p1__24163_SHARP_, p2__24164_SHARP_);
        };
      }(tests_24175, _STAR_entry_point_STAR_24170, entry_point_QMARK___19268__auto__), (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "test", "test", 577538877)), cljs.core.meta), cljs.core.filter.call(null, cemerick.cljs.test.async_test_QMARK_, tests_24175)));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___19268__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_24170;
    }
  };
  test_all_vars = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_all_vars__1.call(this, test_env);
      case 2:
        return test_all_vars__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_all_vars.cljs$core$IFn$_invoke$arity$1 = test_all_vars__1;
  test_all_vars.cljs$core$IFn$_invoke$arity$2 = test_all_vars__2;
  return test_all_vars;
}();
cemerick.cljs.test.test_ns = function() {
  var test_ns = null;
  var test_ns__1 = function(ns_sym) {
    return test_ns.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_ns__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___19268__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_24191 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      var temp__4124__auto___24192 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
      if (cljs.core.truth_(temp__4124__auto___24192)) {
        var test_hook_24193 = temp__4124__auto___24192;
        test_hook_24193.call(null, test_env);
      } else {
        cemerick.cljs.test.test_all_vars.call(null, test_env, ns_sym);
      }
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___19268__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_24191;
    }
  };
  test_ns = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_ns__1.call(this, test_env);
      case 2:
        return test_ns__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_ns.cljs$core$IFn$_invoke$arity$1 = test_ns__1;
  test_ns.cljs$core$IFn$_invoke$arity$2 = test_ns__2;
  return test_ns;
}();
cemerick.cljs.test.test_summary = function test_summary(test_env) {
  var test_env__$1 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  return cemerick.cljs.test.do_report.call(null, cljs.core.assoc.call(null, cljs.core.merge_with.call(null, cljs.core._PLUS_, test_env__$1, cemerick.cljs.test.maybe_deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env__$1))), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952)));
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var vec__24200 = cljs.core.first.call(null, namespaces) instanceof cljs.core.Atom ? namespaces : cljs.core.cons.call(null, cemerick.cljs.test.init_test_environment.call(null), namespaces);
    var test_env = cljs.core.nth.call(null, vec__24200, 0, null);
    var namespaces__$1 = cljs.core.nthnext.call(null, vec__24200, 1);
    var entry_point_QMARK___19268__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_24201 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var seq__24202_24206 = cljs.core.seq.call(null, cljs.core.distinct.call(null, namespaces__$1));
      var chunk__24203_24207 = null;
      var count__24204_24208 = 0;
      var i__24205_24209 = 0;
      while (true) {
        if (i__24205_24209 < count__24204_24208) {
          var ns_24210 = cljs.core._nth.call(null, chunk__24203_24207, i__24205_24209);
          cemerick.cljs.test.test_ns.call(null, test_env, ns_24210);
          var G__24211 = seq__24202_24206;
          var G__24212 = chunk__24203_24207;
          var G__24213 = count__24204_24208;
          var G__24214 = i__24205_24209 + 1;
          seq__24202_24206 = G__24211;
          chunk__24203_24207 = G__24212;
          count__24204_24208 = G__24213;
          i__24205_24209 = G__24214;
          continue;
        } else {
          var temp__4126__auto___24215 = cljs.core.seq.call(null, seq__24202_24206);
          if (temp__4126__auto___24215) {
            var seq__24202_24216__$1 = temp__4126__auto___24215;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__24202_24216__$1)) {
              var c__4395__auto___24217 = cljs.core.chunk_first.call(null, seq__24202_24216__$1);
              var G__24218 = cljs.core.chunk_rest.call(null, seq__24202_24216__$1);
              var G__24219 = c__4395__auto___24217;
              var G__24220 = cljs.core.count.call(null, c__4395__auto___24217);
              var G__24221 = 0;
              seq__24202_24206 = G__24218;
              chunk__24203_24207 = G__24219;
              count__24204_24208 = G__24220;
              i__24205_24209 = G__24221;
              continue;
            } else {
              var ns_24222 = cljs.core.first.call(null, seq__24202_24216__$1);
              cemerick.cljs.test.test_ns.call(null, test_env, ns_24222);
              var G__24223 = cljs.core.next.call(null, seq__24202_24216__$1);
              var G__24224 = null;
              var G__24225 = 0;
              var G__24226 = 0;
              seq__24202_24206 = G__24223;
              chunk__24203_24207 = G__24224;
              count__24204_24208 = G__24225;
              i__24205_24209 = G__24226;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cemerick.cljs.test.on_testing_complete.call(null, test_env, cemerick.cljs.test.test_summary);
      cemerick.cljs.test.test_summary.call(null, test_env);
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___19268__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_24201;
    }
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      namespaces = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return run_tests_STAR___delegate.call(this, namespaces);
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__24227) {
    var namespaces = cljs.core.seq(arglist__24227);
    return run_tests_STAR___delegate(namespaces);
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__24228_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__24228_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(test_env) {
  var map__24230 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__24230__$1 = cljs.core.seq_QMARK_.call(null, map__24230) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24230) : map__24230;
  var async = cljs.core.get.call(null, map__24230__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var error = cljs.core.get.call(null, map__24230__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__24230__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var and__3614__auto__ = cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env);
  if (cljs.core.truth_(and__3614__auto__)) {
    var and__3614__auto____$1 = function() {
      var or__3626__auto__ = fail;
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return 0;
      }
    }() === 0;
    if (and__3614__auto____$1) {
      var and__3614__auto____$2 = function() {
        var or__3626__auto__ = error;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return 0;
        }
      }() === 0;
      if (and__3614__auto____$2) {
        var or__3626__auto__ = async == null;
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          return successful_QMARK_.call(null, async);
        }
      } else {
        return and__3614__auto____$2;
      }
    } else {
      return and__3614__auto____$1;
    }
  } else {
    return and__3614__auto__;
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("sailing_study_guide.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clairvoyant.core");
goog.require("clairvoyant.core");
goog.require("cljs.core.async");
goog.require("cemerick.cljs.test");
goog.require("cemerick.cljs.test");
sailing_study_guide.dispatch.fixture = function fixture(f) {
  var default_tag = new cljs.core.Keyword(null, "foo", "foo", 1268894036);
  var default_payload = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), default_tag, new cljs.core.Keyword(null, "message", "message", -406056002), 42], null);
  return f.call(null);
};
sailing_study_guide.dispatch.fixture_test = function fixture_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), sailing_study_guide.dispatch.fixture_test);
};
sailing_study_guide.dispatch.fixture_test = cljs.core.with_meta.call(null, sailing_study_guide.dispatch.fixture_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 23, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 13, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), 
"/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/dispatch.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("sailing-study-guide.dispatch", "fixture-test", "sailing-study-guide.dispatch/fixture-test", -1393663553, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 23, new cljs.core.Keyword(null, 
"end-line", "end-line", 1837326455), 13, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 13, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/dispatch.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function fixture_test_test(test_ctx__10577__auto__) {
  var _test_ctx = test_ctx__10577__auto__;
  var async_QMARK___10492__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_10743 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10492__auto__) ? null : _test_ctx;
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___10492__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_10745 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      try {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10492__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            var values__10512__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, sailing_study_guide.dispatch.default_tag), new cljs.core.Keyword(null, "foo", "foo", 1268894036));
            var result__10513__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10512__auto__);
            if (result__10513__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__10513__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "foo", "foo", 1268894036), new cljs.core.Symbol(null, "default-tag", "default-tag", 1271969070, null)), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10512__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "foo", "foo", 1268894036), new cljs.core.Symbol(null, "default-tag", "default-tag", 1271969070, null)), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10512__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            return result__10513__auto__;
          } catch (e10747) {
            if (e10747 instanceof Error) {
              var t__10549__auto__ = e10747;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "foo", "foo", 1268894036), new cljs.core.Symbol(null, "default-tag", "default-tag", 1271969070, 
              null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10549__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              throw e10747;
            }
          }
        } catch (e10746) {
          if (e10746 instanceof Error) {
            var e__10493__auto__ = e10746;
            if (cljs.core.truth_(async_QMARK___10492__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__10493__auto__);
            } else {
              throw e__10493__auto__;
            }
          } else {
            throw e10746;
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_10745;
      }
    } catch (e10744) {
      if (e10744 instanceof Error) {
        var e__10493__auto__ = e10744;
        if (cljs.core.truth_(async_QMARK___10492__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10493__auto__);
        } else {
          throw e__10493__auto__;
        }
      } else {
        throw e10744;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_10743;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.dispatch", "sailing-study-guide.dispatch", 876618739, null), new cljs.core.Symbol("sailing-study-guide.dispatch", "fixture-test", "sailing-study-guide.dispatch/fixture-test", -1393663553, null), sailing_study_guide.dispatch.fixture_test);
sailing_study_guide.dispatch.register_test = function register_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), sailing_study_guide.dispatch.register_test);
};
sailing_study_guide.dispatch.register_test = cljs.core.with_meta.call(null, sailing_study_guide.dispatch.register_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", "line", 
212345235), 16, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/dispatch.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("sailing-study-guide.dispatch", "register-test", "sailing-study-guide.dispatch/register-test", -352135875, null), new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, 
"async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 16, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", "line", 212345235), 16, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/dispatch.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 
577538877), function register_test_test(test_ctx__10577__auto__) {
  var _test_ctx = test_ctx__10577__auto__;
  var async_QMARK___10492__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_10867 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10492__auto__) ? null : _test_ctx;
    try {
      var c = sailing_study_guide.dispatch.register.call(null, sailing_study_guide.dispatch.default_tag);
      cljs.core.async.put_BANG_.call(null, c, sailing_study_guide.dispatch.default_payload);
      var c__6831__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6831__auto__, c, _STAR_test_ctx_STAR_10867, _test_ctx, async_QMARK___10492__auto__) {
        return function() {
          var f__6832__auto__ = function() {
            var switch__6816__auto__ = function(c__6831__auto__, c, _STAR_test_ctx_STAR_10867, _test_ctx, async_QMARK___10492__auto__) {
              return function(state_10944) {
                var state_val_10945 = state_10944[1];
                if (state_val_10945 === 7) {
                  var inst_10881 = state_10944[2];
                  var inst_10882 = cemerick.cljs.test._STAR_test_ctx_STAR_ = inst_10881;
                  var state_10944__$1 = function() {
                    var statearr_10946 = state_10944;
                    statearr_10946[7] = inst_10882;
                    return statearr_10946;
                  }();
                  var statearr_10947_10986 = state_10944__$1;
                  statearr_10947_10986[2] = null;
                  statearr_10947_10986[1] = 13;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10945 === 20) {
                    var inst_10907 = state_10944[8];
                    var inst_10914 = state_10944[2];
                    var state_10944__$1 = function() {
                      var statearr_10948 = state_10944;
                      statearr_10948[9] = inst_10914;
                      return statearr_10948;
                    }();
                    if (cljs.core.truth_(inst_10907)) {
                      var statearr_10949_10987 = state_10944__$1;
                      statearr_10949_10987[1] = 21;
                    } else {
                      var statearr_10950_10988 = state_10944__$1;
                      statearr_10950_10988[1] = 22;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10945 === 1) {
                      var inst_10869 = (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx);
                      var inst_10870 = cljs.core.meta.call(null, inst_10869);
                      var inst_10871 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(inst_10870);
                      var state_10944__$1 = function() {
                        var statearr_10951 = state_10944;
                        statearr_10951[10] = inst_10871;
                        return statearr_10951;
                      }();
                      var statearr_10952_10989 = state_10944__$1;
                      statearr_10952_10989[2] = null;
                      statearr_10952_10989[1] = 4;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10945 === 4) {
                        var inst_10871 = state_10944[10];
                        var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_10944, null, null, 3, 2);
                        var state_10944__$1 = state_10944;
                        if (cljs.core.truth_(inst_10871)) {
                          var statearr_10953_10990 = state_10944__$1;
                          statearr_10953_10990[1] = 5;
                        } else {
                          var statearr_10954_10991 = state_10944__$1;
                          statearr_10954_10991[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10945 === 15) {
                          var inst_10893 = state_10944[2];
                          var inst_10894 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                          var inst_10895 = cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
                          var inst_10896 = [new cljs.core.Keyword(null, "error", "error", -978969032), inst_10895, inst_10893, null];
                          var inst_10897 = cljs.core.PersistentHashMap.fromArrays(inst_10894, inst_10896);
                          var inst_10898 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_10897);
                          var state_10944__$1 = state_10944;
                          var statearr_10955_10992 = state_10944__$1;
                          statearr_10955_10992[2] = inst_10898;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10944__$1);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10945 === 21) {
                            var inst_10906 = state_10944[11];
                            var inst_10916 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                            var inst_10917 = cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
                            var inst_10918 = cljs.core.cons.call(null, cljs.core.not, inst_10906);
                            var inst_10919 = [new cljs.core.Keyword(null, "pass", "pass", 1574159993), inst_10917, inst_10918, null];
                            var inst_10920 = cljs.core.PersistentHashMap.fromArrays(inst_10916, inst_10919);
                            var inst_10921 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_10920);
                            var state_10944__$1 = state_10944;
                            var statearr_10956_10993 = state_10944__$1;
                            statearr_10956_10993[2] = inst_10921;
                            statearr_10956_10993[1] = 23;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10945 === 13) {
                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_10944, 9, Error, null, 8);
                              var state_10944__$1 = state_10944;
                              var statearr_10957_10994 = state_10944__$1;
                              statearr_10957_10994[2] = null;
                              statearr_10957_10994[1] = 16;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10945 === 22) {
                                var inst_10906 = state_10944[11];
                                var inst_10923 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                                var inst_10924 = cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
                                var inst_10925 = cljs.core.List.EMPTY;
                                var inst_10926 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                                var inst_10927 = cljs.core.cons.call(null, inst_10926, inst_10906);
                                var inst_10928 = cljs.core._conj.call(null, inst_10925, inst_10927);
                                var inst_10929 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                                var inst_10930 = cljs.core._conj.call(null, inst_10928, inst_10929);
                                var inst_10931 = [new cljs.core.Keyword(null, "fail", "fail", 1706214930), inst_10924, inst_10930, null];
                                var inst_10932 = cljs.core.PersistentHashMap.fromArrays(inst_10923, inst_10931);
                                var inst_10933 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_10932);
                                var state_10944__$1 = state_10944;
                                var statearr_10958_10995 = state_10944__$1;
                                statearr_10958_10995[2] = inst_10933;
                                statearr_10958_10995[1] = 23;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10945 === 6) {
                                  var state_10944__$1 = state_10944;
                                  var statearr_10959_10996 = state_10944__$1;
                                  statearr_10959_10996[2] = _test_ctx;
                                  statearr_10959_10996[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10945 === 17) {
                                    var inst_10906 = state_10944[11];
                                    var inst_10907 = state_10944[8];
                                    var inst_10902 = state_10944[12];
                                    var inst_10904 = state_10944[2];
                                    var inst_10905 = inst_10904 == null;
                                    var inst_10906__$1 = cljs.core._conj.call(null, inst_10902, inst_10905);
                                    var inst_10907__$1 = cljs.core.apply.call(null, cljs.core.not, inst_10906__$1);
                                    var inst_10908 = inst_10907__$1 instanceof cemerick.cljs.test.TestContext;
                                    var state_10944__$1 = function() {
                                      var statearr_10960 = state_10944;
                                      statearr_10960[11] = inst_10906__$1;
                                      statearr_10960[8] = inst_10907__$1;
                                      return statearr_10960;
                                    }();
                                    if (cljs.core.truth_(inst_10908)) {
                                      var statearr_10961_10997 = state_10944__$1;
                                      statearr_10961_10997[1] = 18;
                                    } else {
                                      var statearr_10962_10998 = state_10944__$1;
                                      statearr_10962_10998[1] = 19;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10945 === 3) {
                                      var inst_10873 = state_10944[2];
                                      var inst_10874 = cemerick.cljs.test._STAR_test_ctx_STAR_ = cemerick.cljs.test._STAR_test_ctx_STAR_;
                                      var state_10944__$1 = function() {
                                        var statearr_10963 = state_10944;
                                        statearr_10963[13] = inst_10873;
                                        statearr_10963[14] = inst_10874;
                                        return statearr_10963;
                                      }();
                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10944__$1);
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10945 === 12) {
                                        var inst_10889 = state_10944[2];
                                        var state_10944__$1 = state_10944;
                                        var statearr_10964_10999 = state_10944__$1;
                                        statearr_10964_10999[2] = inst_10889;
                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10944__$1);
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10945 === 2) {
                                          var inst_10941 = state_10944[2];
                                          var inst_10942 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx);
                                          var state_10944__$1 = function() {
                                            var statearr_10965 = state_10944;
                                            statearr_10965[15] = inst_10941;
                                            return statearr_10965;
                                          }();
                                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10944__$1, inst_10942);
                                        } else {
                                          if (state_val_10945 === 23) {
                                            var inst_10907 = state_10944[8];
                                            var inst_10935 = state_10944[2];
                                            var state_10944__$1 = function() {
                                              var statearr_10966 = state_10944;
                                              statearr_10966[16] = inst_10935;
                                              return statearr_10966;
                                            }();
                                            var statearr_10967_11000 = state_10944__$1;
                                            statearr_10967_11000[2] = inst_10907;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10944__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_10945 === 19) {
                                              var state_10944__$1 = state_10944;
                                              var statearr_10968_11001 = state_10944__$1;
                                              statearr_10968_11001[2] = null;
                                              statearr_10968_11001[1] = 20;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_10945 === 11) {
                                                var inst_10883 = state_10944[17];
                                                var inst_10887 = function() {
                                                  throw inst_10883;
                                                }();
                                                var state_10944__$1 = state_10944;
                                                var statearr_10969_11002 = state_10944__$1;
                                                statearr_10969_11002[2] = inst_10887;
                                                statearr_10969_11002[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_10945 === 9) {
                                                  var inst_10871 = state_10944[10];
                                                  var inst_10883 = state_10944[2];
                                                  var state_10944__$1 = function() {
                                                    var statearr_10970 = state_10944;
                                                    statearr_10970[17] = inst_10883;
                                                    return statearr_10970;
                                                  }();
                                                  if (cljs.core.truth_(inst_10871)) {
                                                    var statearr_10971_11003 = state_10944__$1;
                                                    statearr_10971_11003[1] = 10;
                                                  } else {
                                                    var statearr_10972_11004 = state_10944__$1;
                                                    statearr_10972_11004[1] = 11;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_10945 === 5) {
                                                    var state_10944__$1 = state_10944;
                                                    var statearr_10973_11005 = state_10944__$1;
                                                    statearr_10973_11005[2] = null;
                                                    statearr_10973_11005[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_10945 === 14) {
                                                      var inst_10937 = state_10944[2];
                                                      var state_10944__$1 = state_10944;
                                                      var statearr_10974_11006 = state_10944__$1;
                                                      statearr_10974_11006[2] = inst_10937;
                                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10944__$1);
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_10945 === 16) {
                                                        var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_10944, 15, Error, null, 14);
                                                        var inst_10902 = cljs.core.List.EMPTY;
                                                        var state_10944__$1 = function() {
                                                          var statearr_10975 = state_10944;
                                                          statearr_10975[12] = inst_10902;
                                                          return statearr_10975;
                                                        }();
                                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10944__$1, 17, c);
                                                      } else {
                                                        if (state_val_10945 === 10) {
                                                          var inst_10883 = state_10944[17];
                                                          var inst_10885 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx, inst_10883);
                                                          var state_10944__$1 = state_10944;
                                                          var statearr_10976_11007 = state_10944__$1;
                                                          statearr_10976_11007[2] = inst_10885;
                                                          statearr_10976_11007[1] = 12;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_10945 === 18) {
                                                            var inst_10910 = new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
                                                            var inst_10911 = function() {
                                                              throw inst_10910;
                                                            }();
                                                            var state_10944__$1 = state_10944;
                                                            var statearr_10977_11008 = state_10944__$1;
                                                            statearr_10977_11008[2] = inst_10911;
                                                            statearr_10977_11008[1] = 20;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_10945 === 8) {
                                                              var inst_10939 = state_10944[2];
                                                              var state_10944__$1 = state_10944;
                                                              var statearr_10978_11009 = state_10944__$1;
                                                              statearr_10978_11009[2] = inst_10939;
                                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10944__$1);
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6831__auto__, c, _STAR_test_ctx_STAR_10867, _test_ctx, async_QMARK___10492__auto__);
            return function(switch__6816__auto__, c__6831__auto__, c, _STAR_test_ctx_STAR_10867, _test_ctx, async_QMARK___10492__auto__) {
              return function() {
                var state_machine__6817__auto__ = null;
                var state_machine__6817__auto____0 = function() {
                  var statearr_10982 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_10982[0] = state_machine__6817__auto__;
                  statearr_10982[1] = 1;
                  return statearr_10982;
                };
                var state_machine__6817__auto____1 = function(state_10944) {
                  while (true) {
                    var ret_value__6818__auto__ = function() {
                      try {
                        while (true) {
                          var result__6819__auto__ = switch__6816__auto__.call(null, state_10944);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6819__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6819__auto__;
                          }
                          break;
                        }
                      } catch (e10983) {
                        if (e10983 instanceof Object) {
                          var ex__6820__auto__ = e10983;
                          var statearr_10984_11010 = state_10944;
                          statearr_10984_11010[5] = ex__6820__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10944);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e10983;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6818__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__11011 = state_10944;
                      state_10944 = G__11011;
                      continue;
                    } else {
                      return ret_value__6818__auto__;
                    }
                    break;
                  }
                };
                state_machine__6817__auto__ = function(state_10944) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6817__auto____0.call(this);
                    case 1:
                      return state_machine__6817__auto____1.call(this, state_10944);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6817__auto____0;
                state_machine__6817__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6817__auto____1;
                return state_machine__6817__auto__;
              }();
            }(switch__6816__auto__, c__6831__auto__, c, _STAR_test_ctx_STAR_10867, _test_ctx, async_QMARK___10492__auto__);
          }();
          var state__6833__auto__ = function() {
            var statearr_10985 = f__6832__auto__.call(null);
            statearr_10985[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6831__auto__;
            return statearr_10985;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6833__auto__);
        };
      }(c__6831__auto__, c, _STAR_test_ctx_STAR_10867, _test_ctx, async_QMARK___10492__auto__));
      return c__6831__auto__;
    } catch (e10868) {
      if (e10868 instanceof Error) {
        var e__10493__auto__ = e10868;
        if (cljs.core.truth_(async_QMARK___10492__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10493__auto__);
        } else {
          throw e__10493__auto__;
        }
      } else {
        throw e10868;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_10867;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.dispatch", "sailing-study-guide.dispatch", 876618739, null), new cljs.core.Symbol("sailing-study-guide.dispatch", "register-test", "sailing-study-guide.dispatch/register-test", -352135875, null), sailing_study_guide.dispatch.register_test);
sailing_study_guide.dispatch.use_fixtures.call(null, new cljs.core.Keyword(null, "each", "each", 940016129), sailing_study_guide.dispatch.fixture);
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var a = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__20492) {
    var opts__5575__auto__ = cljs.core.first(arglist__20492);
    var children__5576__auto__ = cljs.core.rest(arglist__20492);
    return a__delegate(opts__5575__auto__, children__5576__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var abbr = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__20493) {
    var opts__5575__auto__ = cljs.core.first(arglist__20493);
    var children__5576__auto__ = cljs.core.rest(arglist__20493);
    return abbr__delegate(opts__5575__auto__, children__5576__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var address = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__20494) {
    var opts__5575__auto__ = cljs.core.first(arglist__20494);
    var children__5576__auto__ = cljs.core.rest(arglist__20494);
    return address__delegate(opts__5575__auto__, children__5576__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var area = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__20495) {
    var opts__5575__auto__ = cljs.core.first(arglist__20495);
    var children__5576__auto__ = cljs.core.rest(arglist__20495);
    return area__delegate(opts__5575__auto__, children__5576__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var article = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__20496) {
    var opts__5575__auto__ = cljs.core.first(arglist__20496);
    var children__5576__auto__ = cljs.core.rest(arglist__20496);
    return article__delegate(opts__5575__auto__, children__5576__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var aside = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__20497) {
    var opts__5575__auto__ = cljs.core.first(arglist__20497);
    var children__5576__auto__ = cljs.core.rest(arglist__20497);
    return aside__delegate(opts__5575__auto__, children__5576__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var audio = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__20498) {
    var opts__5575__auto__ = cljs.core.first(arglist__20498);
    var children__5576__auto__ = cljs.core.rest(arglist__20498);
    return audio__delegate(opts__5575__auto__, children__5576__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var b = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__20499) {
    var opts__5575__auto__ = cljs.core.first(arglist__20499);
    var children__5576__auto__ = cljs.core.rest(arglist__20499);
    return b__delegate(opts__5575__auto__, children__5576__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var base = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__20500) {
    var opts__5575__auto__ = cljs.core.first(arglist__20500);
    var children__5576__auto__ = cljs.core.rest(arglist__20500);
    return base__delegate(opts__5575__auto__, children__5576__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var bdi = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__20501) {
    var opts__5575__auto__ = cljs.core.first(arglist__20501);
    var children__5576__auto__ = cljs.core.rest(arglist__20501);
    return bdi__delegate(opts__5575__auto__, children__5576__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var bdo = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__20502) {
    var opts__5575__auto__ = cljs.core.first(arglist__20502);
    var children__5576__auto__ = cljs.core.rest(arglist__20502);
    return bdo__delegate(opts__5575__auto__, children__5576__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var big = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__20503) {
    var opts__5575__auto__ = cljs.core.first(arglist__20503);
    var children__5576__auto__ = cljs.core.rest(arglist__20503);
    return big__delegate(opts__5575__auto__, children__5576__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var blockquote = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__20504) {
    var opts__5575__auto__ = cljs.core.first(arglist__20504);
    var children__5576__auto__ = cljs.core.rest(arglist__20504);
    return blockquote__delegate(opts__5575__auto__, children__5576__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var body = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__20505) {
    var opts__5575__auto__ = cljs.core.first(arglist__20505);
    var children__5576__auto__ = cljs.core.rest(arglist__20505);
    return body__delegate(opts__5575__auto__, children__5576__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var br = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__20506) {
    var opts__5575__auto__ = cljs.core.first(arglist__20506);
    var children__5576__auto__ = cljs.core.rest(arglist__20506);
    return br__delegate(opts__5575__auto__, children__5576__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var button = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__20507) {
    var opts__5575__auto__ = cljs.core.first(arglist__20507);
    var children__5576__auto__ = cljs.core.rest(arglist__20507);
    return button__delegate(opts__5575__auto__, children__5576__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var canvas = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__20508) {
    var opts__5575__auto__ = cljs.core.first(arglist__20508);
    var children__5576__auto__ = cljs.core.rest(arglist__20508);
    return canvas__delegate(opts__5575__auto__, children__5576__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var caption = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__20509) {
    var opts__5575__auto__ = cljs.core.first(arglist__20509);
    var children__5576__auto__ = cljs.core.rest(arglist__20509);
    return caption__delegate(opts__5575__auto__, children__5576__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var cite = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__20510) {
    var opts__5575__auto__ = cljs.core.first(arglist__20510);
    var children__5576__auto__ = cljs.core.rest(arglist__20510);
    return cite__delegate(opts__5575__auto__, children__5576__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var code = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__20511) {
    var opts__5575__auto__ = cljs.core.first(arglist__20511);
    var children__5576__auto__ = cljs.core.rest(arglist__20511);
    return code__delegate(opts__5575__auto__, children__5576__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var col = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__20512) {
    var opts__5575__auto__ = cljs.core.first(arglist__20512);
    var children__5576__auto__ = cljs.core.rest(arglist__20512);
    return col__delegate(opts__5575__auto__, children__5576__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var colgroup = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__20513) {
    var opts__5575__auto__ = cljs.core.first(arglist__20513);
    var children__5576__auto__ = cljs.core.rest(arglist__20513);
    return colgroup__delegate(opts__5575__auto__, children__5576__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var data = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__20514) {
    var opts__5575__auto__ = cljs.core.first(arglist__20514);
    var children__5576__auto__ = cljs.core.rest(arglist__20514);
    return data__delegate(opts__5575__auto__, children__5576__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var datalist = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__20515) {
    var opts__5575__auto__ = cljs.core.first(arglist__20515);
    var children__5576__auto__ = cljs.core.rest(arglist__20515);
    return datalist__delegate(opts__5575__auto__, children__5576__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var dd = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__20516) {
    var opts__5575__auto__ = cljs.core.first(arglist__20516);
    var children__5576__auto__ = cljs.core.rest(arglist__20516);
    return dd__delegate(opts__5575__auto__, children__5576__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var del = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__20517) {
    var opts__5575__auto__ = cljs.core.first(arglist__20517);
    var children__5576__auto__ = cljs.core.rest(arglist__20517);
    return del__delegate(opts__5575__auto__, children__5576__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var dfn = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__20518) {
    var opts__5575__auto__ = cljs.core.first(arglist__20518);
    var children__5576__auto__ = cljs.core.rest(arglist__20518);
    return dfn__delegate(opts__5575__auto__, children__5576__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var div = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__20519) {
    var opts__5575__auto__ = cljs.core.first(arglist__20519);
    var children__5576__auto__ = cljs.core.rest(arglist__20519);
    return div__delegate(opts__5575__auto__, children__5576__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var dl = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__20520) {
    var opts__5575__auto__ = cljs.core.first(arglist__20520);
    var children__5576__auto__ = cljs.core.rest(arglist__20520);
    return dl__delegate(opts__5575__auto__, children__5576__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var dt = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__20521) {
    var opts__5575__auto__ = cljs.core.first(arglist__20521);
    var children__5576__auto__ = cljs.core.rest(arglist__20521);
    return dt__delegate(opts__5575__auto__, children__5576__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var em = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__20522) {
    var opts__5575__auto__ = cljs.core.first(arglist__20522);
    var children__5576__auto__ = cljs.core.rest(arglist__20522);
    return em__delegate(opts__5575__auto__, children__5576__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var embed = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__20523) {
    var opts__5575__auto__ = cljs.core.first(arglist__20523);
    var children__5576__auto__ = cljs.core.rest(arglist__20523);
    return embed__delegate(opts__5575__auto__, children__5576__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var fieldset = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__20524) {
    var opts__5575__auto__ = cljs.core.first(arglist__20524);
    var children__5576__auto__ = cljs.core.rest(arglist__20524);
    return fieldset__delegate(opts__5575__auto__, children__5576__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var figcaption = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__20525) {
    var opts__5575__auto__ = cljs.core.first(arglist__20525);
    var children__5576__auto__ = cljs.core.rest(arglist__20525);
    return figcaption__delegate(opts__5575__auto__, children__5576__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var figure = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__20526) {
    var opts__5575__auto__ = cljs.core.first(arglist__20526);
    var children__5576__auto__ = cljs.core.rest(arglist__20526);
    return figure__delegate(opts__5575__auto__, children__5576__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var footer = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__20527) {
    var opts__5575__auto__ = cljs.core.first(arglist__20527);
    var children__5576__auto__ = cljs.core.rest(arglist__20527);
    return footer__delegate(opts__5575__auto__, children__5576__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var form = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__20528) {
    var opts__5575__auto__ = cljs.core.first(arglist__20528);
    var children__5576__auto__ = cljs.core.rest(arglist__20528);
    return form__delegate(opts__5575__auto__, children__5576__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var h1 = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__20529) {
    var opts__5575__auto__ = cljs.core.first(arglist__20529);
    var children__5576__auto__ = cljs.core.rest(arglist__20529);
    return h1__delegate(opts__5575__auto__, children__5576__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var h2 = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__20530) {
    var opts__5575__auto__ = cljs.core.first(arglist__20530);
    var children__5576__auto__ = cljs.core.rest(arglist__20530);
    return h2__delegate(opts__5575__auto__, children__5576__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var h3 = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__20531) {
    var opts__5575__auto__ = cljs.core.first(arglist__20531);
    var children__5576__auto__ = cljs.core.rest(arglist__20531);
    return h3__delegate(opts__5575__auto__, children__5576__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var h4 = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__20532) {
    var opts__5575__auto__ = cljs.core.first(arglist__20532);
    var children__5576__auto__ = cljs.core.rest(arglist__20532);
    return h4__delegate(opts__5575__auto__, children__5576__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var h5 = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__20533) {
    var opts__5575__auto__ = cljs.core.first(arglist__20533);
    var children__5576__auto__ = cljs.core.rest(arglist__20533);
    return h5__delegate(opts__5575__auto__, children__5576__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var h6 = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__20534) {
    var opts__5575__auto__ = cljs.core.first(arglist__20534);
    var children__5576__auto__ = cljs.core.rest(arglist__20534);
    return h6__delegate(opts__5575__auto__, children__5576__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var head = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__20535) {
    var opts__5575__auto__ = cljs.core.first(arglist__20535);
    var children__5576__auto__ = cljs.core.rest(arglist__20535);
    return head__delegate(opts__5575__auto__, children__5576__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var header = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__20536) {
    var opts__5575__auto__ = cljs.core.first(arglist__20536);
    var children__5576__auto__ = cljs.core.rest(arglist__20536);
    return header__delegate(opts__5575__auto__, children__5576__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var hr = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__20537) {
    var opts__5575__auto__ = cljs.core.first(arglist__20537);
    var children__5576__auto__ = cljs.core.rest(arglist__20537);
    return hr__delegate(opts__5575__auto__, children__5576__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var html = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__20538) {
    var opts__5575__auto__ = cljs.core.first(arglist__20538);
    var children__5576__auto__ = cljs.core.rest(arglist__20538);
    return html__delegate(opts__5575__auto__, children__5576__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var i = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__20539) {
    var opts__5575__auto__ = cljs.core.first(arglist__20539);
    var children__5576__auto__ = cljs.core.rest(arglist__20539);
    return i__delegate(opts__5575__auto__, children__5576__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var iframe = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__20540) {
    var opts__5575__auto__ = cljs.core.first(arglist__20540);
    var children__5576__auto__ = cljs.core.rest(arglist__20540);
    return iframe__delegate(opts__5575__auto__, children__5576__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var img = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__20541) {
    var opts__5575__auto__ = cljs.core.first(arglist__20541);
    var children__5576__auto__ = cljs.core.rest(arglist__20541);
    return img__delegate(opts__5575__auto__, children__5576__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var ins = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__20542) {
    var opts__5575__auto__ = cljs.core.first(arglist__20542);
    var children__5576__auto__ = cljs.core.rest(arglist__20542);
    return ins__delegate(opts__5575__auto__, children__5576__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var kbd = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__20543) {
    var opts__5575__auto__ = cljs.core.first(arglist__20543);
    var children__5576__auto__ = cljs.core.rest(arglist__20543);
    return kbd__delegate(opts__5575__auto__, children__5576__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var keygen = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__20544) {
    var opts__5575__auto__ = cljs.core.first(arglist__20544);
    var children__5576__auto__ = cljs.core.rest(arglist__20544);
    return keygen__delegate(opts__5575__auto__, children__5576__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var label = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__20545) {
    var opts__5575__auto__ = cljs.core.first(arglist__20545);
    var children__5576__auto__ = cljs.core.rest(arglist__20545);
    return label__delegate(opts__5575__auto__, children__5576__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var legend = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__20546) {
    var opts__5575__auto__ = cljs.core.first(arglist__20546);
    var children__5576__auto__ = cljs.core.rest(arglist__20546);
    return legend__delegate(opts__5575__auto__, children__5576__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var li = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__20547) {
    var opts__5575__auto__ = cljs.core.first(arglist__20547);
    var children__5576__auto__ = cljs.core.rest(arglist__20547);
    return li__delegate(opts__5575__auto__, children__5576__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var link = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__20548) {
    var opts__5575__auto__ = cljs.core.first(arglist__20548);
    var children__5576__auto__ = cljs.core.rest(arglist__20548);
    return link__delegate(opts__5575__auto__, children__5576__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var main = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__20549) {
    var opts__5575__auto__ = cljs.core.first(arglist__20549);
    var children__5576__auto__ = cljs.core.rest(arglist__20549);
    return main__delegate(opts__5575__auto__, children__5576__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var map = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__20550) {
    var opts__5575__auto__ = cljs.core.first(arglist__20550);
    var children__5576__auto__ = cljs.core.rest(arglist__20550);
    return map__delegate(opts__5575__auto__, children__5576__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var mark = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__20551) {
    var opts__5575__auto__ = cljs.core.first(arglist__20551);
    var children__5576__auto__ = cljs.core.rest(arglist__20551);
    return mark__delegate(opts__5575__auto__, children__5576__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var menu = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__20552) {
    var opts__5575__auto__ = cljs.core.first(arglist__20552);
    var children__5576__auto__ = cljs.core.rest(arglist__20552);
    return menu__delegate(opts__5575__auto__, children__5576__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var menuitem = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__20553) {
    var opts__5575__auto__ = cljs.core.first(arglist__20553);
    var children__5576__auto__ = cljs.core.rest(arglist__20553);
    return menuitem__delegate(opts__5575__auto__, children__5576__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var meta = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__20554) {
    var opts__5575__auto__ = cljs.core.first(arglist__20554);
    var children__5576__auto__ = cljs.core.rest(arglist__20554);
    return meta__delegate(opts__5575__auto__, children__5576__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var meter = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__20555) {
    var opts__5575__auto__ = cljs.core.first(arglist__20555);
    var children__5576__auto__ = cljs.core.rest(arglist__20555);
    return meter__delegate(opts__5575__auto__, children__5576__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var nav = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__20556) {
    var opts__5575__auto__ = cljs.core.first(arglist__20556);
    var children__5576__auto__ = cljs.core.rest(arglist__20556);
    return nav__delegate(opts__5575__auto__, children__5576__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var noscript = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__20557) {
    var opts__5575__auto__ = cljs.core.first(arglist__20557);
    var children__5576__auto__ = cljs.core.rest(arglist__20557);
    return noscript__delegate(opts__5575__auto__, children__5576__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var object = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__20558) {
    var opts__5575__auto__ = cljs.core.first(arglist__20558);
    var children__5576__auto__ = cljs.core.rest(arglist__20558);
    return object__delegate(opts__5575__auto__, children__5576__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var ol = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__20559) {
    var opts__5575__auto__ = cljs.core.first(arglist__20559);
    var children__5576__auto__ = cljs.core.rest(arglist__20559);
    return ol__delegate(opts__5575__auto__, children__5576__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var optgroup = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__20560) {
    var opts__5575__auto__ = cljs.core.first(arglist__20560);
    var children__5576__auto__ = cljs.core.rest(arglist__20560);
    return optgroup__delegate(opts__5575__auto__, children__5576__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var output = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__20561) {
    var opts__5575__auto__ = cljs.core.first(arglist__20561);
    var children__5576__auto__ = cljs.core.rest(arglist__20561);
    return output__delegate(opts__5575__auto__, children__5576__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var p = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__20562) {
    var opts__5575__auto__ = cljs.core.first(arglist__20562);
    var children__5576__auto__ = cljs.core.rest(arglist__20562);
    return p__delegate(opts__5575__auto__, children__5576__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var param = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__20563) {
    var opts__5575__auto__ = cljs.core.first(arglist__20563);
    var children__5576__auto__ = cljs.core.rest(arglist__20563);
    return param__delegate(opts__5575__auto__, children__5576__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var pre = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__20564) {
    var opts__5575__auto__ = cljs.core.first(arglist__20564);
    var children__5576__auto__ = cljs.core.rest(arglist__20564);
    return pre__delegate(opts__5575__auto__, children__5576__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var progress = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__20565) {
    var opts__5575__auto__ = cljs.core.first(arglist__20565);
    var children__5576__auto__ = cljs.core.rest(arglist__20565);
    return progress__delegate(opts__5575__auto__, children__5576__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var q = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__20566) {
    var opts__5575__auto__ = cljs.core.first(arglist__20566);
    var children__5576__auto__ = cljs.core.rest(arglist__20566);
    return q__delegate(opts__5575__auto__, children__5576__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var rp = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__20567) {
    var opts__5575__auto__ = cljs.core.first(arglist__20567);
    var children__5576__auto__ = cljs.core.rest(arglist__20567);
    return rp__delegate(opts__5575__auto__, children__5576__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var rt = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__20568) {
    var opts__5575__auto__ = cljs.core.first(arglist__20568);
    var children__5576__auto__ = cljs.core.rest(arglist__20568);
    return rt__delegate(opts__5575__auto__, children__5576__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var ruby = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__20569) {
    var opts__5575__auto__ = cljs.core.first(arglist__20569);
    var children__5576__auto__ = cljs.core.rest(arglist__20569);
    return ruby__delegate(opts__5575__auto__, children__5576__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var s = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__20570) {
    var opts__5575__auto__ = cljs.core.first(arglist__20570);
    var children__5576__auto__ = cljs.core.rest(arglist__20570);
    return s__delegate(opts__5575__auto__, children__5576__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var samp = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__20571) {
    var opts__5575__auto__ = cljs.core.first(arglist__20571);
    var children__5576__auto__ = cljs.core.rest(arglist__20571);
    return samp__delegate(opts__5575__auto__, children__5576__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var script = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__20572) {
    var opts__5575__auto__ = cljs.core.first(arglist__20572);
    var children__5576__auto__ = cljs.core.rest(arglist__20572);
    return script__delegate(opts__5575__auto__, children__5576__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var section = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__20573) {
    var opts__5575__auto__ = cljs.core.first(arglist__20573);
    var children__5576__auto__ = cljs.core.rest(arglist__20573);
    return section__delegate(opts__5575__auto__, children__5576__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var select = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__20574) {
    var opts__5575__auto__ = cljs.core.first(arglist__20574);
    var children__5576__auto__ = cljs.core.rest(arglist__20574);
    return select__delegate(opts__5575__auto__, children__5576__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var small = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__20575) {
    var opts__5575__auto__ = cljs.core.first(arglist__20575);
    var children__5576__auto__ = cljs.core.rest(arglist__20575);
    return small__delegate(opts__5575__auto__, children__5576__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var source = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__20576) {
    var opts__5575__auto__ = cljs.core.first(arglist__20576);
    var children__5576__auto__ = cljs.core.rest(arglist__20576);
    return source__delegate(opts__5575__auto__, children__5576__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var span = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__20577) {
    var opts__5575__auto__ = cljs.core.first(arglist__20577);
    var children__5576__auto__ = cljs.core.rest(arglist__20577);
    return span__delegate(opts__5575__auto__, children__5576__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var strong = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__20578) {
    var opts__5575__auto__ = cljs.core.first(arglist__20578);
    var children__5576__auto__ = cljs.core.rest(arglist__20578);
    return strong__delegate(opts__5575__auto__, children__5576__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var style = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__20579) {
    var opts__5575__auto__ = cljs.core.first(arglist__20579);
    var children__5576__auto__ = cljs.core.rest(arglist__20579);
    return style__delegate(opts__5575__auto__, children__5576__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var sub = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__20580) {
    var opts__5575__auto__ = cljs.core.first(arglist__20580);
    var children__5576__auto__ = cljs.core.rest(arglist__20580);
    return sub__delegate(opts__5575__auto__, children__5576__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var summary = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__20581) {
    var opts__5575__auto__ = cljs.core.first(arglist__20581);
    var children__5576__auto__ = cljs.core.rest(arglist__20581);
    return summary__delegate(opts__5575__auto__, children__5576__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var sup = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__20582) {
    var opts__5575__auto__ = cljs.core.first(arglist__20582);
    var children__5576__auto__ = cljs.core.rest(arglist__20582);
    return sup__delegate(opts__5575__auto__, children__5576__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var table = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__20583) {
    var opts__5575__auto__ = cljs.core.first(arglist__20583);
    var children__5576__auto__ = cljs.core.rest(arglist__20583);
    return table__delegate(opts__5575__auto__, children__5576__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var tbody = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__20584) {
    var opts__5575__auto__ = cljs.core.first(arglist__20584);
    var children__5576__auto__ = cljs.core.rest(arglist__20584);
    return tbody__delegate(opts__5575__auto__, children__5576__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var td = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__20585) {
    var opts__5575__auto__ = cljs.core.first(arglist__20585);
    var children__5576__auto__ = cljs.core.rest(arglist__20585);
    return td__delegate(opts__5575__auto__, children__5576__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var tfoot = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__20586) {
    var opts__5575__auto__ = cljs.core.first(arglist__20586);
    var children__5576__auto__ = cljs.core.rest(arglist__20586);
    return tfoot__delegate(opts__5575__auto__, children__5576__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var th = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__20587) {
    var opts__5575__auto__ = cljs.core.first(arglist__20587);
    var children__5576__auto__ = cljs.core.rest(arglist__20587);
    return th__delegate(opts__5575__auto__, children__5576__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var thead = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__20588) {
    var opts__5575__auto__ = cljs.core.first(arglist__20588);
    var children__5576__auto__ = cljs.core.rest(arglist__20588);
    return thead__delegate(opts__5575__auto__, children__5576__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var time = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__20589) {
    var opts__5575__auto__ = cljs.core.first(arglist__20589);
    var children__5576__auto__ = cljs.core.rest(arglist__20589);
    return time__delegate(opts__5575__auto__, children__5576__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var title = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__20590) {
    var opts__5575__auto__ = cljs.core.first(arglist__20590);
    var children__5576__auto__ = cljs.core.rest(arglist__20590);
    return title__delegate(opts__5575__auto__, children__5576__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var tr = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__20591) {
    var opts__5575__auto__ = cljs.core.first(arglist__20591);
    var children__5576__auto__ = cljs.core.rest(arglist__20591);
    return tr__delegate(opts__5575__auto__, children__5576__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var track = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__20592) {
    var opts__5575__auto__ = cljs.core.first(arglist__20592);
    var children__5576__auto__ = cljs.core.rest(arglist__20592);
    return track__delegate(opts__5575__auto__, children__5576__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var u = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__20593) {
    var opts__5575__auto__ = cljs.core.first(arglist__20593);
    var children__5576__auto__ = cljs.core.rest(arglist__20593);
    return u__delegate(opts__5575__auto__, children__5576__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var ul = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__20594) {
    var opts__5575__auto__ = cljs.core.first(arglist__20594);
    var children__5576__auto__ = cljs.core.rest(arglist__20594);
    return ul__delegate(opts__5575__auto__, children__5576__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var var$ = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__20595) {
    var opts__5575__auto__ = cljs.core.first(arglist__20595);
    var children__5576__auto__ = cljs.core.rest(arglist__20595);
    return var$__delegate(opts__5575__auto__, children__5576__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var video = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__20596) {
    var opts__5575__auto__ = cljs.core.first(arglist__20596);
    var children__5576__auto__ = cljs.core.rest(arglist__20596);
    return video__delegate(opts__5575__auto__, children__5576__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var wbr = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__20597) {
    var opts__5575__auto__ = cljs.core.first(arglist__20597);
    var children__5576__auto__ = cljs.core.rest(arglist__20597);
    return wbr__delegate(opts__5575__auto__, children__5576__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var circle = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__20598) {
    var opts__5575__auto__ = cljs.core.first(arglist__20598);
    var children__5576__auto__ = cljs.core.rest(arglist__20598);
    return circle__delegate(opts__5575__auto__, children__5576__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var ellipse = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__20599) {
    var opts__5575__auto__ = cljs.core.first(arglist__20599);
    var children__5576__auto__ = cljs.core.rest(arglist__20599);
    return ellipse__delegate(opts__5575__auto__, children__5576__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var g = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__20600) {
    var opts__5575__auto__ = cljs.core.first(arglist__20600);
    var children__5576__auto__ = cljs.core.rest(arglist__20600);
    return g__delegate(opts__5575__auto__, children__5576__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var line = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__20601) {
    var opts__5575__auto__ = cljs.core.first(arglist__20601);
    var children__5576__auto__ = cljs.core.rest(arglist__20601);
    return line__delegate(opts__5575__auto__, children__5576__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var path = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__20602) {
    var opts__5575__auto__ = cljs.core.first(arglist__20602);
    var children__5576__auto__ = cljs.core.rest(arglist__20602);
    return path__delegate(opts__5575__auto__, children__5576__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var polyline = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__20603) {
    var opts__5575__auto__ = cljs.core.first(arglist__20603);
    var children__5576__auto__ = cljs.core.rest(arglist__20603);
    return polyline__delegate(opts__5575__auto__, children__5576__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var rect = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__20604) {
    var opts__5575__auto__ = cljs.core.first(arglist__20604);
    var children__5576__auto__ = cljs.core.rest(arglist__20604);
    return rect__delegate(opts__5575__auto__, children__5576__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var svg = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__20605) {
    var opts__5575__auto__ = cljs.core.first(arglist__20605);
    var children__5576__auto__ = cljs.core.rest(arglist__20605);
    return svg__delegate(opts__5575__auto__, children__5576__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var text = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__20606) {
    var opts__5575__auto__ = cljs.core.first(arglist__20606);
    var children__5576__auto__ = cljs.core.rest(arglist__20606);
    return text__delegate(opts__5575__auto__, children__5576__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var defs = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__20607) {
    var opts__5575__auto__ = cljs.core.first(arglist__20607);
    var children__5576__auto__ = cljs.core.rest(arglist__20607);
    return defs__delegate(opts__5575__auto__, children__5576__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var linearGradient = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__20608) {
    var opts__5575__auto__ = cljs.core.first(arglist__20608);
    var children__5576__auto__ = cljs.core.rest(arglist__20608);
    return linearGradient__delegate(opts__5575__auto__, children__5576__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var polygon = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__20609) {
    var opts__5575__auto__ = cljs.core.first(arglist__20609);
    var children__5576__auto__ = cljs.core.rest(arglist__20609);
    return polygon__delegate(opts__5575__auto__, children__5576__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var radialGradient = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__20610) {
    var opts__5575__auto__ = cljs.core.first(arglist__20610);
    var children__5576__auto__ = cljs.core.rest(arglist__20610);
    return radialGradient__delegate(opts__5575__auto__, children__5576__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var stop = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__20611) {
    var opts__5575__auto__ = cljs.core.first(arglist__20611);
    var children__5576__auto__ = cljs.core.rest(arglist__20611);
    return stop__delegate(opts__5575__auto__, children__5576__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__5575__auto__, children__5576__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5575__auto__, children__5576__auto__)));
  };
  var tspan = function(opts__5575__auto__, var_args) {
    var children__5576__auto__ = null;
    if (arguments.length > 1) {
      children__5576__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__5575__auto__, children__5576__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__20612) {
    var opts__5575__auto__ = cljs.core.first(arglist__20612);
    var children__5576__auto__ = cljs.core.rest(arglist__20612);
    return tspan__delegate(opts__5575__auto__, children__5576__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("sailing_study_guide.quiz");
goog.require("cljs.core");
sailing_study_guide.quiz.default_quiz = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Quiz", new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Parts of the boat", new cljs.core.Keyword(null, "questions", "questions", 1226225380), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "question", "question", -1411720117), "What is placed between the boat and the dock to cushion the hull?", new cljs.core.Keyword(null, "image", "image", -58725096), null, new cljs.core.Keyword(null, "answers", "answers", -2066449770), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"text", "text", -1790561697), "Tiller", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Boomvang", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Fender", new cljs.core.Keyword(null, "correct", "correct", 984806334), true], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Gooseneck", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null)], null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "question", "question", -1411720117), "What's the small sail at front called?", new cljs.core.Keyword(null, "image", "image", -58725096), null, new cljs.core.Keyword(null, "answers", "answers", -2066449770), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jib", new cljs.core.Keyword(null, "correct", "correct", 984806334), true], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jab", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jibjab", new cljs.core.Keyword(null, 
"correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jibber jabber", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null)], null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "question", "question", -1411720117), "What's the biggest danger to a boat?", new cljs.core.Keyword(null, "image", "image", -58725096), null, new cljs.core.Keyword(null, 
"answers", "answers", -2066449770), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Pirates", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Giant squids", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Barnacles", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "That you'll need a bigger one", new cljs.core.Keyword(null, "correct", "correct", 984806334), true], null)], null)], null)], null)], null)], null)], null);
goog.exportSymbol("sailing_study_guide.quiz.default_quiz", sailing_study_guide.quiz.default_quiz);
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj23828 = {};
  return obj23828;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.display_name[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.display_name["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj23830 = {};
  return obj23830;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.init_state[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.init_state["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj23832 = {};
  return obj23832;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.should_update[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.should_update["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj23834 = {};
  return obj23834;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.will_mount[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.will_mount["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj23836 = {};
  return obj23836;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.did_mount[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.did_mount["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj23838 = {};
  return obj23838;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.will_unmount[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.will_unmount["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj23840 = {};
  return obj23840;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.will_update[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.will_update["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj23842 = {};
  return obj23842;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.did_update[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.did_update["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj23844 = {};
  return obj23844;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.will_receive_props[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.will_receive_props["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj23846 = {};
  return obj23846;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.render[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.render["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj23848 = {};
  return obj23848;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core.render_state[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core.render_state["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj23850 = {};
  return obj23850;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj23852 = {};
  return obj23852;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = om.core._get_state[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._get_state["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = om.core._get_state[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._get_state["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj23854 = {};
  return obj23854;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = om.core._get_render_state[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._get_render_state["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = om.core._get_render_state[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._get_render_state["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj23856 = {};
  return obj23856;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3614__auto__ = this$;
      if (and__3614__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4262__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3626__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj23858 = {};
  return obj23858;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core._get_queue[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._get_queue["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3614__auto__ = this$;
    if (and__3614__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4262__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3626__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj23860 = {};
  return obj23860;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = om.core._value[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._value["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj23862 = {};
  return obj23862;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3614__auto__ = cursor;
    if (and__3614__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4262__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3626__auto__ = om.core._path[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._path["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3614__auto__ = cursor;
    if (and__3614__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4262__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3626__auto__ = om.core._state[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._state["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj23864 = {};
  return obj23864;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3614__auto__ = value;
      if (and__3614__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4262__auto__ = value == null ? null : value;
      return function() {
        var or__3626__auto__ = om.core._to_cursor[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._to_cursor["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3614__auto__ = value;
      if (and__3614__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3614__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4262__auto__ = value == null ? null : value;
      return function() {
        var or__3626__auto__ = om.core._to_cursor[goog.typeOf(x__4262__auto__)];
        if (or__3626__auto__) {
          return or__3626__auto__;
        } else {
          var or__3626__auto____$1 = om.core._to_cursor["_"];
          if (or__3626__auto____$1) {
            return or__3626__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj23866 = {};
  return obj23866;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3614__auto__ = cursor;
    if (and__3614__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4262__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3626__auto__ = om.core._derive[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._derive["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj23868 = {};
  return obj23868;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3614__auto__ = cursor;
    if (and__3614__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4262__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3626__auto__ = om.core._transact_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj23870 = {};
  return obj23870;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = om.core._listen_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3614__auto__ = x;
    if (and__3614__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3614__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4262__auto__ = x == null ? null : x;
    return function() {
      var or__3626__auto__ = om.core._notify_BANG_[goog.typeOf(x__4262__auto__)];
      if (or__3626__auto__) {
        return or__3626__auto__;
      } else {
        var or__3626__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3626__auto____$1) {
          return or__3626__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__23872 = state;
    if (G__23872) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23872.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__23872.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__23872);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__23872);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__23874 = x;
  if (G__23874) {
    var bit__4289__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3626__auto__ = bit__4289__auto__;
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return G__23874.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__23874.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__23874);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__23874);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_23876 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23876;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__23878 = state;
    G__23878["__om_prev_state"] = state["__om_state"];
    G__23878["__om_state"] = pending_state;
    G__23878["__om_pending_state"] = null;
    return G__23878;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3626__auto__ = props;
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3626__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23879 = c;
    if (G__23879) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23879.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__23879.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__23879);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__23879);
    }
  }()) {
    var state_23906 = this$.state;
    var _STAR_read_enabled_STAR_23880_23907 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3626__auto__ = state_23906["__om_prev_state"];
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return state_23906["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23880_23907;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23881 = c;
    if (G__23881) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23881.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__23881.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__23881);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__23881);
    }
  }()) {
    var _STAR_read_enabled_STAR_23882 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23882;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23883 = c;
    if (G__23883) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23883.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__23883.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__23883);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__23883);
    }
  }()) {
    var _STAR_read_enabled_STAR_23884 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23884;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_23885 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__23886 = c;
      if (G__23886) {
        var bit__4289__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3626__auto__ = bit__4289__auto__;
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return G__23886.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__23886.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__23886);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__23886);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      var cursor = props["__om_cursor"];
      var next_cursor = next_props["__om_cursor"];
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
        return true;
      } else {
        if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
          return true;
        } else {
          if (!(state["__om_pending_state"] == null)) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23885;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_23887 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__23888 = c;
      if (G__23888) {
        var bit__4289__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3626__auto__ = bit__4289__auto__;
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return G__23888.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__23888.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23888);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23888);
      }
    }()) {
      var _STAR_parent_STAR_23889 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_23890 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_23891 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_23891;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_23890;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_23889;
      }
    } else {
      if (function() {
        var G__23892 = c;
        if (G__23892) {
          var bit__4289__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3626__auto__ = bit__4289__auto__;
            if (cljs.core.truth_(or__3626__auto__)) {
              return or__3626__auto__;
            } else {
              return G__23892.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__23892.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23892);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23892);
        }
      }()) {
        var _STAR_parent_STAR_23893 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_23894 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_23895 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_23895;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_23894;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_23893;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23887;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_23908 = om.core.children.call(null, this$);
  if (function() {
    var G__23896 = c_23908;
    if (G__23896) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23896.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__23896.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__23896);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__23896);
    }
  }()) {
    var state_23909 = this$.state;
    var _STAR_read_enabled_STAR_23897_23910 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_23908, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23897_23910;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3626__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3626__auto__)) {
      return or__3626__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__23898 = c;
    if (G__23898) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23898.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__23898.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__23898);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__23898);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_23899 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23899;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3626__auto__ = id;
    if (cljs.core.truth_(or__3626__auto__)) {
      return or__3626__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23900 = c;
    if (G__23900) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23900.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__23900.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__23900);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__23900);
    }
  }()) {
    var _STAR_read_enabled_STAR_23901 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23901;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__23902 = c;
    if (G__23902) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23902.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__23902.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__23902);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__23902);
    }
  }()) {
    var _STAR_read_enabled_STAR_23903 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23903;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_23911 = om.core.children.call(null, this$);
  if (function() {
    var G__23904 = c_23911;
    if (G__23904) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23904.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__23904.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__23904);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__23904);
    }
  }()) {
    var _STAR_read_enabled_STAR_23905_23912 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_23911);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23905_23912;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x23916 = obj;
  x23916.om$core$IGetState$ = true;
  x23916.om$core$IGetState$_get_state$arity$1 = function(x23916) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3626__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3626__auto__)) {
        return or__3626__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x23916);
  x23916.om$core$IGetState$_get_state$arity$2 = function(x23916) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x23916);
  x23916.om$core$IGetRenderState$ = true;
  x23916.om$core$IGetRenderState$_get_render_state$arity$1 = function(x23916) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x23916);
  x23916.om$core$IGetRenderState$_get_render_state$arity$2 = function(x23916) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x23916);
  x23916.om$core$ISetState$ = true;
  x23916.om$core$ISetState$_set_state_BANG_$arity$3 = function(x23916) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_23917 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3614__auto__ = !(app_state == null);
          if (and__3614__auto__) {
            return render;
          } else {
            return and__3614__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23917;
      }
    };
  }(x23916);
  x23916.om$core$ISetState$_set_state_BANG_$arity$4 = function(x23916) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_23918 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3614__auto__ = !(app_state == null);
          if (and__3614__auto__) {
            return render;
          } else {
            return and__3614__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23918;
      }
    };
  }(x23916);
  return x23916;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__23920) {
          var vec__23921 = p__23920;
          var k = cljs.core.nth.call(null, vec__23921, 0, null);
          var v = cljs.core.nth.call(null, vec__23921, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__23922 = null;
  var G__23922__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23922__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23922 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23922__2.call(this, self__, k);
      case 3:
        return G__23922__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23922.cljs$core$IFn$_invoke$arity$2 = G__23922__2;
  G__23922.cljs$core$IFn$_invoke$arity$3 = G__23922__3;
  return G__23922;
}();
om.core.MapCursor.prototype.apply = function(self__, args23919) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args23919)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
  return cljs.core._write.call(null, writer__4203__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__23924 = null;
  var G__23924__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23924__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23924 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23924__2.call(this, self__, k);
      case 3:
        return G__23924__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23924.cljs$core$IFn$_invoke$arity$2 = G__23924__2;
  G__23924.cljs$core$IFn$_invoke$arity$3 = G__23924__3;
  return G__23924;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args23923) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args23923)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x23926 = cljs.core.clone.call(null, val);
  x23926.cljs$core$IEquiv$ = true;
  x23926.cljs$core$IEquiv$_equiv$arity$2 = function(x23926) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x23926);
  x23926.om$core$ITransact$ = true;
  x23926.om$core$ITransact$_transact_BANG_$arity$4 = function(x23926) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x23926);
  x23926.om$core$ICursor$ = true;
  x23926.om$core$ICursor$_path$arity$1 = function(x23926) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x23926);
  x23926.om$core$ICursor$_state$arity$1 = function(x23926) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x23926);
  x23926.cljs$core$IDeref$ = true;
  x23926.cljs$core$IDeref$_deref$arity$1 = function(x23926) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x23926);
  return x23926;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__23929 = val;
        if (G__23929) {
          var bit__4289__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3626__auto__ = bit__4289__auto__;
            if (cljs.core.truth_(or__3626__auto__)) {
              return or__3626__auto__;
            } else {
              return G__23929.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__23929.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__23929);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__23929);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__23930 = val;
              if (G__23930) {
                var bit__4289__auto__ = G__23930.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4289__auto__ || G__23930.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__23930.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__23930);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__23930);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__23935 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__23936 = null;
  var count__23937 = 0;
  var i__23938 = 0;
  while (true) {
    if (i__23938 < count__23937) {
      var f = cljs.core._nth.call(null, chunk__23936, i__23938);
      f.call(null);
      var G__23939 = seq__23935;
      var G__23940 = chunk__23936;
      var G__23941 = count__23937;
      var G__23942 = i__23938 + 1;
      seq__23935 = G__23939;
      chunk__23936 = G__23940;
      count__23937 = G__23941;
      i__23938 = G__23942;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__23935);
      if (temp__4126__auto__) {
        var seq__23935__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__23935__$1)) {
          var c__4395__auto__ = cljs.core.chunk_first.call(null, seq__23935__$1);
          var G__23943 = cljs.core.chunk_rest.call(null, seq__23935__$1);
          var G__23944 = c__4395__auto__;
          var G__23945 = cljs.core.count.call(null, c__4395__auto__);
          var G__23946 = 0;
          seq__23935 = G__23943;
          chunk__23936 = G__23944;
          count__23937 = G__23945;
          i__23938 = G__23946;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__23935__$1);
          f.call(null);
          var G__23947 = cljs.core.next.call(null, seq__23935__$1);
          var G__23948 = null;
          var G__23949 = 0;
          var G__23950 = 0;
          seq__23935 = G__23947;
          chunk__23936 = G__23948;
          count__23937 = G__23949;
          i__23938 = G__23950;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3626__auto__ = function() {
      var G__23955 = x;
      if (G__23955) {
        var bit__4289__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3626__auto__ = bit__4289__auto__;
          if (cljs.core.truth_(or__3626__auto__)) {
            return or__3626__auto__;
          } else {
            return G__23955.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__23955.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23955);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__23955);
      }
    }();
    if (or__3626__auto__) {
      return or__3626__auto__;
    } else {
      var G__23956 = x;
      if (G__23956) {
        var bit__4289__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3626__auto____$1 = bit__4289__auto__;
          if (cljs.core.truth_(or__3626__auto____$1)) {
            return or__3626__auto____$1;
          } else {
            return G__23956.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__23956.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23956);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__23956);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3626__auto__ = descriptor;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, f);
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_23961 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23961;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__23962 = m;
      var map__23962__$1 = cljs.core.seq_QMARK_.call(null, map__23962) ? cljs.core.apply.call(null, cljs.core.hash_map, map__23962) : map__23962;
      var opts = cljs.core.get.call(null, map__23962__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__23962__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__23962__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__23962__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3626__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__23962, map__23962__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_23963 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23963;
          }
        };
      }(map__23962, map__23962__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__23962, map__23962__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_23964 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23964;
          }
        };
      }(map__23962, map__23962__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_23966 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_23966;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__23975 = state;
    if (G__23975) {
      var bit__4289__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3626__auto__ = bit__4289__auto__;
        if (cljs.core.truth_(or__3626__auto__)) {
          return or__3626__auto__;
        } else {
          return G__23975.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__23975.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__23975);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__23975);
    }
  }()) {
  } else {
    var listeners_23983 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_23984 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x23976_23985 = state;
    x23976_23985.om$core$IRenderQueue$ = true;
    x23976_23985.om$core$IRenderQueue$_get_queue$arity$1 = function(x23976_23985, listeners_23983, render_queue_23984) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_23984);
      };
    }(x23976_23985, listeners_23983, render_queue_23984);
    x23976_23985.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x23976_23985, listeners_23983, render_queue_23984) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_23984), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_23984, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x23976_23985, listeners_23983, render_queue_23984);
    x23976_23985.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x23976_23985, listeners_23983, render_queue_23984) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_23984, cljs.core.empty);
      };
    }(x23976_23985, listeners_23983, render_queue_23984);
    x23976_23985.om$core$INotify$ = true;
    x23976_23985.om$core$INotify$_listen_BANG_$arity$3 = function(x23976_23985, listeners_23983, render_queue_23984) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_23983, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x23976_23985, listeners_23983, render_queue_23984);
    x23976_23985.om$core$INotify$_unlisten_BANG_$arity$2 = function(x23976_23985, listeners_23983, render_queue_23984) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_23983, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x23976_23985, listeners_23983, render_queue_23984);
    x23976_23985.om$core$INotify$_notify_BANG_$arity$3 = function(x23976_23985, listeners_23983, render_queue_23984) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__23977_23986 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_23983));
        var chunk__23978_23987 = null;
        var count__23979_23988 = 0;
        var i__23980_23989 = 0;
        while (true) {
          if (i__23980_23989 < count__23979_23988) {
            var vec__23981_23990 = cljs.core._nth.call(null, chunk__23978_23987, i__23980_23989);
            var __23991 = cljs.core.nth.call(null, vec__23981_23990, 0, null);
            var f_23992 = cljs.core.nth.call(null, vec__23981_23990, 1, null);
            f_23992.call(null, tx_data, root_cursor);
            var G__23993 = seq__23977_23986;
            var G__23994 = chunk__23978_23987;
            var G__23995 = count__23979_23988;
            var G__23996 = i__23980_23989 + 1;
            seq__23977_23986 = G__23993;
            chunk__23978_23987 = G__23994;
            count__23979_23988 = G__23995;
            i__23980_23989 = G__23996;
            continue;
          } else {
            var temp__4126__auto___23997 = cljs.core.seq.call(null, seq__23977_23986);
            if (temp__4126__auto___23997) {
              var seq__23977_23998__$1 = temp__4126__auto___23997;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__23977_23998__$1)) {
                var c__4395__auto___23999 = cljs.core.chunk_first.call(null, seq__23977_23998__$1);
                var G__24000 = cljs.core.chunk_rest.call(null, seq__23977_23998__$1);
                var G__24001 = c__4395__auto___23999;
                var G__24002 = cljs.core.count.call(null, c__4395__auto___23999);
                var G__24003 = 0;
                seq__23977_23986 = G__24000;
                chunk__23978_23987 = G__24001;
                count__23979_23988 = G__24002;
                i__23980_23989 = G__24003;
                continue;
              } else {
                var vec__23982_24004 = cljs.core.first.call(null, seq__23977_23998__$1);
                var __24005 = cljs.core.nth.call(null, vec__23982_24004, 0, null);
                var f_24006 = cljs.core.nth.call(null, vec__23982_24004, 1, null);
                f_24006.call(null, tx_data, root_cursor);
                var G__24007 = cljs.core.next.call(null, seq__23977_23998__$1);
                var G__24008 = null;
                var G__24009 = 0;
                var G__24010 = 0;
                seq__23977_23986 = G__24007;
                chunk__23978_23987 = G__24008;
                count__23979_23988 = G__24009;
                i__23980_23989 = G__24010;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x23976_23985, listeners_23983, render_queue_23984);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__24011) {
  var map__24026 = p__24011;
  var map__24026__$1 = cljs.core.seq_QMARK_.call(null, map__24026) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24026) : map__24026;
  var options = map__24026__$1;
  var instrument = cljs.core.get.call(null, map__24026__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__24026__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__24026__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__24026__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__24040 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__24040, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__24040, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__24027 = value;
    if (G__24027) {
      var bit__4289__auto__ = G__24027.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4289__auto__ || G__24027.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__24027.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__24027);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__24027);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__24026, map__24026__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_24034 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_24035 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_24035;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_24034;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__24036_24041 = cljs.core.seq.call(null, queue);
        var chunk__24037_24042 = null;
        var count__24038_24043 = 0;
        var i__24039_24044 = 0;
        while (true) {
          if (i__24039_24044 < count__24038_24043) {
            var c_24045 = cljs.core._nth.call(null, chunk__24037_24042, i__24039_24044);
            if (cljs.core.truth_(c_24045.isMounted())) {
              c_24045.forceUpdate();
            } else {
            }
            var G__24046 = seq__24036_24041;
            var G__24047 = chunk__24037_24042;
            var G__24048 = count__24038_24043;
            var G__24049 = i__24039_24044 + 1;
            seq__24036_24041 = G__24046;
            chunk__24037_24042 = G__24047;
            count__24038_24043 = G__24048;
            i__24039_24044 = G__24049;
            continue;
          } else {
            var temp__4126__auto___24050 = cljs.core.seq.call(null, seq__24036_24041);
            if (temp__4126__auto___24050) {
              var seq__24036_24051__$1 = temp__4126__auto___24050;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__24036_24051__$1)) {
                var c__4395__auto___24052 = cljs.core.chunk_first.call(null, seq__24036_24051__$1);
                var G__24053 = cljs.core.chunk_rest.call(null, seq__24036_24051__$1);
                var G__24054 = c__4395__auto___24052;
                var G__24055 = cljs.core.count.call(null, c__4395__auto___24052);
                var G__24056 = 0;
                seq__24036_24041 = G__24053;
                chunk__24037_24042 = G__24054;
                count__24038_24043 = G__24055;
                i__24039_24044 = G__24056;
                continue;
              } else {
                var c_24057 = cljs.core.first.call(null, seq__24036_24051__$1);
                if (cljs.core.truth_(c_24057.isMounted())) {
                  c_24057.forceUpdate();
                } else {
                }
                var G__24058 = cljs.core.next.call(null, seq__24036_24051__$1);
                var G__24059 = null;
                var G__24060 = 0;
                var G__24061 = 0;
                seq__24036_24041 = G__24058;
                chunk__24037_24042 = G__24059;
                count__24038_24043 = G__24060;
                i__24039_24044 = G__24061;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__24026, map__24026__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__24026, map__24026__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__24026, map__24026__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__24026, map__24026__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__24026, map__24026__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("sailing_study_guide.core");
goog.require("cljs.core");
goog.require("sailing_study_guide.quiz");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("sailing_study_guide.quiz");
goog.require("cljs.core.async");
goog.require("clairvoyant.core");
goog.require("sailing_study_guide.dispatch");
goog.require("clairvoyant.core");
goog.require("sailing_study_guide.dispatch");
goog.require("om.core");
goog.require("om.core");
goog.require("clojure.string");
cljs.core.enable_console_print_BANG_.call(null);
cljs.core._STAR_print_meta_STAR_ = true;
sailing_study_guide.core.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "current-section", "current-section", 1519906460), 0, new cljs.core.Keyword(null, "current-question", "current-question", -749753188), 0, new cljs.core.Keyword(null, "quiz", "quiz", 829625914), sailing_study_guide.quiz.default_quiz], null));
sailing_study_guide.core.cljs_type__GT_str = function cljs_type__GT_str(x) {
  var temp__4124__auto__ = x.constructor;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var ctor = temp__4124__auto__;
    return cljs.core.type__GT_str.call(null, ctor);
  } else {
    return cljs.core.type__GT_str.call(null, x);
  }
};
sailing_study_guide.core.current_section = function current_section(app_state) {
  var current_section__$1 = (new cljs.core.Keyword(null, "current-section", "current-section", 1519906460)).cljs$core$IFn$_invoke$arity$1(app_state);
  return cljs.core.get_in.call(null, app_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "quiz", "quiz", 829625914), new cljs.core.Keyword(null, "sections", "sections", -886710106), current_section__$1], null));
};
sailing_study_guide.core.current_question = function current_question(app_state) {
  var current_question__$1 = (new cljs.core.Keyword(null, "current-section", "current-section", 1519906460)).cljs$core$IFn$_invoke$arity$1(app_state);
  return cljs.core.get_in.call(null, sailing_study_guide.core.current_section.call(null, app_state), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "questions", "questions", 1226225380), current_question__$1], null));
};
sailing_study_guide.core.question_answered = function question_answered() {
  console.log("Chose correctly");
  var num_questions = cljs.core.count.call(null, (new cljs.core.Keyword(null, "questions", "questions", 1226225380)).cljs$core$IFn$_invoke$arity$1(sailing_study_guide.core.current_section.call(null, cljs.core.deref.call(null, sailing_study_guide.core.app_state))));
  return cljs.core.swap_BANG_.call(null, sailing_study_guide.core.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "current-question", "current-question", -749753188)], null), cljs.core.inc);
};
sailing_study_guide.core.answer_css_class = function answer_css_class(status, correct) {
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unchosen", "unchosen", -205763213), status)) {
    return "answer-default";
  } else {
    if (cljs.core.truth_(correct)) {
      return "answer-correct success";
    } else {
      return "answer-incorrect alert";
    }
  }
};
sailing_study_guide.core.answer_css_class.call(null, new cljs.core.Keyword(null, "unchosen", "unchosen", -205763213), false);
sailing_study_guide.core.answer_css_class.call(null, new cljs.core.Keyword(null, "chosen", "chosen", -1422409985), false);
sailing_study_guide.core.answer_css_class.call(null, new cljs.core.Keyword(null, "chosen", "chosen", -1422409985), true);
sailing_study_guide.core.answer_view = function answer_view(answer, owner) {
  if (typeof sailing_study_guide.core.t14019 !== "undefined") {
  } else {
    sailing_study_guide.core.t14019 = function(owner, answer, answer_view, meta14020) {
      this.owner = owner;
      this.answer = answer;
      this.answer_view = answer_view;
      this.meta14020 = meta14020;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14019.cljs$lang$type = true;
    sailing_study_guide.core.t14019.cljs$lang$ctorStr = "sailing-study-guide.core/t14019";
    sailing_study_guide.core.t14019.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14019");
    };
    sailing_study_guide.core.t14019.prototype.om$core$IRenderState$ = true;
    sailing_study_guide.core.t14019.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__14022) {
      var self__ = this;
      var map__14023 = p__14022;
      var map__14023__$1 = cljs.core.seq_QMARK_.call(null, map__14023) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14023) : map__14023;
      var status = cljs.core.get.call(null, map__14023__$1, new cljs.core.Keyword(null, "status", "status", -1997798413));
      var answer_chan = cljs.core.get.call(null, map__14023__$1, new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176));
      var ___$1 = this;
      return React.DOM.div({"className":"answer-container"}, React.DOM.button({"className":"answer " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sailing_study_guide.core.answer_css_class.call(null, status, (new cljs.core.Keyword(null, "correct", "correct", 984806334)).cljs$core$IFn$_invoke$arity$1(self__.answer))), "onClick":function(___$1, map__14023, map__14023__$1, status, answer_chan) {
        return function(e) {
          return sailing_study_guide.dispatch.dispatch_BANG_.call(null, new cljs.core.Keyword(null, "answer-chosen", "answer-chosen", -703375083), self__.answer);
        };
      }(___$1, map__14023, map__14023__$1, status, answer_chan)}, (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(self__.answer)));
    };
    sailing_study_guide.core.t14019.prototype.om$core$IInitState$ = true;
    sailing_study_guide.core.t14019.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "unchosen", "unchosen", -205763213)], null);
    };
    sailing_study_guide.core.t14019.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14021) {
      var self__ = this;
      var _14021__$1 = this;
      return self__.meta14020;
    };
    sailing_study_guide.core.t14019.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14021, meta14020__$1) {
      var self__ = this;
      var _14021__$1 = this;
      return new sailing_study_guide.core.t14019(self__.owner, self__.answer, self__.answer_view, meta14020__$1);
    };
    sailing_study_guide.core.__GT_t14019 = function __GT_t14019(owner__$1, answer__$1, answer_view__$1, meta14020) {
      return new sailing_study_guide.core.t14019(owner__$1, answer__$1, answer_view__$1, meta14020);
    };
  }
  return new sailing_study_guide.core.t14019(owner, answer, answer_view, null);
};
sailing_study_guide.core.answer_section_view = function answer_section_view(answers, owner) {
  if (typeof sailing_study_guide.core.t14029 !== "undefined") {
  } else {
    sailing_study_guide.core.t14029 = function(owner, answers, answer_section_view, meta14030) {
      this.owner = owner;
      this.answers = answers;
      this.answer_section_view = answer_section_view;
      this.meta14030 = meta14030;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14029.cljs$lang$type = true;
    sailing_study_guide.core.t14029.cljs$lang$ctorStr = "sailing-study-guide.core/t14029";
    sailing_study_guide.core.t14029.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14029");
    };
    sailing_study_guide.core.t14029.prototype.om$core$IRenderState$ = true;
    sailing_study_guide.core.t14029.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__14032) {
      var self__ = this;
      var map__14033 = p__14032;
      var map__14033__$1 = cljs.core.seq_QMARK_.call(null, map__14033) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14033) : map__14033;
      var answer_chan = cljs.core.get.call(null, map__14033__$1, new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176));
      var ___$1 = this;
      return cljs.core.apply.call(null, om.dom.div, {"className":"answer-section"}, om.core.build_all.call(null, sailing_study_guide.core.answer_view, self__.answers, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176), answer_chan], null)], null)));
    };
    sailing_study_guide.core.t14029.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14031) {
      var self__ = this;
      var _14031__$1 = this;
      return self__.meta14030;
    };
    sailing_study_guide.core.t14029.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14031, meta14030__$1) {
      var self__ = this;
      var _14031__$1 = this;
      return new sailing_study_guide.core.t14029(self__.owner, self__.answers, self__.answer_section_view, meta14030__$1);
    };
    sailing_study_guide.core.__GT_t14029 = function __GT_t14029(owner__$1, answers__$1, answer_section_view__$1, meta14030) {
      return new sailing_study_guide.core.t14029(owner__$1, answers__$1, answer_section_view__$1, meta14030);
    };
  }
  return new sailing_study_guide.core.t14029(owner, answers, answer_section_view, null);
};
sailing_study_guide.core.question_view = function question_view(quiz_question, owner) {
  if (typeof sailing_study_guide.core.t14039 !== "undefined") {
  } else {
    sailing_study_guide.core.t14039 = function(owner, quiz_question, question_view, meta14040) {
      this.owner = owner;
      this.quiz_question = quiz_question;
      this.question_view = question_view;
      this.meta14040 = meta14040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14039.cljs$lang$type = true;
    sailing_study_guide.core.t14039.cljs$lang$ctorStr = "sailing-study-guide.core/t14039";
    sailing_study_guide.core.t14039.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14039");
    };
    sailing_study_guide.core.t14039.prototype.om$core$IRenderState$ = true;
    sailing_study_guide.core.t14039.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__14042) {
      var self__ = this;
      var map__14043 = p__14042;
      var map__14043__$1 = cljs.core.seq_QMARK_.call(null, map__14043) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14043) : map__14043;
      var answer_chan = cljs.core.get.call(null, map__14043__$1, new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176));
      var ___$1 = this;
      return React.DOM.div({"className":"question-container"}, React.DOM.div({"className":"question-text-container"}, React.DOM.h3({"className":"question-text"}, (new cljs.core.Keyword(null, "question", "question", -1411720117)).cljs$core$IFn$_invoke$arity$1(self__.quiz_question))), React.DOM.div({"className":"media-container"}), om.core.build.call(null, sailing_study_guide.core.answer_section_view, (new cljs.core.Keyword(null, "answers", "answers", -2066449770)).cljs$core$IFn$_invoke$arity$1(self__.quiz_question), 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176), answer_chan], null)], null)));
    };
    sailing_study_guide.core.t14039.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14041) {
      var self__ = this;
      var _14041__$1 = this;
      return self__.meta14040;
    };
    sailing_study_guide.core.t14039.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14041, meta14040__$1) {
      var self__ = this;
      var _14041__$1 = this;
      return new sailing_study_guide.core.t14039(self__.owner, self__.quiz_question, self__.question_view, meta14040__$1);
    };
    sailing_study_guide.core.__GT_t14039 = function __GT_t14039(owner__$1, quiz_question__$1, question_view__$1, meta14040) {
      return new sailing_study_guide.core.t14039(owner__$1, quiz_question__$1, question_view__$1, meta14040);
    };
  }
  return new sailing_study_guide.core.t14039(owner, quiz_question, question_view, null);
};
sailing_study_guide.core.header_bar_view = function header_bar_view(section, _) {
  if (typeof sailing_study_guide.core.t14047 !== "undefined") {
  } else {
    sailing_study_guide.core.t14047 = function(_, section, header_bar_view, meta14048) {
      this._ = _;
      this.section = section;
      this.header_bar_view = header_bar_view;
      this.meta14048 = meta14048;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14047.cljs$lang$type = true;
    sailing_study_guide.core.t14047.cljs$lang$ctorStr = "sailing-study-guide.core/t14047";
    sailing_study_guide.core.t14047.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14047");
    };
    sailing_study_guide.core.t14047.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t14047.prototype.om$core$IRender$render$arity$1 = function(___$2) {
      var self__ = this;
      var ___$3 = this;
      var current_question_num = (new cljs.core.Keyword(null, "current-question", "current-question", -749753188)).cljs$core$IFn$_invoke$arity$1(self__.section) + 1;
      var total_num_questions = cljs.core.count.call(null, (new cljs.core.Keyword(null, "questions", "questions", 1226225380)).cljs$core$IFn$_invoke$arity$1(self__.section));
      return React.DOM.nav({"className":"tab-bar"}, React.DOM.section({"className":"left-small text-center"}, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_question_num) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(total_num_questions)), React.DOM.section({"className":"middle tab-bar-section"}, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(self__.section)), React.DOM.section({"className":"right-small"}, React.DOM.a({"href":"#", "className":"right-off-canvas-toggle menu-icon"}, 
      React.DOM.span(null))));
    };
    sailing_study_guide.core.t14047.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14049) {
      var self__ = this;
      var _14049__$1 = this;
      return self__.meta14048;
    };
    sailing_study_guide.core.t14047.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14049, meta14048__$1) {
      var self__ = this;
      var _14049__$1 = this;
      return new sailing_study_guide.core.t14047(self__._, self__.section, self__.header_bar_view, meta14048__$1);
    };
    sailing_study_guide.core.__GT_t14047 = function __GT_t14047(___$1, section__$1, header_bar_view__$1, meta14048) {
      return new sailing_study_guide.core.t14047(___$1, section__$1, header_bar_view__$1, meta14048);
    };
  }
  return new sailing_study_guide.core.t14047(_, section, header_bar_view, null);
};
sailing_study_guide.core.header_progress_view = function header_progress_view(section, _) {
  if (typeof sailing_study_guide.core.t14053 !== "undefined") {
  } else {
    sailing_study_guide.core.t14053 = function(_, section, header_progress_view, meta14054) {
      this._ = _;
      this.section = section;
      this.header_progress_view = header_progress_view;
      this.meta14054 = meta14054;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14053.cljs$lang$type = true;
    sailing_study_guide.core.t14053.cljs$lang$ctorStr = "sailing-study-guide.core/t14053";
    sailing_study_guide.core.t14053.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14053");
    };
    sailing_study_guide.core.t14053.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t14053.prototype.om$core$IRender$render$arity$1 = function(___$2) {
      var self__ = this;
      var ___$3 = this;
      var current_question_num = (new cljs.core.Keyword(null, "current-question", "current-question", -749753188)).cljs$core$IFn$_invoke$arity$1(self__.section) + 1;
      var total_num_questions = cljs.core.count.call(null, (new cljs.core.Keyword(null, "questions", "questions", 1226225380)).cljs$core$IFn$_invoke$arity$1(self__.section));
      return React.DOM.div({"className":"progress"}, React.DOM.span({"style":{"width":"" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(100 * (current_question_num / total_num_questions)) + "%"}, "className":"meter"}));
    };
    sailing_study_guide.core.t14053.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14055) {
      var self__ = this;
      var _14055__$1 = this;
      return self__.meta14054;
    };
    sailing_study_guide.core.t14053.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14055, meta14054__$1) {
      var self__ = this;
      var _14055__$1 = this;
      return new sailing_study_guide.core.t14053(self__._, self__.section, self__.header_progress_view, meta14054__$1);
    };
    sailing_study_guide.core.__GT_t14053 = function __GT_t14053(___$1, section__$1, header_progress_view__$1, meta14054) {
      return new sailing_study_guide.core.t14053(___$1, section__$1, header_progress_view__$1, meta14054);
    };
  }
  return new sailing_study_guide.core.t14053(_, section, header_progress_view, null);
};
sailing_study_guide.core.header_view = function header_view(section, _) {
  if (typeof sailing_study_guide.core.t14059 !== "undefined") {
  } else {
    sailing_study_guide.core.t14059 = function(_, section, header_view, meta14060) {
      this._ = _;
      this.section = section;
      this.header_view = header_view;
      this.meta14060 = meta14060;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14059.cljs$lang$type = true;
    sailing_study_guide.core.t14059.cljs$lang$ctorStr = "sailing-study-guide.core/t14059";
    sailing_study_guide.core.t14059.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14059");
    };
    sailing_study_guide.core.t14059.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t14059.prototype.om$core$IRender$render$arity$1 = function(___$2) {
      var self__ = this;
      var ___$3 = this;
      return React.DOM.div({"className":"quiz-header"}, om.core.build.call(null, sailing_study_guide.core.header_bar_view, self__.section), om.core.build.call(null, sailing_study_guide.core.header_progress_view, self__.section));
    };
    sailing_study_guide.core.t14059.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14061) {
      var self__ = this;
      var _14061__$1 = this;
      return self__.meta14060;
    };
    sailing_study_guide.core.t14059.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14061, meta14060__$1) {
      var self__ = this;
      var _14061__$1 = this;
      return new sailing_study_guide.core.t14059(self__._, self__.section, self__.header_view, meta14060__$1);
    };
    sailing_study_guide.core.__GT_t14059 = function __GT_t14059(___$1, section__$1, header_view__$1, meta14060) {
      return new sailing_study_guide.core.t14059(___$1, section__$1, header_view__$1, meta14060);
    };
  }
  return new sailing_study_guide.core.t14059(_, section, header_view, null);
};
sailing_study_guide.core.section_view = function section_view(section, owner) {
  if (typeof sailing_study_guide.core.t14065 !== "undefined") {
  } else {
    sailing_study_guide.core.t14065 = function(owner, section, section_view, meta14066) {
      this.owner = owner;
      this.section = section;
      this.section_view = section_view;
      this.meta14066 = meta14066;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14065.cljs$lang$type = true;
    sailing_study_guide.core.t14065.cljs$lang$ctorStr = "sailing-study-guide.core/t14065";
    sailing_study_guide.core.t14065.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14065");
    };
    sailing_study_guide.core.t14065.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t14065.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"data-offcanvas":true, "className":"off-canvas-wrap", "id":"quiz-section"}, React.DOM.div({"className":"main-content inner-wrap"}, om.core.build.call(null, sailing_study_guide.core.header_view, self__.section), om.core.build.call(null, sailing_study_guide.core.question_view, sailing_study_guide.core.current_question.call(null, self__.section)), React.DOM.a({"className":"exit-off-canvas"})));
    };
    sailing_study_guide.core.t14065.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14067) {
      var self__ = this;
      var _14067__$1 = this;
      return self__.meta14066;
    };
    sailing_study_guide.core.t14065.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14067, meta14066__$1) {
      var self__ = this;
      var _14067__$1 = this;
      return new sailing_study_guide.core.t14065(self__.owner, self__.section, self__.section_view, meta14066__$1);
    };
    sailing_study_guide.core.__GT_t14065 = function __GT_t14065(owner__$1, section__$1, section_view__$1, meta14066) {
      return new sailing_study_guide.core.t14065(owner__$1, section__$1, section_view__$1, meta14066);
    };
  }
  return new sailing_study_guide.core.t14065(owner, section, section_view, null);
};
sailing_study_guide.core.quiz_view = function quiz_view(app_state, owner) {
  if (typeof sailing_study_guide.core.t14071 !== "undefined") {
  } else {
    sailing_study_guide.core.t14071 = function(owner, app_state, quiz_view, meta14072) {
      this.owner = owner;
      this.app_state = app_state;
      this.quiz_view = quiz_view;
      this.meta14072 = meta14072;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t14071.cljs$lang$type = true;
    sailing_study_guide.core.t14071.cljs$lang$ctorStr = "sailing-study-guide.core/t14071";
    sailing_study_guide.core.t14071.cljs$lang$ctorPrWriter = function(this__4202__auto__, writer__4203__auto__, opt__4204__auto__) {
      return cljs.core._write.call(null, writer__4203__auto__, "sailing-study-guide.core/t14071");
    };
    sailing_study_guide.core.t14071.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t14071.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div(null, om.core.build.call(null, sailing_study_guide.core.section_view, cljs.core.nth.call(null, (new cljs.core.Keyword(null, "sections", "sections", -886710106)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "quiz", "quiz", 829625914)).cljs$core$IFn$_invoke$arity$1(self__.app_state)), (new cljs.core.Keyword(null, "current-section", "current-section", 1519906460)).cljs$core$IFn$_invoke$arity$1(self__.app_state))));
    };
    sailing_study_guide.core.t14071.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14073) {
      var self__ = this;
      var _14073__$1 = this;
      return self__.meta14072;
    };
    sailing_study_guide.core.t14071.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14073, meta14072__$1) {
      var self__ = this;
      var _14073__$1 = this;
      return new sailing_study_guide.core.t14071(self__.owner, self__.app_state, self__.quiz_view, meta14072__$1);
    };
    sailing_study_guide.core.__GT_t14071 = function __GT_t14071(owner__$1, app_state__$1, quiz_view__$1, meta14072) {
      return new sailing_study_guide.core.t14071(owner__$1, app_state__$1, quiz_view__$1, meta14072);
    };
  }
  return new sailing_study_guide.core.t14071(owner, app_state, quiz_view, null);
};
om.core.root.call(null, sailing_study_guide.core.quiz_view, sailing_study_guide.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("app")], null));

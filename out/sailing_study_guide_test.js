if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2356";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__10787__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.call(null, args));
    };
    var G__10787 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__10787__delegate.call(this, args);
    };
    G__10787.cljs$lang$maxFixedArity = 0;
    G__10787.cljs$lang$applyTo = function(arglist__10788) {
      var args = cljs.core.seq(arglist__10788);
      return G__10787__delegate(args);
    };
    G__10787.cljs$core$IFn$_invoke$arity$variadic = G__10787__delegate;
    return G__10787;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3627__auto__ = ty;
    if (cljs.core.truth_(and__3627__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3627__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4508__auto___10789 = len;
  var i_10790 = 0;
  while (true) {
    if (i_10790 < n__4508__auto___10789) {
      new_arr[i_10790] = arr[i_10790];
      var G__10791 = i_10790 + 1;
      i_10790 = G__10791;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments);
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__10792__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs);
    };
    var G__10792 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10792__delegate.call(this, array, i, idxs);
    };
    G__10792.cljs$lang$maxFixedArity = 2;
    G__10792.cljs$lang$applyTo = function(arglist__10793) {
      var array = cljs.core.first(arglist__10793);
      arglist__10793 = cljs.core.next(arglist__10793);
      var i = cljs.core.first(arglist__10793);
      var idxs = cljs.core.rest(arglist__10793);
      return G__10792__delegate(array, i, idxs);
    };
    G__10792.cljs$core$IFn$_invoke$arity$variadic = G__10792__delegate;
    return G__10792;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__10794__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv);
    };
    var G__10794 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10794__delegate.call(this, array, idx, idx2, idxv);
    };
    G__10794.cljs$lang$maxFixedArity = 3;
    G__10794.cljs$lang$applyTo = function(arglist__10795) {
      var array = cljs.core.first(arglist__10795);
      arglist__10795 = cljs.core.next(arglist__10795);
      var idx = cljs.core.first(arglist__10795);
      arglist__10795 = cljs.core.next(arglist__10795);
      var idx2 = cljs.core.first(arglist__10795);
      var idxv = cljs.core.rest(arglist__10795);
      return G__10794__delegate(array, idx, idx2, idxv);
    };
    G__10794.cljs$core$IFn$_invoke$arity$variadic = G__10794__delegate;
    return G__10794;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a;
    }, [], aseq);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.Fn = function() {
  var obj10797 = {};
  return obj10797;
}();
cljs.core.IFn = function() {
  var obj10799 = {};
  return obj10799;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = cljs.core._invoke[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._invoke["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj10801 = {};
  return obj10801;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3627__auto__ = value;
    if (and__3627__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4275__auto__ = value == null ? null : value;
    return function() {
      var or__3639__auto__ = cljs.core._clone[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._clone["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj10803 = {};
  return obj10803;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._count[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._count["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj10805 = {};
  return obj10805;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._empty[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._empty["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj10807 = {};
  return obj10807;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._conj[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._conj["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj10809 = {};
  return obj10809;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._nth[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._nth["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._nth[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._nth["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj10811 = {};
  return obj10811;
}();
cljs.core.ISeq = function() {
  var obj10813 = {};
  return obj10813;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._first[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._first["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._rest[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._rest["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj10815 = {};
  return obj10815;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._next[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._next["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj10817 = {};
  return obj10817;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._lookup[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._lookup["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._lookup[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._lookup["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj10819 = {};
  return obj10819;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj10821 = {};
  return obj10821;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._dissoc[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._dissoc["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj10823 = {};
  return obj10823;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._key[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._key["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._val[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._val["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj10825 = {};
  return obj10825;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._disjoin[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._disjoin["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj10827 = {};
  return obj10827;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._peek[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._peek["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._pop[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._pop["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj10829 = {};
  return obj10829;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc_n[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj10831 = {};
  return obj10831;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._deref[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._deref["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj10833 = {};
  return obj10833;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj10835 = {};
  return obj10835;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._meta[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._meta["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj10837 = {};
  return obj10837;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._with_meta[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._with_meta["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj10839 = {};
  return obj10839;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._reduce[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._reduce["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3627__auto__ = coll;
      if (and__3627__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4275__auto__ = coll == null ? null : coll;
      return function() {
        var or__3639__auto__ = cljs.core._reduce[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._reduce["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj10841 = {};
  return obj10841;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj10843 = {};
  return obj10843;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._equiv[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._equiv["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj10845 = {};
  return obj10845;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._hash[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._hash["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj10847 = {};
  return obj10847;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._seq[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._seq["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj10849 = {};
  return obj10849;
}();
cljs.core.IList = function() {
  var obj10851 = {};
  return obj10851;
}();
cljs.core.IRecord = function() {
  var obj10853 = {};
  return obj10853;
}();
cljs.core.IReversible = function() {
  var obj10855 = {};
  return obj10855;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._rseq[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._rseq["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj10857 = {};
  return obj10857;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._entry_key[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._entry_key["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._comparator[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._comparator["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj10859 = {};
  return obj10859;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3627__auto__ = writer;
    if (and__3627__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4275__auto__ = writer == null ? null : writer;
    return function() {
      var or__3639__auto__ = cljs.core._write[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._write["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3627__auto__ = writer;
    if (and__3627__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4275__auto__ = writer == null ? null : writer;
    return function() {
      var or__3639__auto__ = cljs.core._flush[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._flush["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj10861 = {};
  return obj10861;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._pr_writer[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj10863 = {};
  return obj10863;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3627__auto__ = d;
    if (and__3627__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4275__auto__ = d == null ? null : d;
    return function() {
      var or__3639__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj10865 = {};
  return obj10865;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = cljs.core._notify_watches[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = cljs.core._add_watch[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._add_watch["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = cljs.core._remove_watch[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj10867 = {};
  return obj10867;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._as_transient[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._as_transient["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj10869 = {};
  return obj10869;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj10871 = {};
  return obj10871;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj10873 = {};
  return obj10873;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj10875 = {};
  return obj10875;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj10877 = {};
  return obj10877;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3627__auto__ = tcoll;
    if (and__3627__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4275__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3639__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj10879 = {};
  return obj10879;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._compare[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._compare["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj10881 = {};
  return obj10881;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._drop_first[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._drop_first["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj10883 = {};
  return obj10883;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._chunked_first[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj10885 = {};
  return obj10885;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._chunked_next[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj10887 = {};
  return obj10887;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._name[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._name["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._namespace[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._namespace["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj10889 = {};
  return obj10889;
}();
cljs.core.IReset = function() {
  var obj10891 = {};
  return obj10891;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3627__auto__ = o;
    if (and__3627__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4275__auto__ = o == null ? null : o;
    return function() {
      var or__3639__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10893 = {};
  return obj10893;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3627__auto__ = o;
      if (and__3627__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4275__auto__ = o == null ? null : o;
      return function() {
        var or__3639__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IIterable = function() {
  var obj10895 = {};
  return obj10895;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3627__auto__ = coll;
    if (and__3627__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4275__auto__ = coll == null ? null : coll;
    return function() {
      var or__3639__auto__ = cljs.core._iterator[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._iterator["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul.call(null, 4294967295, 5) === 0)) {
  cljs.core.imul = function imul(a, b) {
    return Math.imul.call(null, a, b);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, cljs.core.imul.call(null, k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul.call(null, cljs.core.int_rotate_left.call(null, h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul.call(null, h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul.call(null, h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1.call(null, in$);
    var h1 = cljs.core.m3_mix_H1.call(null, cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix.call(null, h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__10896 = i + 2;
        var G__10897 = cljs.core.m3_mix_H1.call(null, h1, cljs.core.m3_mix_K1.call(null, in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__10896;
        h1 = G__10897;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1.call(null, in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix.call(null, h1__$1, cljs.core.imul.call(null, 2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj10899 = {};
  return obj10899;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__10900 = i + 1;
          var G__10901 = cljs.core.imul.call(null, 31, hash) + s.charCodeAt(i);
          i = G__10900;
          hash = G__10901;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_.call(null, k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj10905 = {};
      return obj10905;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache.call(null, k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10907 = o;
    if (G__10907) {
      var bit__4295__auto__ = G__10907.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4295__auto__ || G__10907.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._hash.call(null, o);
  } else {
    if (typeof o === "number") {
      return Math.floor.call(null, o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int.call(null, cljs.core.hash_string.call(null, o));
          } else {
            if (o == null) {
              return 0;
            } else {
              return cljs.core._hash.call(null, o);
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.m3_hash_unencoded_chars.call(null, sym.name), cljs.core.hash_string.call(null, sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (cljs.core.truth_(cljs.core._EQ_.call(null, a, b))) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = cljs.core.not.call(null, a.ns);
      if (and__3627__auto__) {
        return b.ns;
      } else {
        return and__3627__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not.call(null, b.ns)) {
          return 1;
        } else {
          var nsc = cljs.core.compare.call(null, a.ns, b.ns);
          if (nsc === 0) {
            return cljs.core.compare.call(null, a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return cljs.core.compare.call(null, a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Symbol");
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4050__auto__ = self__._hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__10909 = null;
  var G__10909__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null);
  };
  var G__10909__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found);
  };
  G__10909 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10909__2.call(this, self__, coll);
      case 3:
        return G__10909__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10909.cljs$core$IFn$_invoke$arity$2 = G__10909__2;
  G__10909.cljs$core$IFn$_invoke$arity$3 = G__10909__3;
  return G__10909;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10908) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10908)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.call(null, null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__10911 = x;
  if (G__10911) {
    var bit__4302__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3639__auto__ = bit__4302__auto__;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return G__10911.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__10911.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__10911);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIterable, G__10911);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone.call(null, value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__10913 = value;
  if (G__10913) {
    var bit__4302__auto__ = G__10913.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4302__auto__ || G__10913.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__10913.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10913);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__10913);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10915 = coll;
      if (G__10915) {
        var bit__4295__auto__ = G__10915.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4295__auto__ || G__10915.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._seq.call(null, coll);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll);
          } else {
            throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll) + " is not ISeqable");
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10917 = coll;
      if (G__10917) {
        var bit__4295__auto__ = G__10917.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4295__auto__ || G__10917.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._first.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first.call(null, s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10919 = coll;
      if (G__10919) {
        var bit__4295__auto__ = G__10919.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4295__auto__ || G__10919.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._rest.call(null, coll);
    } else {
      var s = cljs.core.seq.call(null, coll);
      if (s) {
        return cljs.core._rest.call(null, s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10921 = coll;
      if (G__10921) {
        var bit__4295__auto__ = G__10921.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4295__auto__ || G__10921.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._next.call(null, coll);
    } else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv.call(null, x, y);
    }
  };
  var _EQ___3 = function() {
    var G__10922__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__10923 = y;
            var G__10924 = cljs.core.first.call(null, more);
            var G__10925 = cljs.core.next.call(null, more);
            x = G__10923;
            y = G__10924;
            more = G__10925;
            continue;
          } else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10922 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10922__delegate.call(this, x, y, more);
    };
    G__10922.cljs$lang$maxFixedArity = 2;
    G__10922.cljs$lang$applyTo = function(arglist__10926) {
      var x = cljs.core.first(arglist__10926);
      arglist__10926 = cljs.core.next(arglist__10926);
      var y = cljs.core.first(arglist__10926);
      var more = cljs.core.rest(arglist__10926);
      return G__10922__delegate(x, y, more);
    };
    G__10922.cljs$core$IFn$_invoke$arity$variadic = G__10922__delegate;
    return G__10922;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1.call(null, hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1.call(null, h1, k1);
  return cljs.core.m3_fmix.call(null, h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10927 = n + 1;
      var G__10928 = cljs.core.imul.call(null, 31, hash_code) + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__10929 = cljs.core.next.call(null, coll__$1);
      n = G__10927;
      hash_code = G__10928;
      coll__$1 = G__10929;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10930 = n + 1;
      var G__10931 = hash_code + cljs.core.hash.call(null, cljs.core.first.call(null, coll__$1)) | 0;
      var G__10932 = cljs.core.next.call(null, coll__$1);
      n = G__10930;
      hash_code = G__10931;
      coll__$1 = G__10932;
      continue;
    } else {
      return cljs.core.mix_collection_hash.call(null, hash_code, n);
    }
    break;
  }
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Reduced");
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if (cnt === 0) {
      return f.call(null);
    } else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10933 = nval;
            var G__10934 = n + 1;
            val = G__10933;
            n = G__10934;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10935 = nval;
          var G__10936 = n + 1;
          val__$1 = G__10935;
          n = G__10936;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10937 = nval;
          var G__10938 = n + 1;
          val__$1 = G__10937;
          n = G__10938;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if (cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval);
          } else {
            var G__10939 = nval;
            var G__10940 = n + 1;
            val = G__10939;
            n = G__10940;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10941 = nval;
          var G__10942 = n + 1;
          val__$1 = G__10941;
          n = G__10942;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__10943 = nval;
          var G__10944 = n + 1;
          val__$1 = G__10943;
          n = G__10944;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10946 = x;
  if (G__10946) {
    var bit__4302__auto__ = G__10946.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4302__auto__ || G__10946.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__10946.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10946);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__10946);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10948 = x;
  if (G__10948) {
    var bit__4302__auto__ = G__10948.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4302__auto__ || G__10948.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__10948.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10948);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__10948);
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/IndexedSeq");
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RSeq");
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next.call(null, s);
    if (!(sn == null)) {
      var G__10949 = sn;
      s = G__10949;
      continue;
    } else {
      return cljs.core.first.call(null, s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj.call(null, coll, x);
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__10950__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10951 = conj.call(null, coll, x);
          var G__10952 = cljs.core.first.call(null, xs);
          var G__10953 = cljs.core.next.call(null, xs);
          coll = G__10951;
          x = G__10952;
          xs = G__10953;
          continue;
        } else {
          return conj.call(null, coll, x);
        }
        break;
      }
    };
    var G__10950 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10950__delegate.call(this, coll, x, xs);
    };
    G__10950.cljs$lang$maxFixedArity = 2;
    G__10950.cljs$lang$applyTo = function(arglist__10954) {
      var coll = cljs.core.first(arglist__10954);
      arglist__10954 = cljs.core.next(arglist__10954);
      var x = cljs.core.first(arglist__10954);
      var xs = cljs.core.rest(arglist__10954);
      return G__10950__delegate(coll, x, xs);
    };
    G__10950.cljs$core$IFn$_invoke$arity$variadic = G__10950__delegate;
    return G__10950;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty.call(null, coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s);
    } else {
      var G__10955 = cljs.core.next.call(null, s);
      var G__10956 = acc + 1;
      s = G__10955;
      acc = G__10956;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10958 = coll;
      if (G__10958) {
        var bit__4295__auto__ = G__10958.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4295__auto__ || G__10958.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._count.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll);
          } else {
            return cljs.core.accumulating_seq_count.call(null, coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10959 = cljs.core.next.call(null, coll);
              var G__10960 = n - 1;
              coll = G__10959;
              n = G__10960;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found);
          } else {
            if (cljs.core.seq.call(null, coll)) {
              var G__10961 = cljs.core.next.call(null, coll);
              var G__10962 = n - 1;
              var G__10963 = not_found;
              coll = G__10961;
              n = G__10962;
              not_found = G__10963;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__10968 = coll;
          if (G__10968) {
            var bit__4295__auto__ = G__10968.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4295__auto__ || G__10968.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__10969 = coll;
                  if (G__10969) {
                    var bit__4302__auto__ = G__10969.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4302__auto__ || G__10969.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10969.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10969);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10969);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__10970 = coll;
          if (G__10970) {
            var bit__4295__auto__ = G__10970.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4295__auto__ || G__10970.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return cljs.core._nth.call(null, coll, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
                return cljs.core._nth.call(null, coll, n);
              } else {
                if (function() {
                  var G__10971 = coll;
                  if (G__10971) {
                    var bit__4302__auto__ = G__10971.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4302__auto__ || G__10971.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10971.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10971);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__10971);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found);
                } else {
                  throw new Error("nth not supported on this type " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll))));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__10974 = o;
        if (G__10974) {
          var bit__4295__auto__ = G__10974.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4295__auto__ || G__10974.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__10975 = o;
        if (G__10975) {
          var bit__4295__auto__ = G__10975.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4295__auto__ || G__10975.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__10976__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.call(null, coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__10977 = ret;
          var G__10978 = cljs.core.first.call(null, kvs);
          var G__10979 = cljs.core.second.call(null, kvs);
          var G__10980 = cljs.core.nnext.call(null, kvs);
          coll = G__10977;
          k = G__10978;
          v = G__10979;
          kvs = G__10980;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__10976 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__10976__delegate.call(this, coll, k, v, kvs);
    };
    G__10976.cljs$lang$maxFixedArity = 3;
    G__10976.cljs$lang$applyTo = function(arglist__10981) {
      var coll = cljs.core.first(arglist__10981);
      arglist__10981 = cljs.core.next(arglist__10981);
      var k = cljs.core.first(arglist__10981);
      arglist__10981 = cljs.core.next(arglist__10981);
      var v = cljs.core.first(arglist__10981);
      var kvs = cljs.core.rest(arglist__10981);
      return G__10976__delegate(coll, k, v, kvs);
    };
    G__10976.cljs$core$IFn$_invoke$arity$variadic = G__10976__delegate;
    return G__10976;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc.call(null, coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__10982__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10983 = ret;
            var G__10984 = cljs.core.first.call(null, ks);
            var G__10985 = cljs.core.next.call(null, ks);
            coll = G__10983;
            k = G__10984;
            ks = G__10985;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10982 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__10982__delegate.call(this, coll, k, ks);
    };
    G__10982.cljs$lang$maxFixedArity = 2;
    G__10982.cljs$lang$applyTo = function(arglist__10986) {
      var coll = cljs.core.first(arglist__10986);
      arglist__10986 = cljs.core.next(arglist__10986);
      var k = cljs.core.first(arglist__10986);
      var ks = cljs.core.rest(arglist__10986);
      return G__10982__delegate(coll, k, ks);
    };
    G__10982.cljs$core$IFn$_invoke$arity$variadic = G__10982__delegate;
    return G__10982;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3639__auto__ = goog.isFunction(f);
  if (or__3639__auto__) {
    return or__3639__auto__;
  } else {
    var G__10990 = f;
    if (G__10990) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto____$1 = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto____$1)) {
          return or__3639__auto____$1;
        } else {
          return G__10990.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__10990.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10990);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__10990);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MetaFn");
};
cljs.core.MetaFn.prototype.call = function() {
  var G__10992 = null;
  var G__10992__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null);
  };
  var G__10992__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a);
  };
  var G__10992__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b);
  };
  var G__10992__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c);
  };
  var G__10992__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d);
  };
  var G__10992__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e);
  };
  var G__10992__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__10992__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__10992__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__10992__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10992__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10992__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10992__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10992__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10992__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10992__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10992__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10992__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10992__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10992__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10992__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10992__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__10992 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10992__1.call(this, self__);
      case 2:
        return G__10992__2.call(this, self__, a);
      case 3:
        return G__10992__3.call(this, self__, a, b);
      case 4:
        return G__10992__4.call(this, self__, a, b, c);
      case 5:
        return G__10992__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10992__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10992__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10992__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10992__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10992__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10992__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10992__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10992__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10992__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10992__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10992__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10992__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10992__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10992__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10992__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10992__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10992__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10992.cljs$core$IFn$_invoke$arity$1 = G__10992__1;
  G__10992.cljs$core$IFn$_invoke$arity$2 = G__10992__2;
  G__10992.cljs$core$IFn$_invoke$arity$3 = G__10992__3;
  G__10992.cljs$core$IFn$_invoke$arity$4 = G__10992__4;
  G__10992.cljs$core$IFn$_invoke$arity$5 = G__10992__5;
  G__10992.cljs$core$IFn$_invoke$arity$6 = G__10992__6;
  G__10992.cljs$core$IFn$_invoke$arity$7 = G__10992__7;
  G__10992.cljs$core$IFn$_invoke$arity$8 = G__10992__8;
  G__10992.cljs$core$IFn$_invoke$arity$9 = G__10992__9;
  G__10992.cljs$core$IFn$_invoke$arity$10 = G__10992__10;
  G__10992.cljs$core$IFn$_invoke$arity$11 = G__10992__11;
  G__10992.cljs$core$IFn$_invoke$arity$12 = G__10992__12;
  G__10992.cljs$core$IFn$_invoke$arity$13 = G__10992__13;
  G__10992.cljs$core$IFn$_invoke$arity$14 = G__10992__14;
  G__10992.cljs$core$IFn$_invoke$arity$15 = G__10992__15;
  G__10992.cljs$core$IFn$_invoke$arity$16 = G__10992__16;
  G__10992.cljs$core$IFn$_invoke$arity$17 = G__10992__17;
  G__10992.cljs$core$IFn$_invoke$arity$18 = G__10992__18;
  G__10992.cljs$core$IFn$_invoke$arity$19 = G__10992__19;
  G__10992.cljs$core$IFn$_invoke$arity$20 = G__10992__20;
  G__10992.cljs$core$IFn$_invoke$arity$21 = G__10992__21;
  G__10992.cljs$core$IFn$_invoke$arity$22 = G__10992__22;
  return G__10992;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args10991) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args10991)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__10996 = o;
    if (G__10996) {
      var bit__4302__auto__ = G__10996.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4302__auto__ || G__10996.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__10996.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10996);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__10996);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta.call(null, o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3627__auto__ = !(o == null);
    if (and__3627__auto__) {
      var G__11000 = o;
      if (G__11000) {
        var bit__4302__auto__ = G__11000.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4302__auto__ || G__11000.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__11000.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11000);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11000);
      }
    } else {
      return and__3627__auto__;
    }
  }()) {
    return cljs.core._meta.call(null, o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek.call(null, coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop.call(null, coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin.call(null, coll, k);
    }
  };
  var disj__3 = function() {
    var G__11001__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.call(null, coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11002 = ret;
            var G__11003 = cljs.core.first.call(null, ks);
            var G__11004 = cljs.core.next.call(null, ks);
            coll = G__11002;
            k = G__11003;
            ks = G__11004;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11001 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11001__delegate.call(this, coll, k, ks);
    };
    G__11001.cljs$lang$maxFixedArity = 2;
    G__11001.cljs$lang$applyTo = function(arglist__11005) {
      var coll = cljs.core.first(arglist__11005);
      arglist__11005 = cljs.core.next(arglist__11005);
      var k = cljs.core.first(arglist__11005);
      var ks = cljs.core.rest(arglist__11005);
      return G__11001__delegate(coll, k, ks);
    };
    G__11001.cljs$core$IFn$_invoke$arity$variadic = G__11001__delegate;
    return G__11001;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11007 = x;
    if (G__11007) {
      var bit__4302__auto__ = G__11007.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4302__auto__ || G__11007.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__11007.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__11007);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__11007);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11009 = x;
    if (G__11009) {
      var bit__4302__auto__ = G__11009.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4302__auto__ || G__11009.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__11009.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__11009);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__11009);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__11011 = x;
  if (G__11011) {
    var bit__4302__auto__ = G__11011.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4302__auto__ || G__11011.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__11011.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__11011);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__11011);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__11013 = x;
  if (G__11013) {
    var bit__4302__auto__ = G__11013.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4302__auto__ || G__11013.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__11013.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__11013);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__11013);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__11015 = x;
  if (G__11015) {
    var bit__4302__auto__ = G__11015.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4302__auto__ || G__11015.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__11015.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__11015);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISorted, G__11015);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__11017 = x;
  if (G__11017) {
    var bit__4302__auto__ = G__11017.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4302__auto__ || G__11017.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__11017.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__11017);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__11017);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11019 = x;
    if (G__11019) {
      var bit__4302__auto__ = G__11019.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4302__auto__ || G__11019.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__11019.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__11019);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__11019);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__11021 = x;
  if (G__11021) {
    var bit__4302__auto__ = G__11021.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4302__auto__ || G__11021.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__11021.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__11021);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__11021);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__11023 = x;
  if (G__11023) {
    var bit__4295__auto__ = G__11023.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4295__auto__ || G__11023.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj11027 = {};
    return obj11027;
  };
  var js_obj__1 = function() {
    var G__11028__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals);
    };
    var G__11028 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11028__delegate.call(this, keyvals);
    };
    G__11028.cljs$lang$maxFixedArity = 0;
    G__11028.cljs$lang$applyTo = function(arglist__11029) {
      var keyvals = cljs.core.seq(arglist__11029);
      return G__11028__delegate(keyvals);
    };
    G__11028.cljs$core$IFn$_invoke$arity$variadic = G__11028__delegate;
    return G__11028;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(keys));
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11030 = i__$1 + 1;
      var G__11031 = j__$1 + 1;
      var G__11032 = len__$1 - 1;
      i__$1 = G__11030;
      j__$1 = G__11031;
      len__$1 = G__11032;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11033 = i__$1 - 1;
      var G__11034 = j__$1 - 1;
      var G__11035 = len__$1 - 1;
      i__$1 = G__11033;
      j__$1 = G__11034;
      len__$1 = G__11035;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj11037 = {};
  return obj11037;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__11039 = s;
    if (G__11039) {
      var bit__4302__auto__ = G__11039.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4302__auto__ || G__11039.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__11039.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11039);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__11039);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__11041 = s;
  if (G__11041) {
    var bit__4302__auto__ = G__11041.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4302__auto__ || G__11041.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__11041.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__11041);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__11041);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3639__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if (or__3639__auto__) {
    return or__3639__auto__;
  } else {
    var G__11045 = f;
    if (G__11045) {
      var bit__4302__auto__ = G__11045.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4302__auto__ || G__11045.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__11045.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__11045);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__11045);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.call(null, coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__11046__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false;
            } else {
              var G__11047 = cljs.core.conj.call(null, s, x__$1);
              var G__11048 = etc;
              s = G__11047;
              xs = G__11048;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__11046 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11046__delegate.call(this, x, y, more);
    };
    G__11046.cljs$lang$maxFixedArity = 2;
    G__11046.cljs$lang$applyTo = function(arglist__11049) {
      var x = cljs.core.first(arglist__11049);
      arglist__11049 = cljs.core.next(arglist__11049);
      var y = cljs.core.first(arglist__11049);
      var more = cljs.core.rest(arglist__11049);
      return G__11046__delegate(x, y, more);
    };
    G__11046.cljs$core$IFn$_invoke$arity$variadic = G__11046__delegate;
    return G__11046;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.sequence = function sequence(coll) {
  if (cljs.core.seq_QMARK_.call(null, coll)) {
    return coll;
  } else {
    var or__3639__auto__ = cljs.core.seq.call(null, coll);
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if (function() {
            var G__11051 = x;
            if (G__11051) {
              var bit__4295__auto__ = G__11051.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4295__auto__ || G__11051.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._compare.call(null, x, y);
          } else {
            return goog.array.defaultCompare(x, y);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.call(null, xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if (d === 0 && n + 1 < len) {
        var G__11052 = xs;
        var G__11053 = ys;
        var G__11054 = len;
        var G__11055 = n + 1;
        xs = G__11052;
        ys = G__11053;
        len = G__11054;
        n = G__11055;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y));
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s));
    } else {
      return f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if (cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval);
        } else {
          var G__11056 = nval;
          var G__11057 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__11056;
          coll__$1 = G__11057;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__11060 = coll;
      if (G__11060) {
        var bit__4295__auto__ = G__11060.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4295__auto__ || G__11060.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f);
          } else {
            return cljs.core.seq_reduce.call(null, f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__11061 = coll;
      if (G__11061) {
        var bit__4295__auto__ = G__11061.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4295__auto__ || G__11061.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val);
          } else {
            return cljs.core.seq_reduce.call(null, f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce.call(null, coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.call(null, f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__11062 = null;
      var G__11062__0 = function() {
        return f.call(null);
      };
      var G__11062__1 = function(x) {
        return cf.call(null, x);
      };
      var G__11062__2 = function(x, y) {
        return f.call(null, x, y);
      };
      G__11062 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__11062__0.call(this);
          case 1:
            return G__11062__1.call(this, x);
          case 2:
            return G__11062__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11062.cljs$core$IFn$_invoke$arity$0 = G__11062__0;
      G__11062.cljs$core$IFn$_invoke$arity$1 = G__11062__1;
      G__11062.cljs$core$IFn$_invoke$arity$2 = G__11062__2;
      return G__11062;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.call(null, xform, f, f.call(null), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = xform.call(null, f);
    var ret = cljs.core.reduce.call(null, f__$1, init, coll);
    return f__$1.call(null, ret);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__11063__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more);
    };
    var G__11063 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11063__delegate.call(this, x, y, more);
    };
    G__11063.cljs$lang$maxFixedArity = 2;
    G__11063.cljs$lang$applyTo = function(arglist__11064) {
      var x = cljs.core.first(arglist__11064);
      arglist__11064 = cljs.core.next(arglist__11064);
      var y = cljs.core.first(arglist__11064);
      var more = cljs.core.rest(arglist__11064);
      return G__11063__delegate(x, y, more);
    };
    G__11063.cljs$core$IFn$_invoke$arity$variadic = G__11063__delegate;
    return G__11063;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__11065__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more);
    };
    var G__11065 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11065__delegate.call(this, x, y, more);
    };
    G__11065.cljs$lang$maxFixedArity = 2;
    G__11065.cljs$lang$applyTo = function(arglist__11066) {
      var x = cljs.core.first(arglist__11066);
      arglist__11066 = cljs.core.next(arglist__11066);
      var y = cljs.core.first(arglist__11066);
      var more = cljs.core.rest(arglist__11066);
      return G__11065__delegate(x, y, more);
    };
    G__11065.cljs$core$IFn$_invoke$arity$variadic = G__11065__delegate;
    return G__11065;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__11067__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more);
    };
    var G__11067 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11067__delegate.call(this, x, y, more);
    };
    G__11067.cljs$lang$maxFixedArity = 2;
    G__11067.cljs$lang$applyTo = function(arglist__11068) {
      var x = cljs.core.first(arglist__11068);
      arglist__11068 = cljs.core.next(arglist__11068);
      var y = cljs.core.first(arglist__11068);
      var more = cljs.core.rest(arglist__11068);
      return G__11067__delegate(x, y, more);
    };
    G__11067.cljs$core$IFn$_invoke$arity$variadic = G__11067__delegate;
    return G__11067;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__11069__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more);
    };
    var G__11069 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11069__delegate.call(this, x, y, more);
    };
    G__11069.cljs$lang$maxFixedArity = 2;
    G__11069.cljs$lang$applyTo = function(arglist__11070) {
      var x = cljs.core.first(arglist__11070);
      arglist__11070 = cljs.core.next(arglist__11070);
      var y = cljs.core.first(arglist__11070);
      var more = cljs.core.rest(arglist__11070);
      return G__11069__delegate(x, y, more);
    };
    G__11069.cljs$core$IFn$_invoke$arity$variadic = G__11069__delegate;
    return G__11069;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__11071__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next.call(null, more)) {
            var G__11072 = y;
            var G__11073 = cljs.core.first.call(null, more);
            var G__11074 = cljs.core.next.call(null, more);
            x = G__11072;
            y = G__11073;
            more = G__11074;
            continue;
          } else {
            return y < cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11071 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11071__delegate.call(this, x, y, more);
    };
    G__11071.cljs$lang$maxFixedArity = 2;
    G__11071.cljs$lang$applyTo = function(arglist__11075) {
      var x = cljs.core.first(arglist__11075);
      arglist__11075 = cljs.core.next(arglist__11075);
      var y = cljs.core.first(arglist__11075);
      var more = cljs.core.rest(arglist__11075);
      return G__11071__delegate(x, y, more);
    };
    G__11071.cljs$core$IFn$_invoke$arity$variadic = G__11071__delegate;
    return G__11071;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__11076__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next.call(null, more)) {
            var G__11077 = y;
            var G__11078 = cljs.core.first.call(null, more);
            var G__11079 = cljs.core.next.call(null, more);
            x = G__11077;
            y = G__11078;
            more = G__11079;
            continue;
          } else {
            return y <= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11076 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11076__delegate.call(this, x, y, more);
    };
    G__11076.cljs$lang$maxFixedArity = 2;
    G__11076.cljs$lang$applyTo = function(arglist__11080) {
      var x = cljs.core.first(arglist__11080);
      arglist__11080 = cljs.core.next(arglist__11080);
      var y = cljs.core.first(arglist__11080);
      var more = cljs.core.rest(arglist__11080);
      return G__11076__delegate(x, y, more);
    };
    G__11076.cljs$core$IFn$_invoke$arity$variadic = G__11076__delegate;
    return G__11076;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__11081__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next.call(null, more)) {
            var G__11082 = y;
            var G__11083 = cljs.core.first.call(null, more);
            var G__11084 = cljs.core.next.call(null, more);
            x = G__11082;
            y = G__11083;
            more = G__11084;
            continue;
          } else {
            return y > cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11081 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11081__delegate.call(this, x, y, more);
    };
    G__11081.cljs$lang$maxFixedArity = 2;
    G__11081.cljs$lang$applyTo = function(arglist__11085) {
      var x = cljs.core.first(arglist__11085);
      arglist__11085 = cljs.core.next(arglist__11085);
      var y = cljs.core.first(arglist__11085);
      var more = cljs.core.rest(arglist__11085);
      return G__11081__delegate(x, y, more);
    };
    G__11081.cljs$core$IFn$_invoke$arity$variadic = G__11081__delegate;
    return G__11081;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__11086__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next.call(null, more)) {
            var G__11087 = y;
            var G__11088 = cljs.core.first.call(null, more);
            var G__11089 = cljs.core.next.call(null, more);
            x = G__11087;
            y = G__11088;
            more = G__11089;
            continue;
          } else {
            return y >= cljs.core.first.call(null, more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11086 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11086__delegate.call(this, x, y, more);
    };
    G__11086.cljs$lang$maxFixedArity = 2;
    G__11086.cljs$lang$applyTo = function(arglist__11090) {
      var x = cljs.core.first(arglist__11090);
      arglist__11090 = cljs.core.next(arglist__11090);
      var y = cljs.core.first(arglist__11090);
      var more = cljs.core.rest(arglist__11090);
      return G__11086__delegate(x, y, more);
    };
    G__11086.cljs$core$IFn$_invoke$arity$variadic = G__11086__delegate;
    return G__11086;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__3946__auto__ = x;
    var y__3947__auto__ = y;
    return x__3946__auto__ > y__3947__auto__ ? x__3946__auto__ : y__3947__auto__;
  };
  var max__3 = function() {
    var G__11091__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3946__auto__ = x;
        var y__3947__auto__ = y;
        return x__3946__auto__ > y__3947__auto__ ? x__3946__auto__ : y__3947__auto__;
      }(), more);
    };
    var G__11091 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11091__delegate.call(this, x, y, more);
    };
    G__11091.cljs$lang$maxFixedArity = 2;
    G__11091.cljs$lang$applyTo = function(arglist__11092) {
      var x = cljs.core.first(arglist__11092);
      arglist__11092 = cljs.core.next(arglist__11092);
      var y = cljs.core.first(arglist__11092);
      var more = cljs.core.rest(arglist__11092);
      return G__11091__delegate(x, y, more);
    };
    G__11091.cljs$core$IFn$_invoke$arity$variadic = G__11091__delegate;
    return G__11091;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__3953__auto__ = x;
    var y__3954__auto__ = y;
    return x__3953__auto__ < y__3954__auto__ ? x__3953__auto__ : y__3954__auto__;
  };
  var min__3 = function() {
    var G__11093__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3953__auto__ = x;
        var y__3954__auto__ = y;
        return x__3953__auto__ < y__3954__auto__ ? x__3953__auto__ : y__3954__auto__;
      }(), more);
    };
    var G__11093 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11093__delegate.call(this, x, y, more);
    };
    G__11093.cljs$lang$maxFixedArity = 2;
    G__11093.cljs$lang$applyTo = function(arglist__11094) {
      var x = cljs.core.first(arglist__11094);
      arglist__11094 = cljs.core.next(arglist__11094);
      var y = cljs.core.first(arglist__11094);
      var more = cljs.core.rest(arglist__11094);
      return G__11093__delegate(x, y, more);
    };
    G__11093.cljs$core$IFn$_invoke$arity$variadic = G__11093__delegate;
    return G__11093;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__11095__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more);
    };
    var G__11095 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11095__delegate.call(this, x, y, more);
    };
    G__11095.cljs$lang$maxFixedArity = 2;
    G__11095.cljs$lang$applyTo = function(arglist__11096) {
      var x = cljs.core.first(arglist__11096);
      arglist__11096 = cljs.core.next(arglist__11096);
      var y = cljs.core.first(arglist__11096);
      var more = cljs.core.rest(arglist__11096);
      return G__11095__delegate(x, y, more);
    };
    G__11095.cljs$core$IFn$_invoke$arity$variadic = G__11095__delegate;
    return G__11095;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__11097__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more);
    };
    var G__11097 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11097__delegate.call(this, x, y, more);
    };
    G__11097.cljs$lang$maxFixedArity = 2;
    G__11097.cljs$lang$applyTo = function(arglist__11098) {
      var x = cljs.core.first(arglist__11098);
      arglist__11098 = cljs.core.next(arglist__11098);
      var y = cljs.core.first(arglist__11098);
      var more = cljs.core.rest(arglist__11098);
      return G__11097__delegate(x, y, more);
    };
    G__11097.cljs$core$IFn$_invoke$arity$variadic = G__11097__delegate;
    return G__11097;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__11099__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more);
    };
    var G__11099 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11099__delegate.call(this, x, y, more);
    };
    G__11099.cljs$lang$maxFixedArity = 2;
    G__11099.cljs$lang$applyTo = function(arglist__11100) {
      var x = cljs.core.first(arglist__11100);
      arglist__11100 = cljs.core.next(arglist__11100);
      var y = cljs.core.first(arglist__11100);
      var more = cljs.core.rest(arglist__11100);
      return G__11099__delegate(x, y, more);
    };
    G__11099.cljs$core$IFn$_invoke$arity$variadic = G__11099__delegate;
    return G__11099;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__11101__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more);
    };
    var G__11101 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11101__delegate.call(this, x, y, more);
    };
    G__11101.cljs$lang$maxFixedArity = 2;
    G__11101.cljs$lang$applyTo = function(arglist__11102) {
      var x = cljs.core.first(arglist__11102);
      arglist__11102 = cljs.core.next(arglist__11102);
      var y = cljs.core.first(arglist__11102);
      var more = cljs.core.rest(arglist__11102);
      return G__11101__delegate(x, y, more);
    };
    G__11101.cljs$core$IFn$_invoke$arity$variadic = G__11101__delegate;
    return G__11101;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__11103__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more);
    };
    var G__11103 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11103__delegate.call(this, x, y, more);
    };
    G__11103.cljs$lang$maxFixedArity = 2;
    G__11103.cljs$lang$applyTo = function(arglist__11104) {
      var x = cljs.core.first(arglist__11104);
      arglist__11104 = cljs.core.next(arglist__11104);
      var y = cljs.core.first(arglist__11104);
      var more = cljs.core.rest(arglist__11104);
      return G__11103__delegate(x, y, more);
    };
    G__11103.cljs$core$IFn$_invoke$arity$variadic = G__11103__delegate;
    return G__11103;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__11105__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract, x - y, more);
    };
    var G__11105 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11105__delegate.call(this, x, y, more);
    };
    G__11105.cljs$lang$maxFixedArity = 2;
    G__11105.cljs$lang$applyTo = function(arglist__11106) {
      var x = cljs.core.first(arglist__11106);
      arglist__11106 = cljs.core.next(arglist__11106);
      var y = cljs.core.first(arglist__11106);
      var more = cljs.core.rest(arglist__11106);
      return G__11105__delegate(x, y, more);
    };
    G__11105.cljs$core$IFn$_invoke$arity$variadic = G__11105__delegate;
    return G__11105;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__11107__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_subtract_int, x - y, more);
    };
    var G__11107 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11107__delegate.call(this, x, y, more);
    };
    G__11107.cljs$lang$maxFixedArity = 2;
    G__11107.cljs$lang$applyTo = function(arglist__11108) {
      var x = cljs.core.first(arglist__11108);
      arglist__11108 = cljs.core.next(arglist__11108);
      var y = cljs.core.first(arglist__11108);
      var more = cljs.core.rest(arglist__11108);
      return G__11107__delegate(x, y, more);
    };
    G__11107.cljs$core$IFn$_invoke$arity$variadic = G__11107__delegate;
    return G__11107;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    return Math.floor.call(null, q);
  } else {
    return Math.ceil.call(null, q);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q;
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null);
  };
  var rand__1 = function(n) {
    return n * rand.call(null);
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n));
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y;
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y;
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y;
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y;
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__11109__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.call(null, x, y)) {
          if (cljs.core.next.call(null, more)) {
            var G__11110 = y;
            var G__11111 = cljs.core.first.call(null, more);
            var G__11112 = cljs.core.next.call(null, more);
            x = G__11110;
            y = G__11111;
            more = G__11112;
            continue;
          } else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11109 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11109__delegate.call(this, x, y, more);
    };
    G__11109.cljs$lang$maxFixedArity = 2;
    G__11109.cljs$lang$applyTo = function(arglist__11113) {
      var x = cljs.core.first(arglist__11113);
      arglist__11113 = cljs.core.next(arglist__11113);
      var y = cljs.core.first(arglist__11113);
      var more = cljs.core.rest(arglist__11113);
      return G__11109__delegate(x, y, more);
    };
    G__11109.cljs$core$IFn$_invoke$arity$variadic = G__11109__delegate;
    return G__11109;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__11114 = n__$1 - 1;
      var G__11115 = cljs.core.next.call(null, xs);
      n__$1 = G__11114;
      xs = G__11115;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      return "" + x;
    }
  };
  var str__2 = function() {
    var G__11116__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__11117 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__11118 = cljs.core.next.call(null, more);
          sb = G__11117;
          more = G__11118;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__11116 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11116__delegate.call(this, x, ys);
    };
    G__11116.cljs$lang$maxFixedArity = 1;
    G__11116.cljs$lang$applyTo = function(arglist__11119) {
      var x = cljs.core.first(arglist__11119);
      var ys = cljs.core.rest(arglist__11119);
      return G__11116__delegate(x, ys);
    };
    G__11116.cljs$core$IFn$_invoke$arity$variadic = G__11116__delegate;
    return G__11116;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? cljs.core.counted_QMARK_.call(null, x) && cljs.core.counted_QMARK_.call(null, y) && !(cljs.core.count.call(null, x) === cljs.core.count.call(null, y)) ? false : function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__11120 = cljs.core.next.call(null, xs);
            var G__11121 = cljs.core.next.call(null, ys);
            xs = G__11120;
            ys = G__11121;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__11122 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__11123 = cljs.core.next.call(null, s);
        res = G__11122;
        s = G__11123;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while (true) {
    if (s) {
      var e = cljs.core.first.call(null, s);
      var G__11124 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__11125 = cljs.core.next.call(null, s);
      h = G__11124;
      s = G__11125;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__11126 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__11127 = cljs.core.next.call(null, s__$1);
      h = G__11126;
      s__$1 = G__11127;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__11134_11140 = cljs.core.seq.call(null, fn_map);
  var chunk__11135_11141 = null;
  var count__11136_11142 = 0;
  var i__11137_11143 = 0;
  while (true) {
    if (i__11137_11143 < count__11136_11142) {
      var vec__11138_11144 = cljs.core._nth.call(null, chunk__11135_11141, i__11137_11143);
      var key_name_11145 = cljs.core.nth.call(null, vec__11138_11144, 0, null);
      var f_11146 = cljs.core.nth.call(null, vec__11138_11144, 1, null);
      var str_name_11147 = cljs.core.name.call(null, key_name_11145);
      obj[str_name_11147] = f_11146;
      var G__11148 = seq__11134_11140;
      var G__11149 = chunk__11135_11141;
      var G__11150 = count__11136_11142;
      var G__11151 = i__11137_11143 + 1;
      seq__11134_11140 = G__11148;
      chunk__11135_11141 = G__11149;
      count__11136_11142 = G__11150;
      i__11137_11143 = G__11151;
      continue;
    } else {
      var temp__4126__auto___11152 = cljs.core.seq.call(null, seq__11134_11140);
      if (temp__4126__auto___11152) {
        var seq__11134_11153__$1 = temp__4126__auto___11152;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11134_11153__$1)) {
          var c__4408__auto___11154 = cljs.core.chunk_first.call(null, seq__11134_11153__$1);
          var G__11155 = cljs.core.chunk_rest.call(null, seq__11134_11153__$1);
          var G__11156 = c__4408__auto___11154;
          var G__11157 = cljs.core.count.call(null, c__4408__auto___11154);
          var G__11158 = 0;
          seq__11134_11140 = G__11155;
          chunk__11135_11141 = G__11156;
          count__11136_11142 = G__11157;
          i__11137_11143 = G__11158;
          continue;
        } else {
          var vec__11139_11159 = cljs.core.first.call(null, seq__11134_11153__$1);
          var key_name_11160 = cljs.core.nth.call(null, vec__11139_11159, 0, null);
          var f_11161 = cljs.core.nth.call(null, vec__11139_11159, 1, null);
          var str_name_11162 = cljs.core.name.call(null, key_name_11160);
          obj[str_name_11162] = f_11161;
          var G__11163 = cljs.core.next.call(null, seq__11134_11153__$1);
          var G__11164 = null;
          var G__11165 = 0;
          var G__11166 = 0;
          seq__11134_11140 = G__11163;
          chunk__11135_11141 = G__11164;
          count__11136_11142 = G__11165;
          i__11137_11143 = G__11166;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/List");
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/EmptyList");
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11168 = coll;
  if (G__11168) {
    var bit__4302__auto__ = G__11168.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4302__auto__ || G__11168.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__11168.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__11168);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__11168);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__11169 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__11169;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__11170 = i - 1;
        var G__11171 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__11170;
        r = G__11171;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__11172) {
    var xs = cljs.core.seq(arglist__11172);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Cons");
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq.call(null, self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3639__auto__ = coll == null;
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      var G__11176 = coll;
      if (G__11176) {
        var bit__4295__auto__ = G__11176.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4295__auto__ || G__11176.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11178 = x;
  if (G__11178) {
    var bit__4302__auto__ = G__11178.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4302__auto__ || G__11178.cljs$core$IList$) {
      return true;
    } else {
      if (!G__11178.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__11178);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__11178);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol.call(null, k) + 2654435769 | 0;
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Keyword");
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4050__auto__ = self__._hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_keyword.call(null, this$__$1);
    self__._hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__11180 = null;
  var G__11180__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw);
  };
  var G__11180__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found);
  };
  G__11180 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11180__2.call(this, self__, coll);
      case 3:
        return G__11180__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11180.cljs$core$IFn$_invoke$arity$2 = G__11180__2;
  G__11180.cljs$core$IFn$_invoke$arity$3 = G__11180__3;
  return G__11180;
}();
cljs.core.Keyword.prototype.apply = function(self__, args11179) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11179)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn);
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__11182 = x;
    if (G__11182) {
      var bit__4295__auto__ = G__11182.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4295__auto__ || G__11182.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._namespace.call(null, x);
  } else {
    throw new Error("Doesn't support namespace: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace.call(null, name), cljs.core.name.call(null, name), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(ns) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" : null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/LazySeq");
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__11183 = ls.sval();
        ls = G__11183;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayChunk");
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkedCons");
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count.call(null, chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__11185 = s;
    if (G__11185) {
      var bit__4295__auto__ = G__11185.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4295__auto__ || G__11185.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next.call(null, s);
  } else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__11186 = cljs.core.next.call(null, s__$1);
      s__$1 = G__11186;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_11187 = 0;
  var xs_11188 = cljs.core.seq.call(null, coll);
  while (true) {
    if (xs_11188) {
      ret[i_11187] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_11188));
      var G__11189 = i_11187 + 1;
      var G__11190 = cljs.core.next.call(null, xs_11188);
      i_11187 = G__11189;
      xs_11188 = G__11190;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11191 = i + 1;
          var G__11192 = cljs.core.next.call(null, s__$1);
          i = G__11191;
          s__$1 = G__11192;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___11193 = size;
      var i_11194 = 0;
      while (true) {
        if (i_11194 < n__4508__auto___11193) {
          a[i_11194] = init_val_or_seq;
          var G__11195 = i_11194 + 1;
          i_11194 = G__11195;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11196 = i + 1;
          var G__11197 = cljs.core.next.call(null, s__$1);
          i = G__11196;
          s__$1 = G__11197;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___11198 = size;
      var i_11199 = 0;
      while (true) {
        if (i_11199 < n__4508__auto___11198) {
          a[i_11199] = init_val_or_seq;
          var G__11200 = i_11199 + 1;
          i_11199 = G__11200;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11201 = i + 1;
          var G__11202 = cljs.core.next.call(null, s__$1);
          i = G__11201;
          s__$1 = G__11202;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___11203 = size;
      var i_11204 = 0;
      while (true) {
        if (i_11204 < n__4508__auto___11203) {
          a[i_11204] = init_val_or_seq;
          var G__11205 = i_11204 + 1;
          i_11204 = G__11205;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null);
    } else {
      return cljs.core.into_array.call(null, size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__11206 = i + 1;
          var G__11207 = cljs.core.next.call(null, s__$1);
          i = G__11206;
          s__$1 = G__11207;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4508__auto___11208 = size;
      var i_11209 = 0;
      while (true) {
        if (i_11209 < n__4508__auto___11208) {
          a[i_11209] = init_val_or_seq;
          var G__11210 = i_11209 + 1;
          i_11209 = G__11210;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__11211 = cljs.core.next.call(null, s__$1);
        var G__11212 = i - 1;
        var G__11213 = sum + 1;
        s__$1 = G__11211;
        i = G__11212;
        sum = G__11213;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist));
    } else {
      return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y));
        } else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__11214__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1));
            } else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat.call(null, concat.call(null, x, y), zs);
    };
    var G__11214 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11214__delegate.call(this, x, y, zs);
    };
    G__11214.cljs$lang$maxFixedArity = 2;
    G__11214.cljs$lang$applyTo = function(arglist__11215) {
      var x = cljs.core.first(arglist__11215);
      arglist__11215 = cljs.core.next(arglist__11215);
      var y = cljs.core.first(arglist__11215);
      var zs = cljs.core.rest(arglist__11215);
      return G__11214__delegate(x, y, zs);
    };
    G__11214.cljs$core$IFn$_invoke$arity$variadic = G__11214__delegate;
    return G__11214;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)));
  };
  var list_STAR___5 = function() {
    var G__11216__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))));
    };
    var G__11216 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11216__delegate.call(this, a, b, c, d, more);
    };
    G__11216.cljs$lang$maxFixedArity = 4;
    G__11216.cljs$lang$applyTo = function(arglist__11217) {
      var a = cljs.core.first(arglist__11217);
      arglist__11217 = cljs.core.next(arglist__11217);
      var b = cljs.core.first(arglist__11217);
      arglist__11217 = cljs.core.next(arglist__11217);
      var c = cljs.core.first(arglist__11217);
      arglist__11217 = cljs.core.next(arglist__11217);
      var d = cljs.core.first(arglist__11217);
      var more = cljs.core.rest(arglist__11217);
      return G__11216__delegate(a, b, c, d, more);
    };
    G__11216.cljs$core$IFn$_invoke$arity$variadic = G__11216__delegate;
    return G__11216;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_.call(null, tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__11218__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11219 = ntcoll;
          var G__11220 = cljs.core.first.call(null, vals);
          var G__11221 = cljs.core.next.call(null, vals);
          tcoll = G__11219;
          val = G__11220;
          vals = G__11221;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11218 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11218__delegate.call(this, tcoll, val, vals);
    };
    G__11218.cljs$lang$maxFixedArity = 2;
    G__11218.cljs$lang$applyTo = function(arglist__11222) {
      var tcoll = cljs.core.first(arglist__11222);
      arglist__11222 = cljs.core.next(arglist__11222);
      var val = cljs.core.first(arglist__11222);
      var vals = cljs.core.rest(arglist__11222);
      return G__11218__delegate(tcoll, val, vals);
    };
    G__11218.cljs$core$IFn$_invoke$arity$variadic = G__11218__delegate;
    return G__11218;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_.call(null, tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__11223__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_.call(null, tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__11224 = ntcoll;
          var G__11225 = cljs.core.first.call(null, kvs);
          var G__11226 = cljs.core.second.call(null, kvs);
          var G__11227 = cljs.core.nnext.call(null, kvs);
          tcoll = G__11224;
          key = G__11225;
          val = G__11226;
          kvs = G__11227;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11223 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11223__delegate.call(this, tcoll, key, val, kvs);
    };
    G__11223.cljs$lang$maxFixedArity = 3;
    G__11223.cljs$lang$applyTo = function(arglist__11228) {
      var tcoll = cljs.core.first(arglist__11228);
      arglist__11228 = cljs.core.next(arglist__11228);
      var key = cljs.core.first(arglist__11228);
      arglist__11228 = cljs.core.next(arglist__11228);
      var val = cljs.core.first(arglist__11228);
      var kvs = cljs.core.rest(arglist__11228);
      return G__11223__delegate(tcoll, key, val, kvs);
    };
    G__11223.cljs$core$IFn$_invoke$arity$variadic = G__11223__delegate;
    return G__11223;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_.call(null, tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__11229__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_.call(null, tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__11230 = ntcoll;
          var G__11231 = cljs.core.first.call(null, ks);
          var G__11232 = cljs.core.next.call(null, ks);
          tcoll = G__11230;
          key = G__11231;
          ks = G__11232;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11229 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11229__delegate.call(this, tcoll, key, ks);
    };
    G__11229.cljs$lang$maxFixedArity = 2;
    G__11229.cljs$lang$applyTo = function(arglist__11233) {
      var tcoll = cljs.core.first(arglist__11233);
      arglist__11233 = cljs.core.next(arglist__11233);
      var key = cljs.core.first(arglist__11233);
      var ks = cljs.core.rest(arglist__11233);
      return G__11229__delegate(tcoll, key, ks);
    };
    G__11229.cljs$core$IFn$_invoke$arity$variadic = G__11229__delegate;
    return G__11229;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_.call(null, tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__11234__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_.call(null, tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11235 = ntcoll;
          var G__11236 = cljs.core.first.call(null, vals);
          var G__11237 = cljs.core.next.call(null, vals);
          tcoll = G__11235;
          val = G__11236;
          vals = G__11237;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11234 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        vals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11234__delegate.call(this, tcoll, val, vals);
    };
    G__11234.cljs$lang$maxFixedArity = 2;
    G__11234.cljs$lang$applyTo = function(arglist__11238) {
      var tcoll = cljs.core.first(arglist__11238);
      arglist__11238 = cljs.core.next(arglist__11238);
      var val = cljs.core.first(arglist__11238);
      var vals = cljs.core.rest(arglist__11238);
      return G__11234__delegate(tcoll, val, vals);
    };
    G__11234.cljs$core$IFn$_invoke$arity$variadic = G__11234__delegate;
    return G__11234;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if (argc === 0) {
    return f.call(null);
  } else {
    var a4552 = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4552);
      } else {
        return f.call(null, a4552);
      }
    } else {
      var b4553 = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4552, b4553);
        } else {
          return f.call(null, a4552, b4553);
        }
      } else {
        var c4554 = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4552, b4553, c4554);
          } else {
            return f.call(null, a4552, b4553, c4554);
          }
        } else {
          var d4555 = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4552, b4553, c4554, d4555);
            } else {
              return f.call(null, a4552, b4553, c4554, d4555);
            }
          } else {
            var e4556 = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4552, b4553, c4554, d4555, e4556);
              } else {
                return f.call(null, a4552, b4553, c4554, d4555, e4556);
              }
            } else {
              var f4557 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4552, b4553, c4554, d4555, e4556, f4557);
                } else {
                  return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557);
                }
              } else {
                var g4558 = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4552, b4553, c4554, d4555, e4556, f4557, g4558);
                  } else {
                    return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558);
                  }
                } else {
                  var h4559 = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559);
                    } else {
                      return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559);
                    }
                  } else {
                    var i4560 = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560);
                      } else {
                        return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560);
                      }
                    } else {
                      var j4561 = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561);
                        } else {
                          return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561);
                        }
                      } else {
                        var k4562 = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562);
                          } else {
                            return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562);
                          }
                        } else {
                          var l4563 = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563);
                            } else {
                              return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563);
                            }
                          } else {
                            var m4564 = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564);
                              } else {
                                return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564);
                              }
                            } else {
                              var n4565 = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565);
                                } else {
                                  return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565);
                                }
                              } else {
                                var o4566 = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566);
                                  } else {
                                    return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566);
                                  }
                                } else {
                                  var p4567 = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567);
                                    } else {
                                      return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567);
                                    }
                                  } else {
                                    var q4568 = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568);
                                      } else {
                                        return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568);
                                      }
                                    } else {
                                      var r4569 = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569);
                                        } else {
                                          return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569);
                                        }
                                      } else {
                                        var s4570 = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570);
                                          } else {
                                            return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570);
                                          }
                                        } else {
                                          var t4571 = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570, t4571);
                                            } else {
                                              return f.call(null, a4552, b4553, c4554, d4555, e4556, f4557, g4558, h4559, i4560, j4561, k4562, l4563, m4564, n4565, o4566, p4567, q4568, r4569, s4570, t4571);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array.call(null, arglist));
    }
  };
  var apply__6 = function() {
    var G__11239__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array.call(null, arglist));
      }
    };
    var G__11239 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0);
      }
      return G__11239__delegate.call(this, f, a, b, c, d, args);
    };
    G__11239.cljs$lang$maxFixedArity = 5;
    G__11239.cljs$lang$applyTo = function(arglist__11240) {
      var f = cljs.core.first(arglist__11240);
      arglist__11240 = cljs.core.next(arglist__11240);
      var a = cljs.core.first(arglist__11240);
      arglist__11240 = cljs.core.next(arglist__11240);
      var b = cljs.core.first(arglist__11240);
      arglist__11240 = cljs.core.next(arglist__11240);
      var c = cljs.core.first(arglist__11240);
      arglist__11240 = cljs.core.next(arglist__11240);
      var d = cljs.core.first(arglist__11240);
      var args = cljs.core.rest(arglist__11240);
      return G__11239__delegate(f, a, b, c, d, args);
    };
    G__11239.cljs$core$IFn$_invoke$arity$variadic = G__11239__delegate;
    return G__11239;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj)));
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a));
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b));
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c));
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta.call(null, obj, f.call(null, cljs.core.meta.call(null, obj), a, b, c, d));
  };
  var vary_meta__7 = function() {
    var G__11241__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), a, b, c, d, args));
    };
    var G__11241 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11241__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__11241.cljs$lang$maxFixedArity = 6;
    G__11241.cljs$lang$applyTo = function(arglist__11242) {
      var obj = cljs.core.first(arglist__11242);
      arglist__11242 = cljs.core.next(arglist__11242);
      var f = cljs.core.first(arglist__11242);
      arglist__11242 = cljs.core.next(arglist__11242);
      var a = cljs.core.first(arglist__11242);
      arglist__11242 = cljs.core.next(arglist__11242);
      var b = cljs.core.first(arglist__11242);
      arglist__11242 = cljs.core.next(arglist__11242);
      var c = cljs.core.first(arglist__11242);
      arglist__11242 = cljs.core.next(arglist__11242);
      var d = cljs.core.first(arglist__11242);
      var args = cljs.core.rest(arglist__11242);
      return G__11241__delegate(obj, f, a, b, c, d, args);
    };
    G__11241.cljs$core$IFn$_invoke$arity$variadic = G__11241__delegate;
    return G__11241;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y);
  };
  var not_EQ___3 = function() {
    var G__11243__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more));
    };
    var G__11243 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11243__delegate.call(this, x, y, more);
    };
    G__11243.cljs$lang$maxFixedArity = 2;
    G__11243.cljs$lang$applyTo = function(arglist__11244) {
      var x = cljs.core.first(arglist__11244);
      arglist__11244 = cljs.core.next(arglist__11244);
      var y = cljs.core.first(arglist__11244);
      var more = cljs.core.rest(arglist__11244);
      return G__11243__delegate(x, y, more);
    };
    G__11243.cljs$core$IFn$_invoke$arity$variadic = G__11243__delegate;
    return G__11243;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq.call(null, coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t11248 !== "undefined") {
  } else {
    cljs.core.t11248 = function(nil_iter, meta11249) {
      this.nil_iter = nil_iter;
      this.meta11249 = meta11249;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t11248.cljs$lang$type = true;
    cljs.core.t11248.cljs$lang$ctorStr = "cljs.core/t11248";
    cljs.core.t11248.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/t11248");
    };
    cljs.core.t11248.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t11248.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t11248.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t11248.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11250) {
      var self__ = this;
      var _11250__$1 = this;
      return self__.meta11249;
    };
    cljs.core.t11248.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11250, meta11249__$1) {
      var self__ = this;
      var _11250__$1 = this;
      return new cljs.core.t11248(self__.nil_iter, meta11249__$1);
    };
    cljs.core.__GT_t11248 = function __GT_t11248(nil_iter__$1, meta11249) {
      return new cljs.core.t11248(nil_iter__$1, meta11249);
    };
  }
  return new cljs.core.t11248(nil_iter, null);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/StringIter");
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayIter");
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/SeqIter");
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq.call(null, self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next.call(null, self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not.call(null, this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first.call(null, self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter.call(null);
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter.call(null, coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter.call(null, coll);
      } else {
        if (cljs.core.iterable_QMARK_.call(null, coll)) {
          return cljs.core._iterator.call(null, coll);
        } else {
          if (cljs.core.seqable_QMARK_.call(null, coll)) {
            return cljs.core.seq_iter.call(null, coll);
          } else {
            throw new Error("Cannot create iterator from " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Stepper");
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = !(lt.stepper == null);
      if (and__3627__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3627__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, self__.xform.call(null, lt, self__.iter.next()))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MultiStepper");
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq.call(null, self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first.call(null, iters__$1);
      if (cljs.core.not.call(null, iter.hasNext())) {
        return false;
      } else {
        var G__11251 = cljs.core.next.call(null, iters__$1);
        iters__$1 = G__11251;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4508__auto___11252 = self__.iters.length;
  var i_11253 = 0;
  while (true) {
    if (i_11253 < n__4508__auto___11252) {
      self__.nexts[i_11253] = self__.iters[i_11253].next();
      var G__11254 = i_11253 + 1;
      i_11253 = G__11254;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.call(null, self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = !(lt.stepper == null);
      if (and__3627__auto__) {
        return this$.hasNext();
      } else {
        return and__3627__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_.call(null, cljs.core.apply.call(null, self__.xform, cljs.core.cons.call(null, lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.call(null, lt);
  }
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.call(null, xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_.call(null, result) ? cljs.core.deref.call(null, result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer.call(null, lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(xform.call(null, stepfn), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/LazyTransformer");
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq.call(null, self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq.call(null, this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq.call(null, this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential.call(null, this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_.call(null, other) && cljs.core.seq.call(null, other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, cljs.core._seq.call(null, this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper.call(null, xform, cljs.core.iter.call(null, coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__11255_11259 = cljs.core.seq.call(null, colls);
  var chunk__11256_11260 = null;
  var count__11257_11261 = 0;
  var i__11258_11262 = 0;
  while (true) {
    if (i__11258_11262 < count__11257_11261) {
      var coll_11263 = cljs.core._nth.call(null, chunk__11256_11260, i__11258_11262);
      iters.push(cljs.core.iter.call(null, coll_11263));
      var G__11264 = seq__11255_11259;
      var G__11265 = chunk__11256_11260;
      var G__11266 = count__11257_11261;
      var G__11267 = i__11258_11262 + 1;
      seq__11255_11259 = G__11264;
      chunk__11256_11260 = G__11265;
      count__11257_11261 = G__11266;
      i__11258_11262 = G__11267;
      continue;
    } else {
      var temp__4126__auto___11268 = cljs.core.seq.call(null, seq__11255_11259);
      if (temp__4126__auto___11268) {
        var seq__11255_11269__$1 = temp__4126__auto___11268;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11255_11269__$1)) {
          var c__4408__auto___11270 = cljs.core.chunk_first.call(null, seq__11255_11269__$1);
          var G__11271 = cljs.core.chunk_rest.call(null, seq__11255_11269__$1);
          var G__11272 = c__4408__auto___11270;
          var G__11273 = cljs.core.count.call(null, c__4408__auto___11270);
          var G__11274 = 0;
          seq__11255_11259 = G__11271;
          chunk__11256_11260 = G__11272;
          count__11257_11261 = G__11273;
          i__11258_11262 = G__11274;
          continue;
        } else {
          var coll_11275 = cljs.core.first.call(null, seq__11255_11269__$1);
          iters.push(cljs.core.iter.call(null, coll_11275));
          var G__11276 = cljs.core.next.call(null, seq__11255_11269__$1);
          var G__11277 = null;
          var G__11278 = 0;
          var G__11279 = 0;
          seq__11255_11259 = G__11276;
          chunk__11256_11260 = G__11277;
          count__11257_11261 = G__11278;
          i__11258_11262 = G__11279;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.call(null, xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_.call(null, coll)) {
      return coll;
    } else {
      var or__3639__auto__ = cljs.core.seq.call(null, coll);
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__11280__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array.call(null, cljs.core.cons.call(null, coll, colls)));
    };
    var G__11280 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11280__delegate.call(this, xform, coll, colls);
    };
    G__11280.cljs$lang$maxFixedArity = 2;
    G__11280.cljs$lang$applyTo = function(arglist__11281) {
      var xform = cljs.core.first(arglist__11281);
      arglist__11281 = cljs.core.next(arglist__11281);
      var coll = cljs.core.first(arglist__11281);
      var colls = cljs.core.rest(arglist__11281);
      return G__11280__delegate(xform, coll, colls);
    };
    G__11280.cljs$core$IFn$_invoke$arity$variadic = G__11280__delegate;
    return G__11280;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__11282 = pred;
        var G__11283 = cljs.core.next.call(null, coll);
        pred = G__11282;
        coll = G__11283;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq.call(null, coll)) {
      var or__3639__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        var G__11284 = pred;
        var G__11285 = cljs.core.next.call(null, coll);
        pred = G__11284;
        coll = G__11285;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0;
  } else {
    throw new Error("Argument must be an integer: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__11286 = null;
    var G__11286__0 = function() {
      return cljs.core.not.call(null, f.call(null));
    };
    var G__11286__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x));
    };
    var G__11286__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y));
    };
    var G__11286__3 = function() {
      var G__11287__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs));
      };
      var G__11287 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
        }
        return G__11287__delegate.call(this, x, y, zs);
      };
      G__11287.cljs$lang$maxFixedArity = 2;
      G__11287.cljs$lang$applyTo = function(arglist__11288) {
        var x = cljs.core.first(arglist__11288);
        arglist__11288 = cljs.core.next(arglist__11288);
        var y = cljs.core.first(arglist__11288);
        var zs = cljs.core.rest(arglist__11288);
        return G__11287__delegate(x, y, zs);
      };
      G__11287.cljs$core$IFn$_invoke$arity$variadic = G__11287__delegate;
      return G__11287;
    }();
    G__11286 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11286__0.call(this);
        case 1:
          return G__11286__1.call(this, x);
        case 2:
          return G__11286__2.call(this, x, y);
        default:
          return G__11286__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2));
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11286.cljs$lang$maxFixedArity = 2;
    G__11286.cljs$lang$applyTo = G__11286__3.cljs$lang$applyTo;
    G__11286.cljs$core$IFn$_invoke$arity$0 = G__11286__0;
    G__11286.cljs$core$IFn$_invoke$arity$1 = G__11286__1;
    G__11286.cljs$core$IFn$_invoke$arity$2 = G__11286__2;
    G__11286.cljs$core$IFn$_invoke$arity$variadic = G__11286__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__11286;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__11289__delegate = function(args) {
      return x;
    };
    var G__11289 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11289__delegate.call(this, args);
    };
    G__11289.cljs$lang$maxFixedArity = 0;
    G__11289.cljs$lang$applyTo = function(arglist__11290) {
      var args = cljs.core.seq(arglist__11290);
      return G__11289__delegate(args);
    };
    G__11289.cljs$core$IFn$_invoke$arity$variadic = G__11289__delegate;
    return G__11289;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__11291 = null;
      var G__11291__0 = function() {
        return f.call(null, g.call(null));
      };
      var G__11291__1 = function(x) {
        return f.call(null, g.call(null, x));
      };
      var G__11291__2 = function(x, y) {
        return f.call(null, g.call(null, x, y));
      };
      var G__11291__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z));
      };
      var G__11291__4 = function() {
        var G__11292__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args));
        };
        var G__11292 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11292__delegate.call(this, x, y, z, args);
        };
        G__11292.cljs$lang$maxFixedArity = 3;
        G__11292.cljs$lang$applyTo = function(arglist__11293) {
          var x = cljs.core.first(arglist__11293);
          arglist__11293 = cljs.core.next(arglist__11293);
          var y = cljs.core.first(arglist__11293);
          arglist__11293 = cljs.core.next(arglist__11293);
          var z = cljs.core.first(arglist__11293);
          var args = cljs.core.rest(arglist__11293);
          return G__11292__delegate(x, y, z, args);
        };
        G__11292.cljs$core$IFn$_invoke$arity$variadic = G__11292__delegate;
        return G__11292;
      }();
      G__11291 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11291__0.call(this);
          case 1:
            return G__11291__1.call(this, x);
          case 2:
            return G__11291__2.call(this, x, y);
          case 3:
            return G__11291__3.call(this, x, y, z);
          default:
            return G__11291__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11291.cljs$lang$maxFixedArity = 3;
      G__11291.cljs$lang$applyTo = G__11291__4.cljs$lang$applyTo;
      G__11291.cljs$core$IFn$_invoke$arity$0 = G__11291__0;
      G__11291.cljs$core$IFn$_invoke$arity$1 = G__11291__1;
      G__11291.cljs$core$IFn$_invoke$arity$2 = G__11291__2;
      G__11291.cljs$core$IFn$_invoke$arity$3 = G__11291__3;
      G__11291.cljs$core$IFn$_invoke$arity$variadic = G__11291__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11291;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__11294 = null;
      var G__11294__0 = function() {
        return f.call(null, g.call(null, h.call(null)));
      };
      var G__11294__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)));
      };
      var G__11294__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)));
      };
      var G__11294__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)));
      };
      var G__11294__4 = function() {
        var G__11295__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)));
        };
        var G__11295 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11295__delegate.call(this, x, y, z, args);
        };
        G__11295.cljs$lang$maxFixedArity = 3;
        G__11295.cljs$lang$applyTo = function(arglist__11296) {
          var x = cljs.core.first(arglist__11296);
          arglist__11296 = cljs.core.next(arglist__11296);
          var y = cljs.core.first(arglist__11296);
          arglist__11296 = cljs.core.next(arglist__11296);
          var z = cljs.core.first(arglist__11296);
          var args = cljs.core.rest(arglist__11296);
          return G__11295__delegate(x, y, z, args);
        };
        G__11295.cljs$core$IFn$_invoke$arity$variadic = G__11295__delegate;
        return G__11295;
      }();
      G__11294 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11294__0.call(this);
          case 1:
            return G__11294__1.call(this, x);
          case 2:
            return G__11294__2.call(this, x, y);
          case 3:
            return G__11294__3.call(this, x, y, z);
          default:
            return G__11294__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11294.cljs$lang$maxFixedArity = 3;
      G__11294.cljs$lang$applyTo = G__11294__4.cljs$lang$applyTo;
      G__11294.cljs$core$IFn$_invoke$arity$0 = G__11294__0;
      G__11294.cljs$core$IFn$_invoke$arity$1 = G__11294__1;
      G__11294.cljs$core$IFn$_invoke$arity$2 = G__11294__2;
      G__11294.cljs$core$IFn$_invoke$arity$3 = G__11294__3;
      G__11294.cljs$core$IFn$_invoke$arity$variadic = G__11294__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11294;
    }();
  };
  var comp__4 = function() {
    var G__11297__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__11298__delegate = function(args) {
            var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
            var fs__$2 = cljs.core.next.call(null, fs__$1);
            while (true) {
              if (fs__$2) {
                var G__11299 = cljs.core.first.call(null, fs__$2).call(null, ret);
                var G__11300 = cljs.core.next.call(null, fs__$2);
                ret = G__11299;
                fs__$2 = G__11300;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__11298 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
            }
            return G__11298__delegate.call(this, args);
          };
          G__11298.cljs$lang$maxFixedArity = 0;
          G__11298.cljs$lang$applyTo = function(arglist__11301) {
            var args = cljs.core.seq(arglist__11301);
            return G__11298__delegate(args);
          };
          G__11298.cljs$core$IFn$_invoke$arity$variadic = G__11298__delegate;
          return G__11298;
        }();
      }(fs__$1);
    };
    var G__11297 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11297__delegate.call(this, f1, f2, f3, fs);
    };
    G__11297.cljs$lang$maxFixedArity = 3;
    G__11297.cljs$lang$applyTo = function(arglist__11302) {
      var f1 = cljs.core.first(arglist__11302);
      arglist__11302 = cljs.core.next(arglist__11302);
      var f2 = cljs.core.first(arglist__11302);
      arglist__11302 = cljs.core.next(arglist__11302);
      var f3 = cljs.core.first(arglist__11302);
      var fs = cljs.core.rest(arglist__11302);
      return G__11297__delegate(f1, f2, f3, fs);
    };
    G__11297.cljs$core$IFn$_invoke$arity$variadic = G__11297__delegate;
    return G__11297;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__11303__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args);
      };
      var G__11303 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11303__delegate.call(this, args);
      };
      G__11303.cljs$lang$maxFixedArity = 0;
      G__11303.cljs$lang$applyTo = function(arglist__11304) {
        var args = cljs.core.seq(arglist__11304);
        return G__11303__delegate(args);
      };
      G__11303.cljs$core$IFn$_invoke$arity$variadic = G__11303__delegate;
      return G__11303;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__11305__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args);
      };
      var G__11305 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11305__delegate.call(this, args);
      };
      G__11305.cljs$lang$maxFixedArity = 0;
      G__11305.cljs$lang$applyTo = function(arglist__11306) {
        var args = cljs.core.seq(arglist__11306);
        return G__11305__delegate(args);
      };
      G__11305.cljs$core$IFn$_invoke$arity$variadic = G__11305__delegate;
      return G__11305;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__11307__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args);
      };
      var G__11307 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11307__delegate.call(this, args);
      };
      G__11307.cljs$lang$maxFixedArity = 0;
      G__11307.cljs$lang$applyTo = function(arglist__11308) {
        var args = cljs.core.seq(arglist__11308);
        return G__11307__delegate(args);
      };
      G__11307.cljs$core$IFn$_invoke$arity$variadic = G__11307__delegate;
      return G__11307;
    }();
  };
  var partial__5 = function() {
    var G__11309__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__11310__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args));
        };
        var G__11310 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
          }
          return G__11310__delegate.call(this, args);
        };
        G__11310.cljs$lang$maxFixedArity = 0;
        G__11310.cljs$lang$applyTo = function(arglist__11311) {
          var args = cljs.core.seq(arglist__11311);
          return G__11310__delegate(args);
        };
        G__11310.cljs$core$IFn$_invoke$arity$variadic = G__11310__delegate;
        return G__11310;
      }();
    };
    var G__11309 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11309__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__11309.cljs$lang$maxFixedArity = 4;
    G__11309.cljs$lang$applyTo = function(arglist__11312) {
      var f = cljs.core.first(arglist__11312);
      arglist__11312 = cljs.core.next(arglist__11312);
      var arg1 = cljs.core.first(arglist__11312);
      arglist__11312 = cljs.core.next(arglist__11312);
      var arg2 = cljs.core.first(arglist__11312);
      arglist__11312 = cljs.core.next(arglist__11312);
      var arg3 = cljs.core.first(arglist__11312);
      var more = cljs.core.rest(arglist__11312);
      return G__11309__delegate(f, arg1, arg2, arg3, more);
    };
    G__11309.cljs$core$IFn$_invoke$arity$variadic = G__11309__delegate;
    return G__11309;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__11313 = null;
      var G__11313__1 = function(a) {
        return f.call(null, a == null ? x : a);
      };
      var G__11313__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b);
      };
      var G__11313__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c);
      };
      var G__11313__4 = function() {
        var G__11314__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds);
        };
        var G__11314 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11314__delegate.call(this, a, b, c, ds);
        };
        G__11314.cljs$lang$maxFixedArity = 3;
        G__11314.cljs$lang$applyTo = function(arglist__11315) {
          var a = cljs.core.first(arglist__11315);
          arglist__11315 = cljs.core.next(arglist__11315);
          var b = cljs.core.first(arglist__11315);
          arglist__11315 = cljs.core.next(arglist__11315);
          var c = cljs.core.first(arglist__11315);
          var ds = cljs.core.rest(arglist__11315);
          return G__11314__delegate(a, b, c, ds);
        };
        G__11314.cljs$core$IFn$_invoke$arity$variadic = G__11314__delegate;
        return G__11314;
      }();
      G__11313 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__11313__1.call(this, a);
          case 2:
            return G__11313__2.call(this, a, b);
          case 3:
            return G__11313__3.call(this, a, b, c);
          default:
            return G__11313__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11313.cljs$lang$maxFixedArity = 3;
      G__11313.cljs$lang$applyTo = G__11313__4.cljs$lang$applyTo;
      G__11313.cljs$core$IFn$_invoke$arity$1 = G__11313__1;
      G__11313.cljs$core$IFn$_invoke$arity$2 = G__11313__2;
      G__11313.cljs$core$IFn$_invoke$arity$3 = G__11313__3;
      G__11313.cljs$core$IFn$_invoke$arity$variadic = G__11313__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11313;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__11316 = null;
      var G__11316__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11316__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c);
      };
      var G__11316__4 = function() {
        var G__11317__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__11317 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11317__delegate.call(this, a, b, c, ds);
        };
        G__11317.cljs$lang$maxFixedArity = 3;
        G__11317.cljs$lang$applyTo = function(arglist__11318) {
          var a = cljs.core.first(arglist__11318);
          arglist__11318 = cljs.core.next(arglist__11318);
          var b = cljs.core.first(arglist__11318);
          arglist__11318 = cljs.core.next(arglist__11318);
          var c = cljs.core.first(arglist__11318);
          var ds = cljs.core.rest(arglist__11318);
          return G__11317__delegate(a, b, c, ds);
        };
        G__11317.cljs$core$IFn$_invoke$arity$variadic = G__11317__delegate;
        return G__11317;
      }();
      G__11316 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11316__2.call(this, a, b);
          case 3:
            return G__11316__3.call(this, a, b, c);
          default:
            return G__11316__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11316.cljs$lang$maxFixedArity = 3;
      G__11316.cljs$lang$applyTo = G__11316__4.cljs$lang$applyTo;
      G__11316.cljs$core$IFn$_invoke$arity$2 = G__11316__2;
      G__11316.cljs$core$IFn$_invoke$arity$3 = G__11316__3;
      G__11316.cljs$core$IFn$_invoke$arity$variadic = G__11316__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11316;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__11319 = null;
      var G__11319__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b);
      };
      var G__11319__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c);
      };
      var G__11319__4 = function() {
        var G__11320__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__11320 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11320__delegate.call(this, a, b, c, ds);
        };
        G__11320.cljs$lang$maxFixedArity = 3;
        G__11320.cljs$lang$applyTo = function(arglist__11321) {
          var a = cljs.core.first(arglist__11321);
          arglist__11321 = cljs.core.next(arglist__11321);
          var b = cljs.core.first(arglist__11321);
          arglist__11321 = cljs.core.next(arglist__11321);
          var c = cljs.core.first(arglist__11321);
          var ds = cljs.core.rest(arglist__11321);
          return G__11320__delegate(a, b, c, ds);
        };
        G__11320.cljs$core$IFn$_invoke$arity$variadic = G__11320__delegate;
        return G__11320;
      }();
      G__11319 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__11319__2.call(this, a, b);
          case 3:
            return G__11319__3.call(this, a, b, c);
          default:
            return G__11319__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11319.cljs$lang$maxFixedArity = 3;
      G__11319.cljs$lang$applyTo = G__11319__4.cljs$lang$applyTo;
      G__11319.cljs$core$IFn$_invoke$arity$2 = G__11319__2;
      G__11319.cljs$core$IFn$_invoke$arity$3 = G__11319__3;
      G__11319.cljs$core$IFn$_invoke$arity$variadic = G__11319__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11319;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___11322 = size;
          var i_11323 = 0;
          while (true) {
            if (i_11323 < n__4508__auto___11322) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_11323, cljs.core._nth.call(null, c, i_11323)));
              var G__11324 = i_11323 + 1;
              i_11323 = G__11324;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi.call(null, 0, coll);
};
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(f1) {
      return function() {
        var G__11325 = null;
        var G__11325__0 = function() {
          return f1.call(null);
        };
        var G__11325__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11325__2 = function(result, input) {
          var v = f.call(null, input);
          if (v == null) {
            return result;
          } else {
            return f1.call(null, result, v);
          }
        };
        G__11325 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11325__0.call(this);
            case 1:
              return G__11325__1.call(this, result);
            case 2:
              return G__11325__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11325.cljs$core$IFn$_invoke$arity$0 = G__11325__0;
        G__11325.cljs$core$IFn$_invoke$arity$1 = G__11325__1;
        G__11325.cljs$core$IFn$_invoke$arity$2 = G__11325__2;
        return G__11325;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___11326 = size;
          var i_11327 = 0;
          while (true) {
            if (i_11327 < n__4508__auto___11326) {
              var x_11328 = f.call(null, cljs.core._nth.call(null, c, i_11327));
              if (x_11328 == null) {
              } else {
                cljs.core.chunk_append.call(null, b, x_11328);
              }
              var G__11329 = i_11327 + 1;
              i_11327 = G__11329;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          var x = f.call(null, cljs.core.first.call(null, s));
          if (x == null) {
            return keep.call(null, f, cljs.core.rest.call(null, s));
          } else {
            return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Atom");
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11330 = cljs.core.seq.call(null, self__.watches);
  var chunk__11331 = null;
  var count__11332 = 0;
  var i__11333 = 0;
  while (true) {
    if (i__11333 < count__11332) {
      var vec__11334 = cljs.core._nth.call(null, chunk__11331, i__11333);
      var key = cljs.core.nth.call(null, vec__11334, 0, null);
      var f = cljs.core.nth.call(null, vec__11334, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__11336 = seq__11330;
      var G__11337 = chunk__11331;
      var G__11338 = count__11332;
      var G__11339 = i__11333 + 1;
      seq__11330 = G__11336;
      chunk__11331 = G__11337;
      count__11332 = G__11338;
      i__11333 = G__11339;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11330);
      if (temp__4126__auto__) {
        var seq__11330__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11330__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11330__$1);
          var G__11340 = cljs.core.chunk_rest.call(null, seq__11330__$1);
          var G__11341 = c__4408__auto__;
          var G__11342 = cljs.core.count.call(null, c__4408__auto__);
          var G__11343 = 0;
          seq__11330 = G__11340;
          chunk__11331 = G__11341;
          count__11332 = G__11342;
          i__11333 = G__11343;
          continue;
        } else {
          var vec__11335 = cljs.core.first.call(null, seq__11330__$1);
          var key = cljs.core.nth.call(null, vec__11335, 0, null);
          var f = cljs.core.nth.call(null, vec__11335, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__11344 = cljs.core.next.call(null, seq__11330__$1);
          var G__11345 = null;
          var G__11346 = 0;
          var G__11347 = 0;
          seq__11330 = G__11344;
          chunk__11331 = G__11345;
          count__11332 = G__11346;
          i__11333 = G__11347;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__11351__delegate = function(x, p__11348) {
      var map__11350 = p__11348;
      var map__11350__$1 = cljs.core.seq_QMARK_.call(null, map__11350) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11350) : map__11350;
      var validator = cljs.core.get.call(null, map__11350__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.call(null, map__11350__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__11351 = function(x, var_args) {
      var p__11348 = null;
      if (arguments.length > 1) {
        p__11348 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11351__delegate.call(this, x, p__11348);
    };
    G__11351.cljs$lang$maxFixedArity = 1;
    G__11351.cljs$lang$applyTo = function(arglist__11352) {
      var x = cljs.core.first(arglist__11352);
      var p__11348 = cljs.core.rest(arglist__11352);
      return G__11351__delegate(x, p__11348);
    };
    G__11351.cljs$core$IFn$_invoke$arity$variadic = G__11351__delegate;
    return G__11351;
  }();
  atom = function(x, var_args) {
    var p__11348 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.call(null, new_value))) {
      } else {
        throw new Error("Assert failed: Validator rejected reference state\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null)))));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches.call(null, a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_.call(null, a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y));
    } else {
      return cljs.core._swap_BANG_.call(null, a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__11353__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.call(null, a, f, x, y, more);
      }
    };
    var G__11353 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11353__delegate.call(this, a, f, x, y, more);
    };
    G__11353.cljs$lang$maxFixedArity = 4;
    G__11353.cljs$lang$applyTo = function(arglist__11354) {
      var a = cljs.core.first(arglist__11354);
      arglist__11354 = cljs.core.next(arglist__11354);
      var f = cljs.core.first(arglist__11354);
      arglist__11354 = cljs.core.next(arglist__11354);
      var x = cljs.core.first(arglist__11354);
      arglist__11354 = cljs.core.next(arglist__11354);
      var y = cljs.core.first(arglist__11354);
      var more = cljs.core.rest(arglist__11354);
      return G__11353__delegate(a, f, x, y, more);
    };
    G__11353.cljs$core$IFn$_invoke$arity$variadic = G__11353__delegate;
    return G__11353;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__11355 = null;
          var G__11355__0 = function() {
            return f1.call(null);
          };
          var G__11355__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11355__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            var v = f.call(null, i, input);
            if (v == null) {
              return result;
            } else {
              return f1.call(null, result, v);
            }
          };
          G__11355 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11355__0.call(this);
              case 1:
                return G__11355__1.call(this, result);
              case 2:
                return G__11355__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11355.cljs$core$IFn$_invoke$arity$0 = G__11355__0;
          G__11355.cljs$core$IFn$_invoke$arity$1 = G__11355__1;
          G__11355.cljs$core$IFn$_invoke$arity$2 = G__11355__2;
          return G__11355;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
            var c = cljs.core.chunk_first.call(null, s);
            var size = cljs.core.count.call(null, c);
            var b = cljs.core.chunk_buffer.call(null, size);
            var n__4508__auto___11356 = size;
            var i_11357 = 0;
            while (true) {
              if (i_11357 < n__4508__auto___11356) {
                var x_11358 = f.call(null, idx + i_11357, cljs.core._nth.call(null, c, i_11357));
                if (x_11358 == null) {
                } else {
                  cljs.core.chunk_append.call(null, b, x_11358);
                }
                var G__11359 = i_11357 + 1;
                i_11357 = G__11359;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)));
          } else {
            var x = f.call(null, idx, cljs.core.first.call(null, s));
            if (x == null) {
              return keepi.call(null, idx + 1, cljs.core.rest.call(null, s));
            } else {
              return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi.call(null, 0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x));
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            return p.call(null, y);
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p.call(null, y);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              return p.call(null, z);
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__11366__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep1.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, p, args));
        };
        var G__11366 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11366__delegate.call(this, x, y, z, args);
        };
        G__11366.cljs$lang$maxFixedArity = 3;
        G__11366.cljs$lang$applyTo = function(arglist__11367) {
          var x = cljs.core.first(arglist__11367);
          arglist__11367 = cljs.core.next(arglist__11367);
          var y = cljs.core.first(arglist__11367);
          arglist__11367 = cljs.core.next(arglist__11367);
          var z = cljs.core.first(arglist__11367);
          var args = cljs.core.rest(arglist__11367);
          return G__11366__delegate(x, y, z, args);
        };
        G__11366.cljs$core$IFn$_invoke$arity$variadic = G__11366__delegate;
        return G__11366;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            return p2.call(null, x);
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p2.call(null, x);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                return p2.call(null, y);
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p1.call(null, y);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p1.call(null, z);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                var and__3627__auto____$3 = p2.call(null, x);
                if (cljs.core.truth_(and__3627__auto____$3)) {
                  var and__3627__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$4)) {
                    return p2.call(null, z);
                  } else {
                    return and__3627__auto____$4;
                  }
                } else {
                  return and__3627__auto____$3;
                }
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__11368__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep2.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11360_SHARP_) {
            var and__3627__auto__ = p1.call(null, p1__11360_SHARP_);
            if (cljs.core.truth_(and__3627__auto__)) {
              return p2.call(null, p1__11360_SHARP_);
            } else {
              return and__3627__auto__;
            }
          }, args));
        };
        var G__11368 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11368__delegate.call(this, x, y, z, args);
        };
        G__11368.cljs$lang$maxFixedArity = 3;
        G__11368.cljs$lang$applyTo = function(arglist__11369) {
          var x = cljs.core.first(arglist__11369);
          arglist__11369 = cljs.core.next(arglist__11369);
          var y = cljs.core.first(arglist__11369);
          arglist__11369 = cljs.core.next(arglist__11369);
          var z = cljs.core.first(arglist__11369);
          var args = cljs.core.rest(arglist__11369);
          return G__11368__delegate(x, y, z, args);
        };
        G__11368.cljs$core$IFn$_invoke$arity$variadic = G__11368__delegate;
        return G__11368;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              return p3.call(null, x);
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                var and__3627__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3627__auto____$3)) {
                  var and__3627__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$4)) {
                    return p3.call(null, y);
                  } else {
                    return and__3627__auto____$4;
                  }
                } else {
                  return and__3627__auto____$3;
                }
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3627__auto__ = p1.call(null, x);
          if (cljs.core.truth_(and__3627__auto__)) {
            var and__3627__auto____$1 = p2.call(null, x);
            if (cljs.core.truth_(and__3627__auto____$1)) {
              var and__3627__auto____$2 = p3.call(null, x);
              if (cljs.core.truth_(and__3627__auto____$2)) {
                var and__3627__auto____$3 = p1.call(null, y);
                if (cljs.core.truth_(and__3627__auto____$3)) {
                  var and__3627__auto____$4 = p2.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$4)) {
                    var and__3627__auto____$5 = p3.call(null, y);
                    if (cljs.core.truth_(and__3627__auto____$5)) {
                      var and__3627__auto____$6 = p1.call(null, z);
                      if (cljs.core.truth_(and__3627__auto____$6)) {
                        var and__3627__auto____$7 = p2.call(null, z);
                        if (cljs.core.truth_(and__3627__auto____$7)) {
                          return p3.call(null, z);
                        } else {
                          return and__3627__auto____$7;
                        }
                      } else {
                        return and__3627__auto____$6;
                      }
                    } else {
                      return and__3627__auto____$5;
                    }
                  } else {
                    return and__3627__auto____$4;
                  }
                } else {
                  return and__3627__auto____$3;
                }
              } else {
                return and__3627__auto____$2;
              }
            } else {
              return and__3627__auto____$1;
            }
          } else {
            return and__3627__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__11370__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, ep3.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(p1__11361_SHARP_) {
            var and__3627__auto__ = p1.call(null, p1__11361_SHARP_);
            if (cljs.core.truth_(and__3627__auto__)) {
              var and__3627__auto____$1 = p2.call(null, p1__11361_SHARP_);
              if (cljs.core.truth_(and__3627__auto____$1)) {
                return p3.call(null, p1__11361_SHARP_);
              } else {
                return and__3627__auto____$1;
              }
            } else {
              return and__3627__auto__;
            }
          }, args));
        };
        var G__11370 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11370__delegate.call(this, x, y, z, args);
        };
        G__11370.cljs$lang$maxFixedArity = 3;
        G__11370.cljs$lang$applyTo = function(arglist__11371) {
          var x = cljs.core.first(arglist__11371);
          arglist__11371 = cljs.core.next(arglist__11371);
          var y = cljs.core.first(arglist__11371);
          arglist__11371 = cljs.core.next(arglist__11371);
          var z = cljs.core.first(arglist__11371);
          var args = cljs.core.rest(arglist__11371);
          return G__11370__delegate(x, y, z, args);
        };
        G__11370.cljs$core$IFn$_invoke$arity$variadic = G__11370__delegate;
        return G__11370;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__11372__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11362_SHARP_) {
                return p1__11362_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11363_SHARP_) {
                var and__3627__auto__ = p1__11363_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3627__auto__)) {
                  return p1__11363_SHARP_.call(null, y);
                } else {
                  return and__3627__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_.call(null, function(ps__$1) {
              return function(p1__11364_SHARP_) {
                var and__3627__auto__ = p1__11364_SHARP_.call(null, x);
                if (cljs.core.truth_(and__3627__auto__)) {
                  var and__3627__auto____$1 = p1__11364_SHARP_.call(null, y);
                  if (cljs.core.truth_(and__3627__auto____$1)) {
                    return p1__11364_SHARP_.call(null, z);
                  } else {
                    return and__3627__auto____$1;
                  }
                } else {
                  return and__3627__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__11373__delegate = function(x, y, z, args) {
              return cljs.core.boolean$.call(null, epn.call(null, x, y, z) && cljs.core.every_QMARK_.call(null, function(ps__$1) {
                return function(p1__11365_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__11365_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__11373 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11373__delegate.call(this, x, y, z, args);
            };
            G__11373.cljs$lang$maxFixedArity = 3;
            G__11373.cljs$lang$applyTo = function(arglist__11374) {
              var x = cljs.core.first(arglist__11374);
              arglist__11374 = cljs.core.next(arglist__11374);
              var y = cljs.core.first(arglist__11374);
              arglist__11374 = cljs.core.next(arglist__11374);
              var z = cljs.core.first(arglist__11374);
              var args = cljs.core.rest(arglist__11374);
              return G__11373__delegate(x, y, z, args);
            };
            G__11373.cljs$core$IFn$_invoke$arity$variadic = G__11373__delegate;
            return G__11373;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__11372 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11372__delegate.call(this, p1, p2, p3, ps);
    };
    G__11372.cljs$lang$maxFixedArity = 3;
    G__11372.cljs$lang$applyTo = function(arglist__11375) {
      var p1 = cljs.core.first(arglist__11375);
      arglist__11375 = cljs.core.next(arglist__11375);
      var p2 = cljs.core.first(arglist__11375);
      arglist__11375 = cljs.core.next(arglist__11375);
      var p3 = cljs.core.first(arglist__11375);
      var ps = cljs.core.rest(arglist__11375);
      return G__11372__delegate(p1, p2, p3, ps);
    };
    G__11372.cljs$core$IFn$_invoke$arity$variadic = G__11372__delegate;
    return G__11372;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        return p.call(null, x);
      };
      var sp1__2 = function(x, y) {
        var or__3639__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return p.call(null, y);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3639__auto__ = p.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p.call(null, y);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            return p.call(null, z);
          }
        }
      };
      var sp1__4 = function() {
        var G__11382__delegate = function(x, y, z, args) {
          var or__3639__auto__ = sp1.call(null, x, y, z);
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.some.call(null, p, args);
          }
        };
        var G__11382 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11382__delegate.call(this, x, y, z, args);
        };
        G__11382.cljs$lang$maxFixedArity = 3;
        G__11382.cljs$lang$applyTo = function(arglist__11383) {
          var x = cljs.core.first(arglist__11383);
          arglist__11383 = cljs.core.next(arglist__11383);
          var y = cljs.core.first(arglist__11383);
          arglist__11383 = cljs.core.next(arglist__11383);
          var z = cljs.core.first(arglist__11383);
          var args = cljs.core.rest(arglist__11383);
          return G__11382__delegate(x, y, z, args);
        };
        G__11382.cljs$core$IFn$_invoke$arity$variadic = G__11382__delegate;
        return G__11382;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return p2.call(null, x);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p2.call(null, x);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              return p2.call(null, y);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p1.call(null, y);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p1.call(null, z);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              var or__3639__auto____$3 = p2.call(null, x);
              if (cljs.core.truth_(or__3639__auto____$3)) {
                return or__3639__auto____$3;
              } else {
                var or__3639__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3639__auto____$4)) {
                  return or__3639__auto____$4;
                } else {
                  return p2.call(null, z);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__11384__delegate = function(x, y, z, args) {
          var or__3639__auto__ = sp2.call(null, x, y, z);
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3639__auto__) {
              return function(p1__11376_SHARP_) {
                var or__3639__auto____$1 = p1.call(null, p1__11376_SHARP_);
                if (cljs.core.truth_(or__3639__auto____$1)) {
                  return or__3639__auto____$1;
                } else {
                  return p2.call(null, p1__11376_SHARP_);
                }
              };
            }(or__3639__auto__), args);
          }
        };
        var G__11384 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11384__delegate.call(this, x, y, z, args);
        };
        G__11384.cljs$lang$maxFixedArity = 3;
        G__11384.cljs$lang$applyTo = function(arglist__11385) {
          var x = cljs.core.first(arglist__11385);
          arglist__11385 = cljs.core.next(arglist__11385);
          var y = cljs.core.first(arglist__11385);
          arglist__11385 = cljs.core.next(arglist__11385);
          var z = cljs.core.first(arglist__11385);
          var args = cljs.core.rest(arglist__11385);
          return G__11384__delegate(x, y, z, args);
        };
        G__11384.cljs$core$IFn$_invoke$arity$variadic = G__11384__delegate;
        return G__11384;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            return p3.call(null, x);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              var or__3639__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3639__auto____$3)) {
                return or__3639__auto____$3;
              } else {
                var or__3639__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3639__auto____$4)) {
                  return or__3639__auto____$4;
                } else {
                  return p3.call(null, y);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3639__auto__ = p1.call(null, x);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = p2.call(null, x);
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            var or__3639__auto____$2 = p3.call(null, x);
            if (cljs.core.truth_(or__3639__auto____$2)) {
              return or__3639__auto____$2;
            } else {
              var or__3639__auto____$3 = p1.call(null, y);
              if (cljs.core.truth_(or__3639__auto____$3)) {
                return or__3639__auto____$3;
              } else {
                var or__3639__auto____$4 = p2.call(null, y);
                if (cljs.core.truth_(or__3639__auto____$4)) {
                  return or__3639__auto____$4;
                } else {
                  var or__3639__auto____$5 = p3.call(null, y);
                  if (cljs.core.truth_(or__3639__auto____$5)) {
                    return or__3639__auto____$5;
                  } else {
                    var or__3639__auto____$6 = p1.call(null, z);
                    if (cljs.core.truth_(or__3639__auto____$6)) {
                      return or__3639__auto____$6;
                    } else {
                      var or__3639__auto____$7 = p2.call(null, z);
                      if (cljs.core.truth_(or__3639__auto____$7)) {
                        return or__3639__auto____$7;
                      } else {
                        return p3.call(null, z);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__11386__delegate = function(x, y, z, args) {
          var or__3639__auto__ = sp3.call(null, x, y, z);
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.some.call(null, function(or__3639__auto__) {
              return function(p1__11377_SHARP_) {
                var or__3639__auto____$1 = p1.call(null, p1__11377_SHARP_);
                if (cljs.core.truth_(or__3639__auto____$1)) {
                  return or__3639__auto____$1;
                } else {
                  var or__3639__auto____$2 = p2.call(null, p1__11377_SHARP_);
                  if (cljs.core.truth_(or__3639__auto____$2)) {
                    return or__3639__auto____$2;
                  } else {
                    return p3.call(null, p1__11377_SHARP_);
                  }
                }
              };
            }(or__3639__auto__), args);
          }
        };
        var G__11386 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11386__delegate.call(this, x, y, z, args);
        };
        G__11386.cljs$lang$maxFixedArity = 3;
        G__11386.cljs$lang$applyTo = function(arglist__11387) {
          var x = cljs.core.first(arglist__11387);
          arglist__11387 = cljs.core.next(arglist__11387);
          var y = cljs.core.first(arglist__11387);
          arglist__11387 = cljs.core.next(arglist__11387);
          var z = cljs.core.first(arglist__11387);
          var args = cljs.core.rest(arglist__11387);
          return G__11386__delegate(x, y, z, args);
        };
        G__11386.cljs$core$IFn$_invoke$arity$variadic = G__11386__delegate;
        return G__11386;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__11388__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11378_SHARP_) {
                return p1__11378_SHARP_.call(null, x);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11379_SHARP_) {
                var or__3639__auto__ = p1__11379_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3639__auto__)) {
                  return or__3639__auto__;
                } else {
                  return p1__11379_SHARP_.call(null, y);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some.call(null, function(ps__$1) {
              return function(p1__11380_SHARP_) {
                var or__3639__auto__ = p1__11380_SHARP_.call(null, x);
                if (cljs.core.truth_(or__3639__auto__)) {
                  return or__3639__auto__;
                } else {
                  var or__3639__auto____$1 = p1__11380_SHARP_.call(null, y);
                  if (cljs.core.truth_(or__3639__auto____$1)) {
                    return or__3639__auto____$1;
                  } else {
                    return p1__11380_SHARP_.call(null, z);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__11389__delegate = function(x, y, z, args) {
              var or__3639__auto__ = spn.call(null, x, y, z);
              if (cljs.core.truth_(or__3639__auto__)) {
                return or__3639__auto__;
              } else {
                return cljs.core.some.call(null, function(or__3639__auto__, ps__$1) {
                  return function(p1__11381_SHARP_) {
                    return cljs.core.some.call(null, p1__11381_SHARP_, args);
                  };
                }(or__3639__auto__, ps__$1), ps__$1);
              }
            };
            var G__11389 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11389__delegate.call(this, x, y, z, args);
            };
            G__11389.cljs$lang$maxFixedArity = 3;
            G__11389.cljs$lang$applyTo = function(arglist__11390) {
              var x = cljs.core.first(arglist__11390);
              arglist__11390 = cljs.core.next(arglist__11390);
              var y = cljs.core.first(arglist__11390);
              arglist__11390 = cljs.core.next(arglist__11390);
              var z = cljs.core.first(arglist__11390);
              var args = cljs.core.rest(arglist__11390);
              return G__11389__delegate(x, y, z, args);
            };
            G__11389.cljs$core$IFn$_invoke$arity$variadic = G__11389__delegate;
            return G__11389;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__11388 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11388__delegate.call(this, p1, p2, p3, ps);
    };
    G__11388.cljs$lang$maxFixedArity = 3;
    G__11388.cljs$lang$applyTo = function(arglist__11391) {
      var p1 = cljs.core.first(arglist__11391);
      arglist__11391 = cljs.core.next(arglist__11391);
      var p2 = cljs.core.first(arglist__11391);
      arglist__11391 = cljs.core.next(arglist__11391);
      var p3 = cljs.core.first(arglist__11391);
      var ps = cljs.core.rest(arglist__11391);
      return G__11388__delegate(p1, p2, p3, ps);
    };
    G__11388.cljs$core$IFn$_invoke$arity$variadic = G__11388__delegate;
    return G__11388;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(f1) {
      return function() {
        var G__11393 = null;
        var G__11393__0 = function() {
          return f1.call(null);
        };
        var G__11393__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11393__2 = function(result, input) {
          return f1.call(null, result, f.call(null, input));
        };
        var G__11393__3 = function() {
          var G__11394__delegate = function(result, input, inputs) {
            return f1.call(null, result, cljs.core.apply.call(null, f, input, inputs));
          };
          var G__11394 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              inputs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
            }
            return G__11394__delegate.call(this, result, input, inputs);
          };
          G__11394.cljs$lang$maxFixedArity = 2;
          G__11394.cljs$lang$applyTo = function(arglist__11395) {
            var result = cljs.core.first(arglist__11395);
            arglist__11395 = cljs.core.next(arglist__11395);
            var input = cljs.core.first(arglist__11395);
            var inputs = cljs.core.rest(arglist__11395);
            return G__11394__delegate(result, input, inputs);
          };
          G__11394.cljs$core$IFn$_invoke$arity$variadic = G__11394__delegate;
          return G__11394;
        }();
        G__11393 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__11393__0.call(this);
            case 1:
              return G__11393__1.call(this, result);
            case 2:
              return G__11393__2.call(this, result, input);
            default:
              return G__11393__3.cljs$core$IFn$_invoke$arity$variadic(result, input, cljs.core.array_seq(arguments, 2));
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11393.cljs$lang$maxFixedArity = 2;
        G__11393.cljs$lang$applyTo = G__11393__3.cljs$lang$applyTo;
        G__11393.cljs$core$IFn$_invoke$arity$0 = G__11393__0;
        G__11393.cljs$core$IFn$_invoke$arity$1 = G__11393__1;
        G__11393.cljs$core$IFn$_invoke$arity$2 = G__11393__2;
        G__11393.cljs$core$IFn$_invoke$arity$variadic = G__11393__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__11393;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___11396 = size;
          var i_11397 = 0;
          while (true) {
            if (i_11397 < n__4508__auto___11396) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_11397)));
              var G__11398 = i_11397 + 1;
              i_11397 = G__11398;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)));
        } else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__11399__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.call(null, function(step) {
        return function(p1__11392_SHARP_) {
          return cljs.core.apply.call(null, f, p1__11392_SHARP_);
        };
      }(step), step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)));
    };
    var G__11399 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11399__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11399.cljs$lang$maxFixedArity = 4;
    G__11399.cljs$lang$applyTo = function(arglist__11400) {
      var f = cljs.core.first(arglist__11400);
      arglist__11400 = cljs.core.next(arglist__11400);
      var c1 = cljs.core.first(arglist__11400);
      arglist__11400 = cljs.core.next(arglist__11400);
      var c2 = cljs.core.first(arglist__11400);
      arglist__11400 = cljs.core.next(arglist__11400);
      var c3 = cljs.core.first(arglist__11400);
      var colls = cljs.core.rest(arglist__11400);
      return G__11399__delegate(f, c1, c2, c3, colls);
    };
    G__11399.cljs$core$IFn$_invoke$arity$variadic = G__11399__delegate;
    return G__11399;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__11401 = null;
          var G__11401__0 = function() {
            return f1.call(null);
          };
          var G__11401__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11401__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            var nn = cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            var result__$1 = n__$1 > 0 ? f1.call(null, result, input) : result;
            if (!(nn > 0)) {
              return cljs.core.reduced.call(null, result__$1);
            } else {
              return result__$1;
            }
          };
          G__11401 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11401__0.call(this);
              case 1:
                return G__11401__1.call(this, result);
              case 2:
                return G__11401__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11401.cljs$core$IFn$_invoke$arity$0 = G__11401__0;
          G__11401.cljs$core$IFn$_invoke$arity$1 = G__11401__1;
          G__11401.cljs$core$IFn$_invoke$arity$2 = G__11401__2;
          return G__11401;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq.call(null, coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(f1) {
      var na = cljs.core.atom.call(null, n);
      return function(na) {
        return function() {
          var G__11402 = null;
          var G__11402__0 = function() {
            return f1.call(null);
          };
          var G__11402__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11402__2 = function(result, input) {
            var n__$1 = cljs.core.deref.call(null, na);
            cljs.core.swap_BANG_.call(null, na, cljs.core.dec);
            if (n__$1 > 0) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__11402 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11402__0.call(this);
              case 1:
                return G__11402__1.call(this, result);
              case 2:
                return G__11402__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11402.cljs$core$IFn$_invoke$arity$0 = G__11402__0;
          G__11402.cljs$core$IFn$_invoke$arity$1 = G__11402__1;
          G__11402.cljs$core$IFn$_invoke$arity$2 = G__11402__2;
          return G__11402;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (n__$1 > 0 && s) {
          var G__11403 = n__$1 - 1;
          var G__11404 = cljs.core.rest.call(null, s);
          n__$1 = G__11403;
          coll__$1 = G__11404;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x;
    }, s, cljs.core.drop.call(null, n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while (true) {
    if (lead) {
      var G__11405 = cljs.core.next.call(null, s);
      var G__11406 = cljs.core.next.call(null, lead);
      s = G__11405;
      lead = G__11406;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(f1) {
      var da = cljs.core.atom.call(null, true);
      return function(da) {
        return function() {
          var G__11407 = null;
          var G__11407__0 = function() {
            return f1.call(null);
          };
          var G__11407__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11407__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref.call(null, da);
            if (cljs.core.truth_(function() {
              var and__3627__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3627__auto__)) {
                return pred.call(null, input);
              } else {
                return and__3627__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.reset_BANG_.call(null, da, null);
              return f1.call(null, result, input);
            }
          };
          G__11407 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11407__0.call(this);
              case 1:
                return G__11407__1.call(this, result);
              case 2:
                return G__11407__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11407.cljs$core$IFn$_invoke$arity$0 = G__11407__0;
          G__11407.cljs$core$IFn$_invoke$arity$1 = G__11407__1;
          G__11407.cljs$core$IFn$_invoke$arity$2 = G__11407__2;
          return G__11407;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq.call(null, coll__$1);
        if (cljs.core.truth_(function() {
          var and__3627__auto__ = s;
          if (and__3627__auto__) {
            return pred__$1.call(null, cljs.core.first.call(null, s));
          } else {
            return and__3627__auto__;
          }
        }())) {
          var G__11408 = pred__$1;
          var G__11409 = cljs.core.rest.call(null, s);
          pred__$1 = G__11408;
          coll__$1 = G__11409;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step.call(null, pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq.call(null, coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if (s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__11410__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if (cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__11410 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
      }
      return G__11410__delegate.call(this, c1, c2, colls);
    };
    G__11410.cljs$lang$maxFixedArity = 2;
    G__11410.cljs$lang$applyTo = function(arglist__11411) {
      var c1 = cljs.core.first(arglist__11411);
      arglist__11411 = cljs.core.next(arglist__11411);
      var c2 = cljs.core.first(arglist__11411);
      var colls = cljs.core.rest(arglist__11411);
      return G__11410__delegate(c1, c2, colls);
    };
    G__11410.cljs$core$IFn$_invoke$arity$variadic = G__11410__delegate;
    return G__11410;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll));
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1));
      } else {
        if (cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat.call(null, null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.call(null, cljs.core.map.call(null, f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__11412__delegate = function(f, colls) {
      return cljs.core.apply.call(null, cljs.core.concat, cljs.core.apply.call(null, cljs.core.map, f, colls));
    };
    var G__11412 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11412__delegate.call(this, f, colls);
    };
    G__11412.cljs$lang$maxFixedArity = 1;
    G__11412.cljs$lang$applyTo = function(arglist__11413) {
      var f = cljs.core.first(arglist__11413);
      var colls = cljs.core.rest(arglist__11413);
      return G__11412__delegate(f, colls);
    };
    G__11412.cljs$core$IFn$_invoke$arity$variadic = G__11412__delegate;
    return G__11412;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__11414 = null;
        var G__11414__0 = function() {
          return f1.call(null);
        };
        var G__11414__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11414__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return result;
          }
        };
        G__11414 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11414__0.call(this);
            case 1:
              return G__11414__1.call(this, result);
            case 2:
              return G__11414__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11414.cljs$core$IFn$_invoke$arity$0 = G__11414__0;
        G__11414.cljs$core$IFn$_invoke$arity$1 = G__11414__1;
        G__11414.cljs$core$IFn$_invoke$arity$2 = G__11414__2;
        return G__11414;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__4508__auto___11415 = size;
          var i_11416 = 0;
          while (true) {
            if (i_11416 < n__4508__auto___11415) {
              if (cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_11416)))) {
                cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_11416));
              } else {
              }
              var G__11417 = i_11416 + 1;
              i_11416 = G__11417;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)));
        } else {
          var f = cljs.core.first.call(null, s);
          var r = cljs.core.rest.call(null, s);
          if (cljs.core.truth_(pred.call(null, f))) {
            return cljs.core.cons.call(null, f, filter.call(null, pred, r));
          } else {
            return filter.call(null, pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null);
    }, null, null);
  };
  return walk.call(null, root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__11418_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__11418_SHARP_);
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__11421 = to;
        if (G__11421) {
          var bit__4295__auto__ = G__11421.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4295__auto__ || G__11421.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
      } else {
        return cljs.core.reduce.call(null, cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__11422 = to;
      if (G__11422) {
        var bit__4295__auto__ = G__11422.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4295__auto__ || G__11422.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.transduce.call(null, xform, cljs.core.conj_BANG_, cljs.core.transient$.call(null, to), from)), cljs.core.meta.call(null, to));
    } else {
      return cljs.core.transduce.call(null, xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o));
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__11423__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls));
    };
    var G__11423 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0);
      }
      return G__11423__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__11423.cljs$lang$maxFixedArity = 4;
    G__11423.cljs$lang$applyTo = function(arglist__11424) {
      var f = cljs.core.first(arglist__11424);
      arglist__11424 = cljs.core.next(arglist__11424);
      var c1 = cljs.core.first(arglist__11424);
      arglist__11424 = cljs.core.next(arglist__11424);
      var c2 = cljs.core.first(arglist__11424);
      arglist__11424 = cljs.core.next(arglist__11424);
      var c3 = cljs.core.first(arglist__11424);
      var colls = cljs.core.rest(arglist__11424);
      return G__11423__delegate(f, c1, c2, c3, colls);
    };
    G__11423.cljs$core$IFn$_invoke$arity$variadic = G__11423__delegate;
    return G__11423;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if (cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.call(null, n, s);
        if (n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)));
        } else {
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__11426 = m__$1;
          if (G__11426) {
            var bit__4302__auto__ = G__11426.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4302__auto__ || G__11426.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__11426.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11426);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__11426);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__11427 = sentinel;
            var G__11428 = m__$2;
            var G__11429 = cljs.core.next.call(null, ks__$1);
            sentinel = G__11427;
            m__$1 = G__11428;
            ks__$1 = G__11429;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__11430, v) {
  var vec__11432 = p__11430;
  var k = cljs.core.nth.call(null, vec__11432, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__11432, 1);
  if (ks) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v));
  } else {
    return cljs.core.assoc.call(null, m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__11433, f) {
    var vec__11443 = p__11433;
    var k = cljs.core.nth.call(null, vec__11443, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11443, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)));
    }
  };
  var update_in__4 = function(m, p__11434, f, a) {
    var vec__11444 = p__11434;
    var k = cljs.core.nth.call(null, vec__11444, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11444, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a));
    }
  };
  var update_in__5 = function(m, p__11435, f, a, b) {
    var vec__11445 = p__11435;
    var k = cljs.core.nth.call(null, vec__11445, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11445, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b));
    }
  };
  var update_in__6 = function(m, p__11436, f, a, b, c) {
    var vec__11446 = p__11436;
    var k = cljs.core.nth.call(null, vec__11446, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__11446, 1);
    if (ks) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c));
    }
  };
  var update_in__7 = function() {
    var G__11448__delegate = function(m, p__11437, f, a, b, c, args) {
      var vec__11447 = p__11437;
      var k = cljs.core.nth.call(null, vec__11447, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__11447, 1);
      if (ks) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args));
      } else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args));
      }
    };
    var G__11448 = function(m, p__11437, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0);
      }
      return G__11448__delegate.call(this, m, p__11437, f, a, b, c, args);
    };
    G__11448.cljs$lang$maxFixedArity = 6;
    G__11448.cljs$lang$applyTo = function(arglist__11449) {
      var m = cljs.core.first(arglist__11449);
      arglist__11449 = cljs.core.next(arglist__11449);
      var p__11437 = cljs.core.first(arglist__11449);
      arglist__11449 = cljs.core.next(arglist__11449);
      var f = cljs.core.first(arglist__11449);
      arglist__11449 = cljs.core.next(arglist__11449);
      var a = cljs.core.first(arglist__11449);
      arglist__11449 = cljs.core.next(arglist__11449);
      var b = cljs.core.first(arglist__11449);
      arglist__11449 = cljs.core.next(arglist__11449);
      var c = cljs.core.first(arglist__11449);
      var args = cljs.core.rest(arglist__11449);
      return G__11448__delegate(m, p__11437, f, a, b, c, args);
    };
    G__11448.cljs$core$IFn$_invoke$arity$variadic = G__11448__delegate;
    return G__11448;
  }();
  update_in = function(m, p__11437, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__11437, f);
      case 4:
        return update_in__4.call(this, m, p__11437, f, a);
      case 5:
        return update_in__5.call(this, m, p__11437, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__11437, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__11437, f, a, b, c, cljs.core.array_seq(arguments, 6));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4218__auto__, writer__4219__auto__, opts__4220__auto__) {
  return cljs.core._write.call(null, writer__4219__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__11450 = ll - 5;
      var G__11451 = r;
      ll = G__11450;
      ret = G__11451;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error("No item " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(i) + " in vector of length " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__11452 = cljs.core.pv_aget.call(null, node, 0);
      var G__11453 = level - 5;
      node = G__11452;
      level = G__11453;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off.call(null, pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__11454 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
        var G__11455 = level - 5;
        node = G__11454;
        level = G__11455;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for.call(null, pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if (level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentVector");
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, j + i, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__11457 = j + 1;
              var G__11458 = init__$3;
              j = G__11457;
              init__$2 = G__11458;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11459 = i + len;
        var G__11460 = init__$2;
        i = G__11459;
        init__$1 = G__11460;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for.call(null, coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off.call(null, coll__$1) <= n) {
      var new_tail = cljs.core.aclone.call(null, self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, val);
    } else {
      throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds  [0," + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt) + "]");
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for.call(null, coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = f.call(null, init__$2, arr[j]);
            if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
              return init__$3;
            } else {
              var G__11461 = j + 1;
              var G__11462 = init__$3;
              j = G__11461;
              init__$2 = G__11462;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11463 = i + len;
        var G__11464 = init__$2;
        i = G__11463;
        init__$1 = G__11464;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      return cljs.core.chunked_seq.call(null, coll__$1, cljs.core.first_array_for_longvec.call(null, coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4508__auto___11465 = len;
    var i_11466 = 0;
    while (true) {
      if (i_11466 < n__4508__auto___11465) {
        new_tail[i_11466] = self__.tail[i_11466];
        var G__11467 = i_11466 + 1;
        i_11466 = G__11467;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11468 = null;
  var G__11468__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11468__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11468 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11468__2.call(this, self__, k);
      case 3:
        return G__11468__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11468.cljs$core$IFn$_invoke$arity$2 = G__11468__2;
  G__11468.cljs$core$IFn$_invoke$arity$3 = G__11468__3;
  return G__11468;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args11456) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11456)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone.call(null, xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while (true) {
      if (i < l) {
        var G__11469 = i + 1;
        var G__11470 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__11469;
        out = G__11470;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec.call(null, args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__11471) {
    var args = cljs.core.seq(arglist__11471);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count.call(null, self__.vec)) {
    return cljs.core.chunked_seq.call(null, self__.vec, cljs.core.unchecked_array_for.call(null, self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Subvec");
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start);
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3946__auto__ = self__.end;
    var y__3947__auto__ = v_pos + 1;
    return x__3946__auto__ > y__3947__auto__ ? x__3946__auto__ : y__3947__auto__;
  }(), null);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n.call(null, coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq.call(null, i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq.call(null, self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__11473 = null;
  var G__11473__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11473__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11473 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11473__2.call(this, self__, k);
      case 3:
        return G__11473__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11473.cljs$core$IFn$_invoke$arity$2 = G__11473__2;
  G__11473.cljs$core$IFn$_invoke$arity$3 = G__11473__3;
  return G__11473;
}();
cljs.core.Subvec.prototype.apply = function(self__, args11472) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11472)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__11474 = meta;
      var G__11475 = v.v;
      var G__11476 = v.start + start;
      var G__11477 = v.start + end;
      var G__11478 = __hash;
      meta = G__11474;
      v = G__11475;
      start = G__11476;
      end = G__11477;
      __hash = G__11478;
      continue;
    } else {
      var c = cljs.core.count.call(null, v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone.call(null, node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj11482 = {};
    return obj11482;
  }(), cljs.core.aclone.call(null, node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if (!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset.call(null, node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off.call(null, tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__11483 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
        var G__11484 = level - 5;
        node = G__11483;
        level = G__11484;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientVector");
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11486 = null;
  var G__11486__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11486__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11486 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11486__2.call(this, self__, k);
      case 3:
        return G__11486__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11486.cljs$core$IFn$_invoke$arity$2 = G__11486__2;
  G__11486.cljs$core$IFn$_invoke$arity$3 = G__11486__3;
  return G__11486;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args11485) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11485)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.call(null, coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset.call(null, node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val);
      } else {
        throw new Error("Index " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n) + " out of bounds for TransientVector of length" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentQueue");
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next.call(null, self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY;
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if (cljs.core.truth_(function() {
    var or__3639__auto__ = self__.front;
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3639__auto__ = self__.rear;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/NeverEquiv");
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__11487 = i + incr;
        i = G__11487;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__11488 = i + 1;
      var G__11489 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__11488;
      out = G__11489;
      continue;
    } else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj11493 = {};
    return obj11493;
  }();
  var l = ks.length;
  var i_11494 = 0;
  while (true) {
    if (i_11494 < l) {
      var k_11495 = ks[i_11494];
      new_obj[k_11495] = obj[k_11495];
      var G__11496 = i_11494 + 1;
      i_11494 = G__11496;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ObjMap");
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11499 = cljs.core.rest.call(null, keys__$1);
        var G__11500 = init__$2;
        keys__$1 = G__11499;
        init__$1 = G__11500;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone.call(null, self__.keys);
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone.call(null, self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.call(null, function(coll__$1) {
      return function(p1__11497_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11497_SHARP_, self__.strobj[p1__11497_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11501 = null;
  var G__11501__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11501__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11501 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11501__2.call(this, self__, k);
      case 3:
        return G__11501__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11501.cljs$core$IFn$_invoke$arity$2 = G__11501__2;
  G__11501.cljs$core$IFn$_invoke$arity$3 = G__11501__3;
  return G__11501;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args11498) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11498)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj11503 = {};
  return obj11503;
}(), 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.Iterator = function(s) {
  this.s = s;
};
cljs.core.Iterator.cljs$lang$type = true;
cljs.core.Iterator.cljs$lang$ctorStr = "cljs.core/Iterator";
cljs.core.Iterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Iterator");
};
cljs.core.Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_Iterator = function __GT_Iterator(s) {
  return new cljs.core.Iterator(s);
};
cljs.core.iterator = function iterator(coll) {
  return new cljs.core.Iterator(cljs.core.seq.call(null, coll));
};
cljs.core.EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.EntriesIterator.cljs$lang$type = true;
cljs.core.EntriesIterator.cljs$lang$ctorStr = "cljs.core/EntriesIterator";
cljs.core.EntriesIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/EntriesIterator");
};
cljs.core.EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__11504 = cljs.core.first.call(null, self__.s);
    var k = cljs.core.nth.call(null, vec__11504, 0, null);
    var v = cljs.core.nth.call(null, vec__11504, 1, null);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_EntriesIterator = function __GT_EntriesIterator(s) {
  return new cljs.core.EntriesIterator(s);
};
cljs.core.entries_iterator = function entries_iterator(coll) {
  return new cljs.core.EntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.SetEntriesIterator.cljs$lang$type = true;
cljs.core.SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/SetEntriesIterator";
cljs.core.SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/SetEntriesIterator");
};
cljs.core.SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first.call(null, self__.s);
    self__.s = cljs.core.next.call(null, self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.__GT_SetEntriesIterator = function __GT_SetEntriesIterator(s) {
  return new cljs.core.SetEntriesIterator(s);
};
cljs.core.set_entries_iterator = function set_entries_iterator(coll) {
  return new cljs.core.SetEntriesIterator(cljs.core.seq.call(null, coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__11505 = i + 2;
        i = G__11505;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__11506 = i + 2;
        i = G__11506;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__11507 = i + 2;
        i = G__11507;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__11508 = i + 2;
        i = G__11508;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.call(null, k, arr[i])) {
        return i;
      } else {
        var G__11509 = i + 2;
        i = G__11509;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_11510 = 0;
  while (true) {
    if (i_11510 < l) {
      narr[i_11510] = arr[i_11510];
      var G__11511 = i_11510 + 1;
      i_11510 = G__11511;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11513 = cljs.core.seq.call(null, coll);
  var chunk__11514 = null;
  var count__11515 = 0;
  var i__11516 = 0;
  while (true) {
    if (i__11516 < count__11515) {
      var vec__11517 = cljs.core._nth.call(null, chunk__11514, i__11516);
      var k = cljs.core.nth.call(null, vec__11517, 0, null);
      var v = cljs.core.nth.call(null, vec__11517, 1, null);
      f.call(null, v, k);
      var G__11522 = seq__11513;
      var G__11523 = chunk__11514;
      var G__11524 = count__11515;
      var G__11525 = i__11516 + 1;
      seq__11513 = G__11522;
      chunk__11514 = G__11523;
      count__11515 = G__11524;
      i__11516 = G__11525;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11513);
      if (temp__4126__auto__) {
        var seq__11513__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11513__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11513__$1);
          var G__11526 = cljs.core.chunk_rest.call(null, seq__11513__$1);
          var G__11527 = c__4408__auto__;
          var G__11528 = cljs.core.count.call(null, c__4408__auto__);
          var G__11529 = 0;
          seq__11513 = G__11526;
          chunk__11514 = G__11527;
          count__11515 = G__11528;
          i__11516 = G__11529;
          continue;
        } else {
          var vec__11518 = cljs.core.first.call(null, seq__11513__$1);
          var k = cljs.core.nth.call(null, vec__11518, 0, null);
          var v = cljs.core.nth.call(null, vec__11518, 1, null);
          f.call(null, v, k);
          var G__11530 = cljs.core.next.call(null, seq__11513__$1);
          var G__11531 = null;
          var G__11532 = 0;
          var G__11533 = 0;
          seq__11513 = G__11530;
          chunk__11514 = G__11531;
          count__11515 = G__11532;
          i__11516 = G__11533;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11534 = i + 2;
        var G__11535 = init__$2;
        i = G__11534;
        init__$1 = G__11535;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj11520 = {};
    return obj11520;
  }(), self__.arr.length, cljs.core.aclone.call(null, self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty.call(null, coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__11536 = s + 2;
            var G__11537 = d;
            s = G__11536;
            d = G__11537;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__11538 = s + 2;
            var G__11539 = d + 2;
            s = G__11538;
            d = G__11539;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__11521 = cljs.core.aclone.call(null, self__.arr);
        G__11521[idx + 1] = v;
        return G__11521;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11540 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11541 = cljs.core.next.call(null, es);
          ret = G__11540;
          es = G__11541;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11542 = null;
  var G__11542__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11542__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11542 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11542__2.call(this, self__, k);
      case 3:
        return G__11542__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11542.cljs$core$IFn$_invoke$arity$2 = G__11542__2;
  G__11542.cljs$core$IFn$_invoke$arity$3 = G__11542__3;
  return G__11542;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args11512) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11512)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone.call(null, arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11543 = i + 2;
        var G__11544 = cljs.core._assoc_BANG_.call(null, ret, arr__$1[i], arr__$1[i + 1]);
        i = G__11543;
        ret = G__11544;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, ret);
      }
      break;
    }
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__11545_11547 = self__.arr;
      G__11545_11547.pop();
      G__11545_11547.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__11546 = o;
      if (G__11546) {
        var bit__4302__auto__ = G__11546.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4302__auto__ || G__11546.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11546.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11546);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11546);
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11548 = cljs.core.next.call(null, es);
          var G__11549 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11548;
          tcoll__$2 = G__11549;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__11550 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__11551 = i + 2;
      out = G__11550;
      i = G__11551;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4218__auto__, writer__4219__auto__, opts__4220__auto__) {
  return cljs.core._write.call(null, writer__4219__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.call(null, key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__11554 = cljs.core.aclone.call(null, arr);
    G__11554[i] = a;
    return G__11554;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__11555 = cljs.core.aclone.call(null, arr);
    G__11555[i] = a;
    G__11555[j] = b;
    return G__11555;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1]);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2);
      } else {
        var G__11556 = i + 2;
        var G__11557 = init__$2;
        i = G__11556;
        init__$1 = G__11557;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_11558 = 0;
        var j_11559 = 0;
        while (true) {
          if (i_11558 < 32) {
            if ((self__.bitmap >>> i_11558 & 1) === 0) {
              var G__11560 = i_11558 + 1;
              var G__11561 = j_11559;
              i_11558 = G__11560;
              j_11559 = G__11561;
              continue;
            } else {
              nodes[i_11558] = !(self__.arr[j_11559] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_11559]), self__.arr[j_11559], self__.arr[j_11559 + 1], added_leaf_QMARK_) : self__.arr[j_11559 + 1];
              var G__11562 = i_11558 + 1;
              var G__11563 = j_11559 + 2;
              i_11558 = G__11562;
              j_11559 = G__11563;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_11564 = 0;
      var j_11565 = 0;
      while (true) {
        if (i_11564 < 32) {
          if ((self__.bitmap >>> i_11564 & 1) === 0) {
            var G__11566 = i_11564 + 1;
            var G__11567 = j_11565;
            i_11564 = G__11566;
            j_11565 = G__11567;
            continue;
          } else {
            nodes[i_11564] = !(self__.arr[j_11565] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_11565]), self__.arr[j_11565], self__.arr[j_11565 + 1], added_leaf_QMARK_) : self__.arr[j_11565 + 1];
            var G__11568 = i_11564 + 1;
            var G__11569 = j_11565 + 2;
            i_11564 = G__11568;
            j_11565 = G__11569;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__11570 = i + 1;
        var G__11571 = j + 2;
        var G__11572 = bitmap | 1 << i;
        i = G__11570;
        j = G__11571;
        bitmap = G__11572;
        continue;
      } else {
        var G__11573 = i + 1;
        var G__11574 = j;
        var G__11575 = bitmap;
        i = G__11573;
        j = G__11574;
        bitmap = G__11575;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayNode");
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone.call(null, self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2);
        } else {
          var G__11576 = i + 1;
          var G__11577 = init__$2;
          i = G__11576;
          init__$1 = G__11577;
          continue;
        }
      } else {
        var G__11578 = i + 1;
        var G__11579 = init__$1;
        i = G__11578;
        init__$1 = G__11579;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test.call(null, key, arr[i])) {
        return i;
      } else {
        var G__11580 = i + 2;
        i = G__11580;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)));
    }
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/NodeSeq");
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first.call(null, self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__11581 = j + 2;
                j = G__11581;
                continue;
              }
            } else {
              var G__11582 = j + 2;
              j = G__11582;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__11583 = j + 1;
              j = G__11583;
              continue;
            }
          } else {
            var G__11584 = j + 1;
            j = G__11584;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11586 = cljs.core.seq.call(null, coll);
  var chunk__11587 = null;
  var count__11588 = 0;
  var i__11589 = 0;
  while (true) {
    if (i__11589 < count__11588) {
      var vec__11590 = cljs.core._nth.call(null, chunk__11587, i__11589);
      var k = cljs.core.nth.call(null, vec__11590, 0, null);
      var v = cljs.core.nth.call(null, vec__11590, 1, null);
      f.call(null, v, k);
      var G__11594 = seq__11586;
      var G__11595 = chunk__11587;
      var G__11596 = count__11588;
      var G__11597 = i__11589 + 1;
      seq__11586 = G__11594;
      chunk__11587 = G__11595;
      count__11588 = G__11596;
      i__11589 = G__11597;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11586);
      if (temp__4126__auto__) {
        var seq__11586__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11586__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11586__$1);
          var G__11598 = cljs.core.chunk_rest.call(null, seq__11586__$1);
          var G__11599 = c__4408__auto__;
          var G__11600 = cljs.core.count.call(null, c__4408__auto__);
          var G__11601 = 0;
          seq__11586 = G__11598;
          chunk__11587 = G__11599;
          count__11588 = G__11600;
          i__11589 = G__11601;
          continue;
        } else {
          var vec__11591 = cljs.core.first.call(null, seq__11586__$1);
          var k = cljs.core.nth.call(null, vec__11591, 0, null);
          var v = cljs.core.nth.call(null, vec__11591, 1, null);
          f.call(null, v, k);
          var G__11602 = cljs.core.next.call(null, seq__11586__$1);
          var G__11603 = null;
          var G__11604 = 0;
          var G__11605 = 0;
          seq__11586 = G__11602;
          chunk__11587 = G__11603;
          count__11588 = G__11604;
          i__11589 = G__11605;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj11593 = {};
    return obj11593;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11606 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11607 = cljs.core.next.call(null, es);
          ret = G__11606;
          es = G__11607;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11608 = null;
  var G__11608__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11608__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11608 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11608__2.call(this, self__, k);
      case 3:
        return G__11608__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11608.cljs$core$IFn$_invoke$arity$2 = G__11608__2;
  G__11608.cljs$core$IFn$_invoke$arity$3 = G__11608__3;
  return G__11608;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11585) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11585)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11609 = i + 1;
      var G__11610 = cljs.core._assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__11609;
      out = G__11610;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, out);
    }
    break;
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientHashMap");
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__11611 = o;
      if (G__11611) {
        var bit__4302__auto__ = G__11611.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4302__auto__ || G__11611.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__11611.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11611);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__11611);
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first.call(null, es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__11612 = cljs.core.next.call(null, es);
          var G__11613 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__11612;
          tcoll__$1 = G__11613;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__11614 = ascending_QMARK_ ? t.left : t.right;
      var G__11615 = cljs.core.conj.call(null, stack__$1, t);
      t = G__11614;
      stack__$1 = G__11615;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/BlackNode");
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11617 = null;
  var G__11617__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11617__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11617 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11617__2.call(this, self__, k);
      case 3:
        return G__11617__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11617.cljs$core$IFn$_invoke$arity$2 = G__11617__2;
  G__11617.cljs$core$IFn$_invoke$arity$3 = G__11617__3;
  return G__11617;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args11616) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11616)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/RedNode");
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__11619 = null;
  var G__11619__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11619__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11619 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11619__2.call(this, self__, k);
      case 3:
        return G__11619__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11619.cljs$core$IFn$_invoke$arity$2 = G__11619__2;
  G__11619.cljs$core$IFn$_invoke$arity$3 = G__11619__3;
  return G__11619;
}();
cljs.core.RedNode.prototype.apply = function(self__, args11618) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11618)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null);
        } else {
          var app = tree_map_append.call(null, left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove.call(null, comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11621 = cljs.core.seq.call(null, coll);
  var chunk__11622 = null;
  var count__11623 = 0;
  var i__11624 = 0;
  while (true) {
    if (i__11624 < count__11623) {
      var vec__11625 = cljs.core._nth.call(null, chunk__11622, i__11624);
      var k = cljs.core.nth.call(null, vec__11625, 0, null);
      var v = cljs.core.nth.call(null, vec__11625, 1, null);
      f.call(null, v, k);
      var G__11627 = seq__11621;
      var G__11628 = chunk__11622;
      var G__11629 = count__11623;
      var G__11630 = i__11624 + 1;
      seq__11621 = G__11627;
      chunk__11622 = G__11628;
      count__11623 = G__11629;
      i__11624 = G__11630;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11621);
      if (temp__4126__auto__) {
        var seq__11621__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11621__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11621__$1);
          var G__11631 = cljs.core.chunk_rest.call(null, seq__11621__$1);
          var G__11632 = c__4408__auto__;
          var G__11633 = cljs.core.count.call(null, c__4408__auto__);
          var G__11634 = 0;
          seq__11621 = G__11631;
          chunk__11622 = G__11632;
          count__11623 = G__11633;
          i__11624 = G__11634;
          continue;
        } else {
          var vec__11626 = cljs.core.first.call(null, seq__11621__$1);
          var k = cljs.core.nth.call(null, vec__11626, 0, null);
          var v = cljs.core.nth.call(null, vec__11626, 1, null);
          f.call(null, v, k);
          var G__11635 = cljs.core.next.call(null, seq__11621__$1);
          var G__11636 = null;
          var G__11637 = 0;
          var G__11638 = 0;
          seq__11621 = G__11635;
          chunk__11622 = G__11636;
          count__11623 = G__11637;
          i__11624 = G__11638;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__11639 = t.left;
          t = G__11639;
          continue;
        } else {
          var G__11640 = t.right;
          t = G__11640;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if (cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq.call(null, entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first.call(null, es);
        if (cljs.core.vector_QMARK_.call(null, e)) {
          var G__11641 = cljs.core._assoc.call(null, ret, cljs.core._nth.call(null, e, 0), cljs.core._nth.call(null, e, 1));
          var G__11642 = cljs.core.next.call(null, es);
          ret = G__11641;
          es = G__11642;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11643 = null;
  var G__11643__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11643__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11643 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11643__2.call(this, self__, k);
      case 3:
        return G__11643__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11643.cljs$core$IFn$_invoke$arity$2 = G__11643__2;
  G__11643.cljs$core$IFn$_invoke$arity$3 = G__11643__3;
  return G__11643;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args11620) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11620)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__11644 = cljs.core.conj.call(null, stack, t);
              var G__11645 = t.left;
              stack = G__11644;
              t = G__11645;
              continue;
            } else {
              var G__11646 = stack;
              var G__11647 = t.right;
              stack = G__11646;
              t = G__11647;
              continue;
            }
          } else {
            if (c > 0) {
              var G__11648 = cljs.core.conj.call(null, stack, t);
              var G__11649 = t.right;
              stack = G__11648;
              t = G__11649;
              continue;
            } else {
              var G__11650 = stack;
              var G__11651 = t.left;
              stack = G__11650;
              t = G__11651;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__11652 = cljs.core.nnext.call(null, in$);
        var G__11653 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11652;
        out = G__11653;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11654) {
    var keyvals = cljs.core.seq(arglist__11654);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11655) {
    var keyvals = cljs.core.seq(arglist__11655);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj11659 = {};
      return obj11659;
    }();
    var kvs = cljs.core.seq.call(null, keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__11660 = cljs.core.nnext.call(null, kvs);
        kvs = G__11660;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11661) {
    var keyvals = cljs.core.seq(arglist__11661);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__11662 = cljs.core.nnext.call(null, in$);
        var G__11663 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11662;
        out = G__11663;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11664) {
    var keyvals = cljs.core.seq(arglist__11664);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__11665 = cljs.core.nnext.call(null, in$);
        var G__11666 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__11665;
        out = G__11666;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11667) {
    var comparator = cljs.core.first(arglist__11667);
    var keyvals = cljs.core.rest(arglist__11667);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/KeySeq");
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11668 = self__.mseq;
    if (G__11668) {
      var bit__4302__auto__ = G__11668.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__11668.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11668.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11668);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11668);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11669 = self__.mseq;
    if (G__11669) {
      var bit__4302__auto__ = G__11669.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__11669.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11669.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11669);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11669);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ValSeq");
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11670 = self__.mseq;
    if (G__11670) {
      var bit__4302__auto__ = G__11670.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__11670.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11670.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11670);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11670);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll.call(null, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__11671 = self__.mseq;
    if (G__11671) {
      var bit__4302__auto__ = G__11671.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4302__auto__ || G__11671.cljs$core$INext$) {
        return true;
      } else {
        if (!G__11671.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11671);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__11671);
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq.call(null, hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11672_SHARP_, p2__11673_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3639__auto__ = p1__11672_SHARP_;
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__11673_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11674) {
    var maps = cljs.core.seq(arglist__11674);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if (cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v));
        } else {
          return cljs.core.assoc.call(null, m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3639__auto__ = m1;
            if (cljs.core.truth_(or__3639__auto__)) {
              return or__3639__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq.call(null, m2));
        };
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11675) {
    var f = cljs.core.first(arglist__11675);
    var maps = cljs.core.rest(arglist__11675);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__11676 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__11677 = cljs.core.next.call(null, keys);
      ret = G__11676;
      keys = G__11677;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11680 = cljs.core.seq.call(null, coll);
  var chunk__11681 = null;
  var count__11682 = 0;
  var i__11683 = 0;
  while (true) {
    if (i__11683 < count__11682) {
      var vec__11684 = cljs.core._nth.call(null, chunk__11681, i__11683);
      var k = cljs.core.nth.call(null, vec__11684, 0, null);
      var v = cljs.core.nth.call(null, vec__11684, 1, null);
      f.call(null, v, k);
      var G__11686 = seq__11680;
      var G__11687 = chunk__11681;
      var G__11688 = count__11682;
      var G__11689 = i__11683 + 1;
      seq__11680 = G__11686;
      chunk__11681 = G__11687;
      count__11682 = G__11688;
      i__11683 = G__11689;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11680);
      if (temp__4126__auto__) {
        var seq__11680__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11680__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11680__$1);
          var G__11690 = cljs.core.chunk_rest.call(null, seq__11680__$1);
          var G__11691 = c__4408__auto__;
          var G__11692 = cljs.core.count.call(null, c__4408__auto__);
          var G__11693 = 0;
          seq__11680 = G__11690;
          chunk__11681 = G__11691;
          count__11682 = G__11692;
          i__11683 = G__11693;
          continue;
        } else {
          var vec__11685 = cljs.core.first.call(null, seq__11680__$1);
          var k = cljs.core.nth.call(null, vec__11685, 0, null);
          var v = cljs.core.nth.call(null, vec__11685, 1, null);
          f.call(null, v, k);
          var G__11694 = cljs.core.next.call(null, seq__11680__$1);
          var G__11695 = null;
          var G__11696 = 0;
          var G__11697 = 0;
          seq__11680 = G__11694;
          chunk__11681 = G__11695;
          count__11682 = G__11696;
          i__11683 = G__11697;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11678_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11678_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11698 = null;
  var G__11698__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11698__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11698 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11698__2.call(this, self__, k);
      case 3:
        return G__11698__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11698.cljs$core$IFn$_invoke$arity$2 = G__11698__2;
  G__11698.cljs$core$IFn$_invoke$arity$3 = G__11698__3;
  return G__11698;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args11679) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11679)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone.call(null, items);
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11699 = i + 1;
        var G__11700 = cljs.core._assoc_BANG_.call(null, out, items[i], null);
        i = G__11699;
        out = G__11700;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_.call(null, out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__11701 = i + 1;
        var G__11702 = cljs.core._conj_BANG_.call(null, out, items[i]);
        i = G__11701;
        out = G__11702;
        continue;
      } else {
        return cljs.core._persistent_BANG_.call(null, out);
      }
      break;
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/TransientHashSet");
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11704 = null;
  var G__11704__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__11704__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__11704 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11704__2.call(this, self__, k);
      case 3:
        return G__11704__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11704.cljs$core$IFn$_invoke$arity$2 = G__11704__2;
  G__11704.cljs$core$IFn$_invoke$arity$3 = G__11704__3;
  return G__11704;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args11703) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11703)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null);
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.set_entries_iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.iterator.call(null, cljs.core.seq.call(null, coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_.call(null, coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11707 = cljs.core.seq.call(null, coll);
  var chunk__11708 = null;
  var count__11709 = 0;
  var i__11710 = 0;
  while (true) {
    if (i__11710 < count__11709) {
      var vec__11711 = cljs.core._nth.call(null, chunk__11708, i__11710);
      var k = cljs.core.nth.call(null, vec__11711, 0, null);
      var v = cljs.core.nth.call(null, vec__11711, 1, null);
      f.call(null, v, k);
      var G__11713 = seq__11707;
      var G__11714 = chunk__11708;
      var G__11715 = count__11709;
      var G__11716 = i__11710 + 1;
      seq__11707 = G__11713;
      chunk__11708 = G__11714;
      count__11709 = G__11715;
      i__11710 = G__11716;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11707);
      if (temp__4126__auto__) {
        var seq__11707__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11707__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11707__$1);
          var G__11717 = cljs.core.chunk_rest.call(null, seq__11707__$1);
          var G__11718 = c__4408__auto__;
          var G__11719 = cljs.core.count.call(null, c__4408__auto__);
          var G__11720 = 0;
          seq__11707 = G__11717;
          chunk__11708 = G__11718;
          count__11709 = G__11719;
          i__11710 = G__11720;
          continue;
        } else {
          var vec__11712 = cljs.core.first.call(null, seq__11707__$1);
          var k = cljs.core.nth.call(null, vec__11712, 0, null);
          var v = cljs.core.nth.call(null, vec__11712, 1, null);
          f.call(null, v, k);
          var G__11721 = cljs.core.next.call(null, seq__11707__$1);
          var G__11722 = null;
          var G__11723 = 0;
          var G__11724 = 0;
          seq__11707 = G__11721;
          chunk__11708 = G__11722;
          count__11709 = G__11723;
          i__11710 = G__11724;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_unordered_coll.call(null, coll__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(coll__$1) {
    return function(p1__11705_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, coll__$1, p1__11705_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11725 = null;
  var G__11725__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11725__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11725 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11725__2.call(this, self__, k);
      case 3:
        return G__11725__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11725.cljs$core$IFn$_invoke$arity$2 = G__11725__2;
  G__11725.cljs$core$IFn$_invoke$arity$3 = G__11725__3;
  return G__11725;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args11706) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11706)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map);
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4502__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4502__auto__.length) {
        var G__11726 = i + 1;
        var G__11727 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__11726;
        res = G__11727;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq.call(null, in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__11728 = cljs.core._next.call(null, in$__$1);
          var G__11729 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
          in$__$1 = G__11728;
          out = G__11729;
          continue;
        } else {
          return cljs.core._persistent_BANG_.call(null, out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__11730__delegate = function(keys) {
      return cljs.core.set.call(null, keys);
    };
    var G__11730 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
      }
      return G__11730__delegate.call(this, keys);
    };
    G__11730.cljs$lang$maxFixedArity = 0;
    G__11730.cljs$lang$applyTo = function(arglist__11731) {
      var keys = cljs.core.seq(arglist__11731);
      return G__11730__delegate(keys);
    };
    G__11730.cljs$core$IFn$_invoke$arity$variadic = G__11730__delegate;
    return G__11730;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11732) {
    var keys = cljs.core.seq(arglist__11732);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11733) {
    var comparator = cljs.core.first(arglist__11733);
    var keys = cljs.core.rest(arglist__11733);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.call(null, function(p1__11734_SHARP_) {
      var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11734_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val.call(null, e);
      } else {
        return p1__11734_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_.call(null, coll)) {
      var n = cljs.core.count.call(null, coll);
      return cljs.core.reduce.call(null, function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)));
    } else {
      return cljs.core.map.call(null, function(p1__11735_SHARP_) {
        var temp__4124__auto__ = cljs.core.find.call(null, smap, p1__11735_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second.call(null, e);
        } else {
          return p1__11735_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__11742, seen__$1) {
        while (true) {
          var vec__11743 = p__11742;
          var f = cljs.core.nth.call(null, vec__11743, 0, null);
          var xs__$1 = vec__11743;
          var temp__4126__auto__ = cljs.core.seq.call(null, xs__$1);
          if (temp__4126__auto__) {
            var s = temp__4126__auto__;
            if (cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__11744 = cljs.core.rest.call(null, s);
              var G__11745 = seen__$1;
              p__11742 = G__11744;
              seen__$1 = G__11745;
              continue;
            } else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next.call(null, s__$1)) {
      var G__11746 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__11747 = cljs.core.next.call(null, s__$1);
      ret = G__11746;
      s__$1 = G__11747;
      continue;
    } else {
      return cljs.core.seq.call(null, ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__11749 = x;
    if (G__11749) {
      var bit__4295__auto__ = G__11749.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4295__auto__ || G__11749.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._name.call(null, x);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error("Doesn't support name: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while (true) {
    if (ks && vs) {
      var G__11750 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__11751 = cljs.core.next.call(null, ks);
      var G__11752 = cljs.core.next.call(null, vs);
      map = G__11750;
      ks = G__11751;
      vs = G__11752;
      continue;
    } else {
      return cljs.core.persistent_BANG_.call(null, map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (k.call(null, x) > k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__11755__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11753_SHARP_, p2__11754_SHARP_) {
        return max_key.call(null, k, p1__11753_SHARP_, p2__11754_SHARP_);
      }, max_key.call(null, k, x, y), more);
    };
    var G__11755 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11755__delegate.call(this, k, x, y, more);
    };
    G__11755.cljs$lang$maxFixedArity = 3;
    G__11755.cljs$lang$applyTo = function(arglist__11756) {
      var k = cljs.core.first(arglist__11756);
      arglist__11756 = cljs.core.next(arglist__11756);
      var x = cljs.core.first(arglist__11756);
      arglist__11756 = cljs.core.next(arglist__11756);
      var y = cljs.core.first(arglist__11756);
      var more = cljs.core.rest(arglist__11756);
      return G__11755__delegate(k, x, y, more);
    };
    G__11755.cljs$core$IFn$_invoke$arity$variadic = G__11755__delegate;
    return G__11755;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (k.call(null, x) < k.call(null, y)) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__11759__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11757_SHARP_, p2__11758_SHARP_) {
        return min_key.call(null, k, p1__11757_SHARP_, p2__11758_SHARP_);
      }, min_key.call(null, k, x, y), more);
    };
    var G__11759 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11759__delegate.call(this, k, x, y, more);
    };
    G__11759.cljs$lang$maxFixedArity = 3;
    G__11759.cljs$lang$applyTo = function(arglist__11760) {
      var k = cljs.core.first(arglist__11760);
      arglist__11760 = cljs.core.next(arglist__11760);
      var x = cljs.core.first(arglist__11760);
      arglist__11760 = cljs.core.next(arglist__11760);
      var y = cljs.core.first(arglist__11760);
      var more = cljs.core.rest(arglist__11760);
      return G__11759__delegate(k, x, y, more);
    };
    G__11759.cljs$core$IFn$_invoke$arity$variadic = G__11759__delegate;
    return G__11759;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/ArrayList");
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      return function(a) {
        return function() {
          var G__11761 = null;
          var G__11761__0 = function() {
            return f1.call(null);
          };
          var G__11761__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__11761__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            } else {
              return result;
            }
          };
          G__11761 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11761__0.call(this);
              case 1:
                return G__11761__1.call(this, result);
              case 2:
                return G__11761__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11761.cljs$core$IFn$_invoke$arity$0 = G__11761__0;
          G__11761.cljs$core$IFn$_invoke$arity$1 = G__11761__1;
          G__11761.cljs$core$IFn$_invoke$arity$2 = G__11761__2;
          return G__11761;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(f1) {
      return function() {
        var G__11762 = null;
        var G__11762__0 = function() {
          return f1.call(null);
        };
        var G__11762__1 = function(result) {
          return f1.call(null, result);
        };
        var G__11762__2 = function(result, input) {
          if (cljs.core.truth_(pred.call(null, input))) {
            return f1.call(null, result, input);
          } else {
            return cljs.core.reduced.call(null, result);
          }
        };
        G__11762 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11762__0.call(this);
            case 1:
              return G__11762__1.call(this, result);
            case 2:
              return G__11762__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11762.cljs$core$IFn$_invoke$arity$0 = G__11762__0;
        G__11762.cljs$core$IFn$_invoke$arity$1 = G__11762__1;
        G__11762.cljs$core$IFn$_invoke$arity$2 = G__11762__2;
        return G__11762;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__11765 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__11765, 0, null);
        var s = vec__11765;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__11766 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__11766, 0, null);
      var s = vec__11766;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__11769 = temp__4126__auto__;
        var e = cljs.core.nth.call(null, vec__11769, 0, null);
        var s = vec__11769;
        if (cljs.core.truth_(include.call(null, e))) {
          return s;
        } else {
          return cljs.core.next.call(null, s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__11770 = temp__4126__auto__;
      var e = cljs.core.nth.call(null, vec__11770, 0, null);
      var s = vec__11770;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Range");
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0;
  } else {
    return Math.ceil.call(null, (self__.end - self__.start) / self__.step);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_ordered_coll.call(null, rng__$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s);
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq.call(null, rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1);
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(f1) {
      var ia = cljs.core.atom.call(null, -1);
      return function(ia) {
        return function() {
          var G__11771 = null;
          var G__11771__0 = function() {
            return f1.call(null);
          };
          var G__11771__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11771__2 = function(result, input) {
            var i = cljs.core.swap_BANG_.call(null, ia, cljs.core.inc);
            if (cljs.core.rem.call(null, i, n) === 0) {
              return f1.call(null, result, input);
            } else {
              return result;
            }
          };
          G__11771 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11771__0.call(this);
              case 1:
                return G__11771__1.call(this, result);
              case 2:
                return G__11771__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11771.cljs$core$IFn$_invoke$arity$0 = G__11771__0;
          G__11771.cljs$core$IFn$_invoke$arity$1 = G__11771__1;
          G__11771.cljs$core$IFn$_invoke$arity$2 = G__11771__2;
          return G__11771;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(f1) {
      var a = cljs.core.array_list.call(null);
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__11773 = null;
          var G__11773__0 = function() {
            return f1.call(null);
          };
          var G__11773__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              return f1.call(null, result, v);
            }();
            return f1.call(null, result__$1);
          };
          var G__11773__2 = function(result, input) {
            var pval = cljs.core.deref.call(null, pa);
            var val = f.call(null, input);
            cljs.core.reset_BANG_.call(null, pa, val);
            if (cljs.core.keyword_identical_QMARK_.call(null, pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.call(null, val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec.call(null, a.toArray());
              a.clear();
              var ret = f1.call(null, result, v);
              if (cljs.core.reduced_QMARK_.call(null, ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__11773 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11773__0.call(this);
              case 1:
                return G__11773__1.call(this, result);
              case 2:
                return G__11773__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11773.cljs$core$IFn$_invoke$arity$0 = G__11773__0;
          G__11773.cljs$core$IFn$_invoke$arity$1 = G__11773__1;
          G__11773.cljs$core$IFn$_invoke$arity$2 = G__11773__2;
          return G__11773;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first.call(null, s);
        var fv = f.call(null, fst);
        var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv, s, temp__4126__auto__) {
          return function(p1__11772_SHARP_) {
            return cljs.core._EQ_.call(null, fv, f.call(null, p1__11772_SHARP_));
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next.call(null, s)));
        return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1);
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s));
      } else {
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, f.call(null));
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq.call(null, coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11784 = null;
      var G__11784__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null)], null);
      };
      var G__11784__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x)], null);
      };
      var G__11784__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y)], null);
      };
      var G__11784__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z)], null);
      };
      var G__11784__4 = function() {
        var G__11785__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args)], null);
        };
        var G__11785 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11785__delegate.call(this, x, y, z, args);
        };
        G__11785.cljs$lang$maxFixedArity = 3;
        G__11785.cljs$lang$applyTo = function(arglist__11786) {
          var x = cljs.core.first(arglist__11786);
          arglist__11786 = cljs.core.next(arglist__11786);
          var y = cljs.core.first(arglist__11786);
          arglist__11786 = cljs.core.next(arglist__11786);
          var z = cljs.core.first(arglist__11786);
          var args = cljs.core.rest(arglist__11786);
          return G__11785__delegate(x, y, z, args);
        };
        G__11785.cljs$core$IFn$_invoke$arity$variadic = G__11785__delegate;
        return G__11785;
      }();
      G__11784 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11784__0.call(this);
          case 1:
            return G__11784__1.call(this, x);
          case 2:
            return G__11784__2.call(this, x, y);
          case 3:
            return G__11784__3.call(this, x, y, z);
          default:
            return G__11784__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11784.cljs$lang$maxFixedArity = 3;
      G__11784.cljs$lang$applyTo = G__11784__4.cljs$lang$applyTo;
      G__11784.cljs$core$IFn$_invoke$arity$0 = G__11784__0;
      G__11784.cljs$core$IFn$_invoke$arity$1 = G__11784__1;
      G__11784.cljs$core$IFn$_invoke$arity$2 = G__11784__2;
      G__11784.cljs$core$IFn$_invoke$arity$3 = G__11784__3;
      G__11784.cljs$core$IFn$_invoke$arity$variadic = G__11784__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11784;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11787 = null;
      var G__11787__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null)], null);
      };
      var G__11787__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x)], null);
      };
      var G__11787__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y)], null);
      };
      var G__11787__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z)], null);
      };
      var G__11787__4 = function() {
        var G__11788__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args)], null);
        };
        var G__11788 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11788__delegate.call(this, x, y, z, args);
        };
        G__11788.cljs$lang$maxFixedArity = 3;
        G__11788.cljs$lang$applyTo = function(arglist__11789) {
          var x = cljs.core.first(arglist__11789);
          arglist__11789 = cljs.core.next(arglist__11789);
          var y = cljs.core.first(arglist__11789);
          arglist__11789 = cljs.core.next(arglist__11789);
          var z = cljs.core.first(arglist__11789);
          var args = cljs.core.rest(arglist__11789);
          return G__11788__delegate(x, y, z, args);
        };
        G__11788.cljs$core$IFn$_invoke$arity$variadic = G__11788__delegate;
        return G__11788;
      }();
      G__11787 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11787__0.call(this);
          case 1:
            return G__11787__1.call(this, x);
          case 2:
            return G__11787__2.call(this, x, y);
          case 3:
            return G__11787__3.call(this, x, y, z);
          default:
            return G__11787__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11787.cljs$lang$maxFixedArity = 3;
      G__11787.cljs$lang$applyTo = G__11787__4.cljs$lang$applyTo;
      G__11787.cljs$core$IFn$_invoke$arity$0 = G__11787__0;
      G__11787.cljs$core$IFn$_invoke$arity$1 = G__11787__1;
      G__11787.cljs$core$IFn$_invoke$arity$2 = G__11787__2;
      G__11787.cljs$core$IFn$_invoke$arity$3 = G__11787__3;
      G__11787.cljs$core$IFn$_invoke$arity$variadic = G__11787__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11787;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11790 = null;
      var G__11790__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null), g.call(null), h.call(null)], null);
      };
      var G__11790__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x), g.call(null, x), h.call(null, x)], null);
      };
      var G__11790__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y), g.call(null, x, y), h.call(null, x, y)], null);
      };
      var G__11790__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z)], null);
      };
      var G__11790__4 = function() {
        var G__11791__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args)], null);
        };
        var G__11791 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
          }
          return G__11791__delegate.call(this, x, y, z, args);
        };
        G__11791.cljs$lang$maxFixedArity = 3;
        G__11791.cljs$lang$applyTo = function(arglist__11792) {
          var x = cljs.core.first(arglist__11792);
          arglist__11792 = cljs.core.next(arglist__11792);
          var y = cljs.core.first(arglist__11792);
          arglist__11792 = cljs.core.next(arglist__11792);
          var z = cljs.core.first(arglist__11792);
          var args = cljs.core.rest(arglist__11792);
          return G__11791__delegate(x, y, z, args);
        };
        G__11791.cljs$core$IFn$_invoke$arity$variadic = G__11791__delegate;
        return G__11791;
      }();
      G__11790 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11790__0.call(this);
          case 1:
            return G__11790__1.call(this, x);
          case 2:
            return G__11790__2.call(this, x, y);
          case 3:
            return G__11790__3.call(this, x, y, z);
          default:
            return G__11790__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11790.cljs$lang$maxFixedArity = 3;
      G__11790.cljs$lang$applyTo = G__11790__4.cljs$lang$applyTo;
      G__11790.cljs$core$IFn$_invoke$arity$0 = G__11790__0;
      G__11790.cljs$core$IFn$_invoke$arity$1 = G__11790__1;
      G__11790.cljs$core$IFn$_invoke$arity$2 = G__11790__2;
      G__11790.cljs$core$IFn$_invoke$arity$3 = G__11790__3;
      G__11790.cljs$core$IFn$_invoke$arity$variadic = G__11790__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11790;
    }();
  };
  var juxt__4 = function() {
    var G__11793__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__11794 = null;
          var G__11794__0 = function() {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11774_SHARP_, p2__11775_SHARP_) {
                return cljs.core.conj.call(null, p1__11774_SHARP_, p2__11775_SHARP_.call(null));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11794__1 = function(x) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11776_SHARP_, p2__11777_SHARP_) {
                return cljs.core.conj.call(null, p1__11776_SHARP_, p2__11777_SHARP_.call(null, x));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11794__2 = function(x, y) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11778_SHARP_, p2__11779_SHARP_) {
                return cljs.core.conj.call(null, p1__11778_SHARP_, p2__11779_SHARP_.call(null, x, y));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11794__3 = function(x, y, z) {
            return cljs.core.reduce.call(null, function(fs__$1) {
              return function(p1__11780_SHARP_, p2__11781_SHARP_) {
                return cljs.core.conj.call(null, p1__11780_SHARP_, p2__11781_SHARP_.call(null, x, y, z));
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__11794__4 = function() {
            var G__11795__delegate = function(x, y, z, args) {
              return cljs.core.reduce.call(null, function(fs__$1) {
                return function(p1__11782_SHARP_, p2__11783_SHARP_) {
                  return cljs.core.conj.call(null, p1__11782_SHARP_, cljs.core.apply.call(null, p2__11783_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__11795 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
              }
              return G__11795__delegate.call(this, x, y, z, args);
            };
            G__11795.cljs$lang$maxFixedArity = 3;
            G__11795.cljs$lang$applyTo = function(arglist__11796) {
              var x = cljs.core.first(arglist__11796);
              arglist__11796 = cljs.core.next(arglist__11796);
              var y = cljs.core.first(arglist__11796);
              arglist__11796 = cljs.core.next(arglist__11796);
              var z = cljs.core.first(arglist__11796);
              var args = cljs.core.rest(arglist__11796);
              return G__11795__delegate(x, y, z, args);
            };
            G__11795.cljs$core$IFn$_invoke$arity$variadic = G__11795__delegate;
            return G__11795;
          }();
          G__11794 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__11794__0.call(this);
              case 1:
                return G__11794__1.call(this, x);
              case 2:
                return G__11794__2.call(this, x, y);
              case 3:
                return G__11794__3.call(this, x, y, z);
              default:
                return G__11794__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3));
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11794.cljs$lang$maxFixedArity = 3;
          G__11794.cljs$lang$applyTo = G__11794__4.cljs$lang$applyTo;
          G__11794.cljs$core$IFn$_invoke$arity$0 = G__11794__0;
          G__11794.cljs$core$IFn$_invoke$arity$1 = G__11794__1;
          G__11794.cljs$core$IFn$_invoke$arity$2 = G__11794__2;
          G__11794.cljs$core$IFn$_invoke$arity$3 = G__11794__3;
          G__11794.cljs$core$IFn$_invoke$arity$variadic = G__11794__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__11794;
        }();
      }(fs__$1);
    };
    var G__11793 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
      }
      return G__11793__delegate.call(this, f, g, h, fs);
    };
    G__11793.cljs$lang$maxFixedArity = 3;
    G__11793.cljs$lang$applyTo = function(arglist__11797) {
      var f = cljs.core.first(arglist__11797);
      arglist__11797 = cljs.core.next(arglist__11797);
      var g = cljs.core.first(arglist__11797);
      arglist__11797 = cljs.core.next(arglist__11797);
      var h = cljs.core.first(arglist__11797);
      var fs = cljs.core.rest(arglist__11797);
      return G__11793__delegate(f, g, h, fs);
    };
    G__11793.cljs$core$IFn$_invoke$arity$variadic = G__11793__delegate;
    return G__11793;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll)) {
        var G__11798 = cljs.core.next.call(null, coll);
        coll = G__11798;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq.call(null, coll) && n > 0) {
        var G__11799 = n - 1;
        var G__11800 = cljs.core.next.call(null, coll);
        n = G__11799;
        coll = G__11800;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count.call(null, matches) === 1) {
        return cljs.core.first.call(null, matches);
      } else {
        return cljs.core.vec.call(null, matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11802 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__11802, 0, null);
  var flags = cljs.core.nth.call(null, vec__11802, 1, null);
  var pattern = cljs.core.nth.call(null, vec__11802, 2, null);
  return new RegExp(pattern, flags);
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_11804 = cljs.core._STAR_print_level_STAR_;
  try {
    cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write.call(null, writer, "#");
    } else {
      cljs.core._write.call(null, writer, begin);
      if (cljs.core.seq.call(null, coll)) {
        print_one.call(null, cljs.core.first.call(null, coll), writer, opts);
      } else {
      }
      var coll_11805__$1 = cljs.core.next.call(null, coll);
      var n_11806 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
      while (true) {
        if (coll_11805__$1 && (n_11806 == null || !(n_11806 === 0))) {
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, cljs.core.first.call(null, coll_11805__$1), writer, opts);
          var G__11807 = cljs.core.next.call(null, coll_11805__$1);
          var G__11808 = n_11806 - 1;
          coll_11805__$1 = G__11807;
          n_11806 = G__11808;
          continue;
        } else {
          if (cljs.core.seq.call(null, coll_11805__$1) && n_11806 === 0) {
            cljs.core._write.call(null, writer, sep);
            cljs.core._write.call(null, writer, "...");
          } else {
          }
        }
        break;
      }
      return cljs.core._write.call(null, writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11804;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__11813 = cljs.core.seq.call(null, ss);
    var chunk__11814 = null;
    var count__11815 = 0;
    var i__11816 = 0;
    while (true) {
      if (i__11816 < count__11815) {
        var s = cljs.core._nth.call(null, chunk__11814, i__11816);
        cljs.core._write.call(null, writer, s);
        var G__11817 = seq__11813;
        var G__11818 = chunk__11814;
        var G__11819 = count__11815;
        var G__11820 = i__11816 + 1;
        seq__11813 = G__11817;
        chunk__11814 = G__11818;
        count__11815 = G__11819;
        i__11816 = G__11820;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__11813);
        if (temp__4126__auto__) {
          var seq__11813__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11813__$1)) {
            var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11813__$1);
            var G__11821 = cljs.core.chunk_rest.call(null, seq__11813__$1);
            var G__11822 = c__4408__auto__;
            var G__11823 = cljs.core.count.call(null, c__4408__auto__);
            var G__11824 = 0;
            seq__11813 = G__11821;
            chunk__11814 = G__11822;
            count__11815 = G__11823;
            i__11816 = G__11824;
            continue;
          } else {
            var s = cljs.core.first.call(null, seq__11813__$1);
            cljs.core._write.call(null, writer, s);
            var G__11825 = cljs.core.next.call(null, seq__11813__$1);
            var G__11826 = null;
            var G__11827 = 0;
            var G__11828 = 0;
            seq__11813 = G__11825;
            chunk__11814 = G__11826;
            count__11815 = G__11827;
            i__11816 = G__11828;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__11829) {
    var writer = cljs.core.first(arglist__11829);
    var ss = cljs.core.rest(arglist__11829);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj11831 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj11831;
}();
cljs.core.quote_string = function quote_string(s) {
  return'"' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })) + '"';
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write.call(null, writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3627__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3627__auto__)) {
          var and__3627__auto____$1 = function() {
            var G__11837 = obj;
            if (G__11837) {
              var bit__4302__auto__ = G__11837.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4302__auto__ || G__11837.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__11837.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11837);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__11837);
            }
          }();
          if (and__3627__auto____$1) {
            return cljs.core.meta.call(null, obj);
          } else {
            return and__3627__auto____$1;
          }
        } else {
          return and__3627__auto__;
        }
      }())) {
        cljs.core._write.call(null, writer, "^");
        pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
        cljs.core._write.call(null, writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write.call(null, writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__11838 = obj;
            if (G__11838) {
              var bit__4295__auto__ = G__11838.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4295__auto__ || G__11838.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return cljs.core._pr_writer.call(null, obj, writer, opts);
          } else {
            if (cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
              return cljs.core._write.call(null, writer, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
            } else {
              if (cljs.core.object_QMARK_.call(null, obj)) {
                cljs.core._write.call(null, writer, "#js ");
                return cljs.core.print_map.call(null, cljs.core.map.call(null, function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), obj[k]], null);
                }, cljs.core.js_keys.call(null, obj)), pr_writer, writer, opts);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (goog.isString(obj)) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj));
                    } else {
                      return cljs.core._write.call(null, writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                          while (true) {
                            if (cljs.core.count.call(null, ns) < len) {
                              var G__11840 = "0" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
                              ns = G__11840;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"');
                      } else {
                        if (cljs.core.regexp_QMARK_.call(null, obj)) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"');
                        } else {
                          if (function() {
                            var G__11839 = obj;
                            if (G__11839) {
                              var bit__4302__auto__ = G__11839.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4302__auto__ || G__11839.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__11839.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11839);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__11839);
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts);
                          } else {
                            return cljs.core.write_all.call(null, writer, "#\x3c", "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "\x3e");
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__11845 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__11846 = null;
  var count__11847 = 0;
  var i__11848 = 0;
  while (true) {
    if (i__11848 < count__11847) {
      var obj = cljs.core._nth.call(null, chunk__11846, i__11848);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__11849 = seq__11845;
      var G__11850 = chunk__11846;
      var G__11851 = count__11847;
      var G__11852 = i__11848 + 1;
      seq__11845 = G__11849;
      chunk__11846 = G__11850;
      count__11847 = G__11851;
      i__11848 = G__11852;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__11845);
      if (temp__4126__auto__) {
        var seq__11845__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11845__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__11845__$1);
          var G__11853 = cljs.core.chunk_rest.call(null, seq__11845__$1);
          var G__11854 = c__4408__auto__;
          var G__11855 = cljs.core.count.call(null, c__4408__auto__);
          var G__11856 = 0;
          seq__11845 = G__11853;
          chunk__11846 = G__11854;
          count__11847 = G__11855;
          i__11848 = G__11856;
          continue;
        } else {
          var obj = cljs.core.first.call(null, seq__11845__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__11857 = cljs.core.next.call(null, seq__11845__$1);
          var G__11858 = null;
          var G__11859 = 0;
          var G__11860 = 0;
          seq__11845 = G__11857;
          chunk__11846 = G__11858;
          count__11847 = G__11859;
          i__11848 = G__11860;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "";
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts.call(null, objs, opts));
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_.call(null, objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if (cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush.call(null);
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11861) {
    var objs = cljs.core.seq(arglist__11861);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11862) {
    var objs = cljs.core.seq(arglist__11862);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11863) {
    var objs = cljs.core.seq(arglist__11863);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11864) {
    var objs = cljs.core.seq(arglist__11864);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11865) {
    var objs = cljs.core.seq(arglist__11865);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11866) {
    var objs = cljs.core.seq(arglist__11866);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11867) {
    var objs = cljs.core.seq(arglist__11867);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline.call(null, cljs.core.pr_opts.call(null));
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11868) {
    var objs = cljs.core.seq(arglist__11868);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, function(e, w, opts__$1) {
    print_one.call(null, cljs.core.key.call(null, e), w, opts__$1);
    cljs.core._write.call(null, w, " ");
    return print_one.call(null, cljs.core.val.call(null, e), w, opts__$1);
  }, "{", ", ", "}", opts, cljs.core.seq.call(null, m));
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, a__$1.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map.call(null, coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols.call(null, x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__11869) {
    var iref = cljs.core.first(arglist__11869);
    arglist__11869 = cljs.core.next(arglist__11869);
    var f = cljs.core.first(arglist__11869);
    var args = cljs.core.rest(arglist__11869);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f);
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key);
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0);
    } else {
    }
    return cljs.core.symbol.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc)));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Delay");
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not.call(null, self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d);
};
cljs.core.preserving_reduced = function preserving_reduced(f1) {
  return function(p1__11870_SHARP_, p2__11871_SHARP_) {
    var ret = f1.call(null, p1__11870_SHARP_, p2__11871_SHARP_);
    if (cljs.core.reduced_QMARK_.call(null, ret)) {
      return cljs.core.reduced.call(null, ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(f1) {
  var rf1 = cljs.core.preserving_reduced.call(null, f1);
  return function(rf1) {
    return function() {
      var G__11872 = null;
      var G__11872__0 = function() {
        return f1.call(null);
      };
      var G__11872__1 = function(result) {
        return f1.call(null, result);
      };
      var G__11872__2 = function(result, input) {
        return cljs.core.reduce.call(null, rf1, result, input);
      };
      G__11872 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11872__0.call(this);
          case 1:
            return G__11872__1.call(this, result);
          case 2:
            return G__11872__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11872.cljs$core$IFn$_invoke$arity$0 = G__11872__0;
      G__11872.cljs$core$IFn$_invoke$arity$1 = G__11872__1;
      G__11872.cljs$core$IFn$_invoke$arity$2 = G__11872__2;
      return G__11872;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(f1) {
      var pa = cljs.core.atom.call(null, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__11873 = null;
          var G__11873__0 = function() {
            return f1.call(null);
          };
          var G__11873__1 = function(result) {
            return f1.call(null, result);
          };
          var G__11873__2 = function(result, input) {
            var prior = cljs.core.deref.call(null, pa);
            cljs.core.reset_BANG_.call(null, pa, input);
            if (cljs.core._EQ_.call(null, prior, input)) {
              return result;
            } else {
              return f1.call(null, result, input);
            }
          };
          G__11873 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__11873__0.call(this);
              case 1:
                return G__11873__1.call(this, result);
              case 2:
                return G__11873__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__11873.cljs$core$IFn$_invoke$arity$0 = G__11873__0;
          G__11873.cljs$core$IFn$_invoke$arity$1 = G__11873__1;
          G__11873.cljs$core$IFn$_invoke$arity$2 = G__11873__2;
          return G__11873;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.call(null, dedupe.call(null), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.call(null, function(_) {
      return cljs.core.rand.call(null) < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Iteration = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Iteration.cljs$lang$type = true;
cljs.core.Iteration.cljs$lang$ctorStr = "cljs.core/Iteration";
cljs.core.Iteration.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/Iteration");
};
cljs.core.Iteration.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Iteration.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.call(null, self__.xform, f, init, self__.coll);
};
cljs.core.Iteration.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq.call(null, cljs.core.sequence.call(null, self__.xform, self__.coll));
};
cljs.core.__GT_Iteration = function __GT_Iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.iteration = function iteration(xform, coll) {
  return new cljs.core.Iteration(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.call(null, function(p1__11875_SHARP_, p2__11874_SHARP_) {
    return proc.call(null, p2__11874_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj11877 = {};
  return obj11877;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__11879 = k;
    if (G__11879) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__11879.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__11879.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11879);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11879);
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.call(null, k);
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__11893 = x;
      if (G__11893) {
        var bit__4302__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3639__auto__ = bit__4302__auto__;
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return G__11893.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__11893.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11893);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__11893);
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(x);
        } else {
          if (cljs.core.map_QMARK_.call(null, x)) {
            var m = function() {
              var obj11895 = {};
              return obj11895;
            }();
            var seq__11896_11906 = cljs.core.seq.call(null, x);
            var chunk__11897_11907 = null;
            var count__11898_11908 = 0;
            var i__11899_11909 = 0;
            while (true) {
              if (i__11899_11909 < count__11898_11908) {
                var vec__11900_11910 = cljs.core._nth.call(null, chunk__11897_11907, i__11899_11909);
                var k_11911 = cljs.core.nth.call(null, vec__11900_11910, 0, null);
                var v_11912 = cljs.core.nth.call(null, vec__11900_11910, 1, null);
                m[cljs.core.key__GT_js.call(null, k_11911)] = clj__GT_js.call(null, v_11912);
                var G__11913 = seq__11896_11906;
                var G__11914 = chunk__11897_11907;
                var G__11915 = count__11898_11908;
                var G__11916 = i__11899_11909 + 1;
                seq__11896_11906 = G__11913;
                chunk__11897_11907 = G__11914;
                count__11898_11908 = G__11915;
                i__11899_11909 = G__11916;
                continue;
              } else {
                var temp__4126__auto___11917 = cljs.core.seq.call(null, seq__11896_11906);
                if (temp__4126__auto___11917) {
                  var seq__11896_11918__$1 = temp__4126__auto___11917;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__11896_11918__$1)) {
                    var c__4408__auto___11919 = cljs.core.chunk_first.call(null, seq__11896_11918__$1);
                    var G__11920 = cljs.core.chunk_rest.call(null, seq__11896_11918__$1);
                    var G__11921 = c__4408__auto___11919;
                    var G__11922 = cljs.core.count.call(null, c__4408__auto___11919);
                    var G__11923 = 0;
                    seq__11896_11906 = G__11920;
                    chunk__11897_11907 = G__11921;
                    count__11898_11908 = G__11922;
                    i__11899_11909 = G__11923;
                    continue;
                  } else {
                    var vec__11901_11924 = cljs.core.first.call(null, seq__11896_11918__$1);
                    var k_11925 = cljs.core.nth.call(null, vec__11901_11924, 0, null);
                    var v_11926 = cljs.core.nth.call(null, vec__11901_11924, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_11925)] = clj__GT_js.call(null, v_11926);
                    var G__11927 = cljs.core.next.call(null, seq__11896_11918__$1);
                    var G__11928 = null;
                    var G__11929 = 0;
                    var G__11930 = 0;
                    seq__11896_11906 = G__11927;
                    chunk__11897_11907 = G__11928;
                    count__11898_11908 = G__11929;
                    i__11899_11909 = G__11930;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_.call(null, x)) {
              var arr = [];
              var seq__11902_11931 = cljs.core.seq.call(null, cljs.core.map.call(null, clj__GT_js, x));
              var chunk__11903_11932 = null;
              var count__11904_11933 = 0;
              var i__11905_11934 = 0;
              while (true) {
                if (i__11905_11934 < count__11904_11933) {
                  var x_11935__$1 = cljs.core._nth.call(null, chunk__11903_11932, i__11905_11934);
                  arr.push(x_11935__$1);
                  var G__11936 = seq__11902_11931;
                  var G__11937 = chunk__11903_11932;
                  var G__11938 = count__11904_11933;
                  var G__11939 = i__11905_11934 + 1;
                  seq__11902_11931 = G__11936;
                  chunk__11903_11932 = G__11937;
                  count__11904_11933 = G__11938;
                  i__11905_11934 = G__11939;
                  continue;
                } else {
                  var temp__4126__auto___11940 = cljs.core.seq.call(null, seq__11902_11931);
                  if (temp__4126__auto___11940) {
                    var seq__11902_11941__$1 = temp__4126__auto___11940;
                    if (cljs.core.chunked_seq_QMARK_.call(null, seq__11902_11941__$1)) {
                      var c__4408__auto___11942 = cljs.core.chunk_first.call(null, seq__11902_11941__$1);
                      var G__11943 = cljs.core.chunk_rest.call(null, seq__11902_11941__$1);
                      var G__11944 = c__4408__auto___11942;
                      var G__11945 = cljs.core.count.call(null, c__4408__auto___11942);
                      var G__11946 = 0;
                      seq__11902_11931 = G__11943;
                      chunk__11903_11932 = G__11944;
                      count__11904_11933 = G__11945;
                      i__11905_11934 = G__11946;
                      continue;
                    } else {
                      var x_11947__$1 = cljs.core.first.call(null, seq__11902_11941__$1);
                      arr.push(x_11947__$1);
                      var G__11948 = cljs.core.next.call(null, seq__11902_11941__$1);
                      var G__11949 = null;
                      var G__11950 = 0;
                      var G__11951 = 0;
                      seq__11902_11931 = G__11948;
                      chunk__11903_11932 = G__11949;
                      count__11904_11933 = G__11950;
                      i__11905_11934 = G__11951;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj11953 = {};
  return obj11953;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null));
  };
  var js__GT_clj__2 = function() {
    var G__11974__delegate = function(x, opts) {
      if (function() {
        var G__11964 = x;
        if (G__11964) {
          var bit__4302__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3639__auto__ = bit__4302__auto__;
            if (cljs.core.truth_(or__3639__auto__)) {
              return or__3639__auto__;
            } else {
              return G__11964.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__11964.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11964);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__11964);
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq.call(null, opts)) {
          var map__11965 = opts;
          var map__11965__$1 = cljs.core.seq_QMARK_.call(null, map__11965) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11965) : map__11965;
          var keywordize_keys = cljs.core.get.call(null, map__11965__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__11965, map__11965__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if (cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1));
              } else {
                if (cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1));
                } else {
                  if (x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1));
                  } else {
                    if (cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__4377__auto__ = function(map__11965, map__11965__$1, keywordize_keys, keyfn) {
                          return function iter__11970(s__11971) {
                            return new cljs.core.LazySeq(null, function(map__11965, map__11965__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__11971__$1 = s__11971;
                                while (true) {
                                  var temp__4126__auto__ = cljs.core.seq.call(null, s__11971__$1);
                                  if (temp__4126__auto__) {
                                    var s__11971__$2 = temp__4126__auto__;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__11971__$2)) {
                                      var c__4375__auto__ = cljs.core.chunk_first.call(null, s__11971__$2);
                                      var size__4376__auto__ = cljs.core.count.call(null, c__4375__auto__);
                                      var b__11973 = cljs.core.chunk_buffer.call(null, size__4376__auto__);
                                      if (function() {
                                        var i__11972 = 0;
                                        while (true) {
                                          if (i__11972 < size__4376__auto__) {
                                            var k = cljs.core._nth.call(null, c__4375__auto__, i__11972);
                                            cljs.core.chunk_append.call(null, b__11973, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null));
                                            var G__11975 = i__11972 + 1;
                                            i__11972 = G__11975;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11973), iter__11970.call(null, cljs.core.chunk_rest.call(null, s__11971__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11973), null);
                                      }
                                    } else {
                                      var k = cljs.core.first.call(null, s__11971__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.call(null, k), thisfn.call(null, x__$1[k])], null), iter__11970.call(null, cljs.core.rest.call(null, s__11971__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(map__11965, map__11965__$1, keywordize_keys, keyfn), null, null);
                          };
                        }(map__11965, map__11965__$1, keywordize_keys, keyfn);
                        return iter__4377__auto__.call(null, cljs.core.js_keys.call(null, x__$1));
                      }());
                    } else {
                      return x__$1;
                    }
                  }
                }
              }
            };
          }(map__11965, map__11965__$1, keywordize_keys, keyfn);
          return f.call(null, x);
        } else {
          return null;
        }
      }
    };
    var G__11974 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11974__delegate.call(this, x, opts);
    };
    G__11974.cljs$lang$maxFixedArity = 1;
    G__11974.cljs$lang$applyTo = function(arglist__11976) {
      var x = cljs.core.first(arglist__11976);
      var opts = cljs.core.rest(arglist__11976);
      return G__11974__delegate(x, opts);
    };
    G__11974.cljs$core$IFn$_invoke$arity$variadic = G__11974__delegate;
    return G__11974;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function(mem) {
    return function() {
      var G__11977__delegate = function(args) {
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.call(null, f, args);
          cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__11977 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
        }
        return G__11977__delegate.call(this, args);
      };
      G__11977.cljs$lang$maxFixedArity = 0;
      G__11977.cljs$lang$applyTo = function(arglist__11978) {
        var args = cljs.core.seq(arglist__11978);
        return G__11977__delegate(args);
      };
      G__11977.cljs$core$IFn$_invoke$arity$variadic = G__11977__delegate;
      return G__11977;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = f.call(null);
      if (cljs.core.fn_QMARK_.call(null, ret)) {
        var G__11979 = ret;
        f = G__11979;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__11980__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args);
      });
    };
    var G__11980 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
      }
      return G__11980__delegate.call(this, f, args);
    };
    G__11980.cljs$lang$maxFixedArity = 1;
    G__11980.cljs$lang$applyTo = function(arglist__11981) {
      var f = cljs.core.first(arglist__11981);
      var args = cljs.core.rest(arglist__11981);
      return G__11980__delegate(f, args);
    };
    G__11980.cljs$core$IFn$_invoke$arity$variadic = G__11980__delegate;
    return G__11980;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1));
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1);
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc_BANG_.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__11982) {
    var f = cljs.core.first(arglist__11982);
    var args = cljs.core.rest(arglist__11982);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3639__auto__ = cljs.core._EQ_.call(null, child, parent);
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      var or__3639__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3639__auto____$1) {
        return or__3639__auto____$1;
      } else {
        var and__3627__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if (and__3627__auto__) {
          var and__3627__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if (and__3627__auto____$1) {
            var and__3627__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if (and__3627__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count.call(null, parent)) {
                  return ret;
                } else {
                  var G__11983 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__11984 = i + 1;
                  ret = G__11983;
                  i = G__11984;
                  continue;
                }
                break;
              }
            } else {
              return and__3627__auto____$2;
            }
          } else {
            return and__3627__auto____$1;
          }
        } else {
          return and__3627__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.call(null, tag, parent)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null)))));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))));
          };
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)));
      };
    }(tp, td, ta);
    var or__3639__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "already has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "as ancestor");
      } else {
      }
      if (cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error("Cyclic derivation:" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent) + "has" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag) + "as ancestor");
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__11985_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__11985_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__11985_SHARP_), cljs.core.second.call(null, p1__11985_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if (cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__11986_SHARP_, p2__11987_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.derive, p1__11986_SHARP_, p2__11987_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3639__auto__ = cljs.core.truth_(function() {
    var and__3627__auto__ = xprefs;
    if (cljs.core.truth_(and__3627__auto__)) {
      return xprefs.call(null, y);
    } else {
      return and__3627__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3639__auto__)) {
    return or__3639__auto__;
  } else {
    var or__3639__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while (true) {
        if (cljs.core.count.call(null, ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          } else {
          }
          var G__11988 = cljs.core.rest.call(null, ps);
          ps = G__11988;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3639__auto____$1)) {
      return or__3639__auto____$1;
    } else {
      var or__3639__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while (true) {
          if (cljs.core.count.call(null, ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            } else {
            }
            var G__11989 = cljs.core.rest.call(null, ps);
            ps = G__11989;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3639__auto____$2)) {
        return or__3639__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3639__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if (cljs.core.truth_(or__3639__auto__)) {
    return or__3639__auto__;
  } else {
    return cljs.core.isa_QMARK_.call(null, x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__11992) {
    var vec__11993 = p__11992;
    var k = cljs.core.nth.call(null, vec__11993, 0, null);
    var _ = cljs.core.nth.call(null, vec__11993, 1, null);
    var e = vec__11993;
    if (cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3639__auto__ = be == null;
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      } else {
        throw new Error("Multiple methods in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' match dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val) + " -\x3e " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(k) + " and " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, be2)) + ", and neither is preferred");
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry);
    } else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj11995 = {};
  return obj11995;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._reset[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._reset["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._add_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._add_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._remove_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._remove_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._prefer_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._get_method[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._get_method["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._methods[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._methods["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3627__auto__ = mf;
    if (and__3627__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4275__auto__ = mf == null ? null : mf;
    return function() {
      var or__3639__auto__ = cljs.core._prefers[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core._prefers["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error("No method in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + "' for dispatch value: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 256;
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/MultiFn");
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error("Preference conflict in multimethod '" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name) + "': " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y) + " is already preferred to " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x));
  } else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11997 = null;
  var G__11997__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a);
  };
  var G__11997__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b);
  };
  var G__11997__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c);
  };
  var G__11997__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d);
  };
  var G__11997__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e);
  };
  var G__11997__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f);
  };
  var G__11997__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__11997__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__11997__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11997__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11997__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11997__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11997__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11997__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11997__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11997__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11997__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11997__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11997__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11997__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11997__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
    }
    return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__11997 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 2:
        return G__11997__2.call(this, self__, a);
      case 3:
        return G__11997__3.call(this, self__, a, b);
      case 4:
        return G__11997__4.call(this, self__, a, b, c);
      case 5:
        return G__11997__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11997__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11997__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11997__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11997__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11997__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11997__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11997__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11997__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11997__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11997__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11997__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11997__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11997__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11997__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11997__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11997__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11997__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11997.cljs$core$IFn$_invoke$arity$2 = G__11997__2;
  G__11997.cljs$core$IFn$_invoke$arity$3 = G__11997__3;
  G__11997.cljs$core$IFn$_invoke$arity$4 = G__11997__4;
  G__11997.cljs$core$IFn$_invoke$arity$5 = G__11997__5;
  G__11997.cljs$core$IFn$_invoke$arity$6 = G__11997__6;
  G__11997.cljs$core$IFn$_invoke$arity$7 = G__11997__7;
  G__11997.cljs$core$IFn$_invoke$arity$8 = G__11997__8;
  G__11997.cljs$core$IFn$_invoke$arity$9 = G__11997__9;
  G__11997.cljs$core$IFn$_invoke$arity$10 = G__11997__10;
  G__11997.cljs$core$IFn$_invoke$arity$11 = G__11997__11;
  G__11997.cljs$core$IFn$_invoke$arity$12 = G__11997__12;
  G__11997.cljs$core$IFn$_invoke$arity$13 = G__11997__13;
  G__11997.cljs$core$IFn$_invoke$arity$14 = G__11997__14;
  G__11997.cljs$core$IFn$_invoke$arity$15 = G__11997__15;
  G__11997.cljs$core$IFn$_invoke$arity$16 = G__11997__16;
  G__11997.cljs$core$IFn$_invoke$arity$17 = G__11997__17;
  G__11997.cljs$core$IFn$_invoke$arity$18 = G__11997__18;
  G__11997.cljs$core$IFn$_invoke$arity$19 = G__11997__19;
  G__11997.cljs$core$IFn$_invoke$arity$20 = G__11997__20;
  G__11997.cljs$core$IFn$_invoke$arity$21 = G__11997__21;
  G__11997.cljs$core$IFn$_invoke$arity$22 = G__11997__22;
  return G__11997;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args11996) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args11996)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.call(null, self__.dispatch_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error.call(null, self__.name, dispatch_val);
  }
  return cljs.core.apply.call(null, target_fn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core/UUID");
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1));
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, '#uuid "' + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid) + '"');
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4218__auto__, writer__4219__auto__, opts__4220__auto__) {
  return cljs.core._write.call(null, writer__4219__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null);
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause);
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.call(null, x, y))) {
      return-1;
    } else {
      if (cljs.core.truth_(pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, 
  "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, 
  null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj15274 = {};
  return obj15274;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3627__auto__ = port;
    if (and__3627__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4275__auto__ = port == null ? null : port;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj15276 = {};
  return obj15276;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3627__auto__ = port;
    if (and__3627__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4275__auto__ = port == null ? null : port;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj15278 = {};
  return obj15278;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3627__auto__ = chan;
    if (and__3627__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4275__auto__ = chan == null ? null : chan;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3627__auto__ = chan;
    if (and__3627__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4275__auto__ = chan == null ? null : chan;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj15280 = {};
  return obj15280;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3627__auto__ = h;
    if (and__3627__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4275__auto__ = h == null ? null : h;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3627__auto__ = h;
    if (and__3627__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4275__auto__ = h == null ? null : h;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj15282 = {};
  return obj15282;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3627__auto__ = b;
    if (and__3627__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4275__auto__ = b == null ? null : b;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3627__auto__ = b;
    if (and__3627__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4275__auto__ = b == null ? null : b;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3627__auto__ = b;
    if (and__3627__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4275__auto__ = b == null ? null : b;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null))))));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj15284 = {};
  return obj15284;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__15285 = cnt + 1;
      cnt = G__15285;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4508__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4508__auto__) {
      var v_15286 = this$.pop();
      if (keep_QMARK_.call(null, v_15286)) {
        this$.unshift(v_15286);
      } else {
      }
      var G__15287 = x + 1;
      x = G__15287;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: Can't create a ring buffer of size 0\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0))));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_15288 = 0;
  while (true) {
    var m_15289 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_15289 == null) {
    } else {
      m_15289.call(null);
      if (count_15288 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__15290 = count_15288 + 1;
        count_15288 = G__15290;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3627__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3627__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3627__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t15294 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t15294 = function(val, box, meta15295) {
      this.val = val;
      this.box = box;
      this.meta15295 = meta15295;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t15294.cljs$lang$type = true;
    cljs.core.async.impl.channels.t15294.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t15294";
    cljs.core.async.impl.channels.t15294.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.channels/t15294");
    };
    cljs.core.async.impl.channels.t15294.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t15294.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15296) {
      var self__ = this;
      var _15296__$1 = this;
      return self__.meta15295;
    };
    cljs.core.async.impl.channels.t15294.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15296, meta15295__$1) {
      var self__ = this;
      var _15296__$1 = this;
      return new cljs.core.async.impl.channels.t15294(self__.val, self__.box, meta15295__$1);
    };
    cljs.core.async.impl.channels.__GT_t15294 = function __GT_t15294(val__$1, box__$1, meta15295) {
      return new cljs.core.async.impl.channels.t15294(val__$1, box__$1, meta15295);
    };
  }
  return new cljs.core.async.impl.channels.t15294(val, box, null);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4218__auto__, writer__4219__auto__, opts__4220__auto__) {
  return cljs.core._write.call(null, writer__4219__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj15298 = {};
  return obj15298;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = self__.buf;
      if (cljs.core.truth_(and__3627__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3627__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_15299 = self__.takes.pop();
      if (taker_15299 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_15299)) {
          var take_cb_15300 = cljs.core.async.impl.protocols.commit.call(null, taker_15299);
          var val_15301 = cljs.core.truth_(function() {
            var and__3627__auto__ = self__.buf;
            if (cljs.core.truth_(and__3627__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3627__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_15300, val_15301, taker_15299, this$__$1) {
            return function() {
              return take_cb_15300.call(null, val_15301);
            };
          }(take_cb_15300, val_15301, taker_15299, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_15302 = self__.puts.pop();
          if (putter_15302 == null) {
          } else {
            var put_handler_15303 = putter_15302.handler;
            var val_15304 = putter_15302.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_15303)) {
              var put_cb_15305 = cljs.core.async.impl.protocols.commit.call(null, put_handler_15303);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_15305, put_handler_15303, val_15304, putter_15302, _, retval, this$__$1) {
                return function() {
                  return put_cb_15305.call(null, true);
                };
              }(put_cb_15305, put_handler_15303, val_15304, putter_15302, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_15304))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3627__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3627__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3627__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3627__auto__ = self__.buf;
              if (cljs.core.truth_(and__3627__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3627__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending takes are allowed on a single channel.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, 
            "takes", "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error("Assert failed: Can't put nil in on a channel\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null))))));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = self__.buf;
      if (cljs.core.truth_(and__3627__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3627__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_15306 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_15306)) {
            var take_cb_15307 = cljs.core.async.impl.protocols.commit.call(null, taker_15306);
            var val_15308__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_15307, val_15308__$1, taker_15306, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_15307.call(null, val_15308__$1);
              };
            }(take_cb_15307, val_15308__$1, taker_15306, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("No more than " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) + " pending puts are allowed on a single channel. Consider using a windowed buffer.") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null)))));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_15309 = self__.puts.pop();
    if (putter_15309 == null) {
    } else {
      var put_handler_15310 = putter_15309.handler;
      var val_15311 = putter_15309.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_15310)) {
        var put_cb_15312 = cljs.core.async.impl.protocols.commit.call(null, put_handler_15310);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_15312, put_handler_15310, val_15311, putter_15309, this$__$1) {
          return function() {
            return put_cb_15312.call(null, true);
          };
        }(put_cb_15312, put_handler_15310, val_15311, putter_15309, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3639__auto__ = exh;
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__15317 = null;
          var G__15317__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e15315) {
              var t = e15315;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__15317__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e15316) {
              var t = e15316;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__15317 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__15317__1.call(this, buf__$1);
              case 2:
                return G__15317__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15317.cljs$core$IFn$_invoke$arity$1 = G__15317__1;
          G__15317.cljs$core$IFn$_invoke$arity$2 = G__15317__2;
          return G__15317;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t15234 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t15234 = function(f, fn_handler, meta15235) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta15235 = meta15235;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t15234.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t15234.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t15234";
    cljs.core.async.impl.ioc_helpers.t15234.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.ioc-helpers/t15234");
    };
    cljs.core.async.impl.ioc_helpers.t15234.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t15234.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t15234.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t15234.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15236) {
      var self__ = this;
      var _15236__$1 = this;
      return self__.meta15235;
    };
    cljs.core.async.impl.ioc_helpers.t15234.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15236, meta15235__$1) {
      var self__ = this;
      var _15236__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t15234(self__.f, self__.fn_handler, meta15235__$1);
    };
    cljs.core.async.impl.ioc_helpers.__GT_t15234 = function __GT_t15234(f__$1, fn_handler__$1, meta15235) {
      return new cljs.core.async.impl.ioc_helpers.t15234(f__$1, fn_handler__$1, meta15235);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t15234(f, fn_handler, null);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e15238) {
    if (e15238 instanceof Object) {
      var ex = e15238;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e15238;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_15241_15243 = state;
    statearr_15241_15243[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_15241_15243[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_15242_15244 = state;
    statearr_15242_15244[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_15242_15244[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_15247_15249 = state;
    statearr_15247_15249[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_15247_15249[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_15248_15250 = state;
    statearr_15248_15250[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_15248_15250[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 5) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4234__auto__, k__4235__auto__) {
  var self__ = this;
  var this__4234__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4234__auto____$1, k__4235__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4236__auto__, k15252, else__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  var G__15254 = k15252 instanceof cljs.core.Keyword ? k15252.fqn : null;
  switch(G__15254) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15252, else__4237__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4248__auto__, writer__4249__auto__, opts__4250__auto__) {
  var self__ = this;
  var this__4248__auto____$1 = this;
  var pr_pair__4251__auto__ = function(this__4248__auto____$1) {
    return function(keyval__4252__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4249__auto__, cljs.core.pr_writer, "", " ", "", opts__4250__auto__, keyval__4252__auto__);
    };
  }(this__4248__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4249__auto__, pr_pair__4251__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4250__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4232__auto__) {
  var self__ = this;
  var this__4232__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4228__auto__) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4238__auto__) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_imap.call(null, this__4229__auto____$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4230__auto__, other__4231__auto__) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3627__auto__ = other__4231__auto__;
    if (cljs.core.truth_(and__3627__auto__)) {
      return this__4230__auto____$1.constructor === other__4231__auto__.constructor && cljs.core.equiv_map.call(null, this__4230__auto____$1, other__4231__auto__);
    } else {
      return and__3627__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4243__auto__, k__4244__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4244__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4243__auto____$1), self__.__meta), k__4244__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4244__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4241__auto__, k__4242__auto__, G__15251) {
  var self__ = this;
  var this__4241__auto____$1 = this;
  var pred__15255 = cljs.core.keyword_identical_QMARK_;
  var expr__15256 = k__4242__auto__;
  if (cljs.core.truth_(pred__15255.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__15256))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__15251, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15255.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__15256))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__15251, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15255.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__15256))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__15251, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15255.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__15256))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__15251, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__15255.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__15256))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__15251, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4242__auto__, G__15251), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4246__auto__) {
  var self__ = this;
  var this__4246__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4233__auto__, G__15251) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__15251, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4239__auto__, entry__4240__auto__) {
  var self__ = this;
  var this__4239__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4240__auto__)) {
    return cljs.core._assoc.call(null, this__4239__auto____$1, cljs.core._nth.call(null, entry__4240__auto__, 0), cljs.core._nth.call(null, entry__4240__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4239__auto____$1, entry__4240__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4268__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4268__auto__, writer__4269__auto__) {
  return cljs.core._write.call(null, writer__4269__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__15253) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__15253), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__15253), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__15253), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__15253), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__15253), null, cljs.core.dissoc.call(null, G__15253, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)));
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_15260 = state;
  statearr_15260[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_15260;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3627__auto__ = exception;
      if (cljs.core.truth_(and__3627__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3627__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3627__auto__ = exception;
        if (cljs.core.truth_(and__3627__auto__)) {
          var and__3627__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3627__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3627__auto____$1;
          }
        } else {
          return and__3627__auto__;
        }
      }())) {
        var statearr_15266 = state;
        statearr_15266[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_15266[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_15266[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_15266[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_15266;
      } else {
        if (cljs.core.truth_(function() {
          var and__3627__auto__ = exception;
          if (cljs.core.truth_(and__3627__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3627__auto__;
          }
        }())) {
          var statearr_15267_15271 = state;
          statearr_15267_15271[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__15272 = state;
          state = G__15272;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3627__auto__ = exception;
            if (cljs.core.truth_(and__3627__auto__)) {
              var and__3627__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3627__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3627__auto____$1;
              }
            } else {
              return and__3627__auto__;
            }
          }())) {
            var statearr_15268 = state;
            statearr_15268[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_15268[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_15268;
          } else {
            if (cljs.core.truth_(function() {
              var and__3627__auto__ = cljs.core.not.call(null, exception);
              if (and__3627__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3627__auto__;
              }
            }())) {
              var statearr_15269 = state;
              statearr_15269[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_15269[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_15269;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_15270 = state;
                statearr_15270[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_15270[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_15270;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__15207 = level + 1;
        level = G__15207;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_15208 = 0;
    while (true) {
      if (i_15208 < arr.length) {
        arr[i_15208] = null;
        var G__15209 = i_15208 + 1;
        i_15208 = G__15209;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__15210 = x_SINGLEQUOTE_;
                x__$1 = G__15210;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__15211 = x__$1;
        var G__15212 = k;
        var G__15213 = level - 1;
        var G__15214 = update;
        x = G__15211;
        k = G__15212;
        level = G__15213;
        update = G__15214;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_15215 = self__.level + 1;
      while (true) {
        if (i_15215 <= new_level + 1) {
          update[i_15215] = self__.header;
          var G__15216 = i_15215 + 1;
          i_15215 = G__15216;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_15217 = 0;
    while (true) {
      if (i_15217 <= self__.level) {
        var links_15218 = update[i_15217].forward;
        if (links_15218[i_15217] === x__$1) {
          links_15218[i_15217] = x__$1.forward[i_15217];
          var G__15219 = i_15217 + 1;
          i_15217 = G__15219;
          continue;
        } else {
          var G__15220 = i_15217 + 1;
          i_15217 = G__15220;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__15221 = x_SINGLEQUOTE_;
              x__$1 = G__15221;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__15222 = nx;
        var G__15223 = level__$1 - 1;
        x = G__15222;
        level__$1 = G__15223;
        continue;
      } else {
        var G__15224 = x;
        var G__15225 = level__$1 - 1;
        x = G__15224;
        level__$1 = G__15225;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__15226 = x_SINGLEQUOTE_;
              x__$1 = G__15226;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__15227 = nx;
        var G__15228 = level__$1 - 1;
        x = G__15227;
        level__$1 = G__15228;
        continue;
      } else {
        var G__15229 = x;
        var G__15230 = level__$1 - 1;
        x = G__15229;
        level__$1 = G__15230;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3639__auto__ = cljs.core.truth_(function() {
    var and__3627__auto__ = me;
    if (cljs.core.truth_(and__3627__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3627__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3639__auto__)) {
    return or__3639__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3639__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3639__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t12122 !== "undefined") {
  } else {
    cljs.core.async.t12122 = function(f, fn_handler, meta12123) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta12123 = meta12123;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12122.cljs$lang$type = true;
    cljs.core.async.t12122.cljs$lang$ctorStr = "cljs.core.async/t12122";
    cljs.core.async.t12122.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t12122");
    };
    cljs.core.async.t12122.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12122.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t12122.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t12122.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12124) {
      var self__ = this;
      var _12124__$1 = this;
      return self__.meta12123;
    };
    cljs.core.async.t12122.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12124, meta12123__$1) {
      var self__ = this;
      var _12124__$1 = this;
      return new cljs.core.async.t12122(self__.f, self__.fn_handler, meta12123__$1);
    };
    cljs.core.async.__GT_t12122 = function __GT_t12122(f__$1, fn_handler__$1, meta12123) {
      return new cljs.core.async.t12122(f__$1, fn_handler__$1, meta12123);
    };
  }
  return new cljs.core.async.t12122(f, fn_handler, null);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__12126 = buff;
  if (G__12126) {
    var bit__4302__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3639__auto__ = bit__4302__auto__;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return G__12126.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__12126.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__12126);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__12126);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error("Assert failed: buffer must be supplied when transducer is\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null))));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_12127 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_12127);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_12127, ret) {
          return function() {
            return fn1.call(null, val_12127);
          };
        }(val_12127, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4508__auto___12128 = n;
  var x_12129 = 0;
  while (true) {
    if (x_12129 < n__4508__auto___12128) {
      a[x_12129] = 0;
      var G__12130 = x_12129 + 1;
      x_12129 = G__12130;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__12131 = i + 1;
      i = G__12131;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t12135 !== "undefined") {
  } else {
    cljs.core.async.t12135 = function(flag, alt_flag, meta12136) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta12136 = meta12136;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12135.cljs$lang$type = true;
    cljs.core.async.t12135.cljs$lang$ctorStr = "cljs.core.async/t12135";
    cljs.core.async.t12135.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
        return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t12135");
      };
    }(flag);
    cljs.core.async.t12135.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12135.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t12135.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t12135.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_12137) {
        var self__ = this;
        var _12137__$1 = this;
        return self__.meta12136;
      };
    }(flag);
    cljs.core.async.t12135.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_12137, meta12136__$1) {
        var self__ = this;
        var _12137__$1 = this;
        return new cljs.core.async.t12135(self__.flag, self__.alt_flag, meta12136__$1);
      };
    }(flag);
    cljs.core.async.__GT_t12135 = function(flag) {
      return function __GT_t12135(flag__$1, alt_flag__$1, meta12136) {
        return new cljs.core.async.t12135(flag__$1, alt_flag__$1, meta12136);
      };
    }(flag);
  }
  return new cljs.core.async.t12135(flag, alt_flag, null);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t12141 !== "undefined") {
  } else {
    cljs.core.async.t12141 = function(cb, flag, alt_handler, meta12142) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta12142 = meta12142;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t12141.cljs$lang$type = true;
    cljs.core.async.t12141.cljs$lang$ctorStr = "cljs.core.async/t12141";
    cljs.core.async.t12141.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t12141");
    };
    cljs.core.async.t12141.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t12141.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t12141.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t12141.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12143) {
      var self__ = this;
      var _12143__$1 = this;
      return self__.meta12142;
    };
    cljs.core.async.t12141.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12143, meta12142__$1) {
      var self__ = this;
      var _12143__$1 = this;
      return new cljs.core.async.t12141(self__.cb, self__.flag, self__.alt_handler, meta12142__$1);
    };
    cljs.core.async.__GT_t12141 = function __GT_t12141(cb__$1, flag__$1, alt_handler__$1, meta12142) {
      return new cljs.core.async.t12141(cb__$1, flag__$1, alt_handler__$1, meta12142);
    };
  }
  return new cljs.core.async.t12141(cb, flag, alt_handler, null);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__12144_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12144_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__12145_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__12145_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3639__auto__ = wport;
            if (cljs.core.truth_(or__3639__auto__)) {
              return or__3639__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__12146 = i + 1;
          i = G__12146;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3639__auto__ = ret;
  if (cljs.core.truth_(or__3639__auto__)) {
    return or__3639__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3627__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3627__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3627__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__12147) {
    var map__12149 = p__12147;
    var map__12149__$1 = cljs.core.seq_QMARK_.call(null, map__12149) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12149) : map__12149;
    var opts = map__12149__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__12147 = null;
    if (arguments.length > 1) {
      p__12147 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return alts_BANG___delegate.call(this, ports, p__12147);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__12150) {
    var ports = cljs.core.first(arglist__12150);
    var p__12147 = cljs.core.rest(arglist__12150);
    return alts_BANG___delegate(ports, p__12147);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6844__auto___12245 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___12245) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___12245) {
            return function(state_12221) {
              var state_val_12222 = state_12221[1];
              if (state_val_12222 === 7) {
                var inst_12217 = state_12221[2];
                var state_12221__$1 = state_12221;
                var statearr_12223_12246 = state_12221__$1;
                statearr_12223_12246[2] = inst_12217;
                statearr_12223_12246[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12222 === 1) {
                  var state_12221__$1 = state_12221;
                  var statearr_12224_12247 = state_12221__$1;
                  statearr_12224_12247[2] = null;
                  statearr_12224_12247[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12222 === 4) {
                    var inst_12200 = state_12221[7];
                    var inst_12200__$1 = state_12221[2];
                    var inst_12201 = inst_12200__$1 == null;
                    var state_12221__$1 = function() {
                      var statearr_12225 = state_12221;
                      statearr_12225[7] = inst_12200__$1;
                      return statearr_12225;
                    }();
                    if (cljs.core.truth_(inst_12201)) {
                      var statearr_12226_12248 = state_12221__$1;
                      statearr_12226_12248[1] = 5;
                    } else {
                      var statearr_12227_12249 = state_12221__$1;
                      statearr_12227_12249[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12222 === 13) {
                      var state_12221__$1 = state_12221;
                      var statearr_12228_12250 = state_12221__$1;
                      statearr_12228_12250[2] = null;
                      statearr_12228_12250[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12222 === 6) {
                        var inst_12200 = state_12221[7];
                        var state_12221__$1 = state_12221;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12221__$1, 11, to, inst_12200);
                      } else {
                        if (state_val_12222 === 3) {
                          var inst_12219 = state_12221[2];
                          var state_12221__$1 = state_12221;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12221__$1, inst_12219);
                        } else {
                          if (state_val_12222 === 12) {
                            var state_12221__$1 = state_12221;
                            var statearr_12229_12251 = state_12221__$1;
                            statearr_12229_12251[2] = null;
                            statearr_12229_12251[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12222 === 2) {
                              var state_12221__$1 = state_12221;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12221__$1, 4, from);
                            } else {
                              if (state_val_12222 === 11) {
                                var inst_12210 = state_12221[2];
                                var state_12221__$1 = state_12221;
                                if (cljs.core.truth_(inst_12210)) {
                                  var statearr_12230_12252 = state_12221__$1;
                                  statearr_12230_12252[1] = 12;
                                } else {
                                  var statearr_12231_12253 = state_12221__$1;
                                  statearr_12231_12253[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12222 === 9) {
                                  var state_12221__$1 = state_12221;
                                  var statearr_12232_12254 = state_12221__$1;
                                  statearr_12232_12254[2] = null;
                                  statearr_12232_12254[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12222 === 5) {
                                    var state_12221__$1 = state_12221;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_12233_12255 = state_12221__$1;
                                      statearr_12233_12255[1] = 8;
                                    } else {
                                      var statearr_12234_12256 = state_12221__$1;
                                      statearr_12234_12256[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12222 === 14) {
                                      var inst_12215 = state_12221[2];
                                      var state_12221__$1 = state_12221;
                                      var statearr_12235_12257 = state_12221__$1;
                                      statearr_12235_12257[2] = inst_12215;
                                      statearr_12235_12257[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12222 === 10) {
                                        var inst_12207 = state_12221[2];
                                        var state_12221__$1 = state_12221;
                                        var statearr_12236_12258 = state_12221__$1;
                                        statearr_12236_12258[2] = inst_12207;
                                        statearr_12236_12258[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12222 === 8) {
                                          var inst_12204 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_12221__$1 = state_12221;
                                          var statearr_12237_12259 = state_12221__$1;
                                          statearr_12237_12259[2] = inst_12204;
                                          statearr_12237_12259[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___12245);
          return function(switch__6829__auto__, c__6844__auto___12245) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_12241 = [null, null, null, null, null, null, null, null];
                statearr_12241[0] = state_machine__6830__auto__;
                statearr_12241[1] = 1;
                return statearr_12241;
              };
              var state_machine__6830__auto____1 = function(state_12221) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_12221);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e12242) {
                      if (e12242 instanceof Object) {
                        var ex__6833__auto__ = e12242;
                        var statearr_12243_12260 = state_12221;
                        statearr_12243_12260[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12221);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12242;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12261 = state_12221;
                    state_12221 = G__12261;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_12221) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_12221);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___12245);
        }();
        var state__6846__auto__ = function() {
          var statearr_12244 = f__6845__auto__.call(null);
          statearr_12244[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___12245;
          return statearr_12244;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___12245));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)))));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__12445) {
      var vec__12446 = p__12445;
      var v = cljs.core.nth.call(null, vec__12446, 0, null);
      var p = cljs.core.nth.call(null, vec__12446, 1, null);
      var job = vec__12446;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6844__auto___12628 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___12628, res, vec__12446, v, p, job, jobs, results) {
          return function() {
            var f__6845__auto__ = function() {
              var switch__6829__auto__ = function(c__6844__auto___12628, res, vec__12446, v, p, job, jobs, results) {
                return function(state_12451) {
                  var state_val_12452 = state_12451[1];
                  if (state_val_12452 === 2) {
                    var inst_12448 = state_12451[2];
                    var inst_12449 = cljs.core.async.close_BANG_.call(null, res);
                    var state_12451__$1 = function() {
                      var statearr_12453 = state_12451;
                      statearr_12453[7] = inst_12448;
                      return statearr_12453;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12451__$1, inst_12449);
                  } else {
                    if (state_val_12452 === 1) {
                      var state_12451__$1 = state_12451;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12451__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6844__auto___12628, res, vec__12446, v, p, job, jobs, results);
              return function(switch__6829__auto__, c__6844__auto___12628, res, vec__12446, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6830__auto__ = null;
                  var state_machine__6830__auto____0 = function() {
                    var statearr_12457 = [null, null, null, null, null, null, null, null];
                    statearr_12457[0] = state_machine__6830__auto__;
                    statearr_12457[1] = 1;
                    return statearr_12457;
                  };
                  var state_machine__6830__auto____1 = function(state_12451) {
                    while (true) {
                      var ret_value__6831__auto__ = function() {
                        try {
                          while (true) {
                            var result__6832__auto__ = switch__6829__auto__.call(null, state_12451);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6832__auto__;
                            }
                            break;
                          }
                        } catch (e12458) {
                          if (e12458 instanceof Object) {
                            var ex__6833__auto__ = e12458;
                            var statearr_12459_12629 = state_12451;
                            statearr_12459_12629[5] = ex__6833__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12451);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e12458;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__12630 = state_12451;
                        state_12451 = G__12630;
                        continue;
                      } else {
                        return ret_value__6831__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6830__auto__ = function(state_12451) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6830__auto____0.call(this);
                      case 1:
                        return state_machine__6830__auto____1.call(this, state_12451);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
                  state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
                  return state_machine__6830__auto__;
                }();
              }(switch__6829__auto__, c__6844__auto___12628, res, vec__12446, v, p, job, jobs, results);
            }();
            var state__6846__auto__ = function() {
              var statearr_12460 = f__6845__auto__.call(null);
              statearr_12460[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___12628;
              return statearr_12460;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
          };
        }(c__6844__auto___12628, res, vec__12446, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__12461) {
      var vec__12462 = p__12461;
      var v = cljs.core.nth.call(null, vec__12462, 0, null);
      var p = cljs.core.nth.call(null, vec__12462, 1, null);
      var job = vec__12462;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4508__auto___12631 = n;
  var __12632 = 0;
  while (true) {
    if (__12632 < n__4508__auto___12631) {
      var G__12463_12633 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__12463_12633) {
        case "async":
          var c__6844__auto___12635 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__12632, c__6844__auto___12635, G__12463_12633, n__4508__auto___12631, jobs, results, process, async) {
            return function() {
              var f__6845__auto__ = function() {
                var switch__6829__auto__ = function(__12632, c__6844__auto___12635, G__12463_12633, n__4508__auto___12631, jobs, results, process, async) {
                  return function(state_12476) {
                    var state_val_12477 = state_12476[1];
                    if (state_val_12477 === 7) {
                      var inst_12472 = state_12476[2];
                      var state_12476__$1 = state_12476;
                      var statearr_12478_12636 = state_12476__$1;
                      statearr_12478_12636[2] = inst_12472;
                      statearr_12478_12636[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12477 === 6) {
                        var state_12476__$1 = state_12476;
                        var statearr_12479_12637 = state_12476__$1;
                        statearr_12479_12637[2] = null;
                        statearr_12479_12637[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12477 === 5) {
                          var state_12476__$1 = state_12476;
                          var statearr_12480_12638 = state_12476__$1;
                          statearr_12480_12638[2] = null;
                          statearr_12480_12638[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12477 === 4) {
                            var inst_12466 = state_12476[2];
                            var inst_12467 = async.call(null, inst_12466);
                            var state_12476__$1 = state_12476;
                            if (cljs.core.truth_(inst_12467)) {
                              var statearr_12481_12639 = state_12476__$1;
                              statearr_12481_12639[1] = 5;
                            } else {
                              var statearr_12482_12640 = state_12476__$1;
                              statearr_12482_12640[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12477 === 3) {
                              var inst_12474 = state_12476[2];
                              var state_12476__$1 = state_12476;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12476__$1, inst_12474);
                            } else {
                              if (state_val_12477 === 2) {
                                var state_12476__$1 = state_12476;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12476__$1, 4, jobs);
                              } else {
                                if (state_val_12477 === 1) {
                                  var state_12476__$1 = state_12476;
                                  var statearr_12483_12641 = state_12476__$1;
                                  statearr_12483_12641[2] = null;
                                  statearr_12483_12641[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__12632, c__6844__auto___12635, G__12463_12633, n__4508__auto___12631, jobs, results, process, async);
                return function(__12632, switch__6829__auto__, c__6844__auto___12635, G__12463_12633, n__4508__auto___12631, jobs, results, process, async) {
                  return function() {
                    var state_machine__6830__auto__ = null;
                    var state_machine__6830__auto____0 = function() {
                      var statearr_12487 = [null, null, null, null, null, null, null];
                      statearr_12487[0] = state_machine__6830__auto__;
                      statearr_12487[1] = 1;
                      return statearr_12487;
                    };
                    var state_machine__6830__auto____1 = function(state_12476) {
                      while (true) {
                        var ret_value__6831__auto__ = function() {
                          try {
                            while (true) {
                              var result__6832__auto__ = switch__6829__auto__.call(null, state_12476);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6832__auto__;
                              }
                              break;
                            }
                          } catch (e12488) {
                            if (e12488 instanceof Object) {
                              var ex__6833__auto__ = e12488;
                              var statearr_12489_12642 = state_12476;
                              statearr_12489_12642[5] = ex__6833__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12476);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e12488;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__12643 = state_12476;
                          state_12476 = G__12643;
                          continue;
                        } else {
                          return ret_value__6831__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6830__auto__ = function(state_12476) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6830__auto____0.call(this);
                        case 1:
                          return state_machine__6830__auto____1.call(this, state_12476);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
                    state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
                    return state_machine__6830__auto__;
                  }();
                }(__12632, switch__6829__auto__, c__6844__auto___12635, G__12463_12633, n__4508__auto___12631, jobs, results, process, async);
              }();
              var state__6846__auto__ = function() {
                var statearr_12490 = f__6845__auto__.call(null);
                statearr_12490[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___12635;
                return statearr_12490;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
            };
          }(__12632, c__6844__auto___12635, G__12463_12633, n__4508__auto___12631, jobs, results, process, async));
          break;
        case "compute":
          var c__6844__auto___12644 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__12632, c__6844__auto___12644, G__12463_12633, n__4508__auto___12631, jobs, results, process, async) {
            return function() {
              var f__6845__auto__ = function() {
                var switch__6829__auto__ = function(__12632, c__6844__auto___12644, G__12463_12633, n__4508__auto___12631, jobs, results, process, async) {
                  return function(state_12503) {
                    var state_val_12504 = state_12503[1];
                    if (state_val_12504 === 7) {
                      var inst_12499 = state_12503[2];
                      var state_12503__$1 = state_12503;
                      var statearr_12505_12645 = state_12503__$1;
                      statearr_12505_12645[2] = inst_12499;
                      statearr_12505_12645[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12504 === 6) {
                        var state_12503__$1 = state_12503;
                        var statearr_12506_12646 = state_12503__$1;
                        statearr_12506_12646[2] = null;
                        statearr_12506_12646[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12504 === 5) {
                          var state_12503__$1 = state_12503;
                          var statearr_12507_12647 = state_12503__$1;
                          statearr_12507_12647[2] = null;
                          statearr_12507_12647[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12504 === 4) {
                            var inst_12493 = state_12503[2];
                            var inst_12494 = process.call(null, inst_12493);
                            var state_12503__$1 = state_12503;
                            if (cljs.core.truth_(inst_12494)) {
                              var statearr_12508_12648 = state_12503__$1;
                              statearr_12508_12648[1] = 5;
                            } else {
                              var statearr_12509_12649 = state_12503__$1;
                              statearr_12509_12649[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12504 === 3) {
                              var inst_12501 = state_12503[2];
                              var state_12503__$1 = state_12503;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12503__$1, inst_12501);
                            } else {
                              if (state_val_12504 === 2) {
                                var state_12503__$1 = state_12503;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12503__$1, 4, jobs);
                              } else {
                                if (state_val_12504 === 1) {
                                  var state_12503__$1 = state_12503;
                                  var statearr_12510_12650 = state_12503__$1;
                                  statearr_12510_12650[2] = null;
                                  statearr_12510_12650[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__12632, c__6844__auto___12644, G__12463_12633, n__4508__auto___12631, jobs, results, process, async);
                return function(__12632, switch__6829__auto__, c__6844__auto___12644, G__12463_12633, n__4508__auto___12631, jobs, results, process, async) {
                  return function() {
                    var state_machine__6830__auto__ = null;
                    var state_machine__6830__auto____0 = function() {
                      var statearr_12514 = [null, null, null, null, null, null, null];
                      statearr_12514[0] = state_machine__6830__auto__;
                      statearr_12514[1] = 1;
                      return statearr_12514;
                    };
                    var state_machine__6830__auto____1 = function(state_12503) {
                      while (true) {
                        var ret_value__6831__auto__ = function() {
                          try {
                            while (true) {
                              var result__6832__auto__ = switch__6829__auto__.call(null, state_12503);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6832__auto__;
                              }
                              break;
                            }
                          } catch (e12515) {
                            if (e12515 instanceof Object) {
                              var ex__6833__auto__ = e12515;
                              var statearr_12516_12651 = state_12503;
                              statearr_12516_12651[5] = ex__6833__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12503);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e12515;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__12652 = state_12503;
                          state_12503 = G__12652;
                          continue;
                        } else {
                          return ret_value__6831__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6830__auto__ = function(state_12503) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6830__auto____0.call(this);
                        case 1:
                          return state_machine__6830__auto____1.call(this, state_12503);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
                    state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
                    return state_machine__6830__auto__;
                  }();
                }(__12632, switch__6829__auto__, c__6844__auto___12644, G__12463_12633, n__4508__auto___12631, jobs, results, process, async);
              }();
              var state__6846__auto__ = function() {
                var statearr_12517 = f__6845__auto__.call(null);
                statearr_12517[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___12644;
                return statearr_12517;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
            };
          }(__12632, c__6844__auto___12644, G__12463_12633, n__4508__auto___12631, jobs, results, process, async));
          break;
        default:
          throw new Error("No matching clause: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(type));;
      }
      var G__12653 = __12632 + 1;
      __12632 = G__12653;
      continue;
    } else {
    }
    break;
  }
  var c__6844__auto___12654 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___12654, jobs, results, process, async) {
    return function() {
      var f__6845__auto__ = function() {
        var switch__6829__auto__ = function(c__6844__auto___12654, jobs, results, process, async) {
          return function(state_12539) {
            var state_val_12540 = state_12539[1];
            if (state_val_12540 === 9) {
              var inst_12532 = state_12539[2];
              var state_12539__$1 = function() {
                var statearr_12541 = state_12539;
                statearr_12541[7] = inst_12532;
                return statearr_12541;
              }();
              var statearr_12542_12655 = state_12539__$1;
              statearr_12542_12655[2] = null;
              statearr_12542_12655[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12540 === 8) {
                var inst_12525 = state_12539[8];
                var inst_12530 = state_12539[2];
                var state_12539__$1 = function() {
                  var statearr_12543 = state_12539;
                  statearr_12543[9] = inst_12530;
                  return statearr_12543;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12539__$1, 9, results, inst_12525);
              } else {
                if (state_val_12540 === 7) {
                  var inst_12535 = state_12539[2];
                  var state_12539__$1 = state_12539;
                  var statearr_12544_12656 = state_12539__$1;
                  statearr_12544_12656[2] = inst_12535;
                  statearr_12544_12656[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12540 === 6) {
                    var inst_12525 = state_12539[8];
                    var inst_12520 = state_12539[10];
                    var inst_12525__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_12526 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_12527 = [inst_12520, inst_12525__$1];
                    var inst_12528 = new cljs.core.PersistentVector(null, 2, 5, inst_12526, inst_12527, null);
                    var state_12539__$1 = function() {
                      var statearr_12545 = state_12539;
                      statearr_12545[8] = inst_12525__$1;
                      return statearr_12545;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12539__$1, 8, jobs, inst_12528);
                  } else {
                    if (state_val_12540 === 5) {
                      var inst_12523 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_12539__$1 = state_12539;
                      var statearr_12546_12657 = state_12539__$1;
                      statearr_12546_12657[2] = inst_12523;
                      statearr_12546_12657[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12540 === 4) {
                        var inst_12520 = state_12539[10];
                        var inst_12520__$1 = state_12539[2];
                        var inst_12521 = inst_12520__$1 == null;
                        var state_12539__$1 = function() {
                          var statearr_12547 = state_12539;
                          statearr_12547[10] = inst_12520__$1;
                          return statearr_12547;
                        }();
                        if (cljs.core.truth_(inst_12521)) {
                          var statearr_12548_12658 = state_12539__$1;
                          statearr_12548_12658[1] = 5;
                        } else {
                          var statearr_12549_12659 = state_12539__$1;
                          statearr_12549_12659[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12540 === 3) {
                          var inst_12537 = state_12539[2];
                          var state_12539__$1 = state_12539;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12539__$1, inst_12537);
                        } else {
                          if (state_val_12540 === 2) {
                            var state_12539__$1 = state_12539;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12539__$1, 4, from);
                          } else {
                            if (state_val_12540 === 1) {
                              var state_12539__$1 = state_12539;
                              var statearr_12550_12660 = state_12539__$1;
                              statearr_12550_12660[2] = null;
                              statearr_12550_12660[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6844__auto___12654, jobs, results, process, async);
        return function(switch__6829__auto__, c__6844__auto___12654, jobs, results, process, async) {
          return function() {
            var state_machine__6830__auto__ = null;
            var state_machine__6830__auto____0 = function() {
              var statearr_12554 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_12554[0] = state_machine__6830__auto__;
              statearr_12554[1] = 1;
              return statearr_12554;
            };
            var state_machine__6830__auto____1 = function(state_12539) {
              while (true) {
                var ret_value__6831__auto__ = function() {
                  try {
                    while (true) {
                      var result__6832__auto__ = switch__6829__auto__.call(null, state_12539);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6832__auto__;
                      }
                      break;
                    }
                  } catch (e12555) {
                    if (e12555 instanceof Object) {
                      var ex__6833__auto__ = e12555;
                      var statearr_12556_12661 = state_12539;
                      statearr_12556_12661[5] = ex__6833__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12539);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12555;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12662 = state_12539;
                  state_12539 = G__12662;
                  continue;
                } else {
                  return ret_value__6831__auto__;
                }
                break;
              }
            };
            state_machine__6830__auto__ = function(state_12539) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6830__auto____0.call(this);
                case 1:
                  return state_machine__6830__auto____1.call(this, state_12539);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
            return state_machine__6830__auto__;
          }();
        }(switch__6829__auto__, c__6844__auto___12654, jobs, results, process, async);
      }();
      var state__6846__auto__ = function() {
        var statearr_12557 = f__6845__auto__.call(null);
        statearr_12557[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___12654;
        return statearr_12557;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
    };
  }(c__6844__auto___12654, jobs, results, process, async));
  var c__6844__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto__, jobs, results, process, async) {
    return function() {
      var f__6845__auto__ = function() {
        var switch__6829__auto__ = function(c__6844__auto__, jobs, results, process, async) {
          return function(state_12595) {
            var state_val_12596 = state_12595[1];
            if (state_val_12596 === 7) {
              var inst_12591 = state_12595[2];
              var state_12595__$1 = state_12595;
              var statearr_12597_12663 = state_12595__$1;
              statearr_12597_12663[2] = inst_12591;
              statearr_12597_12663[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12596 === 20) {
                var state_12595__$1 = state_12595;
                var statearr_12598_12664 = state_12595__$1;
                statearr_12598_12664[2] = null;
                statearr_12598_12664[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12596 === 1) {
                  var state_12595__$1 = state_12595;
                  var statearr_12599_12665 = state_12595__$1;
                  statearr_12599_12665[2] = null;
                  statearr_12599_12665[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12596 === 4) {
                    var inst_12560 = state_12595[7];
                    var inst_12560__$1 = state_12595[2];
                    var inst_12561 = inst_12560__$1 == null;
                    var state_12595__$1 = function() {
                      var statearr_12600 = state_12595;
                      statearr_12600[7] = inst_12560__$1;
                      return statearr_12600;
                    }();
                    if (cljs.core.truth_(inst_12561)) {
                      var statearr_12601_12666 = state_12595__$1;
                      statearr_12601_12666[1] = 5;
                    } else {
                      var statearr_12602_12667 = state_12595__$1;
                      statearr_12602_12667[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12596 === 15) {
                      var inst_12573 = state_12595[8];
                      var state_12595__$1 = state_12595;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12595__$1, 18, to, inst_12573);
                    } else {
                      if (state_val_12596 === 21) {
                        var inst_12586 = state_12595[2];
                        var state_12595__$1 = state_12595;
                        var statearr_12603_12668 = state_12595__$1;
                        statearr_12603_12668[2] = inst_12586;
                        statearr_12603_12668[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12596 === 13) {
                          var inst_12588 = state_12595[2];
                          var state_12595__$1 = function() {
                            var statearr_12604 = state_12595;
                            statearr_12604[9] = inst_12588;
                            return statearr_12604;
                          }();
                          var statearr_12605_12669 = state_12595__$1;
                          statearr_12605_12669[2] = null;
                          statearr_12605_12669[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_12596 === 6) {
                            var inst_12560 = state_12595[7];
                            var state_12595__$1 = state_12595;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12595__$1, 11, inst_12560);
                          } else {
                            if (state_val_12596 === 17) {
                              var inst_12581 = state_12595[2];
                              var state_12595__$1 = state_12595;
                              if (cljs.core.truth_(inst_12581)) {
                                var statearr_12606_12670 = state_12595__$1;
                                statearr_12606_12670[1] = 19;
                              } else {
                                var statearr_12607_12671 = state_12595__$1;
                                statearr_12607_12671[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12596 === 3) {
                                var inst_12593 = state_12595[2];
                                var state_12595__$1 = state_12595;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12595__$1, inst_12593);
                              } else {
                                if (state_val_12596 === 12) {
                                  var inst_12570 = state_12595[10];
                                  var state_12595__$1 = state_12595;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12595__$1, 14, inst_12570);
                                } else {
                                  if (state_val_12596 === 2) {
                                    var state_12595__$1 = state_12595;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12595__$1, 4, results);
                                  } else {
                                    if (state_val_12596 === 19) {
                                      var state_12595__$1 = state_12595;
                                      var statearr_12608_12672 = state_12595__$1;
                                      statearr_12608_12672[2] = null;
                                      statearr_12608_12672[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12596 === 11) {
                                        var inst_12570 = state_12595[2];
                                        var state_12595__$1 = function() {
                                          var statearr_12609 = state_12595;
                                          statearr_12609[10] = inst_12570;
                                          return statearr_12609;
                                        }();
                                        var statearr_12610_12673 = state_12595__$1;
                                        statearr_12610_12673[2] = null;
                                        statearr_12610_12673[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12596 === 9) {
                                          var state_12595__$1 = state_12595;
                                          var statearr_12611_12674 = state_12595__$1;
                                          statearr_12611_12674[2] = null;
                                          statearr_12611_12674[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_12596 === 5) {
                                            var state_12595__$1 = state_12595;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_12612_12675 = state_12595__$1;
                                              statearr_12612_12675[1] = 8;
                                            } else {
                                              var statearr_12613_12676 = state_12595__$1;
                                              statearr_12613_12676[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_12596 === 14) {
                                              var inst_12575 = state_12595[11];
                                              var inst_12573 = state_12595[8];
                                              var inst_12573__$1 = state_12595[2];
                                              var inst_12574 = inst_12573__$1 == null;
                                              var inst_12575__$1 = cljs.core.not.call(null, inst_12574);
                                              var state_12595__$1 = function() {
                                                var statearr_12614 = state_12595;
                                                statearr_12614[11] = inst_12575__$1;
                                                statearr_12614[8] = inst_12573__$1;
                                                return statearr_12614;
                                              }();
                                              if (inst_12575__$1) {
                                                var statearr_12615_12677 = state_12595__$1;
                                                statearr_12615_12677[1] = 15;
                                              } else {
                                                var statearr_12616_12678 = state_12595__$1;
                                                statearr_12616_12678[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_12596 === 16) {
                                                var inst_12575 = state_12595[11];
                                                var state_12595__$1 = state_12595;
                                                var statearr_12617_12679 = state_12595__$1;
                                                statearr_12617_12679[2] = inst_12575;
                                                statearr_12617_12679[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_12596 === 10) {
                                                  var inst_12567 = state_12595[2];
                                                  var state_12595__$1 = state_12595;
                                                  var statearr_12618_12680 = state_12595__$1;
                                                  statearr_12618_12680[2] = inst_12567;
                                                  statearr_12618_12680[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_12596 === 18) {
                                                    var inst_12578 = state_12595[2];
                                                    var state_12595__$1 = state_12595;
                                                    var statearr_12619_12681 = state_12595__$1;
                                                    statearr_12619_12681[2] = inst_12578;
                                                    statearr_12619_12681[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_12596 === 8) {
                                                      var inst_12564 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_12595__$1 = state_12595;
                                                      var statearr_12620_12682 = state_12595__$1;
                                                      statearr_12620_12682[2] = inst_12564;
                                                      statearr_12620_12682[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6844__auto__, jobs, results, process, async);
        return function(switch__6829__auto__, c__6844__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6830__auto__ = null;
            var state_machine__6830__auto____0 = function() {
              var statearr_12624 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_12624[0] = state_machine__6830__auto__;
              statearr_12624[1] = 1;
              return statearr_12624;
            };
            var state_machine__6830__auto____1 = function(state_12595) {
              while (true) {
                var ret_value__6831__auto__ = function() {
                  try {
                    while (true) {
                      var result__6832__auto__ = switch__6829__auto__.call(null, state_12595);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6832__auto__;
                      }
                      break;
                    }
                  } catch (e12625) {
                    if (e12625 instanceof Object) {
                      var ex__6833__auto__ = e12625;
                      var statearr_12626_12683 = state_12595;
                      statearr_12626_12683[5] = ex__6833__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12595);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12625;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12684 = state_12595;
                  state_12595 = G__12684;
                  continue;
                } else {
                  return ret_value__6831__auto__;
                }
                break;
              }
            };
            state_machine__6830__auto__ = function(state_12595) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6830__auto____0.call(this);
                case 1:
                  return state_machine__6830__auto____1.call(this, state_12595);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
            return state_machine__6830__auto__;
          }();
        }(switch__6829__auto__, c__6844__auto__, jobs, results, process, async);
      }();
      var state__6846__auto__ = function() {
        var statearr_12627 = f__6845__auto__.call(null);
        statearr_12627[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto__;
        return statearr_12627;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
    };
  }(c__6844__auto__, jobs, results, process, async));
  return c__6844__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6844__auto___12785 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___12785, tc, fc) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___12785, tc, fc) {
            return function(state_12760) {
              var state_val_12761 = state_12760[1];
              if (state_val_12761 === 7) {
                var inst_12756 = state_12760[2];
                var state_12760__$1 = state_12760;
                var statearr_12762_12786 = state_12760__$1;
                statearr_12762_12786[2] = inst_12756;
                statearr_12762_12786[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12761 === 1) {
                  var state_12760__$1 = state_12760;
                  var statearr_12763_12787 = state_12760__$1;
                  statearr_12763_12787[2] = null;
                  statearr_12763_12787[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12761 === 4) {
                    var inst_12737 = state_12760[7];
                    var inst_12737__$1 = state_12760[2];
                    var inst_12738 = inst_12737__$1 == null;
                    var state_12760__$1 = function() {
                      var statearr_12764 = state_12760;
                      statearr_12764[7] = inst_12737__$1;
                      return statearr_12764;
                    }();
                    if (cljs.core.truth_(inst_12738)) {
                      var statearr_12765_12788 = state_12760__$1;
                      statearr_12765_12788[1] = 5;
                    } else {
                      var statearr_12766_12789 = state_12760__$1;
                      statearr_12766_12789[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12761 === 13) {
                      var state_12760__$1 = state_12760;
                      var statearr_12767_12790 = state_12760__$1;
                      statearr_12767_12790[2] = null;
                      statearr_12767_12790[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12761 === 6) {
                        var inst_12737 = state_12760[7];
                        var inst_12743 = p.call(null, inst_12737);
                        var state_12760__$1 = state_12760;
                        if (cljs.core.truth_(inst_12743)) {
                          var statearr_12768_12791 = state_12760__$1;
                          statearr_12768_12791[1] = 9;
                        } else {
                          var statearr_12769_12792 = state_12760__$1;
                          statearr_12769_12792[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12761 === 3) {
                          var inst_12758 = state_12760[2];
                          var state_12760__$1 = state_12760;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12760__$1, inst_12758);
                        } else {
                          if (state_val_12761 === 12) {
                            var state_12760__$1 = state_12760;
                            var statearr_12770_12793 = state_12760__$1;
                            statearr_12770_12793[2] = null;
                            statearr_12770_12793[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12761 === 2) {
                              var state_12760__$1 = state_12760;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12760__$1, 4, ch);
                            } else {
                              if (state_val_12761 === 11) {
                                var inst_12737 = state_12760[7];
                                var inst_12747 = state_12760[2];
                                var state_12760__$1 = state_12760;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12760__$1, 8, inst_12747, inst_12737);
                              } else {
                                if (state_val_12761 === 9) {
                                  var state_12760__$1 = state_12760;
                                  var statearr_12771_12794 = state_12760__$1;
                                  statearr_12771_12794[2] = tc;
                                  statearr_12771_12794[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12761 === 5) {
                                    var inst_12740 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_12741 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_12760__$1 = function() {
                                      var statearr_12772 = state_12760;
                                      statearr_12772[8] = inst_12740;
                                      return statearr_12772;
                                    }();
                                    var statearr_12773_12795 = state_12760__$1;
                                    statearr_12773_12795[2] = inst_12741;
                                    statearr_12773_12795[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12761 === 14) {
                                      var inst_12754 = state_12760[2];
                                      var state_12760__$1 = state_12760;
                                      var statearr_12774_12796 = state_12760__$1;
                                      statearr_12774_12796[2] = inst_12754;
                                      statearr_12774_12796[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12761 === 10) {
                                        var state_12760__$1 = state_12760;
                                        var statearr_12775_12797 = state_12760__$1;
                                        statearr_12775_12797[2] = fc;
                                        statearr_12775_12797[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_12761 === 8) {
                                          var inst_12749 = state_12760[2];
                                          var state_12760__$1 = state_12760;
                                          if (cljs.core.truth_(inst_12749)) {
                                            var statearr_12776_12798 = state_12760__$1;
                                            statearr_12776_12798[1] = 12;
                                          } else {
                                            var statearr_12777_12799 = state_12760__$1;
                                            statearr_12777_12799[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___12785, tc, fc);
          return function(switch__6829__auto__, c__6844__auto___12785, tc, fc) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_12781 = [null, null, null, null, null, null, null, null, null];
                statearr_12781[0] = state_machine__6830__auto__;
                statearr_12781[1] = 1;
                return statearr_12781;
              };
              var state_machine__6830__auto____1 = function(state_12760) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_12760);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e12782) {
                      if (e12782 instanceof Object) {
                        var ex__6833__auto__ = e12782;
                        var statearr_12783_12800 = state_12760;
                        statearr_12783_12800[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12760);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12782;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12801 = state_12760;
                    state_12760 = G__12801;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_12760) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_12760);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___12785, tc, fc);
        }();
        var state__6846__auto__ = function() {
          var statearr_12784 = f__6845__auto__.call(null);
          statearr_12784[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___12785;
          return statearr_12784;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___12785, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6844__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto__) {
    return function() {
      var f__6845__auto__ = function() {
        var switch__6829__auto__ = function(c__6844__auto__) {
          return function(state_12848) {
            var state_val_12849 = state_12848[1];
            if (state_val_12849 === 7) {
              var inst_12844 = state_12848[2];
              var state_12848__$1 = state_12848;
              var statearr_12850_12866 = state_12848__$1;
              statearr_12850_12866[2] = inst_12844;
              statearr_12850_12866[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_12849 === 6) {
                var inst_12834 = state_12848[7];
                var inst_12837 = state_12848[8];
                var inst_12841 = f.call(null, inst_12834, inst_12837);
                var inst_12834__$1 = inst_12841;
                var state_12848__$1 = function() {
                  var statearr_12851 = state_12848;
                  statearr_12851[7] = inst_12834__$1;
                  return statearr_12851;
                }();
                var statearr_12852_12867 = state_12848__$1;
                statearr_12852_12867[2] = null;
                statearr_12852_12867[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12849 === 5) {
                  var inst_12834 = state_12848[7];
                  var state_12848__$1 = state_12848;
                  var statearr_12853_12868 = state_12848__$1;
                  statearr_12853_12868[2] = inst_12834;
                  statearr_12853_12868[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12849 === 4) {
                    var inst_12837 = state_12848[8];
                    var inst_12837__$1 = state_12848[2];
                    var inst_12838 = inst_12837__$1 == null;
                    var state_12848__$1 = function() {
                      var statearr_12854 = state_12848;
                      statearr_12854[8] = inst_12837__$1;
                      return statearr_12854;
                    }();
                    if (cljs.core.truth_(inst_12838)) {
                      var statearr_12855_12869 = state_12848__$1;
                      statearr_12855_12869[1] = 5;
                    } else {
                      var statearr_12856_12870 = state_12848__$1;
                      statearr_12856_12870[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_12849 === 3) {
                      var inst_12846 = state_12848[2];
                      var state_12848__$1 = state_12848;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12848__$1, inst_12846);
                    } else {
                      if (state_val_12849 === 2) {
                        var state_12848__$1 = state_12848;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12848__$1, 4, ch);
                      } else {
                        if (state_val_12849 === 1) {
                          var inst_12834 = init;
                          var state_12848__$1 = function() {
                            var statearr_12857 = state_12848;
                            statearr_12857[7] = inst_12834;
                            return statearr_12857;
                          }();
                          var statearr_12858_12871 = state_12848__$1;
                          statearr_12858_12871[2] = null;
                          statearr_12858_12871[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6844__auto__);
        return function(switch__6829__auto__, c__6844__auto__) {
          return function() {
            var state_machine__6830__auto__ = null;
            var state_machine__6830__auto____0 = function() {
              var statearr_12862 = [null, null, null, null, null, null, null, null, null];
              statearr_12862[0] = state_machine__6830__auto__;
              statearr_12862[1] = 1;
              return statearr_12862;
            };
            var state_machine__6830__auto____1 = function(state_12848) {
              while (true) {
                var ret_value__6831__auto__ = function() {
                  try {
                    while (true) {
                      var result__6832__auto__ = switch__6829__auto__.call(null, state_12848);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6832__auto__;
                      }
                      break;
                    }
                  } catch (e12863) {
                    if (e12863 instanceof Object) {
                      var ex__6833__auto__ = e12863;
                      var statearr_12864_12872 = state_12848;
                      statearr_12864_12872[5] = ex__6833__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12848);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e12863;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__12873 = state_12848;
                  state_12848 = G__12873;
                  continue;
                } else {
                  return ret_value__6831__auto__;
                }
                break;
              }
            };
            state_machine__6830__auto__ = function(state_12848) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6830__auto____0.call(this);
                case 1:
                  return state_machine__6830__auto____1.call(this, state_12848);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
            return state_machine__6830__auto__;
          }();
        }(switch__6829__auto__, c__6844__auto__);
      }();
      var state__6846__auto__ = function() {
        var statearr_12865 = f__6845__auto__.call(null);
        statearr_12865[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto__;
        return statearr_12865;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
    };
  }(c__6844__auto__));
  return c__6844__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6844__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto__) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto__) {
            return function(state_12947) {
              var state_val_12948 = state_12947[1];
              if (state_val_12948 === 7) {
                var inst_12929 = state_12947[2];
                var state_12947__$1 = state_12947;
                var statearr_12949_12972 = state_12947__$1;
                statearr_12949_12972[2] = inst_12929;
                statearr_12949_12972[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_12948 === 1) {
                  var inst_12923 = cljs.core.seq.call(null, coll);
                  var inst_12924 = inst_12923;
                  var state_12947__$1 = function() {
                    var statearr_12950 = state_12947;
                    statearr_12950[7] = inst_12924;
                    return statearr_12950;
                  }();
                  var statearr_12951_12973 = state_12947__$1;
                  statearr_12951_12973[2] = null;
                  statearr_12951_12973[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_12948 === 4) {
                    var inst_12924 = state_12947[7];
                    var inst_12927 = cljs.core.first.call(null, inst_12924);
                    var state_12947__$1 = state_12947;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12947__$1, 7, ch, inst_12927);
                  } else {
                    if (state_val_12948 === 13) {
                      var inst_12941 = state_12947[2];
                      var state_12947__$1 = state_12947;
                      var statearr_12952_12974 = state_12947__$1;
                      statearr_12952_12974[2] = inst_12941;
                      statearr_12952_12974[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_12948 === 6) {
                        var inst_12932 = state_12947[2];
                        var state_12947__$1 = state_12947;
                        if (cljs.core.truth_(inst_12932)) {
                          var statearr_12953_12975 = state_12947__$1;
                          statearr_12953_12975[1] = 8;
                        } else {
                          var statearr_12954_12976 = state_12947__$1;
                          statearr_12954_12976[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_12948 === 3) {
                          var inst_12945 = state_12947[2];
                          var state_12947__$1 = state_12947;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12947__$1, inst_12945);
                        } else {
                          if (state_val_12948 === 12) {
                            var state_12947__$1 = state_12947;
                            var statearr_12955_12977 = state_12947__$1;
                            statearr_12955_12977[2] = null;
                            statearr_12955_12977[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_12948 === 2) {
                              var inst_12924 = state_12947[7];
                              var state_12947__$1 = state_12947;
                              if (cljs.core.truth_(inst_12924)) {
                                var statearr_12956_12978 = state_12947__$1;
                                statearr_12956_12978[1] = 4;
                              } else {
                                var statearr_12957_12979 = state_12947__$1;
                                statearr_12957_12979[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_12948 === 11) {
                                var inst_12938 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_12947__$1 = state_12947;
                                var statearr_12958_12980 = state_12947__$1;
                                statearr_12958_12980[2] = inst_12938;
                                statearr_12958_12980[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_12948 === 9) {
                                  var state_12947__$1 = state_12947;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_12959_12981 = state_12947__$1;
                                    statearr_12959_12981[1] = 11;
                                  } else {
                                    var statearr_12960_12982 = state_12947__$1;
                                    statearr_12960_12982[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_12948 === 5) {
                                    var inst_12924 = state_12947[7];
                                    var state_12947__$1 = state_12947;
                                    var statearr_12961_12983 = state_12947__$1;
                                    statearr_12961_12983[2] = inst_12924;
                                    statearr_12961_12983[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_12948 === 10) {
                                      var inst_12943 = state_12947[2];
                                      var state_12947__$1 = state_12947;
                                      var statearr_12962_12984 = state_12947__$1;
                                      statearr_12962_12984[2] = inst_12943;
                                      statearr_12962_12984[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_12948 === 8) {
                                        var inst_12924 = state_12947[7];
                                        var inst_12934 = cljs.core.next.call(null, inst_12924);
                                        var inst_12924__$1 = inst_12934;
                                        var state_12947__$1 = function() {
                                          var statearr_12963 = state_12947;
                                          statearr_12963[7] = inst_12924__$1;
                                          return statearr_12963;
                                        }();
                                        var statearr_12964_12985 = state_12947__$1;
                                        statearr_12964_12985[2] = null;
                                        statearr_12964_12985[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto__);
          return function(switch__6829__auto__, c__6844__auto__) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_12968 = [null, null, null, null, null, null, null, null];
                statearr_12968[0] = state_machine__6830__auto__;
                statearr_12968[1] = 1;
                return statearr_12968;
              };
              var state_machine__6830__auto____1 = function(state_12947) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_12947);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e12969) {
                      if (e12969 instanceof Object) {
                        var ex__6833__auto__ = e12969;
                        var statearr_12970_12986 = state_12947;
                        statearr_12970_12986[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_12947);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e12969;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__12987 = state_12947;
                    state_12947 = G__12987;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_12947) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_12947);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto__);
        }();
        var state__6846__auto__ = function() {
          var statearr_12971 = f__6845__auto__.call(null);
          statearr_12971[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto__;
          return statearr_12971;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto__));
    return c__6844__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj12989 = {};
  return obj12989;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3627__auto__ = _;
    if (and__3627__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4275__auto__ = _ == null ? null : _;
    return function() {
      var or__3639__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj12991 = {};
  return obj12991;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t13213 !== "undefined") {
    } else {
      cljs.core.async.t13213 = function(cs, ch, mult, meta13214) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta13214 = meta13214;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t13213.cljs$lang$type = true;
      cljs.core.async.t13213.cljs$lang$ctorStr = "cljs.core.async/t13213";
      cljs.core.async.t13213.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
          return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t13213");
        };
      }(cs);
      cljs.core.async.t13213.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t13213.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t13213.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null;
        };
      }(cs);
      cljs.core.async.t13213.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t13213.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t13213.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t13213.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_13215) {
          var self__ = this;
          var _13215__$1 = this;
          return self__.meta13214;
        };
      }(cs);
      cljs.core.async.t13213.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_13215, meta13214__$1) {
          var self__ = this;
          var _13215__$1 = this;
          return new cljs.core.async.t13213(self__.cs, self__.ch, self__.mult, meta13214__$1);
        };
      }(cs);
      cljs.core.async.__GT_t13213 = function(cs) {
        return function __GT_t13213(cs__$1, ch__$1, mult__$1, meta13214) {
          return new cljs.core.async.t13213(cs__$1, ch__$1, mult__$1, meta13214);
        };
      }(cs);
    }
    return new cljs.core.async.t13213(cs, ch, mult, null);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6844__auto___13434 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___13434, cs, m, dchan, dctr, done) {
    return function() {
      var f__6845__auto__ = function() {
        var switch__6829__auto__ = function(c__6844__auto___13434, cs, m, dchan, dctr, done) {
          return function(state_13346) {
            var state_val_13347 = state_13346[1];
            if (state_val_13347 === 7) {
              var inst_13342 = state_13346[2];
              var state_13346__$1 = state_13346;
              var statearr_13348_13435 = state_13346__$1;
              statearr_13348_13435[2] = inst_13342;
              statearr_13348_13435[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13347 === 20) {
                var inst_13247 = state_13346[7];
                var inst_13257 = cljs.core.first.call(null, inst_13247);
                var inst_13258 = cljs.core.nth.call(null, inst_13257, 0, null);
                var inst_13259 = cljs.core.nth.call(null, inst_13257, 1, null);
                var state_13346__$1 = function() {
                  var statearr_13349 = state_13346;
                  statearr_13349[8] = inst_13258;
                  return statearr_13349;
                }();
                if (cljs.core.truth_(inst_13259)) {
                  var statearr_13350_13436 = state_13346__$1;
                  statearr_13350_13436[1] = 22;
                } else {
                  var statearr_13351_13437 = state_13346__$1;
                  statearr_13351_13437[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13347 === 27) {
                  var inst_13289 = state_13346[9];
                  var inst_13287 = state_13346[10];
                  var inst_13218 = state_13346[11];
                  var inst_13294 = state_13346[12];
                  var inst_13294__$1 = cljs.core._nth.call(null, inst_13287, inst_13289);
                  var inst_13295 = cljs.core.async.put_BANG_.call(null, inst_13294__$1, inst_13218, done);
                  var state_13346__$1 = function() {
                    var statearr_13352 = state_13346;
                    statearr_13352[12] = inst_13294__$1;
                    return statearr_13352;
                  }();
                  if (cljs.core.truth_(inst_13295)) {
                    var statearr_13353_13438 = state_13346__$1;
                    statearr_13353_13438[1] = 30;
                  } else {
                    var statearr_13354_13439 = state_13346__$1;
                    statearr_13354_13439[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13347 === 1) {
                    var state_13346__$1 = state_13346;
                    var statearr_13355_13440 = state_13346__$1;
                    statearr_13355_13440[2] = null;
                    statearr_13355_13440[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13347 === 24) {
                      var inst_13247 = state_13346[7];
                      var inst_13264 = state_13346[2];
                      var inst_13265 = cljs.core.next.call(null, inst_13247);
                      var inst_13227 = inst_13265;
                      var inst_13228 = null;
                      var inst_13229 = 0;
                      var inst_13230 = 0;
                      var state_13346__$1 = function() {
                        var statearr_13356 = state_13346;
                        statearr_13356[13] = inst_13229;
                        statearr_13356[14] = inst_13264;
                        statearr_13356[15] = inst_13227;
                        statearr_13356[16] = inst_13230;
                        statearr_13356[17] = inst_13228;
                        return statearr_13356;
                      }();
                      var statearr_13357_13441 = state_13346__$1;
                      statearr_13357_13441[2] = null;
                      statearr_13357_13441[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13347 === 39) {
                        var state_13346__$1 = state_13346;
                        var statearr_13361_13442 = state_13346__$1;
                        statearr_13361_13442[2] = null;
                        statearr_13361_13442[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13347 === 4) {
                          var inst_13218 = state_13346[11];
                          var inst_13218__$1 = state_13346[2];
                          var inst_13219 = inst_13218__$1 == null;
                          var state_13346__$1 = function() {
                            var statearr_13362 = state_13346;
                            statearr_13362[11] = inst_13218__$1;
                            return statearr_13362;
                          }();
                          if (cljs.core.truth_(inst_13219)) {
                            var statearr_13363_13443 = state_13346__$1;
                            statearr_13363_13443[1] = 5;
                          } else {
                            var statearr_13364_13444 = state_13346__$1;
                            statearr_13364_13444[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13347 === 15) {
                            var inst_13229 = state_13346[13];
                            var inst_13227 = state_13346[15];
                            var inst_13230 = state_13346[16];
                            var inst_13228 = state_13346[17];
                            var inst_13243 = state_13346[2];
                            var inst_13244 = inst_13230 + 1;
                            var tmp13358 = inst_13229;
                            var tmp13359 = inst_13227;
                            var tmp13360 = inst_13228;
                            var inst_13227__$1 = tmp13359;
                            var inst_13228__$1 = tmp13360;
                            var inst_13229__$1 = tmp13358;
                            var inst_13230__$1 = inst_13244;
                            var state_13346__$1 = function() {
                              var statearr_13365 = state_13346;
                              statearr_13365[13] = inst_13229__$1;
                              statearr_13365[15] = inst_13227__$1;
                              statearr_13365[16] = inst_13230__$1;
                              statearr_13365[17] = inst_13228__$1;
                              statearr_13365[18] = inst_13243;
                              return statearr_13365;
                            }();
                            var statearr_13366_13445 = state_13346__$1;
                            statearr_13366_13445[2] = null;
                            statearr_13366_13445[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13347 === 21) {
                              var inst_13268 = state_13346[2];
                              var state_13346__$1 = state_13346;
                              var statearr_13370_13446 = state_13346__$1;
                              statearr_13370_13446[2] = inst_13268;
                              statearr_13370_13446[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13347 === 31) {
                                var inst_13294 = state_13346[12];
                                var inst_13298 = done.call(null, null);
                                var inst_13299 = cljs.core.async.untap_STAR_.call(null, m, inst_13294);
                                var state_13346__$1 = function() {
                                  var statearr_13371 = state_13346;
                                  statearr_13371[19] = inst_13298;
                                  return statearr_13371;
                                }();
                                var statearr_13372_13447 = state_13346__$1;
                                statearr_13372_13447[2] = inst_13299;
                                statearr_13372_13447[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13347 === 32) {
                                  var inst_13289 = state_13346[9];
                                  var inst_13286 = state_13346[20];
                                  var inst_13287 = state_13346[10];
                                  var inst_13288 = state_13346[21];
                                  var inst_13301 = state_13346[2];
                                  var inst_13302 = inst_13289 + 1;
                                  var tmp13367 = inst_13286;
                                  var tmp13368 = inst_13287;
                                  var tmp13369 = inst_13288;
                                  var inst_13286__$1 = tmp13367;
                                  var inst_13287__$1 = tmp13368;
                                  var inst_13288__$1 = tmp13369;
                                  var inst_13289__$1 = inst_13302;
                                  var state_13346__$1 = function() {
                                    var statearr_13373 = state_13346;
                                    statearr_13373[22] = inst_13301;
                                    statearr_13373[9] = inst_13289__$1;
                                    statearr_13373[20] = inst_13286__$1;
                                    statearr_13373[10] = inst_13287__$1;
                                    statearr_13373[21] = inst_13288__$1;
                                    return statearr_13373;
                                  }();
                                  var statearr_13374_13448 = state_13346__$1;
                                  statearr_13374_13448[2] = null;
                                  statearr_13374_13448[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13347 === 40) {
                                    var inst_13314 = state_13346[23];
                                    var inst_13318 = done.call(null, null);
                                    var inst_13319 = cljs.core.async.untap_STAR_.call(null, m, inst_13314);
                                    var state_13346__$1 = function() {
                                      var statearr_13375 = state_13346;
                                      statearr_13375[24] = inst_13318;
                                      return statearr_13375;
                                    }();
                                    var statearr_13376_13449 = state_13346__$1;
                                    statearr_13376_13449[2] = inst_13319;
                                    statearr_13376_13449[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13347 === 33) {
                                      var inst_13305 = state_13346[25];
                                      var inst_13307 = cljs.core.chunked_seq_QMARK_.call(null, inst_13305);
                                      var state_13346__$1 = state_13346;
                                      if (inst_13307) {
                                        var statearr_13377_13450 = state_13346__$1;
                                        statearr_13377_13450[1] = 36;
                                      } else {
                                        var statearr_13378_13451 = state_13346__$1;
                                        statearr_13378_13451[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13347 === 13) {
                                        var inst_13237 = state_13346[26];
                                        var inst_13240 = cljs.core.async.close_BANG_.call(null, inst_13237);
                                        var state_13346__$1 = state_13346;
                                        var statearr_13379_13452 = state_13346__$1;
                                        statearr_13379_13452[2] = inst_13240;
                                        statearr_13379_13452[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13347 === 22) {
                                          var inst_13258 = state_13346[8];
                                          var inst_13261 = cljs.core.async.close_BANG_.call(null, inst_13258);
                                          var state_13346__$1 = state_13346;
                                          var statearr_13380_13453 = state_13346__$1;
                                          statearr_13380_13453[2] = inst_13261;
                                          statearr_13380_13453[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13347 === 36) {
                                            var inst_13305 = state_13346[25];
                                            var inst_13309 = cljs.core.chunk_first.call(null, inst_13305);
                                            var inst_13310 = cljs.core.chunk_rest.call(null, inst_13305);
                                            var inst_13311 = cljs.core.count.call(null, inst_13309);
                                            var inst_13286 = inst_13310;
                                            var inst_13287 = inst_13309;
                                            var inst_13288 = inst_13311;
                                            var inst_13289 = 0;
                                            var state_13346__$1 = function() {
                                              var statearr_13381 = state_13346;
                                              statearr_13381[9] = inst_13289;
                                              statearr_13381[20] = inst_13286;
                                              statearr_13381[10] = inst_13287;
                                              statearr_13381[21] = inst_13288;
                                              return statearr_13381;
                                            }();
                                            var statearr_13382_13454 = state_13346__$1;
                                            statearr_13382_13454[2] = null;
                                            statearr_13382_13454[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13347 === 41) {
                                              var inst_13305 = state_13346[25];
                                              var inst_13321 = state_13346[2];
                                              var inst_13322 = cljs.core.next.call(null, inst_13305);
                                              var inst_13286 = inst_13322;
                                              var inst_13287 = null;
                                              var inst_13288 = 0;
                                              var inst_13289 = 0;
                                              var state_13346__$1 = function() {
                                                var statearr_13383 = state_13346;
                                                statearr_13383[9] = inst_13289;
                                                statearr_13383[20] = inst_13286;
                                                statearr_13383[10] = inst_13287;
                                                statearr_13383[27] = inst_13321;
                                                statearr_13383[21] = inst_13288;
                                                return statearr_13383;
                                              }();
                                              var statearr_13384_13455 = state_13346__$1;
                                              statearr_13384_13455[2] = null;
                                              statearr_13384_13455[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13347 === 43) {
                                                var state_13346__$1 = state_13346;
                                                var statearr_13385_13456 = state_13346__$1;
                                                statearr_13385_13456[2] = null;
                                                statearr_13385_13456[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_13347 === 29) {
                                                  var inst_13330 = state_13346[2];
                                                  var state_13346__$1 = state_13346;
                                                  var statearr_13386_13457 = state_13346__$1;
                                                  statearr_13386_13457[2] = inst_13330;
                                                  statearr_13386_13457[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_13347 === 44) {
                                                    var inst_13339 = state_13346[2];
                                                    var state_13346__$1 = function() {
                                                      var statearr_13387 = state_13346;
                                                      statearr_13387[28] = inst_13339;
                                                      return statearr_13387;
                                                    }();
                                                    var statearr_13388_13458 = state_13346__$1;
                                                    statearr_13388_13458[2] = null;
                                                    statearr_13388_13458[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13347 === 6) {
                                                      var inst_13278 = state_13346[29];
                                                      var inst_13277 = cljs.core.deref.call(null, cs);
                                                      var inst_13278__$1 = cljs.core.keys.call(null, inst_13277);
                                                      var inst_13279 = cljs.core.count.call(null, inst_13278__$1);
                                                      var inst_13280 = cljs.core.reset_BANG_.call(null, dctr, inst_13279);
                                                      var inst_13285 = cljs.core.seq.call(null, inst_13278__$1);
                                                      var inst_13286 = inst_13285;
                                                      var inst_13287 = null;
                                                      var inst_13288 = 0;
                                                      var inst_13289 = 0;
                                                      var state_13346__$1 = function() {
                                                        var statearr_13389 = state_13346;
                                                        statearr_13389[9] = inst_13289;
                                                        statearr_13389[20] = inst_13286;
                                                        statearr_13389[10] = inst_13287;
                                                        statearr_13389[29] = inst_13278__$1;
                                                        statearr_13389[21] = inst_13288;
                                                        statearr_13389[30] = inst_13280;
                                                        return statearr_13389;
                                                      }();
                                                      var statearr_13390_13459 = state_13346__$1;
                                                      statearr_13390_13459[2] = null;
                                                      statearr_13390_13459[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_13347 === 28) {
                                                        var inst_13305 = state_13346[25];
                                                        var inst_13286 = state_13346[20];
                                                        var inst_13305__$1 = cljs.core.seq.call(null, inst_13286);
                                                        var state_13346__$1 = function() {
                                                          var statearr_13391 = state_13346;
                                                          statearr_13391[25] = inst_13305__$1;
                                                          return statearr_13391;
                                                        }();
                                                        if (inst_13305__$1) {
                                                          var statearr_13392_13460 = state_13346__$1;
                                                          statearr_13392_13460[1] = 33;
                                                        } else {
                                                          var statearr_13393_13461 = state_13346__$1;
                                                          statearr_13393_13461[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_13347 === 25) {
                                                          var inst_13289 = state_13346[9];
                                                          var inst_13288 = state_13346[21];
                                                          var inst_13291 = inst_13289 < inst_13288;
                                                          var inst_13292 = inst_13291;
                                                          var state_13346__$1 = state_13346;
                                                          if (cljs.core.truth_(inst_13292)) {
                                                            var statearr_13394_13462 = state_13346__$1;
                                                            statearr_13394_13462[1] = 27;
                                                          } else {
                                                            var statearr_13395_13463 = state_13346__$1;
                                                            statearr_13395_13463[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_13347 === 34) {
                                                            var state_13346__$1 = state_13346;
                                                            var statearr_13396_13464 = state_13346__$1;
                                                            statearr_13396_13464[2] = null;
                                                            statearr_13396_13464[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_13347 === 17) {
                                                              var state_13346__$1 = state_13346;
                                                              var statearr_13397_13465 = state_13346__$1;
                                                              statearr_13397_13465[2] = null;
                                                              statearr_13397_13465[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_13347 === 3) {
                                                                var inst_13344 = state_13346[2];
                                                                var state_13346__$1 = state_13346;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13346__$1, inst_13344);
                                                              } else {
                                                                if (state_val_13347 === 12) {
                                                                  var inst_13273 = state_13346[2];
                                                                  var state_13346__$1 = state_13346;
                                                                  var statearr_13398_13466 = state_13346__$1;
                                                                  statearr_13398_13466[2] = inst_13273;
                                                                  statearr_13398_13466[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_13347 === 2) {
                                                                    var state_13346__$1 = state_13346;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13346__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_13347 === 23) {
                                                                      var state_13346__$1 = state_13346;
                                                                      var statearr_13399_13467 = state_13346__$1;
                                                                      statearr_13399_13467[2] = null;
                                                                      statearr_13399_13467[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_13347 === 35) {
                                                                        var inst_13328 = state_13346[2];
                                                                        var state_13346__$1 = state_13346;
                                                                        var statearr_13400_13468 = state_13346__$1;
                                                                        statearr_13400_13468[2] = inst_13328;
                                                                        statearr_13400_13468[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_13347 === 19) {
                                                                          var inst_13247 = state_13346[7];
                                                                          var inst_13251 = cljs.core.chunk_first.call(null, inst_13247);
                                                                          var inst_13252 = cljs.core.chunk_rest.call(null, inst_13247);
                                                                          var inst_13253 = cljs.core.count.call(null, inst_13251);
                                                                          var inst_13227 = inst_13252;
                                                                          var inst_13228 = inst_13251;
                                                                          var inst_13229 = inst_13253;
                                                                          var inst_13230 = 0;
                                                                          var state_13346__$1 = function() {
                                                                            var statearr_13401 = state_13346;
                                                                            statearr_13401[13] = inst_13229;
                                                                            statearr_13401[15] = inst_13227;
                                                                            statearr_13401[16] = inst_13230;
                                                                            statearr_13401[17] = inst_13228;
                                                                            return statearr_13401;
                                                                          }();
                                                                          var statearr_13402_13469 = state_13346__$1;
                                                                          statearr_13402_13469[2] = null;
                                                                          statearr_13402_13469[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_13347 === 11) {
                                                                            var inst_13247 = state_13346[7];
                                                                            var inst_13227 = state_13346[15];
                                                                            var inst_13247__$1 = cljs.core.seq.call(null, inst_13227);
                                                                            var state_13346__$1 = function() {
                                                                              var statearr_13403 = state_13346;
                                                                              statearr_13403[7] = inst_13247__$1;
                                                                              return statearr_13403;
                                                                            }();
                                                                            if (inst_13247__$1) {
                                                                              var statearr_13404_13470 = state_13346__$1;
                                                                              statearr_13404_13470[1] = 16;
                                                                            } else {
                                                                              var statearr_13405_13471 = state_13346__$1;
                                                                              statearr_13405_13471[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_13347 === 9) {
                                                                              var inst_13275 = state_13346[2];
                                                                              var state_13346__$1 = state_13346;
                                                                              var statearr_13406_13472 = state_13346__$1;
                                                                              statearr_13406_13472[2] = inst_13275;
                                                                              statearr_13406_13472[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_13347 === 5) {
                                                                                var inst_13225 = cljs.core.deref.call(null, cs);
                                                                                var inst_13226 = cljs.core.seq.call(null, inst_13225);
                                                                                var inst_13227 = inst_13226;
                                                                                var inst_13228 = null;
                                                                                var inst_13229 = 0;
                                                                                var inst_13230 = 0;
                                                                                var state_13346__$1 = function() {
                                                                                  var statearr_13407 = state_13346;
                                                                                  statearr_13407[13] = inst_13229;
                                                                                  statearr_13407[15] = inst_13227;
                                                                                  statearr_13407[16] = inst_13230;
                                                                                  statearr_13407[17] = inst_13228;
                                                                                  return statearr_13407;
                                                                                }();
                                                                                var statearr_13408_13473 = state_13346__$1;
                                                                                statearr_13408_13473[2] = null;
                                                                                statearr_13408_13473[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_13347 === 14) {
                                                                                  var state_13346__$1 = state_13346;
                                                                                  var statearr_13409_13474 = state_13346__$1;
                                                                                  statearr_13409_13474[2] = null;
                                                                                  statearr_13409_13474[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_13347 === 45) {
                                                                                    var inst_13336 = state_13346[2];
                                                                                    var state_13346__$1 = state_13346;
                                                                                    var statearr_13410_13475 = state_13346__$1;
                                                                                    statearr_13410_13475[2] = inst_13336;
                                                                                    statearr_13410_13475[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_13347 === 26) {
                                                                                      var inst_13278 = state_13346[29];
                                                                                      var inst_13332 = state_13346[2];
                                                                                      var inst_13333 = cljs.core.seq.call(null, inst_13278);
                                                                                      var state_13346__$1 = function() {
                                                                                        var statearr_13411 = state_13346;
                                                                                        statearr_13411[31] = inst_13332;
                                                                                        return statearr_13411;
                                                                                      }();
                                                                                      if (inst_13333) {
                                                                                        var statearr_13412_13476 = state_13346__$1;
                                                                                        statearr_13412_13476[1] = 42;
                                                                                      } else {
                                                                                        var statearr_13413_13477 = state_13346__$1;
                                                                                        statearr_13413_13477[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_13347 === 16) {
                                                                                        var inst_13247 = state_13346[7];
                                                                                        var inst_13249 = cljs.core.chunked_seq_QMARK_.call(null, inst_13247);
                                                                                        var state_13346__$1 = state_13346;
                                                                                        if (inst_13249) {
                                                                                          var statearr_13414_13478 = state_13346__$1;
                                                                                          statearr_13414_13478[1] = 19;
                                                                                        } else {
                                                                                          var statearr_13415_13479 = state_13346__$1;
                                                                                          statearr_13415_13479[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_13347 === 38) {
                                                                                          var inst_13325 = state_13346[2];
                                                                                          var state_13346__$1 = state_13346;
                                                                                          var statearr_13416_13480 = state_13346__$1;
                                                                                          statearr_13416_13480[2] = inst_13325;
                                                                                          statearr_13416_13480[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_13347 === 30) {
                                                                                            var state_13346__$1 = state_13346;
                                                                                            var statearr_13417_13481 = state_13346__$1;
                                                                                            statearr_13417_13481[2] = null;
                                                                                            statearr_13417_13481[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_13347 === 10) {
                                                                                              var inst_13230 = state_13346[16];
                                                                                              var inst_13228 = state_13346[17];
                                                                                              var inst_13236 = cljs.core._nth.call(null, inst_13228, inst_13230);
                                                                                              var inst_13237 = cljs.core.nth.call(null, inst_13236, 0, null);
                                                                                              var inst_13238 = cljs.core.nth.call(null, inst_13236, 1, null);
                                                                                              var state_13346__$1 = function() {
                                                                                                var statearr_13418 = state_13346;
                                                                                                statearr_13418[26] = inst_13237;
                                                                                                return statearr_13418;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_13238)) {
                                                                                                var statearr_13419_13482 = state_13346__$1;
                                                                                                statearr_13419_13482[1] = 13;
                                                                                              } else {
                                                                                                var statearr_13420_13483 = state_13346__$1;
                                                                                                statearr_13420_13483[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_13347 === 18) {
                                                                                                var inst_13271 = state_13346[2];
                                                                                                var state_13346__$1 = state_13346;
                                                                                                var statearr_13421_13484 = state_13346__$1;
                                                                                                statearr_13421_13484[2] = inst_13271;
                                                                                                statearr_13421_13484[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_13347 === 42) {
                                                                                                  var state_13346__$1 = state_13346;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13346__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_13347 === 37) {
                                                                                                    var inst_13305 = state_13346[25];
                                                                                                    var inst_13218 = state_13346[11];
                                                                                                    var inst_13314 = state_13346[23];
                                                                                                    var inst_13314__$1 = cljs.core.first.call(null, inst_13305);
                                                                                                    var inst_13315 = cljs.core.async.put_BANG_.call(null, inst_13314__$1, inst_13218, done);
                                                                                                    var state_13346__$1 = function() {
                                                                                                      var statearr_13422 = state_13346;
                                                                                                      statearr_13422[23] = inst_13314__$1;
                                                                                                      return statearr_13422;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_13315)) {
                                                                                                      var statearr_13423_13485 = state_13346__$1;
                                                                                                      statearr_13423_13485[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_13424_13486 = state_13346__$1;
                                                                                                      statearr_13424_13486[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_13347 === 8) {
                                                                                                      var inst_13229 = state_13346[13];
                                                                                                      var inst_13230 = state_13346[16];
                                                                                                      var inst_13232 = inst_13230 < inst_13229;
                                                                                                      var inst_13233 = inst_13232;
                                                                                                      var state_13346__$1 = state_13346;
                                                                                                      if (cljs.core.truth_(inst_13233)) {
                                                                                                        var statearr_13425_13487 = state_13346__$1;
                                                                                                        statearr_13425_13487[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_13426_13488 = state_13346__$1;
                                                                                                        statearr_13426_13488[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6844__auto___13434, cs, m, dchan, dctr, done);
        return function(switch__6829__auto__, c__6844__auto___13434, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6830__auto__ = null;
            var state_machine__6830__auto____0 = function() {
              var statearr_13430 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13430[0] = state_machine__6830__auto__;
              statearr_13430[1] = 1;
              return statearr_13430;
            };
            var state_machine__6830__auto____1 = function(state_13346) {
              while (true) {
                var ret_value__6831__auto__ = function() {
                  try {
                    while (true) {
                      var result__6832__auto__ = switch__6829__auto__.call(null, state_13346);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6832__auto__;
                      }
                      break;
                    }
                  } catch (e13431) {
                    if (e13431 instanceof Object) {
                      var ex__6833__auto__ = e13431;
                      var statearr_13432_13489 = state_13346;
                      statearr_13432_13489[5] = ex__6833__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13346);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13431;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13490 = state_13346;
                  state_13346 = G__13490;
                  continue;
                } else {
                  return ret_value__6831__auto__;
                }
                break;
              }
            };
            state_machine__6830__auto__ = function(state_13346) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6830__auto____0.call(this);
                case 1:
                  return state_machine__6830__auto____1.call(this, state_13346);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
            return state_machine__6830__auto__;
          }();
        }(switch__6829__auto__, c__6844__auto___13434, cs, m, dchan, dctr, done);
      }();
      var state__6846__auto__ = function() {
        var statearr_13433 = f__6845__auto__.call(null);
        statearr_13433[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___13434;
        return statearr_13433;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
    };
  }(c__6844__auto___13434, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj13492 = {};
  return obj13492;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3627__auto__ = m;
    if (and__3627__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4275__auto__ = m == null ? null : m;
    return function() {
      var or__3639__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13493) {
    var map__13498 = p__13493;
    var map__13498__$1 = cljs.core.seq_QMARK_.call(null, map__13498) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13498) : map__13498;
    var opts = map__13498__$1;
    var statearr_13499_13502 = state;
    statearr_13499_13502[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__13498, map__13498__$1, opts) {
      return function(val) {
        var statearr_13500_13503 = state;
        statearr_13500_13503[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__13498, map__13498__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_13501_13504 = state;
      statearr_13501_13504[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13493 = null;
    if (arguments.length > 3) {
      p__13493 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13493);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13505) {
    var state = cljs.core.first(arglist__13505);
    arglist__13505 = cljs.core.next(arglist__13505);
    var cont_block = cljs.core.first(arglist__13505);
    arglist__13505 = cljs.core.next(arglist__13505);
    var ports = cljs.core.first(arglist__13505);
    var p__13493 = cljs.core.rest(arglist__13505);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13493);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t13625 !== "undefined") {
    } else {
      cljs.core.async.t13625 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta13626) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta13626 = meta13626;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t13625.cljs$lang$type = true;
      cljs.core.async.t13625.cljs$lang$ctorStr = "cljs.core.async/t13625";
      cljs.core.async.t13625.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
          return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t13625");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t13625.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("mode must be one of: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.solo_modes)) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null)))));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t13625.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_13627) {
          var self__ = this;
          var _13627__$1 = this;
          return self__.meta13626;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t13625.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_13627, meta13626__$1) {
          var self__ = this;
          var _13627__$1 = this;
          return new cljs.core.async.t13625(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta13626__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t13625 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t13625(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta13626) {
          return new cljs.core.async.t13625(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta13626);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t13625(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, null);
  }();
  var c__6844__auto___13744 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___13744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6845__auto__ = function() {
        var switch__6829__auto__ = function(c__6844__auto___13744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_13697) {
            var state_val_13698 = state_13697[1];
            if (state_val_13698 === 7) {
              var inst_13641 = state_13697[7];
              var inst_13646 = cljs.core.apply.call(null, cljs.core.hash_map, inst_13641);
              var state_13697__$1 = state_13697;
              var statearr_13699_13745 = state_13697__$1;
              statearr_13699_13745[2] = inst_13646;
              statearr_13699_13745[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_13698 === 20) {
                var inst_13656 = state_13697[8];
                var state_13697__$1 = state_13697;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13697__$1, 23, out, inst_13656);
              } else {
                if (state_val_13698 === 1) {
                  var inst_13631 = state_13697[9];
                  var inst_13631__$1 = calc_state.call(null);
                  var inst_13632 = cljs.core.seq_QMARK_.call(null, inst_13631__$1);
                  var state_13697__$1 = function() {
                    var statearr_13700 = state_13697;
                    statearr_13700[9] = inst_13631__$1;
                    return statearr_13700;
                  }();
                  if (inst_13632) {
                    var statearr_13701_13746 = state_13697__$1;
                    statearr_13701_13746[1] = 2;
                  } else {
                    var statearr_13702_13747 = state_13697__$1;
                    statearr_13702_13747[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13698 === 24) {
                    var inst_13649 = state_13697[10];
                    var inst_13641 = inst_13649;
                    var state_13697__$1 = function() {
                      var statearr_13703 = state_13697;
                      statearr_13703[7] = inst_13641;
                      return statearr_13703;
                    }();
                    var statearr_13704_13748 = state_13697__$1;
                    statearr_13704_13748[2] = null;
                    statearr_13704_13748[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13698 === 4) {
                      var inst_13631 = state_13697[9];
                      var inst_13637 = state_13697[2];
                      var inst_13638 = cljs.core.get.call(null, inst_13637, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_13639 = cljs.core.get.call(null, inst_13637, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_13640 = cljs.core.get.call(null, inst_13637, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_13641 = inst_13631;
                      var state_13697__$1 = function() {
                        var statearr_13705 = state_13697;
                        statearr_13705[11] = inst_13638;
                        statearr_13705[7] = inst_13641;
                        statearr_13705[12] = inst_13640;
                        statearr_13705[13] = inst_13639;
                        return statearr_13705;
                      }();
                      var statearr_13706_13749 = state_13697__$1;
                      statearr_13706_13749[2] = null;
                      statearr_13706_13749[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13698 === 15) {
                        var state_13697__$1 = state_13697;
                        var statearr_13707_13750 = state_13697__$1;
                        statearr_13707_13750[2] = null;
                        statearr_13707_13750[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13698 === 21) {
                          var inst_13649 = state_13697[10];
                          var inst_13641 = inst_13649;
                          var state_13697__$1 = function() {
                            var statearr_13708 = state_13697;
                            statearr_13708[7] = inst_13641;
                            return statearr_13708;
                          }();
                          var statearr_13709_13751 = state_13697__$1;
                          statearr_13709_13751[2] = null;
                          statearr_13709_13751[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13698 === 13) {
                            var inst_13693 = state_13697[2];
                            var state_13697__$1 = state_13697;
                            var statearr_13710_13752 = state_13697__$1;
                            statearr_13710_13752[2] = inst_13693;
                            statearr_13710_13752[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13698 === 22) {
                              var inst_13691 = state_13697[2];
                              var state_13697__$1 = state_13697;
                              var statearr_13711_13753 = state_13697__$1;
                              statearr_13711_13753[2] = inst_13691;
                              statearr_13711_13753[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13698 === 6) {
                                var inst_13695 = state_13697[2];
                                var state_13697__$1 = state_13697;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13697__$1, inst_13695);
                              } else {
                                if (state_val_13698 === 25) {
                                  var state_13697__$1 = state_13697;
                                  var statearr_13712_13754 = state_13697__$1;
                                  statearr_13712_13754[2] = null;
                                  statearr_13712_13754[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13698 === 17) {
                                    var inst_13671 = state_13697[14];
                                    var state_13697__$1 = state_13697;
                                    var statearr_13713_13755 = state_13697__$1;
                                    statearr_13713_13755[2] = inst_13671;
                                    statearr_13713_13755[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13698 === 3) {
                                      var inst_13631 = state_13697[9];
                                      var state_13697__$1 = state_13697;
                                      var statearr_13714_13756 = state_13697__$1;
                                      statearr_13714_13756[2] = inst_13631;
                                      statearr_13714_13756[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13698 === 12) {
                                        var inst_13671 = state_13697[14];
                                        var inst_13657 = state_13697[15];
                                        var inst_13652 = state_13697[16];
                                        var inst_13671__$1 = inst_13652.call(null, inst_13657);
                                        var state_13697__$1 = function() {
                                          var statearr_13715 = state_13697;
                                          statearr_13715[14] = inst_13671__$1;
                                          return statearr_13715;
                                        }();
                                        if (cljs.core.truth_(inst_13671__$1)) {
                                          var statearr_13716_13757 = state_13697__$1;
                                          statearr_13716_13757[1] = 17;
                                        } else {
                                          var statearr_13717_13758 = state_13697__$1;
                                          statearr_13717_13758[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_13698 === 2) {
                                          var inst_13631 = state_13697[9];
                                          var inst_13634 = cljs.core.apply.call(null, cljs.core.hash_map, inst_13631);
                                          var state_13697__$1 = state_13697;
                                          var statearr_13718_13759 = state_13697__$1;
                                          statearr_13718_13759[2] = inst_13634;
                                          statearr_13718_13759[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13698 === 23) {
                                            var inst_13682 = state_13697[2];
                                            var state_13697__$1 = state_13697;
                                            if (cljs.core.truth_(inst_13682)) {
                                              var statearr_13719_13760 = state_13697__$1;
                                              statearr_13719_13760[1] = 24;
                                            } else {
                                              var statearr_13720_13761 = state_13697__$1;
                                              statearr_13720_13761[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_13698 === 19) {
                                              var inst_13679 = state_13697[2];
                                              var state_13697__$1 = state_13697;
                                              if (cljs.core.truth_(inst_13679)) {
                                                var statearr_13721_13762 = state_13697__$1;
                                                statearr_13721_13762[1] = 20;
                                              } else {
                                                var statearr_13722_13763 = state_13697__$1;
                                                statearr_13722_13763[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13698 === 11) {
                                                var inst_13656 = state_13697[8];
                                                var inst_13662 = inst_13656 == null;
                                                var state_13697__$1 = state_13697;
                                                if (cljs.core.truth_(inst_13662)) {
                                                  var statearr_13723_13764 = state_13697__$1;
                                                  statearr_13723_13764[1] = 14;
                                                } else {
                                                  var statearr_13724_13765 = state_13697__$1;
                                                  statearr_13724_13765[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_13698 === 9) {
                                                  var inst_13649 = state_13697[10];
                                                  var inst_13649__$1 = state_13697[2];
                                                  var inst_13650 = cljs.core.get.call(null, inst_13649__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_13651 = cljs.core.get.call(null, inst_13649__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_13652 = cljs.core.get.call(null, inst_13649__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_13697__$1 = function() {
                                                    var statearr_13725 = state_13697;
                                                    statearr_13725[17] = inst_13651;
                                                    statearr_13725[10] = inst_13649__$1;
                                                    statearr_13725[16] = inst_13652;
                                                    return statearr_13725;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_13697__$1, 10, inst_13650);
                                                } else {
                                                  if (state_val_13698 === 5) {
                                                    var inst_13641 = state_13697[7];
                                                    var inst_13644 = cljs.core.seq_QMARK_.call(null, inst_13641);
                                                    var state_13697__$1 = state_13697;
                                                    if (inst_13644) {
                                                      var statearr_13726_13766 = state_13697__$1;
                                                      statearr_13726_13766[1] = 7;
                                                    } else {
                                                      var statearr_13727_13767 = state_13697__$1;
                                                      statearr_13727_13767[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13698 === 14) {
                                                      var inst_13657 = state_13697[15];
                                                      var inst_13664 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_13657);
                                                      var state_13697__$1 = state_13697;
                                                      var statearr_13728_13768 = state_13697__$1;
                                                      statearr_13728_13768[2] = inst_13664;
                                                      statearr_13728_13768[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_13698 === 26) {
                                                        var inst_13687 = state_13697[2];
                                                        var state_13697__$1 = state_13697;
                                                        var statearr_13729_13769 = state_13697__$1;
                                                        statearr_13729_13769[2] = inst_13687;
                                                        statearr_13729_13769[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_13698 === 16) {
                                                          var inst_13667 = state_13697[2];
                                                          var inst_13668 = calc_state.call(null);
                                                          var inst_13641 = inst_13668;
                                                          var state_13697__$1 = function() {
                                                            var statearr_13730 = state_13697;
                                                            statearr_13730[18] = inst_13667;
                                                            statearr_13730[7] = inst_13641;
                                                            return statearr_13730;
                                                          }();
                                                          var statearr_13731_13770 = state_13697__$1;
                                                          statearr_13731_13770[2] = null;
                                                          statearr_13731_13770[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_13698 === 10) {
                                                            var inst_13656 = state_13697[8];
                                                            var inst_13657 = state_13697[15];
                                                            var inst_13655 = state_13697[2];
                                                            var inst_13656__$1 = cljs.core.nth.call(null, inst_13655, 0, null);
                                                            var inst_13657__$1 = cljs.core.nth.call(null, inst_13655, 1, null);
                                                            var inst_13658 = inst_13656__$1 == null;
                                                            var inst_13659 = cljs.core._EQ_.call(null, inst_13657__$1, change);
                                                            var inst_13660 = inst_13658 || inst_13659;
                                                            var state_13697__$1 = function() {
                                                              var statearr_13732 = state_13697;
                                                              statearr_13732[8] = inst_13656__$1;
                                                              statearr_13732[15] = inst_13657__$1;
                                                              return statearr_13732;
                                                            }();
                                                            if (cljs.core.truth_(inst_13660)) {
                                                              var statearr_13733_13771 = state_13697__$1;
                                                              statearr_13733_13771[1] = 11;
                                                            } else {
                                                              var statearr_13734_13772 = state_13697__$1;
                                                              statearr_13734_13772[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_13698 === 18) {
                                                              var inst_13657 = state_13697[15];
                                                              var inst_13651 = state_13697[17];
                                                              var inst_13652 = state_13697[16];
                                                              var inst_13674 = cljs.core.empty_QMARK_.call(null, inst_13652);
                                                              var inst_13675 = inst_13651.call(null, inst_13657);
                                                              var inst_13676 = cljs.core.not.call(null, inst_13675);
                                                              var inst_13677 = inst_13674 && inst_13676;
                                                              var state_13697__$1 = state_13697;
                                                              var statearr_13735_13773 = state_13697__$1;
                                                              statearr_13735_13773[2] = inst_13677;
                                                              statearr_13735_13773[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_13698 === 8) {
                                                                var inst_13641 = state_13697[7];
                                                                var state_13697__$1 = state_13697;
                                                                var statearr_13736_13774 = state_13697__$1;
                                                                statearr_13736_13774[2] = inst_13641;
                                                                statearr_13736_13774[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6844__auto___13744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6829__auto__, c__6844__auto___13744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6830__auto__ = null;
            var state_machine__6830__auto____0 = function() {
              var statearr_13740 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_13740[0] = state_machine__6830__auto__;
              statearr_13740[1] = 1;
              return statearr_13740;
            };
            var state_machine__6830__auto____1 = function(state_13697) {
              while (true) {
                var ret_value__6831__auto__ = function() {
                  try {
                    while (true) {
                      var result__6832__auto__ = switch__6829__auto__.call(null, state_13697);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6832__auto__;
                      }
                      break;
                    }
                  } catch (e13741) {
                    if (e13741 instanceof Object) {
                      var ex__6833__auto__ = e13741;
                      var statearr_13742_13775 = state_13697;
                      statearr_13742_13775[5] = ex__6833__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13697);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e13741;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__13776 = state_13697;
                  state_13697 = G__13776;
                  continue;
                } else {
                  return ret_value__6831__auto__;
                }
                break;
              }
            };
            state_machine__6830__auto__ = function(state_13697) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6830__auto____0.call(this);
                case 1:
                  return state_machine__6830__auto____1.call(this, state_13697);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
            return state_machine__6830__auto__;
          }();
        }(switch__6829__auto__, c__6844__auto___13744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6846__auto__ = function() {
        var statearr_13743 = f__6845__auto__.call(null);
        statearr_13743[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___13744;
        return statearr_13743;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
    };
  }(c__6844__auto___13744, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj13778 = {};
  return obj13778;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3627__auto__ = p;
    if (and__3627__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4275__auto__ = p == null ? null : p;
    return function() {
      var or__3639__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3627__auto__ = p;
    if (and__3627__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4275__auto__ = p == null ? null : p;
    return function() {
      var or__3639__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3627__auto__ = p;
      if (and__3627__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4275__auto__ = p == null ? null : p;
      return function() {
        var or__3639__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3627__auto__ = p;
      if (and__3627__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4275__auto__ = p == null ? null : p;
      return function() {
        var or__3639__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3639__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3639__auto__, mults) {
            return function(p1__13779_SHARP_) {
              if (cljs.core.truth_(p1__13779_SHARP_.call(null, topic))) {
                return p1__13779_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__13779_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3639__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t13902 !== "undefined") {
      } else {
        cljs.core.async.t13902 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta13903) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta13903 = meta13903;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t13902.cljs$lang$type = true;
        cljs.core.async.t13902.cljs$lang$ctorStr = "cljs.core.async/t13902";
        cljs.core.async.t13902.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
            return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t13902");
          };
        }(mults, ensure_mult);
        cljs.core.async.t13902.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t13902.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t13902.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t13902.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t13902.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t13902.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t13902.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t13902.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_13904) {
            var self__ = this;
            var _13904__$1 = this;
            return self__.meta13903;
          };
        }(mults, ensure_mult);
        cljs.core.async.t13902.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_13904, meta13903__$1) {
            var self__ = this;
            var _13904__$1 = this;
            return new cljs.core.async.t13902(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta13903__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t13902 = function(mults, ensure_mult) {
          return function __GT_t13902(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta13903) {
            return new cljs.core.async.t13902(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta13903);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t13902(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null);
    }();
    var c__6844__auto___14024 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___14024, mults, ensure_mult, p) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___14024, mults, ensure_mult, p) {
            return function(state_13976) {
              var state_val_13977 = state_13976[1];
              if (state_val_13977 === 7) {
                var inst_13972 = state_13976[2];
                var state_13976__$1 = state_13976;
                var statearr_13978_14025 = state_13976__$1;
                statearr_13978_14025[2] = inst_13972;
                statearr_13978_14025[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_13977 === 20) {
                  var state_13976__$1 = state_13976;
                  var statearr_13979_14026 = state_13976__$1;
                  statearr_13979_14026[2] = null;
                  statearr_13979_14026[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_13977 === 1) {
                    var state_13976__$1 = state_13976;
                    var statearr_13980_14027 = state_13976__$1;
                    statearr_13980_14027[2] = null;
                    statearr_13980_14027[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_13977 === 24) {
                      var inst_13955 = state_13976[7];
                      var inst_13964 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_13955);
                      var state_13976__$1 = state_13976;
                      var statearr_13981_14028 = state_13976__$1;
                      statearr_13981_14028[2] = inst_13964;
                      statearr_13981_14028[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_13977 === 4) {
                        var inst_13907 = state_13976[8];
                        var inst_13907__$1 = state_13976[2];
                        var inst_13908 = inst_13907__$1 == null;
                        var state_13976__$1 = function() {
                          var statearr_13982 = state_13976;
                          statearr_13982[8] = inst_13907__$1;
                          return statearr_13982;
                        }();
                        if (cljs.core.truth_(inst_13908)) {
                          var statearr_13983_14029 = state_13976__$1;
                          statearr_13983_14029[1] = 5;
                        } else {
                          var statearr_13984_14030 = state_13976__$1;
                          statearr_13984_14030[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_13977 === 15) {
                          var inst_13949 = state_13976[2];
                          var state_13976__$1 = state_13976;
                          var statearr_13985_14031 = state_13976__$1;
                          statearr_13985_14031[2] = inst_13949;
                          statearr_13985_14031[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_13977 === 21) {
                            var inst_13969 = state_13976[2];
                            var state_13976__$1 = function() {
                              var statearr_13986 = state_13976;
                              statearr_13986[9] = inst_13969;
                              return statearr_13986;
                            }();
                            var statearr_13987_14032 = state_13976__$1;
                            statearr_13987_14032[2] = null;
                            statearr_13987_14032[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_13977 === 13) {
                              var inst_13931 = state_13976[10];
                              var inst_13933 = cljs.core.chunked_seq_QMARK_.call(null, inst_13931);
                              var state_13976__$1 = state_13976;
                              if (inst_13933) {
                                var statearr_13988_14033 = state_13976__$1;
                                statearr_13988_14033[1] = 16;
                              } else {
                                var statearr_13989_14034 = state_13976__$1;
                                statearr_13989_14034[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_13977 === 22) {
                                var inst_13961 = state_13976[2];
                                var state_13976__$1 = state_13976;
                                if (cljs.core.truth_(inst_13961)) {
                                  var statearr_13990_14035 = state_13976__$1;
                                  statearr_13990_14035[1] = 23;
                                } else {
                                  var statearr_13991_14036 = state_13976__$1;
                                  statearr_13991_14036[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_13977 === 6) {
                                  var inst_13955 = state_13976[7];
                                  var inst_13957 = state_13976[11];
                                  var inst_13907 = state_13976[8];
                                  var inst_13955__$1 = topic_fn.call(null, inst_13907);
                                  var inst_13956 = cljs.core.deref.call(null, mults);
                                  var inst_13957__$1 = cljs.core.get.call(null, inst_13956, inst_13955__$1);
                                  var state_13976__$1 = function() {
                                    var statearr_13992 = state_13976;
                                    statearr_13992[7] = inst_13955__$1;
                                    statearr_13992[11] = inst_13957__$1;
                                    return statearr_13992;
                                  }();
                                  if (cljs.core.truth_(inst_13957__$1)) {
                                    var statearr_13993_14037 = state_13976__$1;
                                    statearr_13993_14037[1] = 19;
                                  } else {
                                    var statearr_13994_14038 = state_13976__$1;
                                    statearr_13994_14038[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_13977 === 25) {
                                    var inst_13966 = state_13976[2];
                                    var state_13976__$1 = state_13976;
                                    var statearr_13995_14039 = state_13976__$1;
                                    statearr_13995_14039[2] = inst_13966;
                                    statearr_13995_14039[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_13977 === 17) {
                                      var inst_13931 = state_13976[10];
                                      var inst_13940 = cljs.core.first.call(null, inst_13931);
                                      var inst_13941 = cljs.core.async.muxch_STAR_.call(null, inst_13940);
                                      var inst_13942 = cljs.core.async.close_BANG_.call(null, inst_13941);
                                      var inst_13943 = cljs.core.next.call(null, inst_13931);
                                      var inst_13917 = inst_13943;
                                      var inst_13918 = null;
                                      var inst_13919 = 0;
                                      var inst_13920 = 0;
                                      var state_13976__$1 = function() {
                                        var statearr_13996 = state_13976;
                                        statearr_13996[12] = inst_13917;
                                        statearr_13996[13] = inst_13919;
                                        statearr_13996[14] = inst_13942;
                                        statearr_13996[15] = inst_13918;
                                        statearr_13996[16] = inst_13920;
                                        return statearr_13996;
                                      }();
                                      var statearr_13997_14040 = state_13976__$1;
                                      statearr_13997_14040[2] = null;
                                      statearr_13997_14040[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_13977 === 3) {
                                        var inst_13974 = state_13976[2];
                                        var state_13976__$1 = state_13976;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13976__$1, inst_13974);
                                      } else {
                                        if (state_val_13977 === 12) {
                                          var inst_13951 = state_13976[2];
                                          var state_13976__$1 = state_13976;
                                          var statearr_13998_14041 = state_13976__$1;
                                          statearr_13998_14041[2] = inst_13951;
                                          statearr_13998_14041[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_13977 === 2) {
                                            var state_13976__$1 = state_13976;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13976__$1, 4, ch);
                                          } else {
                                            if (state_val_13977 === 23) {
                                              var state_13976__$1 = state_13976;
                                              var statearr_13999_14042 = state_13976__$1;
                                              statearr_13999_14042[2] = null;
                                              statearr_13999_14042[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_13977 === 19) {
                                                var inst_13957 = state_13976[11];
                                                var inst_13907 = state_13976[8];
                                                var inst_13959 = cljs.core.async.muxch_STAR_.call(null, inst_13957);
                                                var state_13976__$1 = state_13976;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13976__$1, 22, inst_13959, inst_13907);
                                              } else {
                                                if (state_val_13977 === 11) {
                                                  var inst_13931 = state_13976[10];
                                                  var inst_13917 = state_13976[12];
                                                  var inst_13931__$1 = cljs.core.seq.call(null, inst_13917);
                                                  var state_13976__$1 = function() {
                                                    var statearr_14000 = state_13976;
                                                    statearr_14000[10] = inst_13931__$1;
                                                    return statearr_14000;
                                                  }();
                                                  if (inst_13931__$1) {
                                                    var statearr_14001_14043 = state_13976__$1;
                                                    statearr_14001_14043[1] = 13;
                                                  } else {
                                                    var statearr_14002_14044 = state_13976__$1;
                                                    statearr_14002_14044[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_13977 === 9) {
                                                    var inst_13953 = state_13976[2];
                                                    var state_13976__$1 = state_13976;
                                                    var statearr_14003_14045 = state_13976__$1;
                                                    statearr_14003_14045[2] = inst_13953;
                                                    statearr_14003_14045[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_13977 === 5) {
                                                      var inst_13914 = cljs.core.deref.call(null, mults);
                                                      var inst_13915 = cljs.core.vals.call(null, inst_13914);
                                                      var inst_13916 = cljs.core.seq.call(null, inst_13915);
                                                      var inst_13917 = inst_13916;
                                                      var inst_13918 = null;
                                                      var inst_13919 = 0;
                                                      var inst_13920 = 0;
                                                      var state_13976__$1 = function() {
                                                        var statearr_14004 = state_13976;
                                                        statearr_14004[12] = inst_13917;
                                                        statearr_14004[13] = inst_13919;
                                                        statearr_14004[15] = inst_13918;
                                                        statearr_14004[16] = inst_13920;
                                                        return statearr_14004;
                                                      }();
                                                      var statearr_14005_14046 = state_13976__$1;
                                                      statearr_14005_14046[2] = null;
                                                      statearr_14005_14046[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_13977 === 14) {
                                                        var state_13976__$1 = state_13976;
                                                        var statearr_14009_14047 = state_13976__$1;
                                                        statearr_14009_14047[2] = null;
                                                        statearr_14009_14047[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_13977 === 16) {
                                                          var inst_13931 = state_13976[10];
                                                          var inst_13935 = cljs.core.chunk_first.call(null, inst_13931);
                                                          var inst_13936 = cljs.core.chunk_rest.call(null, inst_13931);
                                                          var inst_13937 = cljs.core.count.call(null, inst_13935);
                                                          var inst_13917 = inst_13936;
                                                          var inst_13918 = inst_13935;
                                                          var inst_13919 = inst_13937;
                                                          var inst_13920 = 0;
                                                          var state_13976__$1 = function() {
                                                            var statearr_14010 = state_13976;
                                                            statearr_14010[12] = inst_13917;
                                                            statearr_14010[13] = inst_13919;
                                                            statearr_14010[15] = inst_13918;
                                                            statearr_14010[16] = inst_13920;
                                                            return statearr_14010;
                                                          }();
                                                          var statearr_14011_14048 = state_13976__$1;
                                                          statearr_14011_14048[2] = null;
                                                          statearr_14011_14048[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_13977 === 10) {
                                                            var inst_13917 = state_13976[12];
                                                            var inst_13919 = state_13976[13];
                                                            var inst_13918 = state_13976[15];
                                                            var inst_13920 = state_13976[16];
                                                            var inst_13925 = cljs.core._nth.call(null, inst_13918, inst_13920);
                                                            var inst_13926 = cljs.core.async.muxch_STAR_.call(null, inst_13925);
                                                            var inst_13927 = cljs.core.async.close_BANG_.call(null, inst_13926);
                                                            var inst_13928 = inst_13920 + 1;
                                                            var tmp14006 = inst_13917;
                                                            var tmp14007 = inst_13919;
                                                            var tmp14008 = inst_13918;
                                                            var inst_13917__$1 = tmp14006;
                                                            var inst_13918__$1 = tmp14008;
                                                            var inst_13919__$1 = tmp14007;
                                                            var inst_13920__$1 = inst_13928;
                                                            var state_13976__$1 = function() {
                                                              var statearr_14012 = state_13976;
                                                              statearr_14012[12] = inst_13917__$1;
                                                              statearr_14012[13] = inst_13919__$1;
                                                              statearr_14012[15] = inst_13918__$1;
                                                              statearr_14012[16] = inst_13920__$1;
                                                              statearr_14012[17] = inst_13927;
                                                              return statearr_14012;
                                                            }();
                                                            var statearr_14013_14049 = state_13976__$1;
                                                            statearr_14013_14049[2] = null;
                                                            statearr_14013_14049[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_13977 === 18) {
                                                              var inst_13946 = state_13976[2];
                                                              var state_13976__$1 = state_13976;
                                                              var statearr_14014_14050 = state_13976__$1;
                                                              statearr_14014_14050[2] = inst_13946;
                                                              statearr_14014_14050[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_13977 === 8) {
                                                                var inst_13919 = state_13976[13];
                                                                var inst_13920 = state_13976[16];
                                                                var inst_13922 = inst_13920 < inst_13919;
                                                                var inst_13923 = inst_13922;
                                                                var state_13976__$1 = state_13976;
                                                                if (cljs.core.truth_(inst_13923)) {
                                                                  var statearr_14015_14051 = state_13976__$1;
                                                                  statearr_14015_14051[1] = 10;
                                                                } else {
                                                                  var statearr_14016_14052 = state_13976__$1;
                                                                  statearr_14016_14052[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___14024, mults, ensure_mult, p);
          return function(switch__6829__auto__, c__6844__auto___14024, mults, ensure_mult, p) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_14020 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14020[0] = state_machine__6830__auto__;
                statearr_14020[1] = 1;
                return statearr_14020;
              };
              var state_machine__6830__auto____1 = function(state_13976) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_13976);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e14021) {
                      if (e14021 instanceof Object) {
                        var ex__6833__auto__ = e14021;
                        var statearr_14022_14053 = state_13976;
                        statearr_14022_14053[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_13976);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14021;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14054 = state_13976;
                    state_13976 = G__14054;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_13976) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_13976);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___14024, mults, ensure_mult, p);
        }();
        var state__6846__auto__ = function() {
          var statearr_14023 = f__6845__auto__.call(null);
          statearr_14023[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___14024;
          return statearr_14023;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___14024, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6844__auto___14191 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___14191, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___14191, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_14161) {
              var state_val_14162 = state_14161[1];
              if (state_val_14162 === 7) {
                var state_14161__$1 = state_14161;
                var statearr_14163_14192 = state_14161__$1;
                statearr_14163_14192[2] = null;
                statearr_14163_14192[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14162 === 1) {
                  var state_14161__$1 = state_14161;
                  var statearr_14164_14193 = state_14161__$1;
                  statearr_14164_14193[2] = null;
                  statearr_14164_14193[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14162 === 4) {
                    var inst_14125 = state_14161[7];
                    var inst_14127 = inst_14125 < cnt;
                    var state_14161__$1 = state_14161;
                    if (cljs.core.truth_(inst_14127)) {
                      var statearr_14165_14194 = state_14161__$1;
                      statearr_14165_14194[1] = 6;
                    } else {
                      var statearr_14166_14195 = state_14161__$1;
                      statearr_14166_14195[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14162 === 15) {
                      var inst_14157 = state_14161[2];
                      var state_14161__$1 = state_14161;
                      var statearr_14167_14196 = state_14161__$1;
                      statearr_14167_14196[2] = inst_14157;
                      statearr_14167_14196[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14162 === 13) {
                        var inst_14150 = cljs.core.async.close_BANG_.call(null, out);
                        var state_14161__$1 = state_14161;
                        var statearr_14168_14197 = state_14161__$1;
                        statearr_14168_14197[2] = inst_14150;
                        statearr_14168_14197[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14162 === 6) {
                          var state_14161__$1 = state_14161;
                          var statearr_14169_14198 = state_14161__$1;
                          statearr_14169_14198[2] = null;
                          statearr_14169_14198[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14162 === 3) {
                            var inst_14159 = state_14161[2];
                            var state_14161__$1 = state_14161;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14161__$1, inst_14159);
                          } else {
                            if (state_val_14162 === 12) {
                              var inst_14147 = state_14161[8];
                              var inst_14147__$1 = state_14161[2];
                              var inst_14148 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_14147__$1);
                              var state_14161__$1 = function() {
                                var statearr_14170 = state_14161;
                                statearr_14170[8] = inst_14147__$1;
                                return statearr_14170;
                              }();
                              if (cljs.core.truth_(inst_14148)) {
                                var statearr_14171_14199 = state_14161__$1;
                                statearr_14171_14199[1] = 13;
                              } else {
                                var statearr_14172_14200 = state_14161__$1;
                                statearr_14172_14200[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14162 === 2) {
                                var inst_14124 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_14125 = 0;
                                var state_14161__$1 = function() {
                                  var statearr_14173 = state_14161;
                                  statearr_14173[7] = inst_14125;
                                  statearr_14173[9] = inst_14124;
                                  return statearr_14173;
                                }();
                                var statearr_14174_14201 = state_14161__$1;
                                statearr_14174_14201[2] = null;
                                statearr_14174_14201[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14162 === 11) {
                                  var inst_14125 = state_14161[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_14161, 10, Object, null, 9);
                                  var inst_14134 = chs__$1.call(null, inst_14125);
                                  var inst_14135 = done.call(null, inst_14125);
                                  var inst_14136 = cljs.core.async.take_BANG_.call(null, inst_14134, inst_14135);
                                  var state_14161__$1 = state_14161;
                                  var statearr_14175_14202 = state_14161__$1;
                                  statearr_14175_14202[2] = inst_14136;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14161__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14162 === 9) {
                                    var inst_14125 = state_14161[7];
                                    var inst_14138 = state_14161[2];
                                    var inst_14139 = inst_14125 + 1;
                                    var inst_14125__$1 = inst_14139;
                                    var state_14161__$1 = function() {
                                      var statearr_14176 = state_14161;
                                      statearr_14176[10] = inst_14138;
                                      statearr_14176[7] = inst_14125__$1;
                                      return statearr_14176;
                                    }();
                                    var statearr_14177_14203 = state_14161__$1;
                                    statearr_14177_14203[2] = null;
                                    statearr_14177_14203[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14162 === 5) {
                                      var inst_14145 = state_14161[2];
                                      var state_14161__$1 = function() {
                                        var statearr_14178 = state_14161;
                                        statearr_14178[11] = inst_14145;
                                        return statearr_14178;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14161__$1, 12, dchan);
                                    } else {
                                      if (state_val_14162 === 14) {
                                        var inst_14147 = state_14161[8];
                                        var inst_14152 = cljs.core.apply.call(null, f, inst_14147);
                                        var state_14161__$1 = state_14161;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14161__$1, 16, out, inst_14152);
                                      } else {
                                        if (state_val_14162 === 16) {
                                          var inst_14154 = state_14161[2];
                                          var state_14161__$1 = function() {
                                            var statearr_14179 = state_14161;
                                            statearr_14179[12] = inst_14154;
                                            return statearr_14179;
                                          }();
                                          var statearr_14180_14204 = state_14161__$1;
                                          statearr_14180_14204[2] = null;
                                          statearr_14180_14204[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14162 === 10) {
                                            var inst_14129 = state_14161[2];
                                            var inst_14130 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_14161__$1 = function() {
                                              var statearr_14181 = state_14161;
                                              statearr_14181[13] = inst_14129;
                                              return statearr_14181;
                                            }();
                                            var statearr_14182_14205 = state_14161__$1;
                                            statearr_14182_14205[2] = inst_14130;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14161__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14162 === 8) {
                                              var inst_14143 = state_14161[2];
                                              var state_14161__$1 = state_14161;
                                              var statearr_14183_14206 = state_14161__$1;
                                              statearr_14183_14206[2] = inst_14143;
                                              statearr_14183_14206[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___14191, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6829__auto__, c__6844__auto___14191, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_14187 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14187[0] = state_machine__6830__auto__;
                statearr_14187[1] = 1;
                return statearr_14187;
              };
              var state_machine__6830__auto____1 = function(state_14161) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_14161);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e14188) {
                      if (e14188 instanceof Object) {
                        var ex__6833__auto__ = e14188;
                        var statearr_14189_14207 = state_14161;
                        statearr_14189_14207[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14161);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14188;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14208 = state_14161;
                    state_14161 = G__14208;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_14161) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_14161);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___14191, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6846__auto__ = function() {
          var statearr_14190 = f__6845__auto__.call(null);
          statearr_14190[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___14191;
          return statearr_14190;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___14191, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6844__auto___14316 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___14316, out) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___14316, out) {
            return function(state_14292) {
              var state_val_14293 = state_14292[1];
              if (state_val_14293 === 7) {
                var inst_14272 = state_14292[7];
                var inst_14271 = state_14292[8];
                var inst_14271__$1 = state_14292[2];
                var inst_14272__$1 = cljs.core.nth.call(null, inst_14271__$1, 0, null);
                var inst_14273 = cljs.core.nth.call(null, inst_14271__$1, 1, null);
                var inst_14274 = inst_14272__$1 == null;
                var state_14292__$1 = function() {
                  var statearr_14294 = state_14292;
                  statearr_14294[9] = inst_14273;
                  statearr_14294[7] = inst_14272__$1;
                  statearr_14294[8] = inst_14271__$1;
                  return statearr_14294;
                }();
                if (cljs.core.truth_(inst_14274)) {
                  var statearr_14295_14317 = state_14292__$1;
                  statearr_14295_14317[1] = 8;
                } else {
                  var statearr_14296_14318 = state_14292__$1;
                  statearr_14296_14318[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14293 === 1) {
                  var inst_14263 = cljs.core.vec.call(null, chs);
                  var inst_14264 = inst_14263;
                  var state_14292__$1 = function() {
                    var statearr_14297 = state_14292;
                    statearr_14297[10] = inst_14264;
                    return statearr_14297;
                  }();
                  var statearr_14298_14319 = state_14292__$1;
                  statearr_14298_14319[2] = null;
                  statearr_14298_14319[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14293 === 4) {
                    var inst_14264 = state_14292[10];
                    var state_14292__$1 = state_14292;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_14292__$1, 7, inst_14264);
                  } else {
                    if (state_val_14293 === 6) {
                      var inst_14288 = state_14292[2];
                      var state_14292__$1 = state_14292;
                      var statearr_14299_14320 = state_14292__$1;
                      statearr_14299_14320[2] = inst_14288;
                      statearr_14299_14320[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14293 === 3) {
                        var inst_14290 = state_14292[2];
                        var state_14292__$1 = state_14292;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14292__$1, inst_14290);
                      } else {
                        if (state_val_14293 === 2) {
                          var inst_14264 = state_14292[10];
                          var inst_14266 = cljs.core.count.call(null, inst_14264);
                          var inst_14267 = inst_14266 > 0;
                          var state_14292__$1 = state_14292;
                          if (cljs.core.truth_(inst_14267)) {
                            var statearr_14301_14321 = state_14292__$1;
                            statearr_14301_14321[1] = 4;
                          } else {
                            var statearr_14302_14322 = state_14292__$1;
                            statearr_14302_14322[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14293 === 11) {
                            var inst_14264 = state_14292[10];
                            var inst_14281 = state_14292[2];
                            var tmp14300 = inst_14264;
                            var inst_14264__$1 = tmp14300;
                            var state_14292__$1 = function() {
                              var statearr_14303 = state_14292;
                              statearr_14303[10] = inst_14264__$1;
                              statearr_14303[11] = inst_14281;
                              return statearr_14303;
                            }();
                            var statearr_14304_14323 = state_14292__$1;
                            statearr_14304_14323[2] = null;
                            statearr_14304_14323[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14293 === 9) {
                              var inst_14272 = state_14292[7];
                              var state_14292__$1 = state_14292;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14292__$1, 11, out, inst_14272);
                            } else {
                              if (state_val_14293 === 5) {
                                var inst_14286 = cljs.core.async.close_BANG_.call(null, out);
                                var state_14292__$1 = state_14292;
                                var statearr_14305_14324 = state_14292__$1;
                                statearr_14305_14324[2] = inst_14286;
                                statearr_14305_14324[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14293 === 10) {
                                  var inst_14284 = state_14292[2];
                                  var state_14292__$1 = state_14292;
                                  var statearr_14306_14325 = state_14292__$1;
                                  statearr_14306_14325[2] = inst_14284;
                                  statearr_14306_14325[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14293 === 8) {
                                    var inst_14273 = state_14292[9];
                                    var inst_14272 = state_14292[7];
                                    var inst_14264 = state_14292[10];
                                    var inst_14271 = state_14292[8];
                                    var inst_14276 = function() {
                                      var c = inst_14273;
                                      var v = inst_14272;
                                      var vec__14269 = inst_14271;
                                      var cs = inst_14264;
                                      return function(c, v, vec__14269, cs, inst_14273, inst_14272, inst_14264, inst_14271, state_val_14293, c__6844__auto___14316, out) {
                                        return function(p1__14209_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__14209_SHARP_);
                                        };
                                      }(c, v, vec__14269, cs, inst_14273, inst_14272, inst_14264, inst_14271, state_val_14293, c__6844__auto___14316, out);
                                    }();
                                    var inst_14277 = cljs.core.filterv.call(null, inst_14276, inst_14264);
                                    var inst_14264__$1 = inst_14277;
                                    var state_14292__$1 = function() {
                                      var statearr_14307 = state_14292;
                                      statearr_14307[10] = inst_14264__$1;
                                      return statearr_14307;
                                    }();
                                    var statearr_14308_14326 = state_14292__$1;
                                    statearr_14308_14326[2] = null;
                                    statearr_14308_14326[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___14316, out);
          return function(switch__6829__auto__, c__6844__auto___14316, out) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_14312 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_14312[0] = state_machine__6830__auto__;
                statearr_14312[1] = 1;
                return statearr_14312;
              };
              var state_machine__6830__auto____1 = function(state_14292) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_14292);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e14313) {
                      if (e14313 instanceof Object) {
                        var ex__6833__auto__ = e14313;
                        var statearr_14314_14327 = state_14292;
                        statearr_14314_14327[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14292);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14313;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14328 = state_14292;
                    state_14292 = G__14328;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_14292) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_14292);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___14316, out);
        }();
        var state__6846__auto__ = function() {
          var statearr_14315 = f__6845__auto__.call(null);
          statearr_14315[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___14316;
          return statearr_14315;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___14316, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6844__auto___14421 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___14421, out) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___14421, out) {
            return function(state_14398) {
              var state_val_14399 = state_14398[1];
              if (state_val_14399 === 7) {
                var inst_14380 = state_14398[7];
                var inst_14380__$1 = state_14398[2];
                var inst_14381 = inst_14380__$1 == null;
                var inst_14382 = cljs.core.not.call(null, inst_14381);
                var state_14398__$1 = function() {
                  var statearr_14400 = state_14398;
                  statearr_14400[7] = inst_14380__$1;
                  return statearr_14400;
                }();
                if (inst_14382) {
                  var statearr_14401_14422 = state_14398__$1;
                  statearr_14401_14422[1] = 8;
                } else {
                  var statearr_14402_14423 = state_14398__$1;
                  statearr_14402_14423[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14399 === 1) {
                  var inst_14375 = 0;
                  var state_14398__$1 = function() {
                    var statearr_14403 = state_14398;
                    statearr_14403[8] = inst_14375;
                    return statearr_14403;
                  }();
                  var statearr_14404_14424 = state_14398__$1;
                  statearr_14404_14424[2] = null;
                  statearr_14404_14424[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14399 === 4) {
                    var state_14398__$1 = state_14398;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14398__$1, 7, ch);
                  } else {
                    if (state_val_14399 === 6) {
                      var inst_14393 = state_14398[2];
                      var state_14398__$1 = state_14398;
                      var statearr_14405_14425 = state_14398__$1;
                      statearr_14405_14425[2] = inst_14393;
                      statearr_14405_14425[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14399 === 3) {
                        var inst_14395 = state_14398[2];
                        var inst_14396 = cljs.core.async.close_BANG_.call(null, out);
                        var state_14398__$1 = function() {
                          var statearr_14406 = state_14398;
                          statearr_14406[9] = inst_14395;
                          return statearr_14406;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14398__$1, inst_14396);
                      } else {
                        if (state_val_14399 === 2) {
                          var inst_14375 = state_14398[8];
                          var inst_14377 = inst_14375 < n;
                          var state_14398__$1 = state_14398;
                          if (cljs.core.truth_(inst_14377)) {
                            var statearr_14407_14426 = state_14398__$1;
                            statearr_14407_14426[1] = 4;
                          } else {
                            var statearr_14408_14427 = state_14398__$1;
                            statearr_14408_14427[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14399 === 11) {
                            var inst_14375 = state_14398[8];
                            var inst_14385 = state_14398[2];
                            var inst_14386 = inst_14375 + 1;
                            var inst_14375__$1 = inst_14386;
                            var state_14398__$1 = function() {
                              var statearr_14409 = state_14398;
                              statearr_14409[10] = inst_14385;
                              statearr_14409[8] = inst_14375__$1;
                              return statearr_14409;
                            }();
                            var statearr_14410_14428 = state_14398__$1;
                            statearr_14410_14428[2] = null;
                            statearr_14410_14428[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14399 === 9) {
                              var state_14398__$1 = state_14398;
                              var statearr_14411_14429 = state_14398__$1;
                              statearr_14411_14429[2] = null;
                              statearr_14411_14429[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14399 === 5) {
                                var state_14398__$1 = state_14398;
                                var statearr_14412_14430 = state_14398__$1;
                                statearr_14412_14430[2] = null;
                                statearr_14412_14430[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14399 === 10) {
                                  var inst_14390 = state_14398[2];
                                  var state_14398__$1 = state_14398;
                                  var statearr_14413_14431 = state_14398__$1;
                                  statearr_14413_14431[2] = inst_14390;
                                  statearr_14413_14431[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14399 === 8) {
                                    var inst_14380 = state_14398[7];
                                    var state_14398__$1 = state_14398;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14398__$1, 11, out, inst_14380);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___14421, out);
          return function(switch__6829__auto__, c__6844__auto___14421, out) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_14417 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_14417[0] = state_machine__6830__auto__;
                statearr_14417[1] = 1;
                return statearr_14417;
              };
              var state_machine__6830__auto____1 = function(state_14398) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_14398);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e14418) {
                      if (e14418 instanceof Object) {
                        var ex__6833__auto__ = e14418;
                        var statearr_14419_14432 = state_14398;
                        statearr_14419_14432[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14398);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14418;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14433 = state_14398;
                    state_14398 = G__14433;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_14398) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_14398);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___14421, out);
        }();
        var state__6846__auto__ = function() {
          var statearr_14420 = f__6845__auto__.call(null);
          statearr_14420[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___14421;
          return statearr_14420;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___14421, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t14441 !== "undefined") {
  } else {
    cljs.core.async.t14441 = function(ch, f, map_LT_, meta14442) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta14442 = meta14442;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14441.cljs$lang$type = true;
    cljs.core.async.t14441.cljs$lang$ctorStr = "cljs.core.async/t14441";
    cljs.core.async.t14441.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t14441");
    };
    cljs.core.async.t14441.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14441.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t14441.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14441.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t14444 !== "undefined") {
        } else {
          cljs.core.async.t14444 = function(fn1, _, meta14442, ch, f, map_LT_, meta14445) {
            this.fn1 = fn1;
            this._ = _;
            this.meta14442 = meta14442;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta14445 = meta14445;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t14444.cljs$lang$type = true;
          cljs.core.async.t14444.cljs$lang$ctorStr = "cljs.core.async/t14444";
          cljs.core.async.t14444.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
              return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t14444");
            };
          }(___$1);
          cljs.core.async.t14444.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t14444.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t14444.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$3) {
              var self__ = this;
              var ___$4 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$4, ___$1) {
                return function(p1__14434_SHARP_) {
                  return f1.call(null, p1__14434_SHARP_ == null ? null : self__.f.call(null, p1__14434_SHARP_));
                };
              }(f1, ___$4, ___$1);
            };
          }(___$1);
          cljs.core.async.t14444.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_14446) {
              var self__ = this;
              var _14446__$1 = this;
              return self__.meta14445;
            };
          }(___$1);
          cljs.core.async.t14444.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_14446, meta14445__$1) {
              var self__ = this;
              var _14446__$1 = this;
              return new cljs.core.async.t14444(self__.fn1, self__._, self__.meta14442, self__.ch, self__.f, self__.map_LT_, meta14445__$1);
            };
          }(___$1);
          cljs.core.async.__GT_t14444 = function(___$1) {
            return function __GT_t14444(fn1__$1, ___$2, meta14442__$1, ch__$2, f__$2, map_LT___$2, meta14445) {
              return new cljs.core.async.t14444(fn1__$1, ___$2, meta14442__$1, ch__$2, f__$2, map_LT___$2, meta14445);
            };
          }(___$1);
        }
        return new cljs.core.async.t14444(fn1, ___$1, self__.meta14442, self__.ch, self__.f, self__.map_LT_, null);
      }());
      if (cljs.core.truth_(function() {
        var and__3627__auto__ = ret;
        if (cljs.core.truth_(and__3627__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3627__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t14441.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14441.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14441.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t14441.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14443) {
      var self__ = this;
      var _14443__$1 = this;
      return self__.meta14442;
    };
    cljs.core.async.t14441.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14443, meta14442__$1) {
      var self__ = this;
      var _14443__$1 = this;
      return new cljs.core.async.t14441(self__.ch, self__.f, self__.map_LT_, meta14442__$1);
    };
    cljs.core.async.__GT_t14441 = function __GT_t14441(ch__$1, f__$1, map_LT___$1, meta14442) {
      return new cljs.core.async.t14441(ch__$1, f__$1, map_LT___$1, meta14442);
    };
  }
  return new cljs.core.async.t14441(ch, f, map_LT_, null);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t14450 !== "undefined") {
  } else {
    cljs.core.async.t14450 = function(ch, f, map_GT_, meta14451) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta14451 = meta14451;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14450.cljs$lang$type = true;
    cljs.core.async.t14450.cljs$lang$ctorStr = "cljs.core.async/t14450";
    cljs.core.async.t14450.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t14450");
    };
    cljs.core.async.t14450.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14450.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t14450.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14450.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t14450.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14450.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14450.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14452) {
      var self__ = this;
      var _14452__$1 = this;
      return self__.meta14451;
    };
    cljs.core.async.t14450.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14452, meta14451__$1) {
      var self__ = this;
      var _14452__$1 = this;
      return new cljs.core.async.t14450(self__.ch, self__.f, self__.map_GT_, meta14451__$1);
    };
    cljs.core.async.__GT_t14450 = function __GT_t14450(ch__$1, f__$1, map_GT___$1, meta14451) {
      return new cljs.core.async.t14450(ch__$1, f__$1, map_GT___$1, meta14451);
    };
  }
  return new cljs.core.async.t14450(ch, f, map_GT_, null);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t14456 !== "undefined") {
  } else {
    cljs.core.async.t14456 = function(ch, p, filter_GT_, meta14457) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta14457 = meta14457;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t14456.cljs$lang$type = true;
    cljs.core.async.t14456.cljs$lang$ctorStr = "cljs.core.async/t14456";
    cljs.core.async.t14456.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "cljs.core.async/t14456");
    };
    cljs.core.async.t14456.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14456.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t14456.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14456.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t14456.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14456.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t14456.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t14456.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14458) {
      var self__ = this;
      var _14458__$1 = this;
      return self__.meta14457;
    };
    cljs.core.async.t14456.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14458, meta14457__$1) {
      var self__ = this;
      var _14458__$1 = this;
      return new cljs.core.async.t14456(self__.ch, self__.p, self__.filter_GT_, meta14457__$1);
    };
    cljs.core.async.__GT_t14456 = function __GT_t14456(ch__$1, p__$1, filter_GT___$1, meta14457) {
      return new cljs.core.async.t14456(ch__$1, p__$1, filter_GT___$1, meta14457);
    };
  }
  return new cljs.core.async.t14456(ch, p, filter_GT_, null);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6844__auto___14541 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___14541, out) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___14541, out) {
            return function(state_14520) {
              var state_val_14521 = state_14520[1];
              if (state_val_14521 === 7) {
                var inst_14516 = state_14520[2];
                var state_14520__$1 = state_14520;
                var statearr_14522_14542 = state_14520__$1;
                statearr_14522_14542[2] = inst_14516;
                statearr_14522_14542[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14521 === 1) {
                  var state_14520__$1 = state_14520;
                  var statearr_14523_14543 = state_14520__$1;
                  statearr_14523_14543[2] = null;
                  statearr_14523_14543[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14521 === 4) {
                    var inst_14502 = state_14520[7];
                    var inst_14502__$1 = state_14520[2];
                    var inst_14503 = inst_14502__$1 == null;
                    var state_14520__$1 = function() {
                      var statearr_14524 = state_14520;
                      statearr_14524[7] = inst_14502__$1;
                      return statearr_14524;
                    }();
                    if (cljs.core.truth_(inst_14503)) {
                      var statearr_14525_14544 = state_14520__$1;
                      statearr_14525_14544[1] = 5;
                    } else {
                      var statearr_14526_14545 = state_14520__$1;
                      statearr_14526_14545[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14521 === 6) {
                      var inst_14502 = state_14520[7];
                      var inst_14507 = p.call(null, inst_14502);
                      var state_14520__$1 = state_14520;
                      if (cljs.core.truth_(inst_14507)) {
                        var statearr_14527_14546 = state_14520__$1;
                        statearr_14527_14546[1] = 8;
                      } else {
                        var statearr_14528_14547 = state_14520__$1;
                        statearr_14528_14547[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14521 === 3) {
                        var inst_14518 = state_14520[2];
                        var state_14520__$1 = state_14520;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14520__$1, inst_14518);
                      } else {
                        if (state_val_14521 === 2) {
                          var state_14520__$1 = state_14520;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14520__$1, 4, ch);
                        } else {
                          if (state_val_14521 === 11) {
                            var inst_14510 = state_14520[2];
                            var state_14520__$1 = state_14520;
                            var statearr_14529_14548 = state_14520__$1;
                            statearr_14529_14548[2] = inst_14510;
                            statearr_14529_14548[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14521 === 9) {
                              var state_14520__$1 = state_14520;
                              var statearr_14530_14549 = state_14520__$1;
                              statearr_14530_14549[2] = null;
                              statearr_14530_14549[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14521 === 5) {
                                var inst_14505 = cljs.core.async.close_BANG_.call(null, out);
                                var state_14520__$1 = state_14520;
                                var statearr_14531_14550 = state_14520__$1;
                                statearr_14531_14550[2] = inst_14505;
                                statearr_14531_14550[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14521 === 10) {
                                  var inst_14513 = state_14520[2];
                                  var state_14520__$1 = function() {
                                    var statearr_14532 = state_14520;
                                    statearr_14532[8] = inst_14513;
                                    return statearr_14532;
                                  }();
                                  var statearr_14533_14551 = state_14520__$1;
                                  statearr_14533_14551[2] = null;
                                  statearr_14533_14551[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14521 === 8) {
                                    var inst_14502 = state_14520[7];
                                    var state_14520__$1 = state_14520;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14520__$1, 11, out, inst_14502);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___14541, out);
          return function(switch__6829__auto__, c__6844__auto___14541, out) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_14537 = [null, null, null, null, null, null, null, null, null];
                statearr_14537[0] = state_machine__6830__auto__;
                statearr_14537[1] = 1;
                return statearr_14537;
              };
              var state_machine__6830__auto____1 = function(state_14520) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_14520);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e14538) {
                      if (e14538 instanceof Object) {
                        var ex__6833__auto__ = e14538;
                        var statearr_14539_14552 = state_14520;
                        statearr_14539_14552[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14520);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14538;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14553 = state_14520;
                    state_14520 = G__14553;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_14520) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_14520);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___14541, out);
        }();
        var state__6846__auto__ = function() {
          var statearr_14540 = f__6845__auto__.call(null);
          statearr_14540[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___14541;
          return statearr_14540;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___14541, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6844__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto__) {
    return function() {
      var f__6845__auto__ = function() {
        var switch__6829__auto__ = function(c__6844__auto__) {
          return function(state_14719) {
            var state_val_14720 = state_14719[1];
            if (state_val_14720 === 7) {
              var inst_14715 = state_14719[2];
              var state_14719__$1 = state_14719;
              var statearr_14721_14762 = state_14719__$1;
              statearr_14721_14762[2] = inst_14715;
              statearr_14721_14762[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_14720 === 20) {
                var inst_14685 = state_14719[7];
                var inst_14696 = state_14719[2];
                var inst_14697 = cljs.core.next.call(null, inst_14685);
                var inst_14671 = inst_14697;
                var inst_14672 = null;
                var inst_14673 = 0;
                var inst_14674 = 0;
                var state_14719__$1 = function() {
                  var statearr_14722 = state_14719;
                  statearr_14722[8] = inst_14674;
                  statearr_14722[9] = inst_14696;
                  statearr_14722[10] = inst_14672;
                  statearr_14722[11] = inst_14673;
                  statearr_14722[12] = inst_14671;
                  return statearr_14722;
                }();
                var statearr_14723_14763 = state_14719__$1;
                statearr_14723_14763[2] = null;
                statearr_14723_14763[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14720 === 1) {
                  var state_14719__$1 = state_14719;
                  var statearr_14724_14764 = state_14719__$1;
                  statearr_14724_14764[2] = null;
                  statearr_14724_14764[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14720 === 4) {
                    var inst_14660 = state_14719[13];
                    var inst_14660__$1 = state_14719[2];
                    var inst_14661 = inst_14660__$1 == null;
                    var state_14719__$1 = function() {
                      var statearr_14725 = state_14719;
                      statearr_14725[13] = inst_14660__$1;
                      return statearr_14725;
                    }();
                    if (cljs.core.truth_(inst_14661)) {
                      var statearr_14726_14765 = state_14719__$1;
                      statearr_14726_14765[1] = 5;
                    } else {
                      var statearr_14727_14766 = state_14719__$1;
                      statearr_14727_14766[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14720 === 15) {
                      var state_14719__$1 = state_14719;
                      var statearr_14731_14767 = state_14719__$1;
                      statearr_14731_14767[2] = null;
                      statearr_14731_14767[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14720 === 21) {
                        var state_14719__$1 = state_14719;
                        var statearr_14732_14768 = state_14719__$1;
                        statearr_14732_14768[2] = null;
                        statearr_14732_14768[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_14720 === 13) {
                          var inst_14674 = state_14719[8];
                          var inst_14672 = state_14719[10];
                          var inst_14673 = state_14719[11];
                          var inst_14671 = state_14719[12];
                          var inst_14681 = state_14719[2];
                          var inst_14682 = inst_14674 + 1;
                          var tmp14728 = inst_14672;
                          var tmp14729 = inst_14673;
                          var tmp14730 = inst_14671;
                          var inst_14671__$1 = tmp14730;
                          var inst_14672__$1 = tmp14728;
                          var inst_14673__$1 = tmp14729;
                          var inst_14674__$1 = inst_14682;
                          var state_14719__$1 = function() {
                            var statearr_14733 = state_14719;
                            statearr_14733[8] = inst_14674__$1;
                            statearr_14733[10] = inst_14672__$1;
                            statearr_14733[14] = inst_14681;
                            statearr_14733[11] = inst_14673__$1;
                            statearr_14733[12] = inst_14671__$1;
                            return statearr_14733;
                          }();
                          var statearr_14734_14769 = state_14719__$1;
                          statearr_14734_14769[2] = null;
                          statearr_14734_14769[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_14720 === 22) {
                            var state_14719__$1 = state_14719;
                            var statearr_14735_14770 = state_14719__$1;
                            statearr_14735_14770[2] = null;
                            statearr_14735_14770[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14720 === 6) {
                              var inst_14660 = state_14719[13];
                              var inst_14669 = f.call(null, inst_14660);
                              var inst_14670 = cljs.core.seq.call(null, inst_14669);
                              var inst_14671 = inst_14670;
                              var inst_14672 = null;
                              var inst_14673 = 0;
                              var inst_14674 = 0;
                              var state_14719__$1 = function() {
                                var statearr_14736 = state_14719;
                                statearr_14736[8] = inst_14674;
                                statearr_14736[10] = inst_14672;
                                statearr_14736[11] = inst_14673;
                                statearr_14736[12] = inst_14671;
                                return statearr_14736;
                              }();
                              var statearr_14737_14771 = state_14719__$1;
                              statearr_14737_14771[2] = null;
                              statearr_14737_14771[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_14720 === 17) {
                                var inst_14685 = state_14719[7];
                                var inst_14689 = cljs.core.chunk_first.call(null, inst_14685);
                                var inst_14690 = cljs.core.chunk_rest.call(null, inst_14685);
                                var inst_14691 = cljs.core.count.call(null, inst_14689);
                                var inst_14671 = inst_14690;
                                var inst_14672 = inst_14689;
                                var inst_14673 = inst_14691;
                                var inst_14674 = 0;
                                var state_14719__$1 = function() {
                                  var statearr_14738 = state_14719;
                                  statearr_14738[8] = inst_14674;
                                  statearr_14738[10] = inst_14672;
                                  statearr_14738[11] = inst_14673;
                                  statearr_14738[12] = inst_14671;
                                  return statearr_14738;
                                }();
                                var statearr_14739_14772 = state_14719__$1;
                                statearr_14739_14772[2] = null;
                                statearr_14739_14772[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14720 === 3) {
                                  var inst_14717 = state_14719[2];
                                  var state_14719__$1 = state_14719;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14719__$1, inst_14717);
                                } else {
                                  if (state_val_14720 === 12) {
                                    var inst_14705 = state_14719[2];
                                    var state_14719__$1 = state_14719;
                                    var statearr_14740_14773 = state_14719__$1;
                                    statearr_14740_14773[2] = inst_14705;
                                    statearr_14740_14773[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_14720 === 2) {
                                      var state_14719__$1 = state_14719;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14719__$1, 4, in$);
                                    } else {
                                      if (state_val_14720 === 23) {
                                        var inst_14713 = state_14719[2];
                                        var state_14719__$1 = state_14719;
                                        var statearr_14741_14774 = state_14719__$1;
                                        statearr_14741_14774[2] = inst_14713;
                                        statearr_14741_14774[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_14720 === 19) {
                                          var inst_14700 = state_14719[2];
                                          var state_14719__$1 = state_14719;
                                          var statearr_14742_14775 = state_14719__$1;
                                          statearr_14742_14775[2] = inst_14700;
                                          statearr_14742_14775[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_14720 === 11) {
                                            var inst_14685 = state_14719[7];
                                            var inst_14671 = state_14719[12];
                                            var inst_14685__$1 = cljs.core.seq.call(null, inst_14671);
                                            var state_14719__$1 = function() {
                                              var statearr_14743 = state_14719;
                                              statearr_14743[7] = inst_14685__$1;
                                              return statearr_14743;
                                            }();
                                            if (inst_14685__$1) {
                                              var statearr_14744_14776 = state_14719__$1;
                                              statearr_14744_14776[1] = 14;
                                            } else {
                                              var statearr_14745_14777 = state_14719__$1;
                                              statearr_14745_14777[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_14720 === 9) {
                                              var inst_14707 = state_14719[2];
                                              var inst_14708 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_14719__$1 = function() {
                                                var statearr_14746 = state_14719;
                                                statearr_14746[15] = inst_14707;
                                                return statearr_14746;
                                              }();
                                              if (cljs.core.truth_(inst_14708)) {
                                                var statearr_14747_14778 = state_14719__$1;
                                                statearr_14747_14778[1] = 21;
                                              } else {
                                                var statearr_14748_14779 = state_14719__$1;
                                                statearr_14748_14779[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_14720 === 5) {
                                                var inst_14663 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_14719__$1 = state_14719;
                                                var statearr_14749_14780 = state_14719__$1;
                                                statearr_14749_14780[2] = inst_14663;
                                                statearr_14749_14780[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_14720 === 14) {
                                                  var inst_14685 = state_14719[7];
                                                  var inst_14687 = cljs.core.chunked_seq_QMARK_.call(null, inst_14685);
                                                  var state_14719__$1 = state_14719;
                                                  if (inst_14687) {
                                                    var statearr_14750_14781 = state_14719__$1;
                                                    statearr_14750_14781[1] = 17;
                                                  } else {
                                                    var statearr_14751_14782 = state_14719__$1;
                                                    statearr_14751_14782[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_14720 === 16) {
                                                    var inst_14703 = state_14719[2];
                                                    var state_14719__$1 = state_14719;
                                                    var statearr_14752_14783 = state_14719__$1;
                                                    statearr_14752_14783[2] = inst_14703;
                                                    statearr_14752_14783[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_14720 === 10) {
                                                      var inst_14674 = state_14719[8];
                                                      var inst_14672 = state_14719[10];
                                                      var inst_14679 = cljs.core._nth.call(null, inst_14672, inst_14674);
                                                      var state_14719__$1 = state_14719;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14719__$1, 13, out, inst_14679);
                                                    } else {
                                                      if (state_val_14720 === 18) {
                                                        var inst_14685 = state_14719[7];
                                                        var inst_14694 = cljs.core.first.call(null, inst_14685);
                                                        var state_14719__$1 = state_14719;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14719__$1, 20, out, inst_14694);
                                                      } else {
                                                        if (state_val_14720 === 8) {
                                                          var inst_14674 = state_14719[8];
                                                          var inst_14673 = state_14719[11];
                                                          var inst_14676 = inst_14674 < inst_14673;
                                                          var inst_14677 = inst_14676;
                                                          var state_14719__$1 = state_14719;
                                                          if (cljs.core.truth_(inst_14677)) {
                                                            var statearr_14753_14784 = state_14719__$1;
                                                            statearr_14753_14784[1] = 10;
                                                          } else {
                                                            var statearr_14754_14785 = state_14719__$1;
                                                            statearr_14754_14785[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6844__auto__);
        return function(switch__6829__auto__, c__6844__auto__) {
          return function() {
            var state_machine__6830__auto__ = null;
            var state_machine__6830__auto____0 = function() {
              var statearr_14758 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_14758[0] = state_machine__6830__auto__;
              statearr_14758[1] = 1;
              return statearr_14758;
            };
            var state_machine__6830__auto____1 = function(state_14719) {
              while (true) {
                var ret_value__6831__auto__ = function() {
                  try {
                    while (true) {
                      var result__6832__auto__ = switch__6829__auto__.call(null, state_14719);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6832__auto__;
                      }
                      break;
                    }
                  } catch (e14759) {
                    if (e14759 instanceof Object) {
                      var ex__6833__auto__ = e14759;
                      var statearr_14760_14786 = state_14719;
                      statearr_14760_14786[5] = ex__6833__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14719);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e14759;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__14787 = state_14719;
                  state_14719 = G__14787;
                  continue;
                } else {
                  return ret_value__6831__auto__;
                }
                break;
              }
            };
            state_machine__6830__auto__ = function(state_14719) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6830__auto____0.call(this);
                case 1:
                  return state_machine__6830__auto____1.call(this, state_14719);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
            return state_machine__6830__auto__;
          }();
        }(switch__6829__auto__, c__6844__auto__);
      }();
      var state__6846__auto__ = function() {
        var statearr_14761 = f__6845__auto__.call(null);
        statearr_14761[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto__;
        return statearr_14761;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
    };
  }(c__6844__auto__));
  return c__6844__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6844__auto___14884 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___14884, out) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___14884, out) {
            return function(state_14859) {
              var state_val_14860 = state_14859[1];
              if (state_val_14860 === 7) {
                var inst_14854 = state_14859[2];
                var state_14859__$1 = state_14859;
                var statearr_14861_14885 = state_14859__$1;
                statearr_14861_14885[2] = inst_14854;
                statearr_14861_14885[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_14860 === 1) {
                  var inst_14836 = null;
                  var state_14859__$1 = function() {
                    var statearr_14862 = state_14859;
                    statearr_14862[7] = inst_14836;
                    return statearr_14862;
                  }();
                  var statearr_14863_14886 = state_14859__$1;
                  statearr_14863_14886[2] = null;
                  statearr_14863_14886[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_14860 === 4) {
                    var inst_14839 = state_14859[8];
                    var inst_14839__$1 = state_14859[2];
                    var inst_14840 = inst_14839__$1 == null;
                    var inst_14841 = cljs.core.not.call(null, inst_14840);
                    var state_14859__$1 = function() {
                      var statearr_14864 = state_14859;
                      statearr_14864[8] = inst_14839__$1;
                      return statearr_14864;
                    }();
                    if (inst_14841) {
                      var statearr_14865_14887 = state_14859__$1;
                      statearr_14865_14887[1] = 5;
                    } else {
                      var statearr_14866_14888 = state_14859__$1;
                      statearr_14866_14888[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_14860 === 6) {
                      var state_14859__$1 = state_14859;
                      var statearr_14867_14889 = state_14859__$1;
                      statearr_14867_14889[2] = null;
                      statearr_14867_14889[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_14860 === 3) {
                        var inst_14856 = state_14859[2];
                        var inst_14857 = cljs.core.async.close_BANG_.call(null, out);
                        var state_14859__$1 = function() {
                          var statearr_14868 = state_14859;
                          statearr_14868[9] = inst_14856;
                          return statearr_14868;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14859__$1, inst_14857);
                      } else {
                        if (state_val_14860 === 2) {
                          var state_14859__$1 = state_14859;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14859__$1, 4, ch);
                        } else {
                          if (state_val_14860 === 11) {
                            var inst_14839 = state_14859[8];
                            var inst_14848 = state_14859[2];
                            var inst_14836 = inst_14839;
                            var state_14859__$1 = function() {
                              var statearr_14869 = state_14859;
                              statearr_14869[7] = inst_14836;
                              statearr_14869[10] = inst_14848;
                              return statearr_14869;
                            }();
                            var statearr_14870_14890 = state_14859__$1;
                            statearr_14870_14890[2] = null;
                            statearr_14870_14890[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_14860 === 9) {
                              var inst_14839 = state_14859[8];
                              var state_14859__$1 = state_14859;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14859__$1, 11, out, inst_14839);
                            } else {
                              if (state_val_14860 === 5) {
                                var inst_14839 = state_14859[8];
                                var inst_14836 = state_14859[7];
                                var inst_14843 = cljs.core._EQ_.call(null, inst_14839, inst_14836);
                                var state_14859__$1 = state_14859;
                                if (inst_14843) {
                                  var statearr_14872_14891 = state_14859__$1;
                                  statearr_14872_14891[1] = 8;
                                } else {
                                  var statearr_14873_14892 = state_14859__$1;
                                  statearr_14873_14892[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_14860 === 10) {
                                  var inst_14851 = state_14859[2];
                                  var state_14859__$1 = state_14859;
                                  var statearr_14874_14893 = state_14859__$1;
                                  statearr_14874_14893[2] = inst_14851;
                                  statearr_14874_14893[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_14860 === 8) {
                                    var inst_14836 = state_14859[7];
                                    var tmp14871 = inst_14836;
                                    var inst_14836__$1 = tmp14871;
                                    var state_14859__$1 = function() {
                                      var statearr_14875 = state_14859;
                                      statearr_14875[7] = inst_14836__$1;
                                      return statearr_14875;
                                    }();
                                    var statearr_14876_14894 = state_14859__$1;
                                    statearr_14876_14894[2] = null;
                                    statearr_14876_14894[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___14884, out);
          return function(switch__6829__auto__, c__6844__auto___14884, out) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_14880 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_14880[0] = state_machine__6830__auto__;
                statearr_14880[1] = 1;
                return statearr_14880;
              };
              var state_machine__6830__auto____1 = function(state_14859) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_14859);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e14881) {
                      if (e14881 instanceof Object) {
                        var ex__6833__auto__ = e14881;
                        var statearr_14882_14895 = state_14859;
                        statearr_14882_14895[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_14859);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e14881;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__14896 = state_14859;
                    state_14859 = G__14896;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_14859) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_14859);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___14884, out);
        }();
        var state__6846__auto__ = function() {
          var statearr_14883 = f__6845__auto__.call(null);
          statearr_14883[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___14884;
          return statearr_14883;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___14884, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6844__auto___15031 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___15031, out) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___15031, out) {
            return function(state_15001) {
              var state_val_15002 = state_15001[1];
              if (state_val_15002 === 7) {
                var inst_14997 = state_15001[2];
                var state_15001__$1 = state_15001;
                var statearr_15003_15032 = state_15001__$1;
                statearr_15003_15032[2] = inst_14997;
                statearr_15003_15032[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15002 === 1) {
                  var inst_14964 = new Array(n);
                  var inst_14965 = inst_14964;
                  var inst_14966 = 0;
                  var state_15001__$1 = function() {
                    var statearr_15004 = state_15001;
                    statearr_15004[7] = inst_14966;
                    statearr_15004[8] = inst_14965;
                    return statearr_15004;
                  }();
                  var statearr_15005_15033 = state_15001__$1;
                  statearr_15005_15033[2] = null;
                  statearr_15005_15033[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15002 === 4) {
                    var inst_14969 = state_15001[9];
                    var inst_14969__$1 = state_15001[2];
                    var inst_14970 = inst_14969__$1 == null;
                    var inst_14971 = cljs.core.not.call(null, inst_14970);
                    var state_15001__$1 = function() {
                      var statearr_15006 = state_15001;
                      statearr_15006[9] = inst_14969__$1;
                      return statearr_15006;
                    }();
                    if (inst_14971) {
                      var statearr_15007_15034 = state_15001__$1;
                      statearr_15007_15034[1] = 5;
                    } else {
                      var statearr_15008_15035 = state_15001__$1;
                      statearr_15008_15035[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15002 === 15) {
                      var inst_14991 = state_15001[2];
                      var state_15001__$1 = state_15001;
                      var statearr_15009_15036 = state_15001__$1;
                      statearr_15009_15036[2] = inst_14991;
                      statearr_15009_15036[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15002 === 13) {
                        var state_15001__$1 = state_15001;
                        var statearr_15010_15037 = state_15001__$1;
                        statearr_15010_15037[2] = null;
                        statearr_15010_15037[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15002 === 6) {
                          var inst_14966 = state_15001[7];
                          var inst_14987 = inst_14966 > 0;
                          var state_15001__$1 = state_15001;
                          if (cljs.core.truth_(inst_14987)) {
                            var statearr_15011_15038 = state_15001__$1;
                            statearr_15011_15038[1] = 12;
                          } else {
                            var statearr_15012_15039 = state_15001__$1;
                            statearr_15012_15039[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15002 === 3) {
                            var inst_14999 = state_15001[2];
                            var state_15001__$1 = state_15001;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15001__$1, inst_14999);
                          } else {
                            if (state_val_15002 === 12) {
                              var inst_14965 = state_15001[8];
                              var inst_14989 = cljs.core.vec.call(null, inst_14965);
                              var state_15001__$1 = state_15001;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15001__$1, 15, out, inst_14989);
                            } else {
                              if (state_val_15002 === 2) {
                                var state_15001__$1 = state_15001;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15001__$1, 4, ch);
                              } else {
                                if (state_val_15002 === 11) {
                                  var inst_14981 = state_15001[2];
                                  var inst_14982 = new Array(n);
                                  var inst_14965 = inst_14982;
                                  var inst_14966 = 0;
                                  var state_15001__$1 = function() {
                                    var statearr_15013 = state_15001;
                                    statearr_15013[7] = inst_14966;
                                    statearr_15013[10] = inst_14981;
                                    statearr_15013[8] = inst_14965;
                                    return statearr_15013;
                                  }();
                                  var statearr_15014_15040 = state_15001__$1;
                                  statearr_15014_15040[2] = null;
                                  statearr_15014_15040[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15002 === 9) {
                                    var inst_14965 = state_15001[8];
                                    var inst_14979 = cljs.core.vec.call(null, inst_14965);
                                    var state_15001__$1 = state_15001;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15001__$1, 11, out, inst_14979);
                                  } else {
                                    if (state_val_15002 === 5) {
                                      var inst_14966 = state_15001[7];
                                      var inst_14974 = state_15001[11];
                                      var inst_14969 = state_15001[9];
                                      var inst_14965 = state_15001[8];
                                      var inst_14973 = inst_14965[inst_14966] = inst_14969;
                                      var inst_14974__$1 = inst_14966 + 1;
                                      var inst_14975 = inst_14974__$1 < n;
                                      var state_15001__$1 = function() {
                                        var statearr_15015 = state_15001;
                                        statearr_15015[12] = inst_14973;
                                        statearr_15015[11] = inst_14974__$1;
                                        return statearr_15015;
                                      }();
                                      if (cljs.core.truth_(inst_14975)) {
                                        var statearr_15016_15041 = state_15001__$1;
                                        statearr_15016_15041[1] = 8;
                                      } else {
                                        var statearr_15017_15042 = state_15001__$1;
                                        statearr_15017_15042[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15002 === 14) {
                                        var inst_14994 = state_15001[2];
                                        var inst_14995 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_15001__$1 = function() {
                                          var statearr_15019 = state_15001;
                                          statearr_15019[13] = inst_14994;
                                          return statearr_15019;
                                        }();
                                        var statearr_15020_15043 = state_15001__$1;
                                        statearr_15020_15043[2] = inst_14995;
                                        statearr_15020_15043[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15002 === 10) {
                                          var inst_14985 = state_15001[2];
                                          var state_15001__$1 = state_15001;
                                          var statearr_15021_15044 = state_15001__$1;
                                          statearr_15021_15044[2] = inst_14985;
                                          statearr_15021_15044[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15002 === 8) {
                                            var inst_14974 = state_15001[11];
                                            var inst_14965 = state_15001[8];
                                            var tmp15018 = inst_14965;
                                            var inst_14965__$1 = tmp15018;
                                            var inst_14966 = inst_14974;
                                            var state_15001__$1 = function() {
                                              var statearr_15022 = state_15001;
                                              statearr_15022[7] = inst_14966;
                                              statearr_15022[8] = inst_14965__$1;
                                              return statearr_15022;
                                            }();
                                            var statearr_15023_15045 = state_15001__$1;
                                            statearr_15023_15045[2] = null;
                                            statearr_15023_15045[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___15031, out);
          return function(switch__6829__auto__, c__6844__auto___15031, out) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_15027 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15027[0] = state_machine__6830__auto__;
                statearr_15027[1] = 1;
                return statearr_15027;
              };
              var state_machine__6830__auto____1 = function(state_15001) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_15001);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e15028) {
                      if (e15028 instanceof Object) {
                        var ex__6833__auto__ = e15028;
                        var statearr_15029_15046 = state_15001;
                        statearr_15029_15046[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15001);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15028;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15047 = state_15001;
                    state_15001 = G__15047;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_15001) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_15001);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___15031, out);
        }();
        var state__6846__auto__ = function() {
          var statearr_15030 = f__6845__auto__.call(null);
          statearr_15030[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___15031;
          return statearr_15030;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___15031, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6844__auto___15190 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___15190, out) {
      return function() {
        var f__6845__auto__ = function() {
          var switch__6829__auto__ = function(c__6844__auto___15190, out) {
            return function(state_15160) {
              var state_val_15161 = state_15160[1];
              if (state_val_15161 === 7) {
                var inst_15156 = state_15160[2];
                var state_15160__$1 = state_15160;
                var statearr_15162_15191 = state_15160__$1;
                statearr_15162_15191[2] = inst_15156;
                statearr_15162_15191[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15161 === 1) {
                  var inst_15119 = [];
                  var inst_15120 = inst_15119;
                  var inst_15121 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_15160__$1 = function() {
                    var statearr_15163 = state_15160;
                    statearr_15163[7] = inst_15120;
                    statearr_15163[8] = inst_15121;
                    return statearr_15163;
                  }();
                  var statearr_15164_15192 = state_15160__$1;
                  statearr_15164_15192[2] = null;
                  statearr_15164_15192[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15161 === 4) {
                    var inst_15124 = state_15160[9];
                    var inst_15124__$1 = state_15160[2];
                    var inst_15125 = inst_15124__$1 == null;
                    var inst_15126 = cljs.core.not.call(null, inst_15125);
                    var state_15160__$1 = function() {
                      var statearr_15165 = state_15160;
                      statearr_15165[9] = inst_15124__$1;
                      return statearr_15165;
                    }();
                    if (inst_15126) {
                      var statearr_15166_15193 = state_15160__$1;
                      statearr_15166_15193[1] = 5;
                    } else {
                      var statearr_15167_15194 = state_15160__$1;
                      statearr_15167_15194[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15161 === 15) {
                      var inst_15150 = state_15160[2];
                      var state_15160__$1 = state_15160;
                      var statearr_15168_15195 = state_15160__$1;
                      statearr_15168_15195[2] = inst_15150;
                      statearr_15168_15195[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15161 === 13) {
                        var state_15160__$1 = state_15160;
                        var statearr_15169_15196 = state_15160__$1;
                        statearr_15169_15196[2] = null;
                        statearr_15169_15196[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_15161 === 6) {
                          var inst_15120 = state_15160[7];
                          var inst_15145 = inst_15120.length;
                          var inst_15146 = inst_15145 > 0;
                          var state_15160__$1 = state_15160;
                          if (cljs.core.truth_(inst_15146)) {
                            var statearr_15170_15197 = state_15160__$1;
                            statearr_15170_15197[1] = 12;
                          } else {
                            var statearr_15171_15198 = state_15160__$1;
                            statearr_15171_15198[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_15161 === 3) {
                            var inst_15158 = state_15160[2];
                            var state_15160__$1 = state_15160;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15160__$1, inst_15158);
                          } else {
                            if (state_val_15161 === 12) {
                              var inst_15120 = state_15160[7];
                              var inst_15148 = cljs.core.vec.call(null, inst_15120);
                              var state_15160__$1 = state_15160;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15160__$1, 15, out, inst_15148);
                            } else {
                              if (state_val_15161 === 2) {
                                var state_15160__$1 = state_15160;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15160__$1, 4, ch);
                              } else {
                                if (state_val_15161 === 11) {
                                  var inst_15124 = state_15160[9];
                                  var inst_15128 = state_15160[10];
                                  var inst_15138 = state_15160[2];
                                  var inst_15139 = [];
                                  var inst_15140 = inst_15139.push(inst_15124);
                                  var inst_15120 = inst_15139;
                                  var inst_15121 = inst_15128;
                                  var state_15160__$1 = function() {
                                    var statearr_15172 = state_15160;
                                    statearr_15172[7] = inst_15120;
                                    statearr_15172[11] = inst_15140;
                                    statearr_15172[12] = inst_15138;
                                    statearr_15172[8] = inst_15121;
                                    return statearr_15172;
                                  }();
                                  var statearr_15173_15199 = state_15160__$1;
                                  statearr_15173_15199[2] = null;
                                  statearr_15173_15199[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15161 === 9) {
                                    var inst_15120 = state_15160[7];
                                    var inst_15136 = cljs.core.vec.call(null, inst_15120);
                                    var state_15160__$1 = state_15160;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15160__$1, 11, out, inst_15136);
                                  } else {
                                    if (state_val_15161 === 5) {
                                      var inst_15124 = state_15160[9];
                                      var inst_15121 = state_15160[8];
                                      var inst_15128 = state_15160[10];
                                      var inst_15128__$1 = f.call(null, inst_15124);
                                      var inst_15129 = cljs.core._EQ_.call(null, inst_15128__$1, inst_15121);
                                      var inst_15130 = cljs.core.keyword_identical_QMARK_.call(null, inst_15121, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_15131 = inst_15129 || inst_15130;
                                      var state_15160__$1 = function() {
                                        var statearr_15174 = state_15160;
                                        statearr_15174[10] = inst_15128__$1;
                                        return statearr_15174;
                                      }();
                                      if (cljs.core.truth_(inst_15131)) {
                                        var statearr_15175_15200 = state_15160__$1;
                                        statearr_15175_15200[1] = 8;
                                      } else {
                                        var statearr_15176_15201 = state_15160__$1;
                                        statearr_15176_15201[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15161 === 14) {
                                        var inst_15153 = state_15160[2];
                                        var inst_15154 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_15160__$1 = function() {
                                          var statearr_15178 = state_15160;
                                          statearr_15178[13] = inst_15153;
                                          return statearr_15178;
                                        }();
                                        var statearr_15179_15202 = state_15160__$1;
                                        statearr_15179_15202[2] = inst_15154;
                                        statearr_15179_15202[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15161 === 10) {
                                          var inst_15143 = state_15160[2];
                                          var state_15160__$1 = state_15160;
                                          var statearr_15180_15203 = state_15160__$1;
                                          statearr_15180_15203[2] = inst_15143;
                                          statearr_15180_15203[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_15161 === 8) {
                                            var inst_15120 = state_15160[7];
                                            var inst_15124 = state_15160[9];
                                            var inst_15128 = state_15160[10];
                                            var inst_15133 = inst_15120.push(inst_15124);
                                            var tmp15177 = inst_15120;
                                            var inst_15120__$1 = tmp15177;
                                            var inst_15121 = inst_15128;
                                            var state_15160__$1 = function() {
                                              var statearr_15181 = state_15160;
                                              statearr_15181[7] = inst_15120__$1;
                                              statearr_15181[14] = inst_15133;
                                              statearr_15181[8] = inst_15121;
                                              return statearr_15181;
                                            }();
                                            var statearr_15182_15204 = state_15160__$1;
                                            statearr_15182_15204[2] = null;
                                            statearr_15182_15204[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6844__auto___15190, out);
          return function(switch__6829__auto__, c__6844__auto___15190, out) {
            return function() {
              var state_machine__6830__auto__ = null;
              var state_machine__6830__auto____0 = function() {
                var statearr_15186 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_15186[0] = state_machine__6830__auto__;
                statearr_15186[1] = 1;
                return statearr_15186;
              };
              var state_machine__6830__auto____1 = function(state_15160) {
                while (true) {
                  var ret_value__6831__auto__ = function() {
                    try {
                      while (true) {
                        var result__6832__auto__ = switch__6829__auto__.call(null, state_15160);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6832__auto__;
                        }
                        break;
                      }
                    } catch (e15187) {
                      if (e15187 instanceof Object) {
                        var ex__6833__auto__ = e15187;
                        var statearr_15188_15205 = state_15160;
                        statearr_15188_15205[5] = ex__6833__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15160);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15187;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15206 = state_15160;
                    state_15160 = G__15206;
                    continue;
                  } else {
                    return ret_value__6831__auto__;
                  }
                  break;
                }
              };
              state_machine__6830__auto__ = function(state_15160) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6830__auto____0.call(this);
                  case 1:
                    return state_machine__6830__auto____1.call(this, state_15160);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
              state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
              return state_machine__6830__auto__;
            }();
          }(switch__6829__auto__, c__6844__auto___15190, out);
        }();
        var state__6846__auto__ = function() {
          var statearr_15189 = f__6845__auto__.call(null);
          statearr_15189[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___15190;
          return statearr_15189;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
      };
    }(c__6844__auto___15190, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("clairvoyant.core");
goog.require("cljs.core");
clairvoyant.core.ITraceEnter = function() {
  var obj15319 = {};
  return obj15319;
}();
clairvoyant.core._trace_enter = function _trace_enter(this$, trace_data) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.clairvoyant$core$ITraceEnter$_trace_enter$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.clairvoyant$core$ITraceEnter$_trace_enter$arity$2(this$, trace_data);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = clairvoyant.core._trace_enter[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = clairvoyant.core._trace_enter["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITraceEnter.-trace-enter", this$);
        }
      }
    }().call(null, this$, trace_data);
  }
};
clairvoyant.core.ITraceError = function() {
  var obj15321 = {};
  return obj15321;
}();
clairvoyant.core._trace_error = function _trace_error(this$, trace_data) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.clairvoyant$core$ITraceError$_trace_error$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.clairvoyant$core$ITraceError$_trace_error$arity$2(this$, trace_data);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = clairvoyant.core._trace_error[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = clairvoyant.core._trace_error["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITraceError.-trace-error", this$);
        }
      }
    }().call(null, this$, trace_data);
  }
};
clairvoyant.core.ITraceExit = function() {
  var obj15323 = {};
  return obj15323;
}();
clairvoyant.core._trace_exit = function _trace_exit(this$, trace_data) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.clairvoyant$core$ITraceExit$_trace_exit$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.clairvoyant$core$ITraceExit$_trace_exit$arity$2(this$, trace_data);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = clairvoyant.core._trace_exit[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = clairvoyant.core._trace_exit["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITraceExit.-trace-exit", this$);
        }
      }
    }().call(null, this$, trace_data);
  }
};
clairvoyant.core.trace_enter = function trace_enter(tracer, trace_data) {
  return clairvoyant.core._trace_enter.call(null, tracer, trace_data);
};
clairvoyant.core.trace_error = function trace_error(tracer, trace_data) {
  return clairvoyant.core._trace_error.call(null, tracer, trace_data);
};
clairvoyant.core.trace_exit = function trace_exit(tracer, trace_data) {
  return clairvoyant.core._trace_exit.call(null, tracer, trace_data);
};
clairvoyant.core.default_tracer = function() {
  var log_binding = function log_binding(form, init) {
    return console.groupCollapsed("%c%s %c%s", "font-weight:bold;", cljs.core.pr_str.call(null, form), "font-weight:normal;", cljs.core.pr_str.call(null, init));
  };
  var has_bindings_QMARK_ = function has_bindings_QMARK_(op) {
    new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 15, [new cljs.core.Symbol("clojure.core", "let", "clojure.core/let", -407137853, null), null, new cljs.core.Symbol(null, "defmethod", "defmethod", -579171823, null), null, new cljs.core.Symbol("clojure.core", "reify", "clojure.core/reify", 562538906, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "defn", "defn", -126010802, null), null, new cljs.core.Symbol(null, 
    "extend-protocol", "extend-protocol", 306378578, null), null, new cljs.core.Symbol(null, "extend-type", "extend-type", 1123355921, null), null, new cljs.core.Symbol("clojure.core", "defn", "clojure.core/defn", -1504648747, null), null, new cljs.core.Symbol("clojure.core", "extend-type", "clojure.core/extend-type", 1892724878, null), null, new cljs.core.Symbol("clojure.core", "fn", "clojure.core/fn", -980152636, null), null, new cljs.core.Symbol(null, "reify", "reify", 1885539699, null), null, 
    new cljs.core.Symbol(null, "let", "let", 358118826, null), null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), null, new cljs.core.Symbol("clojure.core", "defmethod", "clojure.core/defmethod", -346593352, null), null, new cljs.core.Symbol("clojure.core", "extend-protocol", "clojure.core/extend-protocol", -1004430087, null), null], null), null);
    return op;
  };
  if (typeof clairvoyant.core.t15324 !== "undefined") {
  } else {
    clairvoyant.core.t15324 = function(has_bindings_QMARK_, log_binding, meta15325) {
      this.has_bindings_QMARK_ = has_bindings_QMARK_;
      this.log_binding = log_binding;
      this.meta15325 = meta15325;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    clairvoyant.core.t15324.cljs$lang$type = true;
    clairvoyant.core.t15324.cljs$lang$ctorStr = "clairvoyant.core/t15324";
    clairvoyant.core.t15324.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "clairvoyant.core/t15324");
    };
    clairvoyant.core.t15324.prototype.clairvoyant$core$ITraceError$ = true;
    clairvoyant.core.t15324.prototype.clairvoyant$core$ITraceError$_trace_error$arity$2 = function(_, p__15327) {
      var self__ = this;
      var map__15328 = p__15327;
      var map__15328__$1 = cljs.core.seq_QMARK_.call(null, map__15328) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15328) : map__15328;
      var error = cljs.core.get.call(null, map__15328__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
      var form = cljs.core.get.call(null, map__15328__$1, new cljs.core.Keyword(null, "form", "form", -1624062471));
      var op = cljs.core.get.call(null, map__15328__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), null], null), null)).call(null, op))) {
        return console.error(error.stack);
      } else {
        if (cljs.core.truth_(self__.has_bindings_QMARK_.call(null, op))) {
          console.groupEnd();
          console.error(error.stack);
          return console.groupEnd();
        } else {
          return null;
        }
      }
    };
    clairvoyant.core.t15324.prototype.clairvoyant$core$ITraceExit$ = true;
    clairvoyant.core.t15324.prototype.clairvoyant$core$ITraceExit$_trace_exit$arity$2 = function(_, p__15329) {
      var self__ = this;
      var map__15330 = p__15329;
      var map__15330__$1 = cljs.core.seq_QMARK_.call(null, map__15330) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15330) : map__15330;
      var exit = cljs.core.get.call(null, map__15330__$1, new cljs.core.Keyword(null, "exit", "exit", 351849638));
      var op = cljs.core.get.call(null, map__15330__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), null], null), null)).call(null, op))) {
        console.info(exit);
        return console.groupEnd();
      } else {
        if (cljs.core.truth_(self__.has_bindings_QMARK_.call(null, op))) {
          console.groupEnd();
          console.info(exit);
          return console.groupEnd();
        } else {
          return null;
        }
      }
    };
    clairvoyant.core.t15324.prototype.clairvoyant$core$ITraceEnter$ = true;
    clairvoyant.core.t15324.prototype.clairvoyant$core$ITraceEnter$_trace_enter$arity$2 = function(_, p__15331) {
      var self__ = this;
      var map__15332 = p__15331;
      var map__15332__$1 = cljs.core.seq_QMARK_.call(null, map__15332) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15332) : map__15332;
      var form = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "form", "form", -1624062471));
      var args = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "args", "args", 1315556576));
      var dispatch_val = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "dispatch-val", "dispatch-val", -1571470527));
      var protocol = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "protocol", "protocol", 652470118));
      var init = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "init", "init", -1875481434));
      var ns = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
      var name = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var arglist = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "arglist", "arglist", -1808272150));
      var op = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
      var anonymous_QMARK_ = cljs.core.get.call(null, map__15332__$1, new cljs.core.Keyword(null, "anonymous?", "anonymous?", 374098995));
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 13, [new cljs.core.Symbol(null, "defmethod", "defmethod", -579171823, null), null, new cljs.core.Symbol("clojure.core", "reify", "clojure.core/reify", 562538906, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "defn", "defn", -126010802, null), null, new cljs.core.Symbol(null, "extend-protocol", "extend-protocol", 306378578, null), null, 
      new cljs.core.Symbol(null, "extend-type", "extend-type", 1123355921, null), null, new cljs.core.Symbol("clojure.core", "defn", "clojure.core/defn", -1504648747, null), null, new cljs.core.Symbol("clojure.core", "extend-type", "clojure.core/extend-type", 1892724878, null), null, new cljs.core.Symbol("clojure.core", "fn", "clojure.core/fn", -980152636, null), null, new cljs.core.Symbol(null, "reify", "reify", 1885539699, null), null, new cljs.core.Symbol(null, "fn", "fn", 465265323, null), null, 
      new cljs.core.Symbol("clojure.core", "defmethod", "clojure.core/defmethod", -346593352, null), null, new cljs.core.Symbol("clojure.core", "extend-protocol", "clojure.core/extend-protocol", -1004430087, null), null], null), null)).call(null, op))) {
        var title = cljs.core.truth_(protocol) ? "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol) + " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(arglist) : "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(name) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(dispatch_val) ? " " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, dispatch_val)) : 
        null) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(" " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(arglist)) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(anonymous_QMARK_) ? " (anonymous)" : null);
        var arglist__$1 = cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null], null), null), arglist);
        console.groupCollapsed(title);
        return console.groupCollapsed("bindings");
      } else {
        if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol("clojure.core", "let", "clojure.core/let", -407137853, null), null, new cljs.core.Symbol(null, "let", "let", 358118826, null), null], null), null)).call(null, op))) {
          var title = "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);
          console.groupCollapsed(title);
          return console.groupCollapsed("bindings");
        } else {
          if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), null], null), null)).call(null, op))) {
            return self__.log_binding.call(null, form, init);
          } else {
            return null;
          }
        }
      }
    };
    clairvoyant.core.t15324.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15326) {
      var self__ = this;
      var _15326__$1 = this;
      return self__.meta15325;
    };
    clairvoyant.core.t15324.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15326, meta15325__$1) {
      var self__ = this;
      var _15326__$1 = this;
      return new clairvoyant.core.t15324(self__.has_bindings_QMARK_, self__.log_binding, meta15325__$1);
    };
    clairvoyant.core.__GT_t15324 = function __GT_t15324(has_bindings_QMARK___$1, log_binding__$1, meta15325) {
      return new clairvoyant.core.t15324(has_bindings_QMARK___$1, log_binding__$1, meta15325);
    };
  }
  return new clairvoyant.core.t15324(has_bindings_QMARK_, log_binding, null);
}();
goog.provide("sailing_study_guide.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("clairvoyant.core");
goog.require("clairvoyant.core");
goog.require("cljs.core.async");
sailing_study_guide.dispatch.dispatch_chan = cljs.core.async.chan.call(null);
sailing_study_guide.dispatch.dispatch_mult = cljs.core.async.mult.call(null, sailing_study_guide.dispatch.dispatch_chan);
sailing_study_guide.dispatch.dispatch_logger_chan = cljs.core.async.chan.call(null);
sailing_study_guide.dispatch.dispatch_pub_chan = cljs.core.async.chan.call(null);
sailing_study_guide.dispatch.dispatch_pub = cljs.core.async.pub.call(null, sailing_study_guide.dispatch.dispatch_pub_chan, function(p1__10487_SHARP_) {
  return(new cljs.core.Keyword(null, "tag", "tag", -1290361223)).cljs$core$IFn$_invoke$arity$1(p1__10487_SHARP_);
});
cljs.core.async.tap.call(null, sailing_study_guide.dispatch.dispatch_mult, sailing_study_guide.dispatch.dispatch_logger_chan);
cljs.core.async.tap.call(null, sailing_study_guide.dispatch.dispatch_mult, sailing_study_guide.dispatch.dispatch_pub_chan);
sailing_study_guide.dispatch.retrieve_message = function retrieve_message(payload) {
  if (cljs.core.truth_(payload)) {
    return(new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(payload);
  } else {
    return null;
  }
};
sailing_study_guide.dispatch.register = function register(tag) {
  var c = cljs.core.async.chan.call(null);
  return cljs.core.async.sub.call(null, sailing_study_guide.dispatch.dispatch_pub, tag, c);
};
sailing_study_guide.dispatch.unregister = function unregister(tag, chan) {
  cljs.core.async.unsub.call(null, sailing_study_guide.dispatch.dispatch_pub, tag, chan);
  return cljs.core.async.close_BANG_.call(null, chan);
};
sailing_study_guide.dispatch.whenever = function whenever(tag, cb) {
  var c = sailing_study_guide.dispatch.register.call(null, tag);
  var c__6844__auto___10562 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___10562, c) {
    return function() {
      var f__6845__auto__ = function() {
        var switch__6829__auto__ = function(c__6844__auto___10562, c) {
          return function(state_10544) {
            var state_val_10545 = state_10544[1];
            if (state_val_10545 === 8) {
              var inst_10535 = state_10544[2];
              var inst_10527 = inst_10535;
              var state_10544__$1 = function() {
                var statearr_10546 = state_10544;
                statearr_10546[7] = inst_10527;
                return statearr_10546;
              }();
              var statearr_10547_10563 = state_10544__$1;
              statearr_10547_10563[2] = null;
              statearr_10547_10563[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_10545 === 7) {
                var inst_10540 = state_10544[2];
                var state_10544__$1 = state_10544;
                var statearr_10548_10564 = state_10544__$1;
                statearr_10548_10564[2] = inst_10540;
                statearr_10548_10564[1] = 4;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_10545 === 6) {
                  var inst_10538 = cljs.core.async.close_BANG_.call(null, c);
                  var state_10544__$1 = state_10544;
                  var statearr_10549_10565 = state_10544__$1;
                  statearr_10549_10565[2] = inst_10538;
                  statearr_10549_10565[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10545 === 5) {
                    var inst_10527 = state_10544[7];
                    var inst_10532 = sailing_study_guide.dispatch.retrieve_message.call(null, inst_10527);
                    var inst_10533 = cb.call(null, inst_10532);
                    var state_10544__$1 = function() {
                      var statearr_10550 = state_10544;
                      statearr_10550[8] = inst_10533;
                      return statearr_10550;
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10544__$1, 8, c);
                  } else {
                    if (state_val_10545 === 4) {
                      var inst_10542 = state_10544[2];
                      var state_10544__$1 = state_10544;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10544__$1, inst_10542);
                    } else {
                      if (state_val_10545 === 3) {
                        var inst_10527 = state_10544[7];
                        var inst_10529 = inst_10527 == null;
                        var inst_10530 = cljs.core.not.call(null, inst_10529);
                        var state_10544__$1 = state_10544;
                        if (inst_10530) {
                          var statearr_10551_10566 = state_10544__$1;
                          statearr_10551_10566[1] = 5;
                        } else {
                          var statearr_10552_10567 = state_10544__$1;
                          statearr_10552_10567[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10545 === 2) {
                          var inst_10526 = state_10544[2];
                          var inst_10527 = inst_10526;
                          var state_10544__$1 = function() {
                            var statearr_10553 = state_10544;
                            statearr_10553[7] = inst_10527;
                            return statearr_10553;
                          }();
                          var statearr_10554_10568 = state_10544__$1;
                          statearr_10554_10568[2] = null;
                          statearr_10554_10568[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10545 === 1) {
                            var state_10544__$1 = state_10544;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10544__$1, 2, c);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6844__auto___10562, c);
        return function(switch__6829__auto__, c__6844__auto___10562, c) {
          return function() {
            var state_machine__6830__auto__ = null;
            var state_machine__6830__auto____0 = function() {
              var statearr_10558 = [null, null, null, null, null, null, null, null, null];
              statearr_10558[0] = state_machine__6830__auto__;
              statearr_10558[1] = 1;
              return statearr_10558;
            };
            var state_machine__6830__auto____1 = function(state_10544) {
              while (true) {
                var ret_value__6831__auto__ = function() {
                  try {
                    while (true) {
                      var result__6832__auto__ = switch__6829__auto__.call(null, state_10544);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6832__auto__;
                      }
                      break;
                    }
                  } catch (e10559) {
                    if (e10559 instanceof Object) {
                      var ex__6833__auto__ = e10559;
                      var statearr_10560_10569 = state_10544;
                      statearr_10560_10569[5] = ex__6833__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10544);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e10559;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__10570 = state_10544;
                  state_10544 = G__10570;
                  continue;
                } else {
                  return ret_value__6831__auto__;
                }
                break;
              }
            };
            state_machine__6830__auto__ = function(state_10544) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6830__auto____0.call(this);
                case 1:
                  return state_machine__6830__auto____1.call(this, state_10544);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
            state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
            return state_machine__6830__auto__;
          }();
        }(switch__6829__auto__, c__6844__auto___10562, c);
      }();
      var state__6846__auto__ = function() {
        var statearr_10561 = f__6845__auto__.call(null);
        statearr_10561[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___10562;
        return statearr_10561;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
    };
  }(c__6844__auto___10562, c));
  return c;
};
sailing_study_guide.dispatch.dispatch_BANG_ = function() {
  var dispatch_BANG___delegate = function(tags, message) {
    var dispatchfn = function dispatchfn(tag) {
      return cljs.core.async.put_BANG_.call(null, sailing_study_guide.dispatch.dispatch_chan, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag, new cljs.core.Keyword(null, "message", "message", -406056002), message], null));
    };
    if (cljs.core.sequential_QMARK_.call(null, tags)) {
      var seq__10575 = cljs.core.seq.call(null, tags);
      var chunk__10576 = null;
      var count__10577 = 0;
      var i__10578 = 0;
      while (true) {
        if (i__10578 < count__10577) {
          var tag = cljs.core._nth.call(null, chunk__10576, i__10578);
          dispatchfn.call(null, tag);
          var G__10579 = seq__10575;
          var G__10580 = chunk__10576;
          var G__10581 = count__10577;
          var G__10582 = i__10578 + 1;
          seq__10575 = G__10579;
          chunk__10576 = G__10580;
          count__10577 = G__10581;
          i__10578 = G__10582;
          continue;
        } else {
          var temp__4126__auto__ = cljs.core.seq.call(null, seq__10575);
          if (temp__4126__auto__) {
            var seq__10575__$1 = temp__4126__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__10575__$1)) {
              var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__10575__$1);
              var G__10583 = cljs.core.chunk_rest.call(null, seq__10575__$1);
              var G__10584 = c__4408__auto__;
              var G__10585 = cljs.core.count.call(null, c__4408__auto__);
              var G__10586 = 0;
              seq__10575 = G__10583;
              chunk__10576 = G__10584;
              count__10577 = G__10585;
              i__10578 = G__10586;
              continue;
            } else {
              var tag = cljs.core.first.call(null, seq__10575__$1);
              dispatchfn.call(null, tag);
              var G__10587 = cljs.core.next.call(null, seq__10575__$1);
              var G__10588 = null;
              var G__10589 = 0;
              var G__10590 = 0;
              seq__10575 = G__10587;
              chunk__10576 = G__10588;
              count__10577 = G__10589;
              i__10578 = G__10590;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return dispatchfn.call(null, tags);
    }
  };
  var dispatch_BANG_ = function(tags, var_args) {
    var message = null;
    if (arguments.length > 1) {
      message = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dispatch_BANG___delegate.call(this, tags, message);
  };
  dispatch_BANG_.cljs$lang$maxFixedArity = 1;
  dispatch_BANG_.cljs$lang$applyTo = function(arglist__10591) {
    var tags = cljs.core.first(arglist__10591);
    var message = cljs.core.rest(arglist__10591);
    return dispatch_BANG___delegate(tags, message);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$variadic = dispatch_BANG___delegate;
  return dispatch_BANG_;
}();
var c__6844__auto___10613 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___10613) {
  return function() {
    var f__6845__auto__ = function() {
      var switch__6829__auto__ = function(c__6844__auto___10613) {
        return function(state_10601) {
          var state_val_10602 = state_10601[1];
          if (state_val_10602 === 4) {
            var inst_10594 = state_10601[2];
            var inst_10595 = cljs.core.pr_str.call(null, inst_10594);
            var inst_10596 = cljs.core.println.call(null, "Dispatched: ", inst_10595);
            var state_10601__$1 = function() {
              var statearr_10603 = state_10601;
              statearr_10603[7] = inst_10596;
              return statearr_10603;
            }();
            var statearr_10604_10614 = state_10601__$1;
            statearr_10604_10614[2] = null;
            statearr_10604_10614[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
          } else {
            if (state_val_10602 === 3) {
              var inst_10599 = state_10601[2];
              var state_10601__$1 = state_10601;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10601__$1, inst_10599);
            } else {
              if (state_val_10602 === 2) {
                var state_10601__$1 = state_10601;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10601__$1, 4, sailing_study_guide.dispatch.dispatch_logger_chan);
              } else {
                if (state_val_10602 === 1) {
                  var state_10601__$1 = state_10601;
                  var statearr_10605_10615 = state_10601__$1;
                  statearr_10605_10615[2] = null;
                  statearr_10605_10615[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  return null;
                }
              }
            }
          }
        };
      }(c__6844__auto___10613);
      return function(switch__6829__auto__, c__6844__auto___10613) {
        return function() {
          var state_machine__6830__auto__ = null;
          var state_machine__6830__auto____0 = function() {
            var statearr_10609 = [null, null, null, null, null, null, null, null];
            statearr_10609[0] = state_machine__6830__auto__;
            statearr_10609[1] = 1;
            return statearr_10609;
          };
          var state_machine__6830__auto____1 = function(state_10601) {
            while (true) {
              var ret_value__6831__auto__ = function() {
                try {
                  while (true) {
                    var result__6832__auto__ = switch__6829__auto__.call(null, state_10601);
                    if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      continue;
                    } else {
                      return result__6832__auto__;
                    }
                    break;
                  }
                } catch (e10610) {
                  if (e10610 instanceof Object) {
                    var ex__6833__auto__ = e10610;
                    var statearr_10611_10616 = state_10601;
                    statearr_10611_10616[5] = ex__6833__auto__;
                    cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10601);
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    throw e10610;
                  }
                }
              }();
              if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                var G__10617 = state_10601;
                state_10601 = G__10617;
                continue;
              } else {
                return ret_value__6831__auto__;
              }
              break;
            }
          };
          state_machine__6830__auto__ = function(state_10601) {
            switch(arguments.length) {
              case 0:
                return state_machine__6830__auto____0.call(this);
              case 1:
                return state_machine__6830__auto____1.call(this, state_10601);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
          state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
          return state_machine__6830__auto__;
        }();
      }(switch__6829__auto__, c__6844__auto___10613);
    }();
    var state__6846__auto__ = function() {
      var statearr_10612 = f__6845__auto__.call(null);
      statearr_10612[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___10613;
      return statearr_10612;
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
  };
}(c__6844__auto___10613));
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw "Invalid match arg: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(match);
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll);
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll));
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))) + cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)));
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__15568 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__15568;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__15572 = cljs.core._EQ_;
    var expr__15573 = limit;
    if (cljs.core.truth_(pred__15572.call(null, 1, expr__15573))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__15572.call(null, 2, expr__15573))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(re), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, ("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)).split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__15575 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__15576 = limit__$1 - 1;
            var G__15577 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__15575;
            limit__$1 = G__15576;
            parts = G__15577;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__15578 = index - 1;
        index = G__15578;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___15579 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___15579)) {
        var replacement_15580 = temp__4124__auto___15579;
        buffer.append("" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement_15580));
      } else {
        buffer.append(ch);
      }
      var G__15581 = index + 1;
      index = G__15581;
      continue;
    }
    break;
  }
};
goog.provide("cemerick.cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
cemerick.cljs.test._STAR_test_print_fn_STAR_ = null;
cemerick.cljs.test._STAR_entry_point_STAR_ = true;
cemerick.cljs.test._STAR_test_ctx_STAR_ = null;
cemerick.cljs.test.init_test_environment_STAR_ = function init_test_environment_STAR_(aux_data) {
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.assoc.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), cljs.core.truth_(cemerick.cljs.test._STAR_test_print_fn_STAR_) ? new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143), cemerick.cljs.test._STAR_test_print_fn_STAR_], null) : null), new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128), cljs.core.List.EMPTY), aux_data));
};
cemerick.cljs.test.init_test_environment = function init_test_environment() {
  var G__15583 = cemerick.cljs.test.init_test_environment_STAR_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786), cljs.core.List.EMPTY], null));
  cljs.core.swap_BANG_.call(null, G__15583, cljs.core.assoc, new cljs.core.Keyword(null, "async", "async", 1050769601), cemerick.cljs.test.init_test_environment_STAR_.call(null, cljs.core.PersistentArrayMap.EMPTY));
  return G__15583;
};
cemerick.cljs.test.registered_tests = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_test_hooks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.registered_fixtures = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
cemerick.cljs.test.register_test_BANG_ = function register_test_BANG_(ns, name, fn) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_tests, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns], null), cljs.core.assoc, name, fn);
};
cemerick.cljs.test.register_test_ns_hook_BANG_ = function register_test_ns_hook_BANG_(ns, name) {
  return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_test_hooks, cljs.core.assoc, ns, name);
};
cemerick.cljs.test.TestContext = function(test_env, test_name, __meta, __extmap) {
  this.test_env = test_env;
  this.test_name = test_name;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
  if (arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap;
  } else {
    this.__meta = null;
    this.__extmap = null;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4234__auto__, k__4235__auto__) {
  var self__ = this;
  var this__4234__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4234__auto____$1, k__4235__auto__, null);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4236__auto__, k15585, else__4237__auto__) {
  var self__ = this;
  var this__4236__auto____$1 = this;
  var G__15587 = k15585 instanceof cljs.core.Keyword ? k15585.fqn : null;
  switch(G__15587) {
    case "test-name":
      return self__.test_name;
      break;
    case "test-env":
      return self__.test_env;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15585, else__4237__auto__);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4248__auto__, writer__4249__auto__, opts__4250__auto__) {
  var self__ = this;
  var this__4248__auto____$1 = this;
  var pr_pair__4251__auto__ = function(this__4248__auto____$1) {
    return function(keyval__4252__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4249__auto__, cljs.core.pr_writer, "", " ", "", opts__4250__auto__, keyval__4252__auto__);
    };
  }(this__4248__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4249__auto__, pr_pair__4251__auto__, "#cemerick.cljs.test.TestContext{", ", ", "}", opts__4250__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4232__auto__) {
  var self__ = this;
  var this__4232__auto____$1 = this;
  return self__.__meta;
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4228__auto__) {
  var self__ = this;
  var this__4228__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4238__auto__) {
  var self__ = this;
  var this__4238__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4229__auto__) {
  var self__ = this;
  var this__4229__auto____$1 = this;
  var h__4050__auto__ = self__.__hash;
  if (!(h__4050__auto__ == null)) {
    return h__4050__auto__;
  } else {
    var h__4050__auto____$1 = cljs.core.hash_imap.call(null, this__4229__auto____$1);
    self__.__hash = h__4050__auto____$1;
    return h__4050__auto____$1;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4230__auto__, other__4231__auto__) {
  var self__ = this;
  var this__4230__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3627__auto__ = other__4231__auto__;
    if (cljs.core.truth_(and__3627__auto__)) {
      return this__4230__auto____$1.constructor === other__4231__auto__.constructor && cljs.core.equiv_map.call(null, this__4230__auto____$1, other__4231__auto__);
    } else {
      return and__3627__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4243__auto__, k__4244__auto__) {
  var self__ = this;
  var this__4243__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), null], null), null), k__4244__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4243__auto____$1), self__.__meta), k__4244__auto__);
  } else {
    return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4244__auto__)), null);
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4241__auto__, k__4242__auto__, G__15584) {
  var self__ = this;
  var this__4241__auto____$1 = this;
  var pred__15588 = cljs.core.keyword_identical_QMARK_;
  var expr__15589 = k__4242__auto__;
  if (cljs.core.truth_(pred__15588.call(null, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), expr__15589))) {
    return new cemerick.cljs.test.TestContext(G__15584, self__.test_name, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15588.call(null, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), expr__15589))) {
      return new cemerick.cljs.test.TestContext(self__.test_env, G__15584, self__.__meta, self__.__extmap, null);
    } else {
      return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4242__auto__, G__15584), null);
    }
  }
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4246__auto__) {
  var self__ = this;
  var this__4246__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-env", "test-env", -540228992), self__.test_env], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test-name", "test-name", -675595913), self__.test_name], null)], null), 
  self__.__extmap));
};
cemerick.cljs.test.TestContext.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4233__auto__, G__15584) {
  var self__ = this;
  var this__4233__auto____$1 = this;
  return new cemerick.cljs.test.TestContext(self__.test_env, self__.test_name, G__15584, self__.__extmap, self__.__hash);
};
cemerick.cljs.test.TestContext.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4239__auto__, entry__4240__auto__) {
  var self__ = this;
  var this__4239__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4240__auto__)) {
    return cljs.core._assoc.call(null, this__4239__auto____$1, cljs.core._nth.call(null, entry__4240__auto__, 0), cljs.core._nth.call(null, entry__4240__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4239__auto____$1, entry__4240__auto__);
  }
};
cemerick.cljs.test.TestContext.cljs$lang$type = true;
cemerick.cljs.test.TestContext.cljs$lang$ctorPrSeq = function(this__4268__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.TestContext.cljs$lang$ctorPrWriter = function(this__4268__auto__, writer__4269__auto__) {
  return cljs.core._write.call(null, writer__4269__auto__, "cemerick.cljs.test/TestContext");
};
cemerick.cljs.test.__GT_TestContext = function __GT_TestContext(test_env, test_name) {
  return new cemerick.cljs.test.TestContext(test_env, test_name);
};
cemerick.cljs.test.map__GT_TestContext = function map__GT_TestContext(G__15586) {
  return new cemerick.cljs.test.TestContext((new cljs.core.Keyword(null, "test-env", "test-env", -540228992)).cljs$core$IFn$_invoke$arity$1(G__15586), (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(G__15586), null, cljs.core.dissoc.call(null, G__15586, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), new cljs.core.Keyword(null, "test-name", "test-name", -675595913)));
};
cemerick.cljs.test.maybe_deref = function maybe_deref(x) {
  if (function() {
    var G__15593 = x;
    if (G__15593) {
      var bit__4302__auto__ = G__15593.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4302__auto__ || G__15593.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__15593.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__15593);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__15593);
    }
  }()) {
    return cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cemerick.cljs.test.testing_complete_QMARK_ = function testing_complete_QMARK_(test_env) {
  var map__15595 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__15595__$1 = cljs.core.seq_QMARK_.call(null, map__15595) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15595) : map__15595;
  var remaining = cljs.core.get.call(null, map__15595__$1, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312));
  var running = cljs.core.get.call(null, map__15595__$1, new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558));
  var async = cljs.core.get.call(null, map__15595__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var and__3627__auto__ = cljs.core.empty_QMARK_.call(null, remaining);
  if (and__3627__auto__) {
    var and__3627__auto____$1 = cljs.core.empty_QMARK_.call(null, running);
    if (and__3627__auto____$1) {
      var or__3639__auto__ = async == null;
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        return testing_complete_QMARK_.call(null, async);
      }
    } else {
      return and__3627__auto____$1;
    }
  } else {
    return and__3627__auto__;
  }
};
cemerick.cljs.test.on_async_progress = function on_async_progress(test_env, callback) {
  if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env))) {
    setTimeout(function() {
      return callback.call(null, test_env);
    }, 1);
  } else {
    cljs.core.add_watch.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cemerick.cljs.test.maybe_deref.call(null, test_env)), cljs.core.gensym.call(null, "on-progress"), function(key, ref, old, new$) {
      var vec__15598 = cljs.core.map.call(null, function(p1__15596_SHARP_) {
        return cljs.core.select_keys.call(null, p1__15596_SHARP_, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "test", "test", 577538877), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "error", "error", -978969032)], null));
      }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old, new$], null));
      var oldv = cljs.core.nth.call(null, vec__15598, 0, null);
      var newv = cljs.core.nth.call(null, vec__15598, 1, null);
      var complete_QMARK_ = cemerick.cljs.test.testing_complete_QMARK_.call(null, new$);
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = complete_QMARK_;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return cljs.core.not_EQ_.call(null, oldv, newv);
        }
      }())) {
        callback.call(null, cemerick.cljs.test.maybe_deref.call(null, test_env));
      } else {
      }
      if (cljs.core.truth_(complete_QMARK_)) {
        return cljs.core.remove_watch.call(null, ref, key);
      } else {
        return null;
      }
    });
  }
  return test_env;
};
goog.exportSymbol("cemerick.cljs.test.on_async_progress", cemerick.cljs.test.on_async_progress);
cemerick.cljs.test.on_testing_complete = function on_testing_complete(test_env, callback) {
  return cemerick.cljs.test.on_async_progress.call(null, test_env, function(test_env__$1) {
    if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env__$1))) {
      return callback.call(null, test_env__$1);
    } else {
      return null;
    }
  });
};
goog.exportSymbol("cemerick.cljs.test.on_testing_complete", cemerick.cljs.test.on_testing_complete);
cemerick.cljs.test.testing_vars_str = function testing_vars_str(p__15599) {
  var map__15601 = p__15599;
  var map__15601__$1 = cljs.core.seq_QMARK_.call(null, map__15601) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15601) : map__15601;
  var m = map__15601__$1;
  var test_name = cljs.core.get.call(null, map__15601__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
  var test_env = cljs.core.get.call(null, map__15601__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var line = cljs.core.get.call(null, map__15601__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var file = cljs.core.get.call(null, map__15601__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  return "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, function() {
    var or__3639__auto__ = cljs.core.seq.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env))));
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, test_name);
    }
  }())) + " (" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(file) + ":" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(line) + ")";
};
cemerick.cljs.test.testing_contexts_str = function testing_contexts_str(test_env) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))));
};
cemerick.cljs.test.inc_report_counter = function inc_report_counter(test_env, name) {
  return cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
};
cemerick.cljs.test.report = function() {
  var method_table__4518__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__4519__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__4520__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__4521__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__4522__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report", new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4522__auto__, method_table__4518__auto__, prefer_table__4519__auto__, method_cache__4520__auto__, cached_hierarchy__4521__auto__);
}();
cemerick.cljs.test.file_and_line = function file_and_line(error) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), error.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), error.lineNumber], null);
};
cemerick.cljs.test.do_report = function() {
  var do_report = null;
  var do_report__1 = function(m) {
    return cemerick.cljs.test.report.call(null, function() {
      var G__15606 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
      switch(G__15606) {
        case "error":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)), m);
          break;
        case "fail":
          return cljs.core.merge.call(null, cemerick.cljs.test.file_and_line.call(null, Error()), m);
          break;
        default:
          return m;
      }
    }());
  };
  var do_report__2 = function(p__15602, m) {
    var map__15605 = p__15602;
    var map__15605__$1 = cljs.core.seq_QMARK_.call(null, map__15605) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15605) : map__15605;
    var test_ctx = map__15605__$1;
    var test_name = cljs.core.get.call(null, map__15605__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__15605__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null)))));
    }
    return do_report.call(null, cljs.core.merge.call(null, m, test_ctx));
  };
  do_report = function(p__15602, m) {
    switch(arguments.length) {
      case 1:
        return do_report__1.call(this, p__15602);
      case 2:
        return do_report__2.call(this, p__15602, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  do_report.cljs$core$IFn$_invoke$arity$1 = do_report__1;
  do_report.cljs$core$IFn$_invoke$arity$2 = do_report__2;
  return do_report;
}();
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__15608) {
  var map__15609 = p__15608;
  var map__15609__$1 = cljs.core.seq_QMARK_.call(null, map__15609) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15609) : map__15609;
  var m = map__15609__$1;
  var test_env = cljs.core.get.call(null, map__15609__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_15610 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3639__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.prn.call(null, m);
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15610;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "pass", "pass", 1574159993), function(p__15611) {
  var map__15612 = p__15611;
  var map__15612__$1 = cljs.core.seq_QMARK_.call(null, map__15612) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15612) : map__15612;
  var m = map__15612__$1;
  var test_env = cljs.core.get.call(null, map__15612__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_15613 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3639__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15613;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "fail", "fail", 1706214930), function(p__15614) {
  var map__15615 = p__15614;
  var map__15615__$1 = cljs.core.seq_QMARK_.call(null, map__15615) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15615) : map__15615;
  var m = map__15615__$1;
  var test_env = cljs.core.get.call(null, map__15615__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_15616 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3639__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
    cljs.core.println.call(null, "\nFAIL in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___15617 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___15617)) {
      var message_15618 = temp__4126__auto___15617;
      cljs.core.println.call(null, message_15618);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    return cljs.core.println.call(null, "  actual:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15616;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "error", "error", -978969032), function(p__15619) {
  var map__15620 = p__15619;
  var map__15620__$1 = cljs.core.seq_QMARK_.call(null, map__15620) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15620) : map__15620;
  var m = map__15620__$1;
  var test_env = cljs.core.get.call(null, map__15620__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_15621 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3639__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "error", "error", -978969032));
    cljs.core.println.call(null, "\nERROR in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto___15622 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto___15622)) {
      var message_15623 = temp__4126__auto___15622;
      cljs.core.println.call(null, message_15623);
    } else {
    }
    cljs.core.println.call(null, "expected:", cljs.core.pr_str.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
    cljs.core.print.call(null, "  actual: ");
    var actual = (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m);
    if (actual instanceof Error) {
      return cljs.core.println.call(null, actual.stack);
    } else {
      return cljs.core.prn.call(null, actual);
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15621;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), function(p__15624) {
  var map__15625 = p__15624;
  var map__15625__$1 = cljs.core.seq_QMARK_.call(null, map__15625) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15625) : map__15625;
  var m = map__15625__$1;
  var test_env = cljs.core.get.call(null, map__15625__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var _STAR_print_fn_STAR_15626 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3639__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709));
    cljs.core.println.call(null, "\nWARNING in", cemerick.cljs.test.testing_vars_str.call(null, m));
    if (cljs.core.seq.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "test-contexts", "cemerick.cljs.test/test-contexts", 1505935128)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))) {
      cljs.core.println.call(null, cemerick.cljs.test.testing_contexts_str.call(null, test_env));
    } else {
    }
    var temp__4126__auto__ = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var message = temp__4126__auto__;
      return cljs.core.println.call(null, message);
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15626;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "summary", "summary", 380847952), function(p__15627) {
  var map__15628 = p__15627;
  var map__15628__$1 = cljs.core.seq_QMARK_.call(null, map__15628) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15628) : map__15628;
  var test_env = map__15628__$1;
  var error = cljs.core.get.call(null, map__15628__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__15628__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var pass = cljs.core.get.call(null, map__15628__$1, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
  var test = cljs.core.get.call(null, map__15628__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
  var _STAR_print_fn_STAR_15629 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3639__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    cljs.core.println.call(null, "\nRan", test, "tests containing", pass + fail + error, "assertions.");
    var temp__4124__auto__ = function() {
      var and__3627__auto__ = cljs.core.not.call(null, cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env));
      if (and__3627__auto__) {
        return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, cljs.core.juxt.call(null, new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312), new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env)))));
      } else {
        return and__3627__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4124__auto__)) {
      var pending_count = temp__4124__auto__;
      return cljs.core.println.call(null, "Waiting on", pending_count, "asynchronous test" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(pending_count > 1 ? "s" : null) + " to complete.");
    } else {
      return cljs.core.println.call(null, "Testing complete:", fail, "failures,", error, "errors.");
    }
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15629;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), function(p__15630) {
  var map__15631 = p__15630;
  var map__15631__$1 = cljs.core.seq_QMARK_.call(null, map__15631) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15631) : map__15631;
  var m = map__15631__$1;
  var async = cljs.core.get.call(null, map__15631__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var test_env = cljs.core.get.call(null, map__15631__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  var ns = cljs.core.get.call(null, map__15631__$1, new cljs.core.Keyword(null, "ns", "ns", 441598760));
  var _STAR_print_fn_STAR_15632 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function() {
      var or__3639__auto__ = (new cljs.core.Keyword("cemerick.cljs.test", "test-print-fn", "cemerick.cljs.test/test-print-fn", -2097998143)).cljs$core$IFn$_invoke$arity$1(test_env);
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return cljs.core._STAR_print_fn_STAR_;
      }
    }();
    return cljs.core.println.call(null, "\nTesting", ns, cljs.core.truth_(async) ? "(async)" : "");
  } finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15632;
  }
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), function(p__15633) {
  var map__15634 = p__15633;
  var map__15634__$1 = cljs.core.seq_QMARK_.call(null, map__15634) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15634) : map__15634;
  var m = map__15634__$1;
  var test_env = cljs.core.get.call(null, map__15634__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), function(p__15635) {
  var map__15636 = p__15635;
  var map__15636__$1 = cljs.core.seq_QMARK_.call(null, map__15636) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15636) : map__15636;
  var m = map__15636__$1;
  var test_env = cljs.core.get.call(null, map__15636__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cljs.core._add_method.call(null, cemerick.cljs.test.report, new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), function(p__15637) {
  var map__15638 = p__15637;
  var map__15638__$1 = cljs.core.seq_QMARK_.call(null, map__15638) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15638) : map__15638;
  var m = map__15638__$1;
  var test_env = cljs.core.get.call(null, map__15638__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
  return null;
});
cemerick.cljs.test.register_fixtures_BANG_ = function() {
  var register_fixtures_BANG___delegate = function(ns_sym, fixture_type, fixture_fns) {
    return cljs.core.swap_BANG_.call(null, cemerick.cljs.test.registered_fixtures, cljs.core.update_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_sym, fixture_type], null), cljs.core.constantly.call(null, fixture_fns));
  };
  var register_fixtures_BANG_ = function(ns_sym, fixture_type, var_args) {
    var fixture_fns = null;
    if (arguments.length > 2) {
      fixture_fns = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0);
    }
    return register_fixtures_BANG___delegate.call(this, ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$lang$maxFixedArity = 2;
  register_fixtures_BANG_.cljs$lang$applyTo = function(arglist__15639) {
    var ns_sym = cljs.core.first(arglist__15639);
    arglist__15639 = cljs.core.next(arglist__15639);
    var fixture_type = cljs.core.first(arglist__15639);
    var fixture_fns = cljs.core.rest(arglist__15639);
    return register_fixtures_BANG___delegate(ns_sym, fixture_type, fixture_fns);
  };
  register_fixtures_BANG_.cljs$core$IFn$_invoke$arity$variadic = register_fixtures_BANG___delegate;
  return register_fixtures_BANG_;
}();
cemerick.cljs.test.default_fixture = function default_fixture(f) {
  return f.call(null);
};
cemerick.cljs.test.compose_fixtures = function compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cemerick.cljs.test.join_fixtures = function join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cemerick.cljs.test.compose_fixtures, cemerick.cljs.test.default_fixture, fixtures);
};
cemerick.cljs.test.async_test_QMARK_ = function async_test_QMARK_(test_fn) {
  return cljs.core.boolean$.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, test_fn)));
};
cemerick.cljs.test.test_async_fn = function test_async_fn(async_test_env, test_name, test_fn) {
  cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), test_fn, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name], null));
  cemerick.cljs.test.inc_report_counter.call(null, async_test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
  return test_fn.call(null, new cemerick.cljs.test.TestContext(async_test_env, test_name));
};
cemerick.cljs.test.start_next_async_test = function start_next_async_test(async_test_env) {
  var next_test = cljs.core.atom.call(null, function() {
    return null;
  });
  cljs.core.swap_BANG_.call(null, async_test_env, function(next_test) {
    return function(env) {
      var temp__4124__auto__ = function() {
        var and__3627__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "stop", "stop", -2140911342)).cljs$core$IFn$_invoke$arity$1(env));
        if (and__3627__auto__) {
          return cljs.core.first.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(env));
        } else {
          return and__3627__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4124__auto__)) {
        var vec__15641 = temp__4124__auto__;
        var name = cljs.core.nth.call(null, vec__15641, 0, null);
        var testfn = cljs.core.nth.call(null, vec__15641, 1, null);
        cljs.core.reset_BANG_.call(null, next_test, testfn);
        var ns_15642 = cljs.core.namespace.call(null, name);
        if (cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, async_test_env)), ns_15642)) {
        } else {
          cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_15642, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), async_test_env, new cljs.core.Keyword(null, "async", "async", 1050769601), true], null));
          cljs.core.alter_meta_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "namespaces", "namespaces", -1444157469)], null), cljs.core.fnil.call(null, cljs.core.conj, cljs.core.PersistentHashSet.EMPTY), ns_15642);
        }
        return cljs.core.update_in.call(null, cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.dissoc, name), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.assoc, 
        name, new Date);
      } else {
        return env;
      }
    };
  }(next_test));
  setTimeout(function(next_test) {
    return function() {
      return cljs.core.deref.call(null, next_test).call(null);
    };
  }(next_test), 1);
  return async_test_env;
};
cemerick.cljs.test.squelch_internals = function squelch_internals(test_env) {
  var G__15647 = test_env;
  cljs.core.swap_BANG_.call(null, G__15647, function(G__15647) {
    return function(p1__15643_SHARP_) {
      return cljs.core.reduce.call(null, function(G__15647) {
        return function(env, p__15648) {
          var vec__15649 = p__15648;
          var k = cljs.core.nth.call(null, vec__15649, 0, null);
          var v = cljs.core.nth.call(null, vec__15649, 1, null);
          if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, k), cljs.core.namespace.call(null, new cljs.core.Keyword("cemerick.cljs.test", "foo", "cemerick.cljs.test/foo", -1669146357)))) {
            return env;
          } else {
            return cljs.core.assoc.call(null, env, k, v);
          }
        };
      }(G__15647), cljs.core.PersistentArrayMap.EMPTY, p1__15643_SHARP_);
    };
  }(G__15647));
  return G__15647;
};
cemerick.cljs.test.finish_test_entry_point = function finish_test_entry_point(entry_point_QMARK_, test_env) {
  if (cljs.core.truth_(entry_point_QMARK_)) {
    if (cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)))))) {
      cljs.core.swap_BANG_.call(null, test_env, cljs.core.dissoc, new cljs.core.Keyword(null, "async", "async", 1050769601));
    } else {
      cemerick.cljs.test.start_next_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)));
    }
    return cljs.core.deref.call(null, cemerick.cljs.test.squelch_internals.call(null, test_env));
  } else {
    return test_env;
  }
};
cemerick.cljs.test.schedule_async_test = function schedule_async_test(async_test_env, test_name, test_fn) {
  cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "remaining", "cemerick.cljs.test/remaining", -1491651312)], null), cljs.core.fnil.call(null, cljs.core.assoc, cljs.core.sorted_map.call(null)), test_name, cljs.core.with_meta.call(null, function() {
    return cemerick.cljs.test.test_async_fn.call(null, async_test_env, test_name, test_fn);
  }, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "name", "name", 1843675177), test_name], null)));
  return async_test_env;
};
cemerick.cljs.test.done_STAR_ = function() {
  var done_STAR_ = null;
  var done_STAR___1 = function(p__15651) {
    var map__15655 = p__15651;
    var map__15655__$1 = cljs.core.seq_QMARK_.call(null, map__15655) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15655) : map__15655;
    var test_ctx = map__15655__$1;
    var test_name = cljs.core.get.call(null, map__15655__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var async_test_env = cljs.core.get.call(null, map__15655__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null)))));
    }
    var first_call_QMARK_ = cljs.core.atom.call(null, false);
    cljs.core.swap_BANG_.call(null, async_test_env, function(first_call_QMARK_, map__15655, map__15655__$1, test_ctx, test_name, async_test_env) {
      return function(env) {
        cljs.core.reset_BANG_.call(null, first_call_QMARK_, cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)).cljs$core$IFn$_invoke$arity$1(env), test_name));
        return cljs.core.update_in.call(null, env, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "running", "cemerick.cljs.test/running", -1954037558)], null), cljs.core.dissoc, test_name);
      };
    }(first_call_QMARK_, map__15655, map__15655__$1, test_ctx, test_name, async_test_env));
    if (cljs.core.truth_(cljs.core.deref.call(null, first_call_QMARK_))) {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), test_name], null), test_ctx));
      if (cljs.core.truth_(cemerick.cljs.test.testing_complete_QMARK_.call(null, async_test_env))) {
        cemerick.cljs.test.squelch_internals.call(null, async_test_env);
      } else {
        cemerick.cljs.test.start_next_async_test.call(null, async_test_env);
      }
    } else {
      cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "multiple-async-done", "multiple-async-done", 910410709), new cljs.core.Keyword(null, "message", "message", -406056002), "`(done)` called multiple times to signal end-of-test"], null), test_ctx));
    }
    return async_test_env;
  };
  var done_STAR___2 = function(p__15650, error) {
    var map__15654 = p__15650;
    var map__15654__$1 = cljs.core.seq_QMARK_.call(null, map__15654) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15654) : map__15654;
    var test_ctx = map__15654__$1;
    var test_name = cljs.core.get.call(null, map__15654__$1, new cljs.core.Keyword(null, "test-name", "test-name", -675595913));
    var test_env = cljs.core.get.call(null, map__15654__$1, new cljs.core.Keyword(null, "test-env", "test-env", -540228992));
    if (test_ctx instanceof cemerick.cljs.test.TestContext) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "TestContext", "TestContext", -1631381989, null), new cljs.core.Symbol(null, "test-ctx", "test-ctx", -185362578, null)))));
    }
    cemerick.cljs.test.do_report.call(null, cemerick.cljs.test.do_report.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    error], null), test_ctx)));
    return done_STAR_.call(null, test_ctx);
  };
  done_STAR_ = function(p__15650, error) {
    switch(arguments.length) {
      case 1:
        return done_STAR___1.call(this, p__15650);
      case 2:
        return done_STAR___2.call(this, p__15650, error);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  done_STAR_.cljs$core$IFn$_invoke$arity$1 = done_STAR___1;
  done_STAR_.cljs$core$IFn$_invoke$arity$2 = done_STAR___2;
  return done_STAR_;
}();
cemerick.cljs.test.stop = function stop(async_test_env) {
  return cljs.core.swap_BANG_.call(null, async_test_env, cljs.core.assoc, new cljs.core.Keyword(null, "stop", "stop", -2140911342), true);
};
cemerick.cljs.test.test_function = function() {
  var test_function = null;
  var test_function__1 = function(v) {
    return test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), v);
  };
  var test_function__2 = function(test_env, v) {
    var entry_point_QMARK___10765__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_15659 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      if (cljs.core.fn_QMARK_.call(null, v)) {
      } else {
        throw new Error("Assert failed: test-var must be passed the function to be tested (not a symbol naming it)\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))));
      }
      var map__15660_15662 = cljs.core.meta.call(null, v);
      var map__15660_15663__$1 = cljs.core.seq_QMARK_.call(null, map__15660_15662) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15660_15662) : map__15660_15662;
      var t_15664 = cljs.core.get.call(null, map__15660_15663__$1, new cljs.core.Keyword(null, "test", "test", 577538877));
      var test_name_15665 = cljs.core.get.call(null, map__15660_15663__$1, new cljs.core.Keyword(null, "name", "name", 1843675177));
      var async_QMARK__15666 = cljs.core.get.call(null, map__15660_15663__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
      if (cljs.core.truth_(t_15664)) {
        if (cljs.core.truth_(async_QMARK__15666)) {
          cemerick.cljs.test.schedule_async_test.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), test_name_15665, t_15664);
        } else {
          try {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.conj, function() {
              var or__3639__auto__ = test_name_15665;
              if (cljs.core.truth_(or__3639__auto__)) {
                return or__3639__auto__;
              } else {
                return v;
              }
            }());
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_15665], null));
            cemerick.cljs.test.inc_report_counter.call(null, test_env, new cljs.core.Keyword(null, "test", "test", 577538877));
            try {
              t_15664.call(null, new cemerick.cljs.test.TestContext(test_env, test_name_15665));
            } catch (e15661) {
              if (e15661 instanceof Error) {
                var e_15667 = e15661;
                cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_15665, new cljs.core.Keyword(null, 
                "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e_15667], null));
              } else {
                throw e15661;
              }
            }
            cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env, new cljs.core.Keyword(null, "test-name", "test-name", -675595913), test_name_15665], null));
          } finally {
            cljs.core.swap_BANG_.call(null, test_env, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cemerick.cljs.test", "test-functions", "cemerick.cljs.test/test-functions", -1547551786)], null), cljs.core.pop);
          }
        }
      } else {
      }
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___10765__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_15659;
    }
  };
  test_function = function(test_env, v) {
    switch(arguments.length) {
      case 1:
        return test_function__1.call(this, test_env);
      case 2:
        return test_function__2.call(this, test_env, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_function.cljs$core$IFn$_invoke$arity$1 = test_function__1;
  test_function.cljs$core$IFn$_invoke$arity$2 = test_function__2;
  return test_function;
}();
cemerick.cljs.test.test_all_vars = function() {
  var test_all_vars = null;
  var test_all_vars__1 = function(ns_sym) {
    return test_all_vars.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_all_vars__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___10765__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_15676 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var tests_15681 = cljs.core.filter.call(null, function(_STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__) {
        return function(p1__15668_SHARP_) {
          return(new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__15668_SHARP_));
        };
      }(_STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__), cljs.core.vals.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests), ns_sym)));
      var once_fixture_fn_15682 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "once", "once", -262568523)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      var each_fixture_fn_15683 = cemerick.cljs.test.join_fixtures.call(null, (new cljs.core.Keyword(null, "each", "each", 940016129)).cljs$core$IFn$_invoke$arity$1(ns_sym.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_fixtures))));
      once_fixture_fn_15682.call(null, function(once_fixture_fn_15682, each_fixture_fn_15683, tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__) {
        return function() {
          var seq__15677 = cljs.core.seq.call(null, cljs.core.remove.call(null, cemerick.cljs.test.async_test_QMARK_, tests_15681));
          var chunk__15678 = null;
          var count__15679 = 0;
          var i__15680 = 0;
          while (true) {
            if (i__15680 < count__15679) {
              var v = cljs.core._nth.call(null, chunk__15678, i__15680);
              each_fixture_fn_15683.call(null, function(seq__15677, chunk__15678, count__15679, i__15680, v, once_fixture_fn_15682, each_fixture_fn_15683, tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__) {
                return function() {
                  return cemerick.cljs.test.test_function.call(null, test_env, v);
                };
              }(seq__15677, chunk__15678, count__15679, i__15680, v, once_fixture_fn_15682, each_fixture_fn_15683, tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__));
              var G__15684 = seq__15677;
              var G__15685 = chunk__15678;
              var G__15686 = count__15679;
              var G__15687 = i__15680 + 1;
              seq__15677 = G__15684;
              chunk__15678 = G__15685;
              count__15679 = G__15686;
              i__15680 = G__15687;
              continue;
            } else {
              var temp__4126__auto__ = cljs.core.seq.call(null, seq__15677);
              if (temp__4126__auto__) {
                var seq__15677__$1 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__15677__$1)) {
                  var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__15677__$1);
                  var G__15688 = cljs.core.chunk_rest.call(null, seq__15677__$1);
                  var G__15689 = c__4408__auto__;
                  var G__15690 = cljs.core.count.call(null, c__4408__auto__);
                  var G__15691 = 0;
                  seq__15677 = G__15688;
                  chunk__15678 = G__15689;
                  count__15679 = G__15690;
                  i__15680 = G__15691;
                  continue;
                } else {
                  var v = cljs.core.first.call(null, seq__15677__$1);
                  each_fixture_fn_15683.call(null, function(seq__15677, chunk__15678, count__15679, i__15680, v, seq__15677__$1, temp__4126__auto__, once_fixture_fn_15682, each_fixture_fn_15683, tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__) {
                    return function() {
                      return cemerick.cljs.test.test_function.call(null, test_env, v);
                    };
                  }(seq__15677, chunk__15678, count__15679, i__15680, v, seq__15677__$1, temp__4126__auto__, once_fixture_fn_15682, each_fixture_fn_15683, tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__));
                  var G__15692 = cljs.core.next.call(null, seq__15677__$1);
                  var G__15693 = null;
                  var G__15694 = 0;
                  var G__15695 = 0;
                  seq__15677 = G__15692;
                  chunk__15678 = G__15693;
                  count__15679 = G__15694;
                  i__15680 = G__15695;
                  continue;
                }
              } else {
                return null;
              }
            }
            break;
          }
        };
      }(once_fixture_fn_15682, each_fixture_fn_15683, tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__));
      cljs.core.reduce.call(null, function(tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__) {
        return function(p1__15669_SHARP_, p2__15670_SHARP_) {
          return cljs.core.apply.call(null, cemerick.cljs.test.schedule_async_test, p1__15669_SHARP_, p2__15670_SHARP_);
        };
      }(tests_15681, _STAR_entry_point_STAR_15676, entry_point_QMARK___10765__auto__), (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, test_env)), cljs.core.map.call(null, cljs.core.comp.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "test", "test", 577538877)), cljs.core.meta), cljs.core.filter.call(null, cemerick.cljs.test.async_test_QMARK_, tests_15681)));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___10765__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_15676;
    }
  };
  test_all_vars = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_all_vars__1.call(this, test_env);
      case 2:
        return test_all_vars__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_all_vars.cljs$core$IFn$_invoke$arity$1 = test_all_vars__1;
  test_all_vars.cljs$core$IFn$_invoke$arity$2 = test_all_vars__2;
  return test_all_vars;
}();
cemerick.cljs.test.test_ns = function() {
  var test_ns = null;
  var test_ns__1 = function(ns_sym) {
    return test_ns.call(null, cemerick.cljs.test.init_test_environment.call(null), ns_sym);
  };
  var test_ns__2 = function(test_env, ns_sym) {
    var entry_point_QMARK___10765__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_15697 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      var temp__4124__auto___15698 = cljs.core.get.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_test_hooks), ns_sym);
      if (cljs.core.truth_(temp__4124__auto___15698)) {
        var test_hook_15699 = temp__4124__auto___15698;
        test_hook_15699.call(null, test_env);
      } else {
        cemerick.cljs.test.test_all_vars.call(null, test_env, ns_sym);
      }
      cemerick.cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645), new cljs.core.Keyword(null, "ns", "ns", 441598760), ns_sym, new cljs.core.Keyword(null, "test-env", "test-env", -540228992), test_env], null));
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___10765__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_15697;
    }
  };
  test_ns = function(test_env, ns_sym) {
    switch(arguments.length) {
      case 1:
        return test_ns__1.call(this, test_env);
      case 2:
        return test_ns__2.call(this, test_env, ns_sym);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  test_ns.cljs$core$IFn$_invoke$arity$1 = test_ns__1;
  test_ns.cljs$core$IFn$_invoke$arity$2 = test_ns__2;
  return test_ns;
}();
cemerick.cljs.test.test_summary = function test_summary(test_env) {
  var test_env__$1 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  return cemerick.cljs.test.do_report.call(null, cljs.core.assoc.call(null, cljs.core.merge_with.call(null, cljs.core._PLUS_, test_env__$1, cemerick.cljs.test.maybe_deref.call(null, (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(test_env__$1))), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952)));
};
cemerick.cljs.test.run_tests_STAR_ = function() {
  var run_tests_STAR___delegate = function(namespaces) {
    var vec__15706 = cljs.core.first.call(null, namespaces) instanceof cljs.core.Atom ? namespaces : cljs.core.cons.call(null, cemerick.cljs.test.init_test_environment.call(null), namespaces);
    var test_env = cljs.core.nth.call(null, vec__15706, 0, null);
    var namespaces__$1 = cljs.core.nthnext.call(null, vec__15706, 1);
    var entry_point_QMARK___10765__auto__ = cemerick.cljs.test._STAR_entry_point_STAR_;
    var _STAR_entry_point_STAR_15707 = cemerick.cljs.test._STAR_entry_point_STAR_;
    try {
      cemerick.cljs.test._STAR_entry_point_STAR_ = false;
      var seq__15708_15712 = cljs.core.seq.call(null, cljs.core.distinct.call(null, namespaces__$1));
      var chunk__15709_15713 = null;
      var count__15710_15714 = 0;
      var i__15711_15715 = 0;
      while (true) {
        if (i__15711_15715 < count__15710_15714) {
          var ns_15716 = cljs.core._nth.call(null, chunk__15709_15713, i__15711_15715);
          cemerick.cljs.test.test_ns.call(null, test_env, ns_15716);
          var G__15717 = seq__15708_15712;
          var G__15718 = chunk__15709_15713;
          var G__15719 = count__15710_15714;
          var G__15720 = i__15711_15715 + 1;
          seq__15708_15712 = G__15717;
          chunk__15709_15713 = G__15718;
          count__15710_15714 = G__15719;
          i__15711_15715 = G__15720;
          continue;
        } else {
          var temp__4126__auto___15721 = cljs.core.seq.call(null, seq__15708_15712);
          if (temp__4126__auto___15721) {
            var seq__15708_15722__$1 = temp__4126__auto___15721;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__15708_15722__$1)) {
              var c__4408__auto___15723 = cljs.core.chunk_first.call(null, seq__15708_15722__$1);
              var G__15724 = cljs.core.chunk_rest.call(null, seq__15708_15722__$1);
              var G__15725 = c__4408__auto___15723;
              var G__15726 = cljs.core.count.call(null, c__4408__auto___15723);
              var G__15727 = 0;
              seq__15708_15712 = G__15724;
              chunk__15709_15713 = G__15725;
              count__15710_15714 = G__15726;
              i__15711_15715 = G__15727;
              continue;
            } else {
              var ns_15728 = cljs.core.first.call(null, seq__15708_15722__$1);
              cemerick.cljs.test.test_ns.call(null, test_env, ns_15728);
              var G__15729 = cljs.core.next.call(null, seq__15708_15722__$1);
              var G__15730 = null;
              var G__15731 = 0;
              var G__15732 = 0;
              seq__15708_15712 = G__15729;
              chunk__15709_15713 = G__15730;
              count__15710_15714 = G__15731;
              i__15711_15715 = G__15732;
              continue;
            }
          } else {
          }
        }
        break;
      }
      cemerick.cljs.test.on_testing_complete.call(null, test_env, cemerick.cljs.test.test_summary);
      cemerick.cljs.test.test_summary.call(null, test_env);
      return cemerick.cljs.test.finish_test_entry_point.call(null, entry_point_QMARK___10765__auto__, test_env);
    } finally {
      cemerick.cljs.test._STAR_entry_point_STAR_ = _STAR_entry_point_STAR_15707;
    }
  };
  var run_tests_STAR_ = function(var_args) {
    var namespaces = null;
    if (arguments.length > 0) {
      namespaces = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0);
    }
    return run_tests_STAR___delegate.call(this, namespaces);
  };
  run_tests_STAR_.cljs$lang$maxFixedArity = 0;
  run_tests_STAR_.cljs$lang$applyTo = function(arglist__15733) {
    var namespaces = cljs.core.seq(arglist__15733);
    return run_tests_STAR___delegate(namespaces);
  };
  run_tests_STAR_.cljs$core$IFn$_invoke$arity$variadic = run_tests_STAR___delegate;
  return run_tests_STAR_;
}();
goog.exportSymbol("cemerick.cljs.test.run_tests_STAR_", cemerick.cljs.test.run_tests_STAR_);
cemerick.cljs.test.run_all_tests = function() {
  var run_all_tests = null;
  var run_all_tests__0 = function() {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests)));
  };
  var run_all_tests__1 = function(re) {
    return cljs.core.apply.call(null, cemerick.cljs.test.run_tests_STAR_, cljs.core.filter.call(null, function(p1__15734_SHARP_) {
      return cljs.core.re_matches.call(null, re, cljs.core.name.call(null, p1__15734_SHARP_));
    }, cljs.core.keys.call(null, cljs.core.deref.call(null, cemerick.cljs.test.registered_tests))));
  };
  run_all_tests = function(re) {
    switch(arguments.length) {
      case 0:
        return run_all_tests__0.call(this);
      case 1:
        return run_all_tests__1.call(this, re);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  run_all_tests.cljs$core$IFn$_invoke$arity$0 = run_all_tests__0;
  run_all_tests.cljs$core$IFn$_invoke$arity$1 = run_all_tests__1;
  return run_all_tests;
}();
goog.exportSymbol("cemerick.cljs.test.run_all_tests", cemerick.cljs.test.run_all_tests);
cemerick.cljs.test.successful_QMARK_ = function successful_QMARK_(test_env) {
  var map__15736 = cemerick.cljs.test.maybe_deref.call(null, test_env);
  var map__15736__$1 = cljs.core.seq_QMARK_.call(null, map__15736) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15736) : map__15736;
  var async = cljs.core.get.call(null, map__15736__$1, new cljs.core.Keyword(null, "async", "async", 1050769601));
  var error = cljs.core.get.call(null, map__15736__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
  var fail = cljs.core.get.call(null, map__15736__$1, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  var and__3627__auto__ = cemerick.cljs.test.testing_complete_QMARK_.call(null, test_env);
  if (cljs.core.truth_(and__3627__auto__)) {
    var and__3627__auto____$1 = function() {
      var or__3639__auto__ = fail;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return 0;
      }
    }() === 0;
    if (and__3627__auto____$1) {
      var and__3627__auto____$2 = function() {
        var or__3639__auto__ = error;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return 0;
        }
      }() === 0;
      if (and__3627__auto____$2) {
        var or__3639__auto__ = async == null;
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          return successful_QMARK_.call(null, async);
        }
      } else {
        return and__3627__auto____$2;
      }
    } else {
      return and__3627__auto____$1;
    }
  } else {
    return and__3627__auto__;
  }
};
goog.exportSymbol("cemerick.cljs.test.successful_QMARK_", cemerick.cljs.test.successful_QMARK_);
cemerick.cljs.test.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("cemerick.cljs.test.set_print_fn_BANG_", cemerick.cljs.test.set_print_fn_BANG_);
goog.provide("sailing_study_guide.test.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("sailing_study_guide.dispatch");
goog.require("sailing_study_guide.dispatch");
goog.require("clairvoyant.core");
goog.require("clairvoyant.core");
goog.require("cljs.core.async");
goog.require("cemerick.cljs.test");
goog.require("cemerick.cljs.test");
sailing_study_guide.test.dispatch.setup = function setup() {
  sailing_study_guide.test.dispatch._STAR_default_tag_STAR_ = new cljs.core.Keyword(null, "foo", "foo", 1268894036);
  sailing_study_guide.test.dispatch._STAR_default_mesg_STAR_ = 42;
  sailing_study_guide.test.dispatch._STAR_not_default_mesg_STAR_ = 43;
  sailing_study_guide.test.dispatch._STAR_default_payload_STAR_ = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), sailing_study_guide.test.dispatch._STAR_default_tag_STAR_, new cljs.core.Keyword(null, "message", "message", -406056002), sailing_study_guide.test.dispatch._STAR_default_mesg_STAR_], null);
};
sailing_study_guide.test.dispatch.teardown = function teardown() {
  return null;
};
sailing_study_guide.test.dispatch.each_fixture = function each_fixture(f) {
  sailing_study_guide.test.dispatch.setup.call(null);
  f.call(null);
  return sailing_study_guide.test.dispatch.teardown.call(null);
};
sailing_study_guide.test.dispatch.retrieve_message_test = function retrieve_message_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), sailing_study_guide.test.dispatch.retrieve_message_test);
};
sailing_study_guide.test.dispatch.retrieve_message_test = cljs.core.with_meta.call(null, sailing_study_guide.test.dispatch.retrieve_message_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 22, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 22, new cljs.core.Keyword(null, 
"file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("sailing-study-guide.test.dispatch", "retrieve-message-test", "sailing-study-guide.test.dispatch/retrieve-message-test", 1279066921, null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-column", 
"end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 22, new cljs.core.Keyword(null, "column", "column", 2078222095), 10, new cljs.core.Keyword(null, "line", "line", 212345235), 22, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null)), new cljs.core.Keyword(null, "test", "test", 577538877), function retrieve_message_test_test(test_ctx__10590__auto__) {
  var _test_ctx = test_ctx__10590__auto__;
  var async_QMARK___10505__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_10756 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto__) ? null : _test_ctx;
    try {
      var _test_ctx__$1 = _test_ctx;
      var async_QMARK___10505__auto____$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx__$1)));
      var _STAR_test_ctx_STAR_10758 = cemerick.cljs.test._STAR_test_ctx_STAR_;
      try {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto____$1) ? null : _test_ctx__$1;
        try {
          try {
            var values__10525__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, sailing_study_guide.dispatch.retrieve_message.call(null, sailing_study_guide.test.dispatch._STAR_default_payload_STAR_)), sailing_study_guide.test.dispatch._STAR_default_mesg_STAR_);
            var result__10526__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10525__auto__);
            if (result__10526__auto__ instanceof cemerick.cljs.test.TestContext) {
              throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
            } else {
            }
            if (cljs.core.truth_(result__10526__auto__)) {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-mesg*", "*default-mesg*", -1965296641, null), cljs.core.list(new cljs.core.Symbol("dispatcher", 
              "retrieve-message", "dispatcher/retrieve-message", -2024743297, null), new cljs.core.Symbol(null, "*default-payload*", "*default-payload*", 1747854792, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10525__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-mesg*", "*default-mesg*", -1965296641, null), cljs.core.list(new cljs.core.Symbol("dispatcher", 
              "retrieve-message", "dispatcher/retrieve-message", -2024743297, null), new cljs.core.Symbol(null, "*default-payload*", "*default-payload*", 1747854792, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10525__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
              "message", "message", -406056002), null], null));
            }
            return result__10526__auto__;
          } catch (e10760) {
            if (e10760 instanceof Error) {
              var t__10562__auto__ = e10760;
              return cemerick.cljs.test.do_report.call(null, _test_ctx__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-mesg*", "*default-mesg*", -1965296641, null), cljs.core.list(new cljs.core.Symbol("dispatcher", 
              "retrieve-message", "dispatcher/retrieve-message", -2024743297, null), new cljs.core.Symbol(null, "*default-payload*", "*default-payload*", 1747854792, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10562__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              throw e10760;
            }
          }
        } catch (e10759) {
          if (e10759 instanceof Error) {
            var e__10506__auto__ = e10759;
            if (cljs.core.truth_(async_QMARK___10505__auto____$1)) {
              return cemerick.cljs.test.done_STAR_.call(null, _test_ctx__$1, e__10506__auto__);
            } else {
              throw e__10506__auto__;
            }
          } else {
            throw e10759;
          }
        }
      } finally {
        cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_10758;
      }
    } catch (e10757) {
      if (e10757 instanceof Error) {
        var e__10506__auto__ = e10757;
        if (cljs.core.truth_(async_QMARK___10505__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10506__auto__);
        } else {
          throw e__10506__auto__;
        }
      } else {
        throw e10757;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_10756;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.test.dispatch", "sailing-study-guide.test.dispatch", 2120704787, null), new cljs.core.Symbol("sailing-study-guide.test.dispatch", "retrieve-message-test", "sailing-study-guide.test.dispatch/retrieve-message-test", 1279066921, null), sailing_study_guide.test.dispatch.retrieve_message_test);
sailing_study_guide.test.dispatch.register_test = function register_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), sailing_study_guide.test.dispatch.register_test);
};
sailing_study_guide.test.dispatch.register_test = cljs.core.with_meta.call(null, sailing_study_guide.test.dispatch.register_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 26, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", 
"line", 212345235), 26, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("sailing-study-guide.test.dispatch", "register-test", "sailing-study-guide.test.dispatch/register-test", -1619419419, null), new cljs.core.PersistentArrayMap(null, 
6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 26, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", "line", 212345235), 26, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null)), 
new cljs.core.Keyword(null, "test", "test", 577538877), function register_test_test(test_ctx__10590__auto__) {
  var _test_ctx = test_ctx__10590__auto__;
  var async_QMARK___10505__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_10880 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto__) ? null : _test_ctx;
    try {
      var c = sailing_study_guide.dispatch.register.call(null, sailing_study_guide.test.dispatch._STAR_default_tag_STAR_);
      cljs.core.async.put_BANG_.call(null, c, sailing_study_guide.test.dispatch._STAR_default_payload_STAR_);
      var c__6844__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto__, c, _STAR_test_ctx_STAR_10880, _test_ctx, async_QMARK___10505__auto__) {
        return function() {
          var f__6845__auto__ = function() {
            var switch__6829__auto__ = function(c__6844__auto__, c, _STAR_test_ctx_STAR_10880, _test_ctx, async_QMARK___10505__auto__) {
              return function(state_10957) {
                var state_val_10958 = state_10957[1];
                if (state_val_10958 === 7) {
                  var inst_10894 = state_10957[2];
                  var inst_10895 = cemerick.cljs.test._STAR_test_ctx_STAR_ = inst_10894;
                  var state_10957__$1 = function() {
                    var statearr_10959 = state_10957;
                    statearr_10959[7] = inst_10895;
                    return statearr_10959;
                  }();
                  var statearr_10960_10999 = state_10957__$1;
                  statearr_10960_10999[2] = null;
                  statearr_10960_10999[1] = 13;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_10958 === 20) {
                    var inst_10920 = state_10957[8];
                    var inst_10927 = state_10957[2];
                    var state_10957__$1 = function() {
                      var statearr_10961 = state_10957;
                      statearr_10961[9] = inst_10927;
                      return statearr_10961;
                    }();
                    if (cljs.core.truth_(inst_10920)) {
                      var statearr_10962_11000 = state_10957__$1;
                      statearr_10962_11000[1] = 21;
                    } else {
                      var statearr_10963_11001 = state_10957__$1;
                      statearr_10963_11001[1] = 22;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_10958 === 1) {
                      var inst_10882 = (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx);
                      var inst_10883 = cljs.core.meta.call(null, inst_10882);
                      var inst_10884 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(inst_10883);
                      var state_10957__$1 = function() {
                        var statearr_10964 = state_10957;
                        statearr_10964[10] = inst_10884;
                        return statearr_10964;
                      }();
                      var statearr_10965_11002 = state_10957__$1;
                      statearr_10965_11002[2] = null;
                      statearr_10965_11002[1] = 4;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_10958 === 4) {
                        var inst_10884 = state_10957[10];
                        var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_10957, null, null, 3, 2);
                        var state_10957__$1 = state_10957;
                        if (cljs.core.truth_(inst_10884)) {
                          var statearr_10966_11003 = state_10957__$1;
                          statearr_10966_11003[1] = 5;
                        } else {
                          var statearr_10967_11004 = state_10957__$1;
                          statearr_10967_11004[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_10958 === 15) {
                          var inst_10906 = state_10957[2];
                          var inst_10907 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                          var inst_10908 = cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
                          var inst_10909 = [new cljs.core.Keyword(null, "error", "error", -978969032), inst_10908, inst_10906, null];
                          var inst_10910 = cljs.core.PersistentHashMap.fromArrays(inst_10907, inst_10909);
                          var inst_10911 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_10910);
                          var state_10957__$1 = state_10957;
                          var statearr_10968_11005 = state_10957__$1;
                          statearr_10968_11005[2] = inst_10911;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10957__$1);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_10958 === 21) {
                            var inst_10919 = state_10957[11];
                            var inst_10929 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                            var inst_10930 = cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
                            var inst_10931 = cljs.core.cons.call(null, cljs.core.not, inst_10919);
                            var inst_10932 = [new cljs.core.Keyword(null, "pass", "pass", 1574159993), inst_10930, inst_10931, null];
                            var inst_10933 = cljs.core.PersistentHashMap.fromArrays(inst_10929, inst_10932);
                            var inst_10934 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_10933);
                            var state_10957__$1 = state_10957;
                            var statearr_10969_11006 = state_10957__$1;
                            statearr_10969_11006[2] = inst_10934;
                            statearr_10969_11006[1] = 23;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_10958 === 13) {
                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_10957, 9, Error, null, 8);
                              var state_10957__$1 = state_10957;
                              var statearr_10970_11007 = state_10957__$1;
                              statearr_10970_11007[2] = null;
                              statearr_10970_11007[1] = 16;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_10958 === 22) {
                                var inst_10919 = state_10957[11];
                                var inst_10936 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                                var inst_10937 = cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
                                var inst_10938 = cljs.core.List.EMPTY;
                                var inst_10939 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                                var inst_10940 = cljs.core.cons.call(null, inst_10939, inst_10919);
                                var inst_10941 = cljs.core._conj.call(null, inst_10938, inst_10940);
                                var inst_10942 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                                var inst_10943 = cljs.core._conj.call(null, inst_10941, inst_10942);
                                var inst_10944 = [new cljs.core.Keyword(null, "fail", "fail", 1706214930), inst_10937, inst_10943, null];
                                var inst_10945 = cljs.core.PersistentHashMap.fromArrays(inst_10936, inst_10944);
                                var inst_10946 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_10945);
                                var state_10957__$1 = state_10957;
                                var statearr_10971_11008 = state_10957__$1;
                                statearr_10971_11008[2] = inst_10946;
                                statearr_10971_11008[1] = 23;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_10958 === 6) {
                                  var state_10957__$1 = state_10957;
                                  var statearr_10972_11009 = state_10957__$1;
                                  statearr_10972_11009[2] = _test_ctx;
                                  statearr_10972_11009[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_10958 === 17) {
                                    var inst_10920 = state_10957[8];
                                    var inst_10915 = state_10957[12];
                                    var inst_10919 = state_10957[11];
                                    var inst_10917 = state_10957[2];
                                    var inst_10918 = inst_10917 == null;
                                    var inst_10919__$1 = cljs.core._conj.call(null, inst_10915, inst_10918);
                                    var inst_10920__$1 = cljs.core.apply.call(null, cljs.core.not, inst_10919__$1);
                                    var inst_10921 = inst_10920__$1 instanceof cemerick.cljs.test.TestContext;
                                    var state_10957__$1 = function() {
                                      var statearr_10973 = state_10957;
                                      statearr_10973[8] = inst_10920__$1;
                                      statearr_10973[11] = inst_10919__$1;
                                      return statearr_10973;
                                    }();
                                    if (cljs.core.truth_(inst_10921)) {
                                      var statearr_10974_11010 = state_10957__$1;
                                      statearr_10974_11010[1] = 18;
                                    } else {
                                      var statearr_10975_11011 = state_10957__$1;
                                      statearr_10975_11011[1] = 19;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_10958 === 3) {
                                      var inst_10886 = state_10957[2];
                                      var inst_10887 = cemerick.cljs.test._STAR_test_ctx_STAR_ = cemerick.cljs.test._STAR_test_ctx_STAR_;
                                      var state_10957__$1 = function() {
                                        var statearr_10976 = state_10957;
                                        statearr_10976[13] = inst_10886;
                                        statearr_10976[14] = inst_10887;
                                        return statearr_10976;
                                      }();
                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10957__$1);
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_10958 === 12) {
                                        var inst_10902 = state_10957[2];
                                        var state_10957__$1 = state_10957;
                                        var statearr_10977_11012 = state_10957__$1;
                                        statearr_10977_11012[2] = inst_10902;
                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10957__$1);
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_10958 === 2) {
                                          var inst_10954 = state_10957[2];
                                          var inst_10955 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx);
                                          var state_10957__$1 = function() {
                                            var statearr_10978 = state_10957;
                                            statearr_10978[15] = inst_10954;
                                            return statearr_10978;
                                          }();
                                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_10957__$1, inst_10955);
                                        } else {
                                          if (state_val_10958 === 23) {
                                            var inst_10920 = state_10957[8];
                                            var inst_10948 = state_10957[2];
                                            var state_10957__$1 = function() {
                                              var statearr_10979 = state_10957;
                                              statearr_10979[16] = inst_10948;
                                              return statearr_10979;
                                            }();
                                            var statearr_10980_11013 = state_10957__$1;
                                            statearr_10980_11013[2] = inst_10920;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10957__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_10958 === 19) {
                                              var state_10957__$1 = state_10957;
                                              var statearr_10981_11014 = state_10957__$1;
                                              statearr_10981_11014[2] = null;
                                              statearr_10981_11014[1] = 20;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_10958 === 11) {
                                                var inst_10896 = state_10957[17];
                                                var inst_10900 = function() {
                                                  throw inst_10896;
                                                }();
                                                var state_10957__$1 = state_10957;
                                                var statearr_10982_11015 = state_10957__$1;
                                                statearr_10982_11015[2] = inst_10900;
                                                statearr_10982_11015[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_10958 === 9) {
                                                  var inst_10884 = state_10957[10];
                                                  var inst_10896 = state_10957[2];
                                                  var state_10957__$1 = function() {
                                                    var statearr_10983 = state_10957;
                                                    statearr_10983[17] = inst_10896;
                                                    return statearr_10983;
                                                  }();
                                                  if (cljs.core.truth_(inst_10884)) {
                                                    var statearr_10984_11016 = state_10957__$1;
                                                    statearr_10984_11016[1] = 10;
                                                  } else {
                                                    var statearr_10985_11017 = state_10957__$1;
                                                    statearr_10985_11017[1] = 11;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_10958 === 5) {
                                                    var state_10957__$1 = state_10957;
                                                    var statearr_10986_11018 = state_10957__$1;
                                                    statearr_10986_11018[2] = null;
                                                    statearr_10986_11018[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_10958 === 14) {
                                                      var inst_10950 = state_10957[2];
                                                      var state_10957__$1 = state_10957;
                                                      var statearr_10987_11019 = state_10957__$1;
                                                      statearr_10987_11019[2] = inst_10950;
                                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10957__$1);
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_10958 === 16) {
                                                        var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_10957, 15, Error, null, 14);
                                                        var inst_10915 = cljs.core.List.EMPTY;
                                                        var state_10957__$1 = function() {
                                                          var statearr_10988 = state_10957;
                                                          statearr_10988[12] = inst_10915;
                                                          return statearr_10988;
                                                        }();
                                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_10957__$1, 17, c);
                                                      } else {
                                                        if (state_val_10958 === 10) {
                                                          var inst_10896 = state_10957[17];
                                                          var inst_10898 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx, inst_10896);
                                                          var state_10957__$1 = state_10957;
                                                          var statearr_10989_11020 = state_10957__$1;
                                                          statearr_10989_11020[2] = inst_10898;
                                                          statearr_10989_11020[1] = 12;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_10958 === 18) {
                                                            var inst_10923 = new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
                                                            var inst_10924 = function() {
                                                              throw inst_10923;
                                                            }();
                                                            var state_10957__$1 = state_10957;
                                                            var statearr_10990_11021 = state_10957__$1;
                                                            statearr_10990_11021[2] = inst_10924;
                                                            statearr_10990_11021[1] = 20;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_10958 === 8) {
                                                              var inst_10952 = state_10957[2];
                                                              var state_10957__$1 = state_10957;
                                                              var statearr_10991_11022 = state_10957__$1;
                                                              statearr_10991_11022[2] = inst_10952;
                                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10957__$1);
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6844__auto__, c, _STAR_test_ctx_STAR_10880, _test_ctx, async_QMARK___10505__auto__);
            return function(switch__6829__auto__, c__6844__auto__, c, _STAR_test_ctx_STAR_10880, _test_ctx, async_QMARK___10505__auto__) {
              return function() {
                var state_machine__6830__auto__ = null;
                var state_machine__6830__auto____0 = function() {
                  var statearr_10995 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_10995[0] = state_machine__6830__auto__;
                  statearr_10995[1] = 1;
                  return statearr_10995;
                };
                var state_machine__6830__auto____1 = function(state_10957) {
                  while (true) {
                    var ret_value__6831__auto__ = function() {
                      try {
                        while (true) {
                          var result__6832__auto__ = switch__6829__auto__.call(null, state_10957);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6832__auto__;
                          }
                          break;
                        }
                      } catch (e10996) {
                        if (e10996 instanceof Object) {
                          var ex__6833__auto__ = e10996;
                          var statearr_10997_11023 = state_10957;
                          statearr_10997_11023[5] = ex__6833__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_10957);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e10996;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__11024 = state_10957;
                      state_10957 = G__11024;
                      continue;
                    } else {
                      return ret_value__6831__auto__;
                    }
                    break;
                  }
                };
                state_machine__6830__auto__ = function(state_10957) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6830__auto____0.call(this);
                    case 1:
                      return state_machine__6830__auto____1.call(this, state_10957);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
                state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
                return state_machine__6830__auto__;
              }();
            }(switch__6829__auto__, c__6844__auto__, c, _STAR_test_ctx_STAR_10880, _test_ctx, async_QMARK___10505__auto__);
          }();
          var state__6846__auto__ = function() {
            var statearr_10998 = f__6845__auto__.call(null);
            statearr_10998[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto__;
            return statearr_10998;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
        };
      }(c__6844__auto__, c, _STAR_test_ctx_STAR_10880, _test_ctx, async_QMARK___10505__auto__));
      return c__6844__auto__;
    } catch (e10881) {
      if (e10881 instanceof Error) {
        var e__10506__auto__ = e10881;
        if (cljs.core.truth_(async_QMARK___10505__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10506__auto__);
        } else {
          throw e__10506__auto__;
        }
      } else {
        throw e10881;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_10880;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.test.dispatch", "sailing-study-guide.test.dispatch", 2120704787, null), new cljs.core.Symbol("sailing-study-guide.test.dispatch", "register-test", "sailing-study-guide.test.dispatch/register-test", -1619419419, null), sailing_study_guide.test.dispatch.register_test);
sailing_study_guide.test.dispatch.unregister_test = function unregister_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), sailing_study_guide.test.dispatch.unregister_test);
};
sailing_study_guide.test.dispatch.unregister_test = cljs.core.with_meta.call(null, sailing_study_guide.test.dispatch.unregister_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 34, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, 
"line", "line", 212345235), 34, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("sailing-study-guide.test.dispatch", "unregister-test", "sailing-study-guide.test.dispatch/unregister-test", -1604148922, null), new cljs.core.PersistentArrayMap(null, 
6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 34, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 34, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", "line", 212345235), 34, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null)), 
new cljs.core.Keyword(null, "test", "test", 577538877), function unregister_test_test(test_ctx__10590__auto__) {
  var _test_ctx = test_ctx__10590__auto__;
  var async_QMARK___10505__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_11144 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto__) ? null : _test_ctx;
    try {
      var c = sailing_study_guide.dispatch.register.call(null, sailing_study_guide.test.dispatch._STAR_default_tag_STAR_);
      sailing_study_guide.dispatch.unregister.call(null, sailing_study_guide.test.dispatch._STAR_default_tag_STAR_, c);
      var c__6844__auto__ = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto__, c, _STAR_test_ctx_STAR_11144, _test_ctx, async_QMARK___10505__auto__) {
        return function() {
          var f__6845__auto__ = function() {
            var switch__6829__auto__ = function(c__6844__auto__, c, _STAR_test_ctx_STAR_11144, _test_ctx, async_QMARK___10505__auto__) {
              return function(state_11221) {
                var state_val_11222 = state_11221[1];
                if (state_val_11222 === 7) {
                  var inst_11158 = state_11221[2];
                  var inst_11159 = cemerick.cljs.test._STAR_test_ctx_STAR_ = inst_11158;
                  var state_11221__$1 = function() {
                    var statearr_11223 = state_11221;
                    statearr_11223[7] = inst_11159;
                    return statearr_11223;
                  }();
                  var statearr_11224_11263 = state_11221__$1;
                  statearr_11224_11263[2] = null;
                  statearr_11224_11263[1] = 13;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11222 === 20) {
                    var inst_11184 = state_11221[8];
                    var inst_11191 = state_11221[2];
                    var state_11221__$1 = function() {
                      var statearr_11225 = state_11221;
                      statearr_11225[9] = inst_11191;
                      return statearr_11225;
                    }();
                    if (cljs.core.truth_(inst_11184)) {
                      var statearr_11226_11264 = state_11221__$1;
                      statearr_11226_11264[1] = 21;
                    } else {
                      var statearr_11227_11265 = state_11221__$1;
                      statearr_11227_11265[1] = 22;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11222 === 1) {
                      var inst_11146 = (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx);
                      var inst_11147 = cljs.core.meta.call(null, inst_11146);
                      var inst_11148 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(inst_11147);
                      var state_11221__$1 = function() {
                        var statearr_11228 = state_11221;
                        statearr_11228[10] = inst_11148;
                        return statearr_11228;
                      }();
                      var statearr_11229_11266 = state_11221__$1;
                      statearr_11229_11266[2] = null;
                      statearr_11229_11266[1] = 4;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_11222 === 4) {
                        var inst_11148 = state_11221[10];
                        var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11221, null, null, 3, 2);
                        var state_11221__$1 = state_11221;
                        if (cljs.core.truth_(inst_11148)) {
                          var statearr_11230_11267 = state_11221__$1;
                          statearr_11230_11267[1] = 5;
                        } else {
                          var statearr_11231_11268 = state_11221__$1;
                          statearr_11231_11268[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11222 === 15) {
                          var inst_11170 = state_11221[2];
                          var inst_11171 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                          var inst_11172 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)));
                          var inst_11173 = [new cljs.core.Keyword(null, "error", "error", -978969032), inst_11172, inst_11170, null];
                          var inst_11174 = cljs.core.PersistentHashMap.fromArrays(inst_11171, inst_11173);
                          var inst_11175 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_11174);
                          var state_11221__$1 = state_11221;
                          var statearr_11232_11269 = state_11221__$1;
                          statearr_11232_11269[2] = inst_11175;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11221__$1);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11222 === 21) {
                            var inst_11183 = state_11221[11];
                            var inst_11193 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                            var inst_11194 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)));
                            var inst_11195 = cljs.core.cons.call(null, cljs.core._EQ_, inst_11183);
                            var inst_11196 = [new cljs.core.Keyword(null, "pass", "pass", 1574159993), inst_11194, inst_11195, null];
                            var inst_11197 = cljs.core.PersistentHashMap.fromArrays(inst_11193, inst_11196);
                            var inst_11198 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_11197);
                            var state_11221__$1 = state_11221;
                            var statearr_11233_11270 = state_11221__$1;
                            statearr_11233_11270[2] = inst_11198;
                            statearr_11233_11270[1] = 23;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11222 === 13) {
                              var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11221, 9, Error, null, 8);
                              var state_11221__$1 = state_11221;
                              var statearr_11234_11271 = state_11221__$1;
                              statearr_11234_11271[2] = null;
                              statearr_11234_11271[1] = 16;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11222 === 22) {
                                var inst_11183 = state_11221[11];
                                var inst_11200 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                                var inst_11201 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "\x3c!", "\x3c!", -1961915773, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)));
                                var inst_11202 = cljs.core.List.EMPTY;
                                var inst_11203 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null);
                                var inst_11204 = cljs.core.cons.call(null, inst_11203, inst_11183);
                                var inst_11205 = cljs.core._conj.call(null, inst_11202, inst_11204);
                                var inst_11206 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                                var inst_11207 = cljs.core._conj.call(null, inst_11205, inst_11206);
                                var inst_11208 = [new cljs.core.Keyword(null, "fail", "fail", 1706214930), inst_11201, inst_11207, null];
                                var inst_11209 = cljs.core.PersistentHashMap.fromArrays(inst_11200, inst_11208);
                                var inst_11210 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_11209);
                                var state_11221__$1 = state_11221;
                                var statearr_11235_11272 = state_11221__$1;
                                statearr_11235_11272[2] = inst_11210;
                                statearr_11235_11272[1] = 23;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11222 === 6) {
                                  var state_11221__$1 = state_11221;
                                  var statearr_11236_11273 = state_11221__$1;
                                  statearr_11236_11273[2] = _test_ctx;
                                  statearr_11236_11273[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11222 === 17) {
                                    var inst_11179 = state_11221[12];
                                    var inst_11183 = state_11221[11];
                                    var inst_11184 = state_11221[8];
                                    var inst_11181 = state_11221[2];
                                    var inst_11182 = cljs.core._conj.call(null, inst_11179, inst_11181);
                                    var inst_11183__$1 = cljs.core._conj.call(null, inst_11182, null);
                                    var inst_11184__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_11183__$1);
                                    var inst_11185 = inst_11184__$1 instanceof cemerick.cljs.test.TestContext;
                                    var state_11221__$1 = function() {
                                      var statearr_11237 = state_11221;
                                      statearr_11237[11] = inst_11183__$1;
                                      statearr_11237[8] = inst_11184__$1;
                                      return statearr_11237;
                                    }();
                                    if (cljs.core.truth_(inst_11185)) {
                                      var statearr_11238_11274 = state_11221__$1;
                                      statearr_11238_11274[1] = 18;
                                    } else {
                                      var statearr_11239_11275 = state_11221__$1;
                                      statearr_11239_11275[1] = 19;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11222 === 3) {
                                      var inst_11150 = state_11221[2];
                                      var inst_11151 = cemerick.cljs.test._STAR_test_ctx_STAR_ = cemerick.cljs.test._STAR_test_ctx_STAR_;
                                      var state_11221__$1 = function() {
                                        var statearr_11240 = state_11221;
                                        statearr_11240[13] = inst_11150;
                                        statearr_11240[14] = inst_11151;
                                        return statearr_11240;
                                      }();
                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11221__$1);
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_11222 === 12) {
                                        var inst_11166 = state_11221[2];
                                        var state_11221__$1 = state_11221;
                                        var statearr_11241_11276 = state_11221__$1;
                                        statearr_11241_11276[2] = inst_11166;
                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11221__$1);
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11222 === 2) {
                                          var inst_11218 = state_11221[2];
                                          var inst_11219 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx);
                                          var state_11221__$1 = function() {
                                            var statearr_11242 = state_11221;
                                            statearr_11242[15] = inst_11218;
                                            return statearr_11242;
                                          }();
                                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11221__$1, inst_11219);
                                        } else {
                                          if (state_val_11222 === 23) {
                                            var inst_11184 = state_11221[8];
                                            var inst_11212 = state_11221[2];
                                            var state_11221__$1 = function() {
                                              var statearr_11243 = state_11221;
                                              statearr_11243[16] = inst_11212;
                                              return statearr_11243;
                                            }();
                                            var statearr_11244_11277 = state_11221__$1;
                                            statearr_11244_11277[2] = inst_11184;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11221__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11222 === 19) {
                                              var state_11221__$1 = state_11221;
                                              var statearr_11245_11278 = state_11221__$1;
                                              statearr_11245_11278[2] = null;
                                              statearr_11245_11278[1] = 20;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11222 === 11) {
                                                var inst_11160 = state_11221[17];
                                                var inst_11164 = function() {
                                                  throw inst_11160;
                                                }();
                                                var state_11221__$1 = state_11221;
                                                var statearr_11246_11279 = state_11221__$1;
                                                statearr_11246_11279[2] = inst_11164;
                                                statearr_11246_11279[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11222 === 9) {
                                                  var inst_11148 = state_11221[10];
                                                  var inst_11160 = state_11221[2];
                                                  var state_11221__$1 = function() {
                                                    var statearr_11247 = state_11221;
                                                    statearr_11247[17] = inst_11160;
                                                    return statearr_11247;
                                                  }();
                                                  if (cljs.core.truth_(inst_11148)) {
                                                    var statearr_11248_11280 = state_11221__$1;
                                                    statearr_11248_11280[1] = 10;
                                                  } else {
                                                    var statearr_11249_11281 = state_11221__$1;
                                                    statearr_11249_11281[1] = 11;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_11222 === 5) {
                                                    var state_11221__$1 = state_11221;
                                                    var statearr_11250_11282 = state_11221__$1;
                                                    statearr_11250_11282[2] = null;
                                                    statearr_11250_11282[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11222 === 14) {
                                                      var inst_11214 = state_11221[2];
                                                      var state_11221__$1 = state_11221;
                                                      var statearr_11251_11283 = state_11221__$1;
                                                      statearr_11251_11283[2] = inst_11214;
                                                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11221__$1);
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_11222 === 16) {
                                                        var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11221, 15, Error, null, 14);
                                                        var inst_11179 = cljs.core.List.EMPTY;
                                                        var state_11221__$1 = function() {
                                                          var statearr_11252 = state_11221;
                                                          statearr_11252[12] = inst_11179;
                                                          return statearr_11252;
                                                        }();
                                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11221__$1, 17, c);
                                                      } else {
                                                        if (state_val_11222 === 10) {
                                                          var inst_11160 = state_11221[17];
                                                          var inst_11162 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx, inst_11160);
                                                          var state_11221__$1 = state_11221;
                                                          var statearr_11253_11284 = state_11221__$1;
                                                          statearr_11253_11284[2] = inst_11162;
                                                          statearr_11253_11284[1] = 12;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_11222 === 18) {
                                                            var inst_11187 = new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
                                                            var inst_11188 = function() {
                                                              throw inst_11187;
                                                            }();
                                                            var state_11221__$1 = state_11221;
                                                            var statearr_11254_11285 = state_11221__$1;
                                                            statearr_11254_11285[2] = inst_11188;
                                                            statearr_11254_11285[1] = 20;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_11222 === 8) {
                                                              var inst_11216 = state_11221[2];
                                                              var state_11221__$1 = state_11221;
                                                              var statearr_11255_11286 = state_11221__$1;
                                                              statearr_11255_11286[2] = inst_11216;
                                                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11221__$1);
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6844__auto__, c, _STAR_test_ctx_STAR_11144, _test_ctx, async_QMARK___10505__auto__);
            return function(switch__6829__auto__, c__6844__auto__, c, _STAR_test_ctx_STAR_11144, _test_ctx, async_QMARK___10505__auto__) {
              return function() {
                var state_machine__6830__auto__ = null;
                var state_machine__6830__auto____0 = function() {
                  var statearr_11259 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_11259[0] = state_machine__6830__auto__;
                  statearr_11259[1] = 1;
                  return statearr_11259;
                };
                var state_machine__6830__auto____1 = function(state_11221) {
                  while (true) {
                    var ret_value__6831__auto__ = function() {
                      try {
                        while (true) {
                          var result__6832__auto__ = switch__6829__auto__.call(null, state_11221);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6832__auto__;
                          }
                          break;
                        }
                      } catch (e11260) {
                        if (e11260 instanceof Object) {
                          var ex__6833__auto__ = e11260;
                          var statearr_11261_11287 = state_11221;
                          statearr_11261_11287[5] = ex__6833__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11221);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e11260;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__11288 = state_11221;
                      state_11221 = G__11288;
                      continue;
                    } else {
                      return ret_value__6831__auto__;
                    }
                    break;
                  }
                };
                state_machine__6830__auto__ = function(state_11221) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6830__auto____0.call(this);
                    case 1:
                      return state_machine__6830__auto____1.call(this, state_11221);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
                state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
                return state_machine__6830__auto__;
              }();
            }(switch__6829__auto__, c__6844__auto__, c, _STAR_test_ctx_STAR_11144, _test_ctx, async_QMARK___10505__auto__);
          }();
          var state__6846__auto__ = function() {
            var statearr_11262 = f__6845__auto__.call(null);
            statearr_11262[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto__;
            return statearr_11262;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
        };
      }(c__6844__auto__, c, _STAR_test_ctx_STAR_11144, _test_ctx, async_QMARK___10505__auto__));
      return c__6844__auto__;
    } catch (e11145) {
      if (e11145 instanceof Error) {
        var e__10506__auto__ = e11145;
        if (cljs.core.truth_(async_QMARK___10505__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10506__auto__);
        } else {
          throw e__10506__auto__;
        }
      } else {
        throw e11145;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_11144;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.test.dispatch", "sailing-study-guide.test.dispatch", 2120704787, null), new cljs.core.Symbol("sailing-study-guide.test.dispatch", "unregister-test", "sailing-study-guide.test.dispatch/unregister-test", -1604148922, null), sailing_study_guide.test.dispatch.unregister_test);
sailing_study_guide.test.dispatch.whenever_test = function whenever_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), sailing_study_guide.test.dispatch.whenever_test);
};
sailing_study_guide.test.dispatch.whenever_test = cljs.core.with_meta.call(null, sailing_study_guide.test.dispatch.whenever_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 41, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", 
"line", 212345235), 41, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("sailing-study-guide.test.dispatch", "whenever-test", "sailing-study-guide.test.dispatch/whenever-test", -1608122768, null), new cljs.core.PersistentArrayMap(null, 
6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 41, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", "line", 212345235), 41, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null)), 
new cljs.core.Keyword(null, "test", "test", 577538877), function whenever_test_test(test_ctx__10590__auto__) {
  var _test_ctx = test_ctx__10590__auto__;
  var async_QMARK___10505__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_11297 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto__) ? null : _test_ctx;
    try {
      sailing_study_guide.dispatch.whenever.call(null, sailing_study_guide.test.dispatch._STAR_default_tag_STAR_, function(_STAR_test_ctx_STAR_11297, _test_ctx, async_QMARK___10505__auto__) {
        return function(mesg) {
          var _test_ctx_11305__$1 = _test_ctx;
          var async_QMARK___10505__auto___11306__$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx_11305__$1)));
          var _STAR_test_ctx_STAR_11299_11307 = cemerick.cljs.test._STAR_test_ctx_STAR_;
          try {
            cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto___11306__$1) ? null : _test_ctx_11305__$1;
            try {
              try {
                var values__10525__auto___11308 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, mesg), sailing_study_guide.test.dispatch._STAR_default_mesg_STAR_);
                var result__10526__auto___11309 = cljs.core.apply.call(null, cljs.core._EQ_, values__10525__auto___11308);
                if (result__10526__auto___11309 instanceof cemerick.cljs.test.TestContext) {
                  throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
                } else {
                }
                if (cljs.core.truth_(result__10526__auto___11309)) {
                  cemerick.cljs.test.do_report.call(null, _test_ctx_11305__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-mesg*", "*default-mesg*", -1965296641, null), new cljs.core.Symbol(null, "mesg", "mesg", 
                  -430820709, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10525__auto___11308), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                } else {
                  cemerick.cljs.test.do_report.call(null, _test_ctx_11305__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-mesg*", "*default-mesg*", -1965296641, null), new cljs.core.Symbol(null, "mesg", "mesg", 
                  -430820709, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10525__auto___11308)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                }
              } catch (e11301) {
                if (e11301 instanceof Error) {
                  var t__10562__auto___11310 = e11301;
                  cemerick.cljs.test.do_report.call(null, _test_ctx_11305__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-mesg*", "*default-mesg*", -1965296641, null), new cljs.core.Symbol(null, "mesg", "mesg", 
                  -430820709, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10562__auto___11310, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                } else {
                  throw e11301;
                }
              }
            } catch (e11300) {
              if (e11300 instanceof Error) {
                var e__10506__auto___11311 = e11300;
                if (cljs.core.truth_(async_QMARK___10505__auto___11306__$1)) {
                  cemerick.cljs.test.done_STAR_.call(null, _test_ctx_11305__$1, e__10506__auto___11311);
                } else {
                  throw e__10506__auto___11311;
                }
              } else {
                throw e11300;
              }
            }
          } finally {
            cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_11299_11307;
          }
          var _test_ctx_11312__$1 = _test_ctx;
          var async_QMARK___10505__auto___11313__$1 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx_11312__$1)));
          var _STAR_test_ctx_STAR_11302_11314 = cemerick.cljs.test._STAR_test_ctx_STAR_;
          try {
            cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto___11313__$1) ? null : _test_ctx_11312__$1;
            try {
              try {
                var values__10525__auto___11315 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, mesg), sailing_study_guide.test.dispatch._STAR_not_default_mesg_STAR_);
                var result__10526__auto___11316 = cljs.core.apply.call(null, cljs.core.not_EQ_, values__10525__auto___11315);
                if (result__10526__auto___11316 instanceof cemerick.cljs.test.TestContext) {
                  throw new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
                } else {
                }
                if (cljs.core.truth_(result__10526__auto___11316)) {
                  cemerick.cljs.test.do_report.call(null, _test_ctx_11312__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "*not-default-mesg*", "*not-default-mesg*", 1702699795, null), new cljs.core.Symbol(null, 
                  "mesg", "mesg", -430820709, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not_EQ_, values__10525__auto___11315), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                } else {
                  cemerick.cljs.test.do_report.call(null, _test_ctx_11312__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "*not-default-mesg*", "*not-default-mesg*", 1702699795, null), new cljs.core.Symbol(null, 
                  "mesg", "mesg", -430820709, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), values__10525__auto___11315)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                }
              } catch (e11304) {
                if (e11304 instanceof Error) {
                  var t__10562__auto___11317 = e11304;
                  cemerick.cljs.test.do_report.call(null, _test_ctx_11312__$1, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "*not-default-mesg*", "*not-default-mesg*", 1702699795, null), new cljs.core.Symbol(null, 
                  "mesg", "mesg", -430820709, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10562__auto___11317, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
                } else {
                  throw e11304;
                }
              }
            } catch (e11303) {
              if (e11303 instanceof Error) {
                var e__10506__auto___11318 = e11303;
                if (cljs.core.truth_(async_QMARK___10505__auto___11313__$1)) {
                  cemerick.cljs.test.done_STAR_.call(null, _test_ctx_11312__$1, e__10506__auto___11318);
                } else {
                  throw e__10506__auto___11318;
                }
              } else {
                throw e11303;
              }
            }
          } finally {
            cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_11302_11314;
          }
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx);
        };
      }(_STAR_test_ctx_STAR_11297, _test_ctx, async_QMARK___10505__auto__));
      return cljs.core.async.put_BANG_.call(null, sailing_study_guide.dispatch.dispatch_chan, sailing_study_guide.test.dispatch._STAR_default_payload_STAR_);
    } catch (e11298) {
      if (e11298 instanceof Error) {
        var e__10506__auto__ = e11298;
        if (cljs.core.truth_(async_QMARK___10505__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10506__auto__);
        } else {
          throw e__10506__auto__;
        }
      } else {
        throw e11298;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_11297;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.test.dispatch", "sailing-study-guide.test.dispatch", 2120704787, null), new cljs.core.Symbol("sailing-study-guide.test.dispatch", "whenever-test", "sailing-study-guide.test.dispatch/whenever-test", -1608122768, null), sailing_study_guide.test.dispatch.whenever_test);
sailing_study_guide.test.dispatch.dispatch_test = function dispatch_test() {
  return cemerick.cljs.test.test_function.call(null, cemerick.cljs.test.init_test_environment.call(null), sailing_study_guide.test.dispatch.dispatch_test);
};
sailing_study_guide.test.dispatch.dispatch_test = cljs.core.with_meta.call(null, sailing_study_guide.test.dispatch.dispatch_test, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 50, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", 
"line", 212345235), 50, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.with_meta.call(null, new cljs.core.Symbol("sailing-study-guide.test.dispatch", "dispatch-test", "sailing-study-guide.test.dispatch/dispatch-test", -1391993851, null), new cljs.core.PersistentArrayMap(null, 
6, [new cljs.core.Keyword(null, "async", "async", 1050769601), true, new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 32, new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 50, new cljs.core.Keyword(null, "column", "column", 2078222095), 18, new cljs.core.Keyword(null, "line", "line", 212345235), 50, new cljs.core.Keyword(null, "file", "file", -1269645878), "/Users/matthew/Documents/Code/sailing-study-guide/tests/sailing_study_guide/test/dispatch.cljs"], null)), 
new cljs.core.Keyword(null, "test", "test", 577538877), function dispatch_test_test(test_ctx__10590__auto__) {
  var _test_ctx = test_ctx__10590__auto__;
  var async_QMARK___10505__auto__ = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx)));
  var _STAR_test_ctx_STAR_11438 = cemerick.cljs.test._STAR_test_ctx_STAR_;
  try {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = cljs.core.truth_(async_QMARK___10505__auto__) ? null : _test_ctx;
    try {
      var c__6844__auto___11557 = cljs.core.async.chan.call(null, 1);
      cljs.core.async.impl.dispatch.run.call(null, function(c__6844__auto___11557, _STAR_test_ctx_STAR_11438, _test_ctx, async_QMARK___10505__auto__) {
        return function() {
          var f__6845__auto__ = function() {
            var switch__6829__auto__ = function(c__6844__auto___11557, _STAR_test_ctx_STAR_11438, _test_ctx, async_QMARK___10505__auto__) {
              return function(state_11516) {
                var state_val_11517 = state_11516[1];
                if (state_val_11517 === 7) {
                  var state_11516__$1 = state_11516;
                  var statearr_11518_11558 = state_11516__$1;
                  statearr_11518_11558[2] = _test_ctx;
                  statearr_11518_11558[1] = 8;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_11517 === 20) {
                    var inst_11479 = state_11516[7];
                    var inst_11486 = state_11516[2];
                    var state_11516__$1 = function() {
                      var statearr_11519 = state_11516;
                      statearr_11519[8] = inst_11486;
                      return statearr_11519;
                    }();
                    if (cljs.core.truth_(inst_11479)) {
                      var statearr_11520_11559 = state_11516__$1;
                      statearr_11520_11559[1] = 21;
                    } else {
                      var statearr_11521_11560 = state_11516__$1;
                      statearr_11521_11560[1] = 22;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_11517 === 1) {
                      var state_11516__$1 = state_11516;
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11516__$1, 2, sailing_study_guide.dispatch.dispatch_pub_chan);
                    } else {
                      if (state_val_11517 === 4) {
                        var inst_11447 = state_11516[2];
                        var inst_11448 = cemerick.cljs.test._STAR_test_ctx_STAR_ = cemerick.cljs.test._STAR_test_ctx_STAR_;
                        var state_11516__$1 = function() {
                          var statearr_11522 = state_11516;
                          statearr_11522[9] = inst_11447;
                          statearr_11522[10] = inst_11448;
                          return statearr_11522;
                        }();
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11516__$1);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_11517 === 15) {
                          var inst_11509 = state_11516[2];
                          var state_11516__$1 = state_11516;
                          var statearr_11523_11561 = state_11516__$1;
                          statearr_11523_11561[2] = inst_11509;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11516__$1);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_11517 === 21) {
                            var inst_11478 = state_11516[11];
                            var inst_11488 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                            var inst_11489 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-payload*", "*default-payload*", 1747854792, null), new cljs.core.Symbol(null, "payload", "payload", 1257495435, null));
                            var inst_11490 = cljs.core.cons.call(null, cljs.core._EQ_, inst_11478);
                            var inst_11491 = [new cljs.core.Keyword(null, "pass", "pass", 1574159993), inst_11489, inst_11490, null];
                            var inst_11492 = cljs.core.PersistentHashMap.fromArrays(inst_11488, inst_11491);
                            var inst_11493 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_11492);
                            var state_11516__$1 = state_11516;
                            var statearr_11524_11562 = state_11516__$1;
                            statearr_11524_11562[2] = inst_11493;
                            statearr_11524_11562[1] = 23;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_11517 === 13) {
                              var inst_11463 = state_11516[2];
                              var state_11516__$1 = state_11516;
                              var statearr_11525_11563 = state_11516__$1;
                              statearr_11525_11563[2] = inst_11463;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11516__$1);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_11517 === 22) {
                                var inst_11478 = state_11516[11];
                                var inst_11495 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                                var inst_11496 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-payload*", "*default-payload*", 1747854792, null), new cljs.core.Symbol(null, "payload", "payload", 1257495435, null));
                                var inst_11497 = cljs.core.List.EMPTY;
                                var inst_11498 = new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null);
                                var inst_11499 = cljs.core.cons.call(null, inst_11498, inst_11478);
                                var inst_11500 = cljs.core._conj.call(null, inst_11497, inst_11499);
                                var inst_11501 = new cljs.core.Symbol(null, "not", "not", 1044554643, null);
                                var inst_11502 = cljs.core._conj.call(null, inst_11500, inst_11501);
                                var inst_11503 = [new cljs.core.Keyword(null, "fail", "fail", 1706214930), inst_11496, inst_11502, null];
                                var inst_11504 = cljs.core.PersistentHashMap.fromArrays(inst_11495, inst_11503);
                                var inst_11505 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_11504);
                                var state_11516__$1 = state_11516;
                                var statearr_11526_11564 = state_11516__$1;
                                statearr_11526_11564[2] = inst_11505;
                                statearr_11526_11564[1] = 23;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_11517 === 6) {
                                  var state_11516__$1 = state_11516;
                                  var statearr_11527_11565 = state_11516__$1;
                                  statearr_11527_11565[2] = null;
                                  statearr_11527_11565[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_11517 === 17) {
                                    var inst_11479 = state_11516[7];
                                    var inst_11441 = state_11516[12];
                                    var inst_11478 = state_11516[11];
                                    var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11516, 16, Error, null, 15);
                                    var inst_11476 = cljs.core.List.EMPTY;
                                    var inst_11477 = cljs.core._conj.call(null, inst_11476, inst_11441);
                                    var inst_11478__$1 = cljs.core._conj.call(null, inst_11477, sailing_study_guide.test.dispatch._STAR_default_payload_STAR_);
                                    var inst_11479__$1 = cljs.core.apply.call(null, cljs.core._EQ_, inst_11478__$1);
                                    var inst_11480 = inst_11479__$1 instanceof cemerick.cljs.test.TestContext;
                                    var state_11516__$1 = function() {
                                      var statearr_11528 = state_11516;
                                      statearr_11528[7] = inst_11479__$1;
                                      statearr_11528[11] = inst_11478__$1;
                                      return statearr_11528;
                                    }();
                                    if (cljs.core.truth_(inst_11480)) {
                                      var statearr_11529_11566 = state_11516__$1;
                                      statearr_11529_11566[1] = 18;
                                    } else {
                                      var statearr_11530_11567 = state_11516__$1;
                                      statearr_11530_11567[1] = 19;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_11517 === 3) {
                                      var inst_11513 = state_11516[2];
                                      var inst_11514 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx);
                                      var state_11516__$1 = function() {
                                        var statearr_11531 = state_11516;
                                        statearr_11531[13] = inst_11513;
                                        return statearr_11531;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11516__$1, inst_11514);
                                    } else {
                                      if (state_val_11517 === 12) {
                                        var inst_11457 = state_11516[14];
                                        var inst_11461 = function() {
                                          throw inst_11457;
                                        }();
                                        var state_11516__$1 = state_11516;
                                        var statearr_11532_11568 = state_11516__$1;
                                        statearr_11532_11568[2] = inst_11461;
                                        statearr_11532_11568[1] = 13;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_11517 === 2) {
                                          var inst_11441 = state_11516[2];
                                          var inst_11442 = cljs.core.println.call(null, "payload received");
                                          var inst_11443 = (new cljs.core.Keyword(null, "test-name", "test-name", -675595913)).cljs$core$IFn$_invoke$arity$1(_test_ctx);
                                          var inst_11444 = cljs.core.meta.call(null, inst_11443);
                                          var inst_11445 = (new cljs.core.Keyword(null, "async", "async", 1050769601)).cljs$core$IFn$_invoke$arity$1(inst_11444);
                                          var state_11516__$1 = function() {
                                            var statearr_11533 = state_11516;
                                            statearr_11533[15] = inst_11442;
                                            statearr_11533[12] = inst_11441;
                                            statearr_11533[16] = inst_11445;
                                            return statearr_11533;
                                          }();
                                          var statearr_11534_11569 = state_11516__$1;
                                          statearr_11534_11569[2] = null;
                                          statearr_11534_11569[1] = 5;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_11517 === 23) {
                                            var inst_11479 = state_11516[7];
                                            var inst_11507 = state_11516[2];
                                            var state_11516__$1 = function() {
                                              var statearr_11535 = state_11516;
                                              statearr_11535[17] = inst_11507;
                                              return statearr_11535;
                                            }();
                                            var statearr_11536_11570 = state_11516__$1;
                                            statearr_11536_11570[2] = inst_11479;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11516__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_11517 === 19) {
                                              var state_11516__$1 = state_11516;
                                              var statearr_11537_11571 = state_11516__$1;
                                              statearr_11537_11571[2] = null;
                                              statearr_11537_11571[1] = 20;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_11517 === 11) {
                                                var inst_11457 = state_11516[14];
                                                var inst_11459 = cemerick.cljs.test.done_STAR_.call(null, _test_ctx, inst_11457);
                                                var state_11516__$1 = state_11516;
                                                var statearr_11538_11572 = state_11516__$1;
                                                statearr_11538_11572[2] = inst_11459;
                                                statearr_11538_11572[1] = 13;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_11517 === 9) {
                                                  var inst_11511 = state_11516[2];
                                                  var state_11516__$1 = state_11516;
                                                  var statearr_11539_11573 = state_11516__$1;
                                                  statearr_11539_11573[2] = inst_11511;
                                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11516__$1);
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_11517 === 5) {
                                                    var inst_11445 = state_11516[16];
                                                    var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11516, null, null, 4, 3);
                                                    var state_11516__$1 = state_11516;
                                                    if (cljs.core.truth_(inst_11445)) {
                                                      var statearr_11540_11574 = state_11516__$1;
                                                      statearr_11540_11574[1] = 6;
                                                    } else {
                                                      var statearr_11541_11575 = state_11516__$1;
                                                      statearr_11541_11575[1] = 7;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_11517 === 14) {
                                                      var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_11516, 10, Error, null, 9);
                                                      var state_11516__$1 = state_11516;
                                                      var statearr_11542_11576 = state_11516__$1;
                                                      statearr_11542_11576[2] = null;
                                                      statearr_11542_11576[1] = 17;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_11517 === 16) {
                                                        var inst_11467 = state_11516[2];
                                                        var inst_11468 = [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)];
                                                        var inst_11469 = cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "*default-payload*", "*default-payload*", 1747854792, null), new cljs.core.Symbol(null, "payload", "payload", 1257495435, null));
                                                        var inst_11470 = [new cljs.core.Keyword(null, "error", "error", -978969032), inst_11469, inst_11467, null];
                                                        var inst_11471 = cljs.core.PersistentHashMap.fromArrays(inst_11468, inst_11470);
                                                        var inst_11472 = cemerick.cljs.test.do_report.call(null, _test_ctx, inst_11471);
                                                        var state_11516__$1 = state_11516;
                                                        var statearr_11543_11577 = state_11516__$1;
                                                        statearr_11543_11577[2] = inst_11472;
                                                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11516__$1);
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_11517 === 10) {
                                                          var inst_11445 = state_11516[16];
                                                          var inst_11457 = state_11516[2];
                                                          var state_11516__$1 = function() {
                                                            var statearr_11544 = state_11516;
                                                            statearr_11544[14] = inst_11457;
                                                            return statearr_11544;
                                                          }();
                                                          if (cljs.core.truth_(inst_11445)) {
                                                            var statearr_11545_11578 = state_11516__$1;
                                                            statearr_11545_11578[1] = 11;
                                                          } else {
                                                            var statearr_11546_11579 = state_11516__$1;
                                                            statearr_11546_11579[1] = 12;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_11517 === 18) {
                                                            var inst_11482 = new Error("TestContext provided as [form] in `is` assertion. If using `is` with an explicit test context, use the 3-arg arity.");
                                                            var inst_11483 = function() {
                                                              throw inst_11482;
                                                            }();
                                                            var state_11516__$1 = state_11516;
                                                            var statearr_11547_11580 = state_11516__$1;
                                                            statearr_11547_11580[2] = inst_11483;
                                                            statearr_11547_11580[1] = 20;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_11517 === 8) {
                                                              var inst_11455 = state_11516[2];
                                                              var inst_11456 = cemerick.cljs.test._STAR_test_ctx_STAR_ = inst_11455;
                                                              var state_11516__$1 = function() {
                                                                var statearr_11548 = state_11516;
                                                                statearr_11548[18] = inst_11456;
                                                                return statearr_11548;
                                                              }();
                                                              var statearr_11549_11581 = state_11516__$1;
                                                              statearr_11549_11581[2] = null;
                                                              statearr_11549_11581[1] = 14;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              };
            }(c__6844__auto___11557, _STAR_test_ctx_STAR_11438, _test_ctx, async_QMARK___10505__auto__);
            return function(switch__6829__auto__, c__6844__auto___11557, _STAR_test_ctx_STAR_11438, _test_ctx, async_QMARK___10505__auto__) {
              return function() {
                var state_machine__6830__auto__ = null;
                var state_machine__6830__auto____0 = function() {
                  var statearr_11553 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                  statearr_11553[0] = state_machine__6830__auto__;
                  statearr_11553[1] = 1;
                  return statearr_11553;
                };
                var state_machine__6830__auto____1 = function(state_11516) {
                  while (true) {
                    var ret_value__6831__auto__ = function() {
                      try {
                        while (true) {
                          var result__6832__auto__ = switch__6829__auto__.call(null, state_11516);
                          if (cljs.core.keyword_identical_QMARK_.call(null, result__6832__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                            continue;
                          } else {
                            return result__6832__auto__;
                          }
                          break;
                        }
                      } catch (e11554) {
                        if (e11554 instanceof Object) {
                          var ex__6833__auto__ = e11554;
                          var statearr_11555_11582 = state_11516;
                          statearr_11555_11582[5] = ex__6833__auto__;
                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_11516);
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          throw e11554;
                        }
                      }
                    }();
                    if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6831__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                      var G__11583 = state_11516;
                      state_11516 = G__11583;
                      continue;
                    } else {
                      return ret_value__6831__auto__;
                    }
                    break;
                  }
                };
                state_machine__6830__auto__ = function(state_11516) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__6830__auto____0.call(this);
                    case 1:
                      return state_machine__6830__auto____1.call(this, state_11516);
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6830__auto____0;
                state_machine__6830__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6830__auto____1;
                return state_machine__6830__auto__;
              }();
            }(switch__6829__auto__, c__6844__auto___11557, _STAR_test_ctx_STAR_11438, _test_ctx, async_QMARK___10505__auto__);
          }();
          var state__6846__auto__ = function() {
            var statearr_11556 = f__6845__auto__.call(null);
            statearr_11556[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6844__auto___11557;
            return statearr_11556;
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6846__auto__);
        };
      }(c__6844__auto___11557, _STAR_test_ctx_STAR_11438, _test_ctx, async_QMARK___10505__auto__));
      return sailing_study_guide.dispatch.dispatch_BANG_.call(null, sailing_study_guide.test.dispatch._STAR_default_tag_STAR_, sailing_study_guide.test.dispatch._STAR_default_mesg_STAR_);
    } catch (e11439) {
      if (e11439 instanceof Error) {
        var e__10506__auto__ = e11439;
        if (cljs.core.truth_(async_QMARK___10505__auto__)) {
          return cemerick.cljs.test.done_STAR_.call(null, _test_ctx, e__10506__auto__);
        } else {
          throw e__10506__auto__;
        }
      } else {
        throw e11439;
      }
    }
  } finally {
    cemerick.cljs.test._STAR_test_ctx_STAR_ = _STAR_test_ctx_STAR_11438;
  }
}], null)));
cemerick.cljs.test.register_test_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.test.dispatch", "sailing-study-guide.test.dispatch", 2120704787, null), new cljs.core.Symbol("sailing-study-guide.test.dispatch", "dispatch-test", "sailing-study-guide.test.dispatch/dispatch-test", -1391993851, null), sailing_study_guide.test.dispatch.dispatch_test);
cemerick.cljs.test.register_fixtures_BANG_.call(null, new cljs.core.Symbol(null, "sailing-study-guide.test.dispatch", "sailing-study-guide.test.dispatch", 2120704787, null), new cljs.core.Keyword(null, "each", "each", 940016129), sailing_study_guide.test.dispatch.each_fixture);
goog.provide("om.dom");
goog.require("cljs.core");
om.dom.a = function() {
  var a__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var a = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return a__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  a.cljs$lang$maxFixedArity = 1;
  a.cljs$lang$applyTo = function(arglist__11998) {
    var opts__5588__auto__ = cljs.core.first(arglist__11998);
    var children__5589__auto__ = cljs.core.rest(arglist__11998);
    return a__delegate(opts__5588__auto__, children__5589__auto__);
  };
  a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
  return a;
}();
om.dom.abbr = function() {
  var abbr__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var abbr = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return abbr__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  abbr.cljs$lang$maxFixedArity = 1;
  abbr.cljs$lang$applyTo = function(arglist__11999) {
    var opts__5588__auto__ = cljs.core.first(arglist__11999);
    var children__5589__auto__ = cljs.core.rest(arglist__11999);
    return abbr__delegate(opts__5588__auto__, children__5589__auto__);
  };
  abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
  return abbr;
}();
om.dom.address = function() {
  var address__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var address = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return address__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  address.cljs$lang$maxFixedArity = 1;
  address.cljs$lang$applyTo = function(arglist__12000) {
    var opts__5588__auto__ = cljs.core.first(arglist__12000);
    var children__5589__auto__ = cljs.core.rest(arglist__12000);
    return address__delegate(opts__5588__auto__, children__5589__auto__);
  };
  address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
  return address;
}();
om.dom.area = function() {
  var area__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var area = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return area__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  area.cljs$lang$maxFixedArity = 1;
  area.cljs$lang$applyTo = function(arglist__12001) {
    var opts__5588__auto__ = cljs.core.first(arglist__12001);
    var children__5589__auto__ = cljs.core.rest(arglist__12001);
    return area__delegate(opts__5588__auto__, children__5589__auto__);
  };
  area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
  return area;
}();
om.dom.article = function() {
  var article__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var article = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return article__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  article.cljs$lang$maxFixedArity = 1;
  article.cljs$lang$applyTo = function(arglist__12002) {
    var opts__5588__auto__ = cljs.core.first(arglist__12002);
    var children__5589__auto__ = cljs.core.rest(arglist__12002);
    return article__delegate(opts__5588__auto__, children__5589__auto__);
  };
  article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
  return article;
}();
om.dom.aside = function() {
  var aside__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var aside = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return aside__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  aside.cljs$lang$maxFixedArity = 1;
  aside.cljs$lang$applyTo = function(arglist__12003) {
    var opts__5588__auto__ = cljs.core.first(arglist__12003);
    var children__5589__auto__ = cljs.core.rest(arglist__12003);
    return aside__delegate(opts__5588__auto__, children__5589__auto__);
  };
  aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
  return aside;
}();
om.dom.audio = function() {
  var audio__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var audio = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return audio__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  audio.cljs$lang$maxFixedArity = 1;
  audio.cljs$lang$applyTo = function(arglist__12004) {
    var opts__5588__auto__ = cljs.core.first(arglist__12004);
    var children__5589__auto__ = cljs.core.rest(arglist__12004);
    return audio__delegate(opts__5588__auto__, children__5589__auto__);
  };
  audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
  return audio;
}();
om.dom.b = function() {
  var b__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var b = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return b__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  b.cljs$lang$maxFixedArity = 1;
  b.cljs$lang$applyTo = function(arglist__12005) {
    var opts__5588__auto__ = cljs.core.first(arglist__12005);
    var children__5589__auto__ = cljs.core.rest(arglist__12005);
    return b__delegate(opts__5588__auto__, children__5589__auto__);
  };
  b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
  return b;
}();
om.dom.base = function() {
  var base__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var base = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return base__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  base.cljs$lang$maxFixedArity = 1;
  base.cljs$lang$applyTo = function(arglist__12006) {
    var opts__5588__auto__ = cljs.core.first(arglist__12006);
    var children__5589__auto__ = cljs.core.rest(arglist__12006);
    return base__delegate(opts__5588__auto__, children__5589__auto__);
  };
  base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
  return base;
}();
om.dom.bdi = function() {
  var bdi__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var bdi = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdi__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  bdi.cljs$lang$maxFixedArity = 1;
  bdi.cljs$lang$applyTo = function(arglist__12007) {
    var opts__5588__auto__ = cljs.core.first(arglist__12007);
    var children__5589__auto__ = cljs.core.rest(arglist__12007);
    return bdi__delegate(opts__5588__auto__, children__5589__auto__);
  };
  bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
  return bdi;
}();
om.dom.bdo = function() {
  var bdo__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var bdo = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return bdo__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  bdo.cljs$lang$maxFixedArity = 1;
  bdo.cljs$lang$applyTo = function(arglist__12008) {
    var opts__5588__auto__ = cljs.core.first(arglist__12008);
    var children__5589__auto__ = cljs.core.rest(arglist__12008);
    return bdo__delegate(opts__5588__auto__, children__5589__auto__);
  };
  bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
  return bdo;
}();
om.dom.big = function() {
  var big__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var big = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return big__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  big.cljs$lang$maxFixedArity = 1;
  big.cljs$lang$applyTo = function(arglist__12009) {
    var opts__5588__auto__ = cljs.core.first(arglist__12009);
    var children__5589__auto__ = cljs.core.rest(arglist__12009);
    return big__delegate(opts__5588__auto__, children__5589__auto__);
  };
  big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
  return big;
}();
om.dom.blockquote = function() {
  var blockquote__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var blockquote = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return blockquote__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  blockquote.cljs$lang$maxFixedArity = 1;
  blockquote.cljs$lang$applyTo = function(arglist__12010) {
    var opts__5588__auto__ = cljs.core.first(arglist__12010);
    var children__5589__auto__ = cljs.core.rest(arglist__12010);
    return blockquote__delegate(opts__5588__auto__, children__5589__auto__);
  };
  blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
  return blockquote;
}();
om.dom.body = function() {
  var body__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var body = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return body__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  body.cljs$lang$maxFixedArity = 1;
  body.cljs$lang$applyTo = function(arglist__12011) {
    var opts__5588__auto__ = cljs.core.first(arglist__12011);
    var children__5589__auto__ = cljs.core.rest(arglist__12011);
    return body__delegate(opts__5588__auto__, children__5589__auto__);
  };
  body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
  return body;
}();
om.dom.br = function() {
  var br__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var br = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return br__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  br.cljs$lang$maxFixedArity = 1;
  br.cljs$lang$applyTo = function(arglist__12012) {
    var opts__5588__auto__ = cljs.core.first(arglist__12012);
    var children__5589__auto__ = cljs.core.rest(arglist__12012);
    return br__delegate(opts__5588__auto__, children__5589__auto__);
  };
  br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
  return br;
}();
om.dom.button = function() {
  var button__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var button = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return button__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  button.cljs$lang$maxFixedArity = 1;
  button.cljs$lang$applyTo = function(arglist__12013) {
    var opts__5588__auto__ = cljs.core.first(arglist__12013);
    var children__5589__auto__ = cljs.core.rest(arglist__12013);
    return button__delegate(opts__5588__auto__, children__5589__auto__);
  };
  button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
  return button;
}();
om.dom.canvas = function() {
  var canvas__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var canvas = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return canvas__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  canvas.cljs$lang$maxFixedArity = 1;
  canvas.cljs$lang$applyTo = function(arglist__12014) {
    var opts__5588__auto__ = cljs.core.first(arglist__12014);
    var children__5589__auto__ = cljs.core.rest(arglist__12014);
    return canvas__delegate(opts__5588__auto__, children__5589__auto__);
  };
  canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
  return canvas;
}();
om.dom.caption = function() {
  var caption__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var caption = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return caption__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  caption.cljs$lang$maxFixedArity = 1;
  caption.cljs$lang$applyTo = function(arglist__12015) {
    var opts__5588__auto__ = cljs.core.first(arglist__12015);
    var children__5589__auto__ = cljs.core.rest(arglist__12015);
    return caption__delegate(opts__5588__auto__, children__5589__auto__);
  };
  caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
  return caption;
}();
om.dom.cite = function() {
  var cite__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var cite = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return cite__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  cite.cljs$lang$maxFixedArity = 1;
  cite.cljs$lang$applyTo = function(arglist__12016) {
    var opts__5588__auto__ = cljs.core.first(arglist__12016);
    var children__5589__auto__ = cljs.core.rest(arglist__12016);
    return cite__delegate(opts__5588__auto__, children__5589__auto__);
  };
  cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
  return cite;
}();
om.dom.code = function() {
  var code__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var code = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return code__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  code.cljs$lang$maxFixedArity = 1;
  code.cljs$lang$applyTo = function(arglist__12017) {
    var opts__5588__auto__ = cljs.core.first(arglist__12017);
    var children__5589__auto__ = cljs.core.rest(arglist__12017);
    return code__delegate(opts__5588__auto__, children__5589__auto__);
  };
  code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
  return code;
}();
om.dom.col = function() {
  var col__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var col = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return col__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  col.cljs$lang$maxFixedArity = 1;
  col.cljs$lang$applyTo = function(arglist__12018) {
    var opts__5588__auto__ = cljs.core.first(arglist__12018);
    var children__5589__auto__ = cljs.core.rest(arglist__12018);
    return col__delegate(opts__5588__auto__, children__5589__auto__);
  };
  col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
  return col;
}();
om.dom.colgroup = function() {
  var colgroup__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var colgroup = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return colgroup__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  colgroup.cljs$lang$maxFixedArity = 1;
  colgroup.cljs$lang$applyTo = function(arglist__12019) {
    var opts__5588__auto__ = cljs.core.first(arglist__12019);
    var children__5589__auto__ = cljs.core.rest(arglist__12019);
    return colgroup__delegate(opts__5588__auto__, children__5589__auto__);
  };
  colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
  return colgroup;
}();
om.dom.data = function() {
  var data__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var data = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return data__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  data.cljs$lang$maxFixedArity = 1;
  data.cljs$lang$applyTo = function(arglist__12020) {
    var opts__5588__auto__ = cljs.core.first(arglist__12020);
    var children__5589__auto__ = cljs.core.rest(arglist__12020);
    return data__delegate(opts__5588__auto__, children__5589__auto__);
  };
  data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
  return data;
}();
om.dom.datalist = function() {
  var datalist__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var datalist = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return datalist__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  datalist.cljs$lang$maxFixedArity = 1;
  datalist.cljs$lang$applyTo = function(arglist__12021) {
    var opts__5588__auto__ = cljs.core.first(arglist__12021);
    var children__5589__auto__ = cljs.core.rest(arglist__12021);
    return datalist__delegate(opts__5588__auto__, children__5589__auto__);
  };
  datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
  return datalist;
}();
om.dom.dd = function() {
  var dd__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var dd = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dd__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  dd.cljs$lang$maxFixedArity = 1;
  dd.cljs$lang$applyTo = function(arglist__12022) {
    var opts__5588__auto__ = cljs.core.first(arglist__12022);
    var children__5589__auto__ = cljs.core.rest(arglist__12022);
    return dd__delegate(opts__5588__auto__, children__5589__auto__);
  };
  dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
  return dd;
}();
om.dom.del = function() {
  var del__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var del = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return del__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  del.cljs$lang$maxFixedArity = 1;
  del.cljs$lang$applyTo = function(arglist__12023) {
    var opts__5588__auto__ = cljs.core.first(arglist__12023);
    var children__5589__auto__ = cljs.core.rest(arglist__12023);
    return del__delegate(opts__5588__auto__, children__5589__auto__);
  };
  del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
  return del;
}();
om.dom.dfn = function() {
  var dfn__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var dfn = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dfn__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  dfn.cljs$lang$maxFixedArity = 1;
  dfn.cljs$lang$applyTo = function(arglist__12024) {
    var opts__5588__auto__ = cljs.core.first(arglist__12024);
    var children__5589__auto__ = cljs.core.rest(arglist__12024);
    return dfn__delegate(opts__5588__auto__, children__5589__auto__);
  };
  dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
  return dfn;
}();
om.dom.div = function() {
  var div__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var div = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return div__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  div.cljs$lang$maxFixedArity = 1;
  div.cljs$lang$applyTo = function(arglist__12025) {
    var opts__5588__auto__ = cljs.core.first(arglist__12025);
    var children__5589__auto__ = cljs.core.rest(arglist__12025);
    return div__delegate(opts__5588__auto__, children__5589__auto__);
  };
  div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
  return div;
}();
om.dom.dl = function() {
  var dl__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var dl = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dl__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  dl.cljs$lang$maxFixedArity = 1;
  dl.cljs$lang$applyTo = function(arglist__12026) {
    var opts__5588__auto__ = cljs.core.first(arglist__12026);
    var children__5589__auto__ = cljs.core.rest(arglist__12026);
    return dl__delegate(opts__5588__auto__, children__5589__auto__);
  };
  dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
  return dl;
}();
om.dom.dt = function() {
  var dt__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var dt = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return dt__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  dt.cljs$lang$maxFixedArity = 1;
  dt.cljs$lang$applyTo = function(arglist__12027) {
    var opts__5588__auto__ = cljs.core.first(arglist__12027);
    var children__5589__auto__ = cljs.core.rest(arglist__12027);
    return dt__delegate(opts__5588__auto__, children__5589__auto__);
  };
  dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
  return dt;
}();
om.dom.em = function() {
  var em__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var em = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return em__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  em.cljs$lang$maxFixedArity = 1;
  em.cljs$lang$applyTo = function(arglist__12028) {
    var opts__5588__auto__ = cljs.core.first(arglist__12028);
    var children__5589__auto__ = cljs.core.rest(arglist__12028);
    return em__delegate(opts__5588__auto__, children__5589__auto__);
  };
  em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
  return em;
}();
om.dom.embed = function() {
  var embed__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var embed = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return embed__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  embed.cljs$lang$maxFixedArity = 1;
  embed.cljs$lang$applyTo = function(arglist__12029) {
    var opts__5588__auto__ = cljs.core.first(arglist__12029);
    var children__5589__auto__ = cljs.core.rest(arglist__12029);
    return embed__delegate(opts__5588__auto__, children__5589__auto__);
  };
  embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
  return embed;
}();
om.dom.fieldset = function() {
  var fieldset__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var fieldset = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return fieldset__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  fieldset.cljs$lang$maxFixedArity = 1;
  fieldset.cljs$lang$applyTo = function(arglist__12030) {
    var opts__5588__auto__ = cljs.core.first(arglist__12030);
    var children__5589__auto__ = cljs.core.rest(arglist__12030);
    return fieldset__delegate(opts__5588__auto__, children__5589__auto__);
  };
  fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
  return fieldset;
}();
om.dom.figcaption = function() {
  var figcaption__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var figcaption = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figcaption__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  figcaption.cljs$lang$maxFixedArity = 1;
  figcaption.cljs$lang$applyTo = function(arglist__12031) {
    var opts__5588__auto__ = cljs.core.first(arglist__12031);
    var children__5589__auto__ = cljs.core.rest(arglist__12031);
    return figcaption__delegate(opts__5588__auto__, children__5589__auto__);
  };
  figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
  return figcaption;
}();
om.dom.figure = function() {
  var figure__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var figure = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return figure__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  figure.cljs$lang$maxFixedArity = 1;
  figure.cljs$lang$applyTo = function(arglist__12032) {
    var opts__5588__auto__ = cljs.core.first(arglist__12032);
    var children__5589__auto__ = cljs.core.rest(arglist__12032);
    return figure__delegate(opts__5588__auto__, children__5589__auto__);
  };
  figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
  return figure;
}();
om.dom.footer = function() {
  var footer__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var footer = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return footer__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  footer.cljs$lang$maxFixedArity = 1;
  footer.cljs$lang$applyTo = function(arglist__12033) {
    var opts__5588__auto__ = cljs.core.first(arglist__12033);
    var children__5589__auto__ = cljs.core.rest(arglist__12033);
    return footer__delegate(opts__5588__auto__, children__5589__auto__);
  };
  footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
  return footer;
}();
om.dom.form = function() {
  var form__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var form = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return form__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  form.cljs$lang$maxFixedArity = 1;
  form.cljs$lang$applyTo = function(arglist__12034) {
    var opts__5588__auto__ = cljs.core.first(arglist__12034);
    var children__5589__auto__ = cljs.core.rest(arglist__12034);
    return form__delegate(opts__5588__auto__, children__5589__auto__);
  };
  form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
  return form;
}();
om.dom.h1 = function() {
  var h1__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var h1 = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h1__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  h1.cljs$lang$maxFixedArity = 1;
  h1.cljs$lang$applyTo = function(arglist__12035) {
    var opts__5588__auto__ = cljs.core.first(arglist__12035);
    var children__5589__auto__ = cljs.core.rest(arglist__12035);
    return h1__delegate(opts__5588__auto__, children__5589__auto__);
  };
  h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
  return h1;
}();
om.dom.h2 = function() {
  var h2__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var h2 = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h2__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  h2.cljs$lang$maxFixedArity = 1;
  h2.cljs$lang$applyTo = function(arglist__12036) {
    var opts__5588__auto__ = cljs.core.first(arglist__12036);
    var children__5589__auto__ = cljs.core.rest(arglist__12036);
    return h2__delegate(opts__5588__auto__, children__5589__auto__);
  };
  h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
  return h2;
}();
om.dom.h3 = function() {
  var h3__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var h3 = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h3__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  h3.cljs$lang$maxFixedArity = 1;
  h3.cljs$lang$applyTo = function(arglist__12037) {
    var opts__5588__auto__ = cljs.core.first(arglist__12037);
    var children__5589__auto__ = cljs.core.rest(arglist__12037);
    return h3__delegate(opts__5588__auto__, children__5589__auto__);
  };
  h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
  return h3;
}();
om.dom.h4 = function() {
  var h4__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var h4 = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h4__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  h4.cljs$lang$maxFixedArity = 1;
  h4.cljs$lang$applyTo = function(arglist__12038) {
    var opts__5588__auto__ = cljs.core.first(arglist__12038);
    var children__5589__auto__ = cljs.core.rest(arglist__12038);
    return h4__delegate(opts__5588__auto__, children__5589__auto__);
  };
  h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
  return h4;
}();
om.dom.h5 = function() {
  var h5__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var h5 = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h5__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  h5.cljs$lang$maxFixedArity = 1;
  h5.cljs$lang$applyTo = function(arglist__12039) {
    var opts__5588__auto__ = cljs.core.first(arglist__12039);
    var children__5589__auto__ = cljs.core.rest(arglist__12039);
    return h5__delegate(opts__5588__auto__, children__5589__auto__);
  };
  h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
  return h5;
}();
om.dom.h6 = function() {
  var h6__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var h6 = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return h6__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  h6.cljs$lang$maxFixedArity = 1;
  h6.cljs$lang$applyTo = function(arglist__12040) {
    var opts__5588__auto__ = cljs.core.first(arglist__12040);
    var children__5589__auto__ = cljs.core.rest(arglist__12040);
    return h6__delegate(opts__5588__auto__, children__5589__auto__);
  };
  h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
  return h6;
}();
om.dom.head = function() {
  var head__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var head = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return head__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  head.cljs$lang$maxFixedArity = 1;
  head.cljs$lang$applyTo = function(arglist__12041) {
    var opts__5588__auto__ = cljs.core.first(arglist__12041);
    var children__5589__auto__ = cljs.core.rest(arglist__12041);
    return head__delegate(opts__5588__auto__, children__5589__auto__);
  };
  head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
  return head;
}();
om.dom.header = function() {
  var header__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var header = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return header__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  header.cljs$lang$maxFixedArity = 1;
  header.cljs$lang$applyTo = function(arglist__12042) {
    var opts__5588__auto__ = cljs.core.first(arglist__12042);
    var children__5589__auto__ = cljs.core.rest(arglist__12042);
    return header__delegate(opts__5588__auto__, children__5589__auto__);
  };
  header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
  return header;
}();
om.dom.hr = function() {
  var hr__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var hr = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return hr__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  hr.cljs$lang$maxFixedArity = 1;
  hr.cljs$lang$applyTo = function(arglist__12043) {
    var opts__5588__auto__ = cljs.core.first(arglist__12043);
    var children__5589__auto__ = cljs.core.rest(arglist__12043);
    return hr__delegate(opts__5588__auto__, children__5589__auto__);
  };
  hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
  return hr;
}();
om.dom.html = function() {
  var html__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var html = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return html__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  html.cljs$lang$maxFixedArity = 1;
  html.cljs$lang$applyTo = function(arglist__12044) {
    var opts__5588__auto__ = cljs.core.first(arglist__12044);
    var children__5589__auto__ = cljs.core.rest(arglist__12044);
    return html__delegate(opts__5588__auto__, children__5589__auto__);
  };
  html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
  return html;
}();
om.dom.i = function() {
  var i__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var i = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return i__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  i.cljs$lang$maxFixedArity = 1;
  i.cljs$lang$applyTo = function(arglist__12045) {
    var opts__5588__auto__ = cljs.core.first(arglist__12045);
    var children__5589__auto__ = cljs.core.rest(arglist__12045);
    return i__delegate(opts__5588__auto__, children__5589__auto__);
  };
  i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
  return i;
}();
om.dom.iframe = function() {
  var iframe__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var iframe = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return iframe__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  iframe.cljs$lang$maxFixedArity = 1;
  iframe.cljs$lang$applyTo = function(arglist__12046) {
    var opts__5588__auto__ = cljs.core.first(arglist__12046);
    var children__5589__auto__ = cljs.core.rest(arglist__12046);
    return iframe__delegate(opts__5588__auto__, children__5589__auto__);
  };
  iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
  return iframe;
}();
om.dom.img = function() {
  var img__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var img = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return img__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  img.cljs$lang$maxFixedArity = 1;
  img.cljs$lang$applyTo = function(arglist__12047) {
    var opts__5588__auto__ = cljs.core.first(arglist__12047);
    var children__5589__auto__ = cljs.core.rest(arglist__12047);
    return img__delegate(opts__5588__auto__, children__5589__auto__);
  };
  img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
  return img;
}();
om.dom.ins = function() {
  var ins__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var ins = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ins__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  ins.cljs$lang$maxFixedArity = 1;
  ins.cljs$lang$applyTo = function(arglist__12048) {
    var opts__5588__auto__ = cljs.core.first(arglist__12048);
    var children__5589__auto__ = cljs.core.rest(arglist__12048);
    return ins__delegate(opts__5588__auto__, children__5589__auto__);
  };
  ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
  return ins;
}();
om.dom.kbd = function() {
  var kbd__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var kbd = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return kbd__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  kbd.cljs$lang$maxFixedArity = 1;
  kbd.cljs$lang$applyTo = function(arglist__12049) {
    var opts__5588__auto__ = cljs.core.first(arglist__12049);
    var children__5589__auto__ = cljs.core.rest(arglist__12049);
    return kbd__delegate(opts__5588__auto__, children__5589__auto__);
  };
  kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
  return kbd;
}();
om.dom.keygen = function() {
  var keygen__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var keygen = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return keygen__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  keygen.cljs$lang$maxFixedArity = 1;
  keygen.cljs$lang$applyTo = function(arglist__12050) {
    var opts__5588__auto__ = cljs.core.first(arglist__12050);
    var children__5589__auto__ = cljs.core.rest(arglist__12050);
    return keygen__delegate(opts__5588__auto__, children__5589__auto__);
  };
  keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
  return keygen;
}();
om.dom.label = function() {
  var label__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var label = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return label__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  label.cljs$lang$maxFixedArity = 1;
  label.cljs$lang$applyTo = function(arglist__12051) {
    var opts__5588__auto__ = cljs.core.first(arglist__12051);
    var children__5589__auto__ = cljs.core.rest(arglist__12051);
    return label__delegate(opts__5588__auto__, children__5589__auto__);
  };
  label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
  return label;
}();
om.dom.legend = function() {
  var legend__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var legend = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return legend__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  legend.cljs$lang$maxFixedArity = 1;
  legend.cljs$lang$applyTo = function(arglist__12052) {
    var opts__5588__auto__ = cljs.core.first(arglist__12052);
    var children__5589__auto__ = cljs.core.rest(arglist__12052);
    return legend__delegate(opts__5588__auto__, children__5589__auto__);
  };
  legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
  return legend;
}();
om.dom.li = function() {
  var li__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var li = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return li__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  li.cljs$lang$maxFixedArity = 1;
  li.cljs$lang$applyTo = function(arglist__12053) {
    var opts__5588__auto__ = cljs.core.first(arglist__12053);
    var children__5589__auto__ = cljs.core.rest(arglist__12053);
    return li__delegate(opts__5588__auto__, children__5589__auto__);
  };
  li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
  return li;
}();
om.dom.link = function() {
  var link__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var link = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return link__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  link.cljs$lang$maxFixedArity = 1;
  link.cljs$lang$applyTo = function(arglist__12054) {
    var opts__5588__auto__ = cljs.core.first(arglist__12054);
    var children__5589__auto__ = cljs.core.rest(arglist__12054);
    return link__delegate(opts__5588__auto__, children__5589__auto__);
  };
  link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
  return link;
}();
om.dom.main = function() {
  var main__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var main = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return main__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  main.cljs$lang$maxFixedArity = 1;
  main.cljs$lang$applyTo = function(arglist__12055) {
    var opts__5588__auto__ = cljs.core.first(arglist__12055);
    var children__5589__auto__ = cljs.core.rest(arglist__12055);
    return main__delegate(opts__5588__auto__, children__5589__auto__);
  };
  main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
  return main;
}();
om.dom.map = function() {
  var map__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var map = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return map__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  map.cljs$lang$maxFixedArity = 1;
  map.cljs$lang$applyTo = function(arglist__12056) {
    var opts__5588__auto__ = cljs.core.first(arglist__12056);
    var children__5589__auto__ = cljs.core.rest(arglist__12056);
    return map__delegate(opts__5588__auto__, children__5589__auto__);
  };
  map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
  return map;
}();
om.dom.mark = function() {
  var mark__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var mark = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return mark__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  mark.cljs$lang$maxFixedArity = 1;
  mark.cljs$lang$applyTo = function(arglist__12057) {
    var opts__5588__auto__ = cljs.core.first(arglist__12057);
    var children__5589__auto__ = cljs.core.rest(arglist__12057);
    return mark__delegate(opts__5588__auto__, children__5589__auto__);
  };
  mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
  return mark;
}();
om.dom.menu = function() {
  var menu__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var menu = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menu__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  menu.cljs$lang$maxFixedArity = 1;
  menu.cljs$lang$applyTo = function(arglist__12058) {
    var opts__5588__auto__ = cljs.core.first(arglist__12058);
    var children__5589__auto__ = cljs.core.rest(arglist__12058);
    return menu__delegate(opts__5588__auto__, children__5589__auto__);
  };
  menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
  return menu;
}();
om.dom.menuitem = function() {
  var menuitem__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var menuitem = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return menuitem__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  menuitem.cljs$lang$maxFixedArity = 1;
  menuitem.cljs$lang$applyTo = function(arglist__12059) {
    var opts__5588__auto__ = cljs.core.first(arglist__12059);
    var children__5589__auto__ = cljs.core.rest(arglist__12059);
    return menuitem__delegate(opts__5588__auto__, children__5589__auto__);
  };
  menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
  return menuitem;
}();
om.dom.meta = function() {
  var meta__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var meta = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meta__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  meta.cljs$lang$maxFixedArity = 1;
  meta.cljs$lang$applyTo = function(arglist__12060) {
    var opts__5588__auto__ = cljs.core.first(arglist__12060);
    var children__5589__auto__ = cljs.core.rest(arglist__12060);
    return meta__delegate(opts__5588__auto__, children__5589__auto__);
  };
  meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
  return meta;
}();
om.dom.meter = function() {
  var meter__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var meter = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return meter__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  meter.cljs$lang$maxFixedArity = 1;
  meter.cljs$lang$applyTo = function(arglist__12061) {
    var opts__5588__auto__ = cljs.core.first(arglist__12061);
    var children__5589__auto__ = cljs.core.rest(arglist__12061);
    return meter__delegate(opts__5588__auto__, children__5589__auto__);
  };
  meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
  return meter;
}();
om.dom.nav = function() {
  var nav__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var nav = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return nav__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  nav.cljs$lang$maxFixedArity = 1;
  nav.cljs$lang$applyTo = function(arglist__12062) {
    var opts__5588__auto__ = cljs.core.first(arglist__12062);
    var children__5589__auto__ = cljs.core.rest(arglist__12062);
    return nav__delegate(opts__5588__auto__, children__5589__auto__);
  };
  nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
  return nav;
}();
om.dom.noscript = function() {
  var noscript__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var noscript = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return noscript__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  noscript.cljs$lang$maxFixedArity = 1;
  noscript.cljs$lang$applyTo = function(arglist__12063) {
    var opts__5588__auto__ = cljs.core.first(arglist__12063);
    var children__5589__auto__ = cljs.core.rest(arglist__12063);
    return noscript__delegate(opts__5588__auto__, children__5589__auto__);
  };
  noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
  return noscript;
}();
om.dom.object = function() {
  var object__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var object = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return object__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  object.cljs$lang$maxFixedArity = 1;
  object.cljs$lang$applyTo = function(arglist__12064) {
    var opts__5588__auto__ = cljs.core.first(arglist__12064);
    var children__5589__auto__ = cljs.core.rest(arglist__12064);
    return object__delegate(opts__5588__auto__, children__5589__auto__);
  };
  object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
  return object;
}();
om.dom.ol = function() {
  var ol__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var ol = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ol__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  ol.cljs$lang$maxFixedArity = 1;
  ol.cljs$lang$applyTo = function(arglist__12065) {
    var opts__5588__auto__ = cljs.core.first(arglist__12065);
    var children__5589__auto__ = cljs.core.rest(arglist__12065);
    return ol__delegate(opts__5588__auto__, children__5589__auto__);
  };
  ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
  return ol;
}();
om.dom.optgroup = function() {
  var optgroup__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var optgroup = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return optgroup__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  optgroup.cljs$lang$maxFixedArity = 1;
  optgroup.cljs$lang$applyTo = function(arglist__12066) {
    var opts__5588__auto__ = cljs.core.first(arglist__12066);
    var children__5589__auto__ = cljs.core.rest(arglist__12066);
    return optgroup__delegate(opts__5588__auto__, children__5589__auto__);
  };
  optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
  return optgroup;
}();
om.dom.output = function() {
  var output__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var output = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return output__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  output.cljs$lang$maxFixedArity = 1;
  output.cljs$lang$applyTo = function(arglist__12067) {
    var opts__5588__auto__ = cljs.core.first(arglist__12067);
    var children__5589__auto__ = cljs.core.rest(arglist__12067);
    return output__delegate(opts__5588__auto__, children__5589__auto__);
  };
  output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
  return output;
}();
om.dom.p = function() {
  var p__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var p = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return p__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  p.cljs$lang$maxFixedArity = 1;
  p.cljs$lang$applyTo = function(arglist__12068) {
    var opts__5588__auto__ = cljs.core.first(arglist__12068);
    var children__5589__auto__ = cljs.core.rest(arglist__12068);
    return p__delegate(opts__5588__auto__, children__5589__auto__);
  };
  p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
  return p;
}();
om.dom.param = function() {
  var param__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var param = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return param__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  param.cljs$lang$maxFixedArity = 1;
  param.cljs$lang$applyTo = function(arglist__12069) {
    var opts__5588__auto__ = cljs.core.first(arglist__12069);
    var children__5589__auto__ = cljs.core.rest(arglist__12069);
    return param__delegate(opts__5588__auto__, children__5589__auto__);
  };
  param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
  return param;
}();
om.dom.pre = function() {
  var pre__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var pre = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return pre__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  pre.cljs$lang$maxFixedArity = 1;
  pre.cljs$lang$applyTo = function(arglist__12070) {
    var opts__5588__auto__ = cljs.core.first(arglist__12070);
    var children__5589__auto__ = cljs.core.rest(arglist__12070);
    return pre__delegate(opts__5588__auto__, children__5589__auto__);
  };
  pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
  return pre;
}();
om.dom.progress = function() {
  var progress__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var progress = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return progress__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  progress.cljs$lang$maxFixedArity = 1;
  progress.cljs$lang$applyTo = function(arglist__12071) {
    var opts__5588__auto__ = cljs.core.first(arglist__12071);
    var children__5589__auto__ = cljs.core.rest(arglist__12071);
    return progress__delegate(opts__5588__auto__, children__5589__auto__);
  };
  progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
  return progress;
}();
om.dom.q = function() {
  var q__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var q = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return q__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  q.cljs$lang$maxFixedArity = 1;
  q.cljs$lang$applyTo = function(arglist__12072) {
    var opts__5588__auto__ = cljs.core.first(arglist__12072);
    var children__5589__auto__ = cljs.core.rest(arglist__12072);
    return q__delegate(opts__5588__auto__, children__5589__auto__);
  };
  q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
  return q;
}();
om.dom.rp = function() {
  var rp__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var rp = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rp__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  rp.cljs$lang$maxFixedArity = 1;
  rp.cljs$lang$applyTo = function(arglist__12073) {
    var opts__5588__auto__ = cljs.core.first(arglist__12073);
    var children__5589__auto__ = cljs.core.rest(arglist__12073);
    return rp__delegate(opts__5588__auto__, children__5589__auto__);
  };
  rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
  return rp;
}();
om.dom.rt = function() {
  var rt__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var rt = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rt__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  rt.cljs$lang$maxFixedArity = 1;
  rt.cljs$lang$applyTo = function(arglist__12074) {
    var opts__5588__auto__ = cljs.core.first(arglist__12074);
    var children__5589__auto__ = cljs.core.rest(arglist__12074);
    return rt__delegate(opts__5588__auto__, children__5589__auto__);
  };
  rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
  return rt;
}();
om.dom.ruby = function() {
  var ruby__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var ruby = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ruby__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  ruby.cljs$lang$maxFixedArity = 1;
  ruby.cljs$lang$applyTo = function(arglist__12075) {
    var opts__5588__auto__ = cljs.core.first(arglist__12075);
    var children__5589__auto__ = cljs.core.rest(arglist__12075);
    return ruby__delegate(opts__5588__auto__, children__5589__auto__);
  };
  ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
  return ruby;
}();
om.dom.s = function() {
  var s__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var s = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return s__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  s.cljs$lang$maxFixedArity = 1;
  s.cljs$lang$applyTo = function(arglist__12076) {
    var opts__5588__auto__ = cljs.core.first(arglist__12076);
    var children__5589__auto__ = cljs.core.rest(arglist__12076);
    return s__delegate(opts__5588__auto__, children__5589__auto__);
  };
  s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
  return s;
}();
om.dom.samp = function() {
  var samp__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var samp = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return samp__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  samp.cljs$lang$maxFixedArity = 1;
  samp.cljs$lang$applyTo = function(arglist__12077) {
    var opts__5588__auto__ = cljs.core.first(arglist__12077);
    var children__5589__auto__ = cljs.core.rest(arglist__12077);
    return samp__delegate(opts__5588__auto__, children__5589__auto__);
  };
  samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
  return samp;
}();
om.dom.script = function() {
  var script__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var script = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return script__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  script.cljs$lang$maxFixedArity = 1;
  script.cljs$lang$applyTo = function(arglist__12078) {
    var opts__5588__auto__ = cljs.core.first(arglist__12078);
    var children__5589__auto__ = cljs.core.rest(arglist__12078);
    return script__delegate(opts__5588__auto__, children__5589__auto__);
  };
  script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
  return script;
}();
om.dom.section = function() {
  var section__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var section = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return section__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  section.cljs$lang$maxFixedArity = 1;
  section.cljs$lang$applyTo = function(arglist__12079) {
    var opts__5588__auto__ = cljs.core.first(arglist__12079);
    var children__5589__auto__ = cljs.core.rest(arglist__12079);
    return section__delegate(opts__5588__auto__, children__5589__auto__);
  };
  section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
  return section;
}();
om.dom.select = function() {
  var select__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var select = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return select__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  select.cljs$lang$maxFixedArity = 1;
  select.cljs$lang$applyTo = function(arglist__12080) {
    var opts__5588__auto__ = cljs.core.first(arglist__12080);
    var children__5589__auto__ = cljs.core.rest(arglist__12080);
    return select__delegate(opts__5588__auto__, children__5589__auto__);
  };
  select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
  return select;
}();
om.dom.small = function() {
  var small__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var small = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return small__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  small.cljs$lang$maxFixedArity = 1;
  small.cljs$lang$applyTo = function(arglist__12081) {
    var opts__5588__auto__ = cljs.core.first(arglist__12081);
    var children__5589__auto__ = cljs.core.rest(arglist__12081);
    return small__delegate(opts__5588__auto__, children__5589__auto__);
  };
  small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
  return small;
}();
om.dom.source = function() {
  var source__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var source = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return source__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  source.cljs$lang$maxFixedArity = 1;
  source.cljs$lang$applyTo = function(arglist__12082) {
    var opts__5588__auto__ = cljs.core.first(arglist__12082);
    var children__5589__auto__ = cljs.core.rest(arglist__12082);
    return source__delegate(opts__5588__auto__, children__5589__auto__);
  };
  source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
  return source;
}();
om.dom.span = function() {
  var span__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var span = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return span__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  span.cljs$lang$maxFixedArity = 1;
  span.cljs$lang$applyTo = function(arglist__12083) {
    var opts__5588__auto__ = cljs.core.first(arglist__12083);
    var children__5589__auto__ = cljs.core.rest(arglist__12083);
    return span__delegate(opts__5588__auto__, children__5589__auto__);
  };
  span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
  return span;
}();
om.dom.strong = function() {
  var strong__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var strong = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return strong__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  strong.cljs$lang$maxFixedArity = 1;
  strong.cljs$lang$applyTo = function(arglist__12084) {
    var opts__5588__auto__ = cljs.core.first(arglist__12084);
    var children__5589__auto__ = cljs.core.rest(arglist__12084);
    return strong__delegate(opts__5588__auto__, children__5589__auto__);
  };
  strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
  return strong;
}();
om.dom.style = function() {
  var style__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var style = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return style__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  style.cljs$lang$maxFixedArity = 1;
  style.cljs$lang$applyTo = function(arglist__12085) {
    var opts__5588__auto__ = cljs.core.first(arglist__12085);
    var children__5589__auto__ = cljs.core.rest(arglist__12085);
    return style__delegate(opts__5588__auto__, children__5589__auto__);
  };
  style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
  return style;
}();
om.dom.sub = function() {
  var sub__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var sub = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sub__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  sub.cljs$lang$maxFixedArity = 1;
  sub.cljs$lang$applyTo = function(arglist__12086) {
    var opts__5588__auto__ = cljs.core.first(arglist__12086);
    var children__5589__auto__ = cljs.core.rest(arglist__12086);
    return sub__delegate(opts__5588__auto__, children__5589__auto__);
  };
  sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
  return sub;
}();
om.dom.summary = function() {
  var summary__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var summary = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return summary__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  summary.cljs$lang$maxFixedArity = 1;
  summary.cljs$lang$applyTo = function(arglist__12087) {
    var opts__5588__auto__ = cljs.core.first(arglist__12087);
    var children__5589__auto__ = cljs.core.rest(arglist__12087);
    return summary__delegate(opts__5588__auto__, children__5589__auto__);
  };
  summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
  return summary;
}();
om.dom.sup = function() {
  var sup__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var sup = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return sup__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  sup.cljs$lang$maxFixedArity = 1;
  sup.cljs$lang$applyTo = function(arglist__12088) {
    var opts__5588__auto__ = cljs.core.first(arglist__12088);
    var children__5589__auto__ = cljs.core.rest(arglist__12088);
    return sup__delegate(opts__5588__auto__, children__5589__auto__);
  };
  sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
  return sup;
}();
om.dom.table = function() {
  var table__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var table = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return table__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  table.cljs$lang$maxFixedArity = 1;
  table.cljs$lang$applyTo = function(arglist__12089) {
    var opts__5588__auto__ = cljs.core.first(arglist__12089);
    var children__5589__auto__ = cljs.core.rest(arglist__12089);
    return table__delegate(opts__5588__auto__, children__5589__auto__);
  };
  table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
  return table;
}();
om.dom.tbody = function() {
  var tbody__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var tbody = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tbody__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  tbody.cljs$lang$maxFixedArity = 1;
  tbody.cljs$lang$applyTo = function(arglist__12090) {
    var opts__5588__auto__ = cljs.core.first(arglist__12090);
    var children__5589__auto__ = cljs.core.rest(arglist__12090);
    return tbody__delegate(opts__5588__auto__, children__5589__auto__);
  };
  tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
  return tbody;
}();
om.dom.td = function() {
  var td__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var td = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return td__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  td.cljs$lang$maxFixedArity = 1;
  td.cljs$lang$applyTo = function(arglist__12091) {
    var opts__5588__auto__ = cljs.core.first(arglist__12091);
    var children__5589__auto__ = cljs.core.rest(arglist__12091);
    return td__delegate(opts__5588__auto__, children__5589__auto__);
  };
  td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
  return td;
}();
om.dom.tfoot = function() {
  var tfoot__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var tfoot = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tfoot__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  tfoot.cljs$lang$maxFixedArity = 1;
  tfoot.cljs$lang$applyTo = function(arglist__12092) {
    var opts__5588__auto__ = cljs.core.first(arglist__12092);
    var children__5589__auto__ = cljs.core.rest(arglist__12092);
    return tfoot__delegate(opts__5588__auto__, children__5589__auto__);
  };
  tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
  return tfoot;
}();
om.dom.th = function() {
  var th__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var th = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return th__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  th.cljs$lang$maxFixedArity = 1;
  th.cljs$lang$applyTo = function(arglist__12093) {
    var opts__5588__auto__ = cljs.core.first(arglist__12093);
    var children__5589__auto__ = cljs.core.rest(arglist__12093);
    return th__delegate(opts__5588__auto__, children__5589__auto__);
  };
  th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
  return th;
}();
om.dom.thead = function() {
  var thead__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var thead = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return thead__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  thead.cljs$lang$maxFixedArity = 1;
  thead.cljs$lang$applyTo = function(arglist__12094) {
    var opts__5588__auto__ = cljs.core.first(arglist__12094);
    var children__5589__auto__ = cljs.core.rest(arglist__12094);
    return thead__delegate(opts__5588__auto__, children__5589__auto__);
  };
  thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
  return thead;
}();
om.dom.time = function() {
  var time__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var time = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return time__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  time.cljs$lang$maxFixedArity = 1;
  time.cljs$lang$applyTo = function(arglist__12095) {
    var opts__5588__auto__ = cljs.core.first(arglist__12095);
    var children__5589__auto__ = cljs.core.rest(arglist__12095);
    return time__delegate(opts__5588__auto__, children__5589__auto__);
  };
  time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
  return time;
}();
om.dom.title = function() {
  var title__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var title = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return title__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  title.cljs$lang$maxFixedArity = 1;
  title.cljs$lang$applyTo = function(arglist__12096) {
    var opts__5588__auto__ = cljs.core.first(arglist__12096);
    var children__5589__auto__ = cljs.core.rest(arglist__12096);
    return title__delegate(opts__5588__auto__, children__5589__auto__);
  };
  title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
  return title;
}();
om.dom.tr = function() {
  var tr__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var tr = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tr__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  tr.cljs$lang$maxFixedArity = 1;
  tr.cljs$lang$applyTo = function(arglist__12097) {
    var opts__5588__auto__ = cljs.core.first(arglist__12097);
    var children__5589__auto__ = cljs.core.rest(arglist__12097);
    return tr__delegate(opts__5588__auto__, children__5589__auto__);
  };
  tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
  return tr;
}();
om.dom.track = function() {
  var track__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var track = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return track__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  track.cljs$lang$maxFixedArity = 1;
  track.cljs$lang$applyTo = function(arglist__12098) {
    var opts__5588__auto__ = cljs.core.first(arglist__12098);
    var children__5589__auto__ = cljs.core.rest(arglist__12098);
    return track__delegate(opts__5588__auto__, children__5589__auto__);
  };
  track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
  return track;
}();
om.dom.u = function() {
  var u__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var u = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return u__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  u.cljs$lang$maxFixedArity = 1;
  u.cljs$lang$applyTo = function(arglist__12099) {
    var opts__5588__auto__ = cljs.core.first(arglist__12099);
    var children__5589__auto__ = cljs.core.rest(arglist__12099);
    return u__delegate(opts__5588__auto__, children__5589__auto__);
  };
  u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
  return u;
}();
om.dom.ul = function() {
  var ul__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var ul = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ul__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  ul.cljs$lang$maxFixedArity = 1;
  ul.cljs$lang$applyTo = function(arglist__12100) {
    var opts__5588__auto__ = cljs.core.first(arglist__12100);
    var children__5589__auto__ = cljs.core.rest(arglist__12100);
    return ul__delegate(opts__5588__auto__, children__5589__auto__);
  };
  ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
  return ul;
}();
om.dom.var$ = function() {
  var var$__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var var$ = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return var$__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  var$.cljs$lang$maxFixedArity = 1;
  var$.cljs$lang$applyTo = function(arglist__12101) {
    var opts__5588__auto__ = cljs.core.first(arglist__12101);
    var children__5589__auto__ = cljs.core.rest(arglist__12101);
    return var$__delegate(opts__5588__auto__, children__5589__auto__);
  };
  var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
  return var$;
}();
om.dom.video = function() {
  var video__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var video = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return video__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  video.cljs$lang$maxFixedArity = 1;
  video.cljs$lang$applyTo = function(arglist__12102) {
    var opts__5588__auto__ = cljs.core.first(arglist__12102);
    var children__5589__auto__ = cljs.core.rest(arglist__12102);
    return video__delegate(opts__5588__auto__, children__5589__auto__);
  };
  video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
  return video;
}();
om.dom.wbr = function() {
  var wbr__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var wbr = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return wbr__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  wbr.cljs$lang$maxFixedArity = 1;
  wbr.cljs$lang$applyTo = function(arglist__12103) {
    var opts__5588__auto__ = cljs.core.first(arglist__12103);
    var children__5589__auto__ = cljs.core.rest(arglist__12103);
    return wbr__delegate(opts__5588__auto__, children__5589__auto__);
  };
  wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
  return wbr;
}();
om.dom.circle = function() {
  var circle__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var circle = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return circle__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  circle.cljs$lang$maxFixedArity = 1;
  circle.cljs$lang$applyTo = function(arglist__12104) {
    var opts__5588__auto__ = cljs.core.first(arglist__12104);
    var children__5589__auto__ = cljs.core.rest(arglist__12104);
    return circle__delegate(opts__5588__auto__, children__5589__auto__);
  };
  circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
  return circle;
}();
om.dom.ellipse = function() {
  var ellipse__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var ellipse = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return ellipse__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  ellipse.cljs$lang$maxFixedArity = 1;
  ellipse.cljs$lang$applyTo = function(arglist__12105) {
    var opts__5588__auto__ = cljs.core.first(arglist__12105);
    var children__5589__auto__ = cljs.core.rest(arglist__12105);
    return ellipse__delegate(opts__5588__auto__, children__5589__auto__);
  };
  ellipse.cljs$core$IFn$_invoke$arity$variadic = ellipse__delegate;
  return ellipse;
}();
om.dom.g = function() {
  var g__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var g = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return g__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  g.cljs$lang$maxFixedArity = 1;
  g.cljs$lang$applyTo = function(arglist__12106) {
    var opts__5588__auto__ = cljs.core.first(arglist__12106);
    var children__5589__auto__ = cljs.core.rest(arglist__12106);
    return g__delegate(opts__5588__auto__, children__5589__auto__);
  };
  g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
  return g;
}();
om.dom.line = function() {
  var line__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var line = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return line__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  line.cljs$lang$maxFixedArity = 1;
  line.cljs$lang$applyTo = function(arglist__12107) {
    var opts__5588__auto__ = cljs.core.first(arglist__12107);
    var children__5589__auto__ = cljs.core.rest(arglist__12107);
    return line__delegate(opts__5588__auto__, children__5589__auto__);
  };
  line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
  return line;
}();
om.dom.path = function() {
  var path__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var path = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return path__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  path.cljs$lang$maxFixedArity = 1;
  path.cljs$lang$applyTo = function(arglist__12108) {
    var opts__5588__auto__ = cljs.core.first(arglist__12108);
    var children__5589__auto__ = cljs.core.rest(arglist__12108);
    return path__delegate(opts__5588__auto__, children__5589__auto__);
  };
  path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
  return path;
}();
om.dom.polyline = function() {
  var polyline__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var polyline = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polyline__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  polyline.cljs$lang$maxFixedArity = 1;
  polyline.cljs$lang$applyTo = function(arglist__12109) {
    var opts__5588__auto__ = cljs.core.first(arglist__12109);
    var children__5589__auto__ = cljs.core.rest(arglist__12109);
    return polyline__delegate(opts__5588__auto__, children__5589__auto__);
  };
  polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
  return polyline;
}();
om.dom.rect = function() {
  var rect__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var rect = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return rect__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  rect.cljs$lang$maxFixedArity = 1;
  rect.cljs$lang$applyTo = function(arglist__12110) {
    var opts__5588__auto__ = cljs.core.first(arglist__12110);
    var children__5589__auto__ = cljs.core.rest(arglist__12110);
    return rect__delegate(opts__5588__auto__, children__5589__auto__);
  };
  rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
  return rect;
}();
om.dom.svg = function() {
  var svg__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var svg = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return svg__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  svg.cljs$lang$maxFixedArity = 1;
  svg.cljs$lang$applyTo = function(arglist__12111) {
    var opts__5588__auto__ = cljs.core.first(arglist__12111);
    var children__5589__auto__ = cljs.core.rest(arglist__12111);
    return svg__delegate(opts__5588__auto__, children__5589__auto__);
  };
  svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
  return svg;
}();
om.dom.text = function() {
  var text__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var text = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return text__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  text.cljs$lang$maxFixedArity = 1;
  text.cljs$lang$applyTo = function(arglist__12112) {
    var opts__5588__auto__ = cljs.core.first(arglist__12112);
    var children__5589__auto__ = cljs.core.rest(arglist__12112);
    return text__delegate(opts__5588__auto__, children__5589__auto__);
  };
  text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
  return text;
}();
om.dom.defs = function() {
  var defs__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var defs = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return defs__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  defs.cljs$lang$maxFixedArity = 1;
  defs.cljs$lang$applyTo = function(arglist__12113) {
    var opts__5588__auto__ = cljs.core.first(arglist__12113);
    var children__5589__auto__ = cljs.core.rest(arglist__12113);
    return defs__delegate(opts__5588__auto__, children__5589__auto__);
  };
  defs.cljs$core$IFn$_invoke$arity$variadic = defs__delegate;
  return defs;
}();
om.dom.linearGradient = function() {
  var linearGradient__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var linearGradient = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return linearGradient__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  linearGradient.cljs$lang$maxFixedArity = 1;
  linearGradient.cljs$lang$applyTo = function(arglist__12114) {
    var opts__5588__auto__ = cljs.core.first(arglist__12114);
    var children__5589__auto__ = cljs.core.rest(arglist__12114);
    return linearGradient__delegate(opts__5588__auto__, children__5589__auto__);
  };
  linearGradient.cljs$core$IFn$_invoke$arity$variadic = linearGradient__delegate;
  return linearGradient;
}();
om.dom.polygon = function() {
  var polygon__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var polygon = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return polygon__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  polygon.cljs$lang$maxFixedArity = 1;
  polygon.cljs$lang$applyTo = function(arglist__12115) {
    var opts__5588__auto__ = cljs.core.first(arglist__12115);
    var children__5589__auto__ = cljs.core.rest(arglist__12115);
    return polygon__delegate(opts__5588__auto__, children__5589__auto__);
  };
  polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
  return polygon;
}();
om.dom.radialGradient = function() {
  var radialGradient__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var radialGradient = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return radialGradient__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  radialGradient.cljs$lang$maxFixedArity = 1;
  radialGradient.cljs$lang$applyTo = function(arglist__12116) {
    var opts__5588__auto__ = cljs.core.first(arglist__12116);
    var children__5589__auto__ = cljs.core.rest(arglist__12116);
    return radialGradient__delegate(opts__5588__auto__, children__5589__auto__);
  };
  radialGradient.cljs$core$IFn$_invoke$arity$variadic = radialGradient__delegate;
  return radialGradient;
}();
om.dom.stop = function() {
  var stop__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var stop = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return stop__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  stop.cljs$lang$maxFixedArity = 1;
  stop.cljs$lang$applyTo = function(arglist__12117) {
    var opts__5588__auto__ = cljs.core.first(arglist__12117);
    var children__5589__auto__ = cljs.core.rest(arglist__12117);
    return stop__delegate(opts__5588__auto__, children__5589__auto__);
  };
  stop.cljs$core$IFn$_invoke$arity$variadic = stop__delegate;
  return stop;
}();
om.dom.tspan = function() {
  var tspan__delegate = function(opts__5588__auto__, children__5589__auto__) {
    return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__5588__auto__, children__5589__auto__)));
  };
  var tspan = function(opts__5588__auto__, var_args) {
    var children__5589__auto__ = null;
    if (arguments.length > 1) {
      children__5589__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0);
    }
    return tspan__delegate.call(this, opts__5588__auto__, children__5589__auto__);
  };
  tspan.cljs$lang$maxFixedArity = 1;
  tspan.cljs$lang$applyTo = function(arglist__12118) {
    var opts__5588__auto__ = cljs.core.first(arglist__12118);
    var children__5589__auto__ = cljs.core.rest(arglist__12118);
    return tspan__delegate(opts__5588__auto__, children__5589__auto__);
  };
  tspan.cljs$core$IFn$_invoke$arity$variadic = tspan__delegate;
  return tspan;
}();
om.dom.wrap_form_element = function wrap_form_element(ctor, display_name) {
  return React.createClass({"render":function() {
    var this$ = this;
    return this$.transferPropsTo(ctor.call(null, {"children":this$.props["children"], "onChange":this$["onChange"], "value":this$.state["value"]}));
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "getInitialState":function() {
    var this$ = this;
    return{"value":this$.props["value"]};
  }, "getDisplayName":function() {
    return display_name;
  }});
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function render(component, el) {
  return React.renderComponent(component, el);
};
om.dom.render_to_str = function render_to_str(c) {
  return React.renderComponentToString(c);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("sailing_study_guide.quiz");
goog.require("cljs.core");
sailing_study_guide.quiz.default_quiz = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Quiz", new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Parts of the boat", new cljs.core.Keyword(null, "questions", "questions", 1226225380), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "question", "question", -1411720117), "What is placed between the boat and the dock to cushion the hull?", new cljs.core.Keyword(null, "image", "image", -58725096), null, new cljs.core.Keyword(null, "answers", "answers", -2066449770), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, 
"text", "text", -1790561697), "Tiller", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Boomvang", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Fender", new cljs.core.Keyword(null, "correct", "correct", 984806334), true], null), new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Gooseneck", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null)], null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "question", "question", -1411720117), "What's the small sail at front called?", new cljs.core.Keyword(null, "image", "image", -58725096), null, new cljs.core.Keyword(null, "answers", "answers", -2066449770), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jib", new cljs.core.Keyword(null, "correct", "correct", 984806334), true], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jab", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jibjab", new cljs.core.Keyword(null, 
"correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Jibber jabber", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null)], null)], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "question", "question", -1411720117), "What's the biggest danger to a boat?", new cljs.core.Keyword(null, "image", "image", -58725096), null, new cljs.core.Keyword(null, 
"answers", "answers", -2066449770), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Pirates", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Giant squids", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "Barnacles", new cljs.core.Keyword(null, "correct", "correct", 984806334), false], null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text", "text", -1790561697), "That you'll need a bigger one", new cljs.core.Keyword(null, "correct", "correct", 984806334), true], null)], null)], null)], null)], null)], null)], null);
goog.exportSymbol("sailing_study_guide.quiz.default_quiz", sailing_study_guide.quiz.default_quiz);
goog.provide("om.core");
goog.require("cljs.core");
goog.require("goog.ui.IdGenerator");
goog.require("om.dom");
goog.require("om.dom");
om.core._STAR_read_enabled_STAR_ = false;
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core.IDisplayName = function() {
  var obj15334 = {};
  return obj15334;
}();
om.core.display_name = function display_name(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.display_name[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.display_name["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj15336 = {};
  return obj15336;
}();
om.core.init_state = function init_state(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.init_state[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.init_state["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj15338 = {};
  return obj15338;
}();
om.core.should_update = function should_update(this$, next_props, next_state) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.should_update[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.should_update["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj15340 = {};
  return obj15340;
}();
om.core.will_mount = function will_mount(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.will_mount[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.will_mount["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj15342 = {};
  return obj15342;
}();
om.core.did_mount = function did_mount(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.did_mount[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.did_mount["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj15344 = {};
  return obj15344;
}();
om.core.will_unmount = function will_unmount(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.will_unmount[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.will_unmount["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj15346 = {};
  return obj15346;
}();
om.core.will_update = function will_update(this$, next_props, next_state) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.will_update[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.will_update["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj15348 = {};
  return obj15348;
}();
om.core.did_update = function did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.did_update[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.did_update["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj15350 = {};
  return obj15350;
}();
om.core.will_receive_props = function will_receive_props(this$, next_props) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.will_receive_props[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.will_receive_props["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj15352 = {};
  return obj15352;
}();
om.core.render = function render(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.render[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.render["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderState = function() {
  var obj15354 = {};
  return obj15354;
}();
om.core.render_state = function render_state(this$, state) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core.render_state[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core.render_state["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.IOmSwap = function() {
  var obj15356 = {};
  return obj15356;
}();
om.core._om_swap_BANG_ = function _om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj15358 = {};
  return obj15358;
}();
om.core._get_state = function() {
  var _get_state = null;
  var _get_state__1 = function(this$) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.om$core$IGetState$_get_state$arity$1;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$1(this$);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = om.core._get_state[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._get_state["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_state__2 = function(this$, ks) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.om$core$IGetState$_get_state$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = om.core._get_state[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._get_state["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_state__1.call(this, this$);
      case 2:
        return _get_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_state.cljs$core$IFn$_invoke$arity$1 = _get_state__1;
  _get_state.cljs$core$IFn$_invoke$arity$2 = _get_state__2;
  return _get_state;
}();
om.core.IGetRenderState = function() {
  var obj15360 = {};
  return obj15360;
}();
om.core._get_render_state = function() {
  var _get_render_state = null;
  var _get_render_state__1 = function(this$) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$1;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = om.core._get_render_state[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._get_render_state["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _get_render_state__2 = function(this$, ks) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.om$core$IGetRenderState$_get_render_state$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = om.core._get_render_state[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._get_render_state["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
          }
        }
      }().call(null, this$, ks);
    }
  };
  _get_render_state = function(this$, ks) {
    switch(arguments.length) {
      case 1:
        return _get_render_state__1.call(this, this$);
      case 2:
        return _get_render_state__2.call(this, this$, ks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _get_render_state.cljs$core$IFn$_invoke$arity$1 = _get_render_state__1;
  _get_render_state.cljs$core$IFn$_invoke$arity$2 = _get_render_state__2;
  return _get_render_state;
}();
om.core.ISetState = function() {
  var obj15362 = {};
  return obj15362;
}();
om.core._set_state_BANG_ = function() {
  var _set_state_BANG_ = null;
  var _set_state_BANG___3 = function(this$, val, render) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, val, render);
    }
  };
  var _set_state_BANG___4 = function(this$, ks, val, render) {
    if (function() {
      var and__3627__auto__ = this$;
      if (and__3627__auto__) {
        return this$.om$core$ISetState$_set_state_BANG_$arity$4;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
    } else {
      var x__4275__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3639__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._set_state_BANG_["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
          }
        }
      }().call(null, this$, ks, val, render);
    }
  };
  _set_state_BANG_ = function(this$, ks, val, render) {
    switch(arguments.length) {
      case 3:
        return _set_state_BANG___3.call(this, this$, ks, val);
      case 4:
        return _set_state_BANG___4.call(this, this$, ks, val, render);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = _set_state_BANG___3;
  _set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = _set_state_BANG___4;
  return _set_state_BANG_;
}();
om.core.IRenderQueue = function() {
  var obj15364 = {};
  return obj15364;
}();
om.core._get_queue = function _get_queue(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core._get_queue[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._get_queue["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function _queue_render_BANG_(this$, c) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function _empty_queue_BANG_(this$) {
  if (function() {
    var and__3627__auto__ = this$;
    if (and__3627__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4275__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3639__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj15366 = {};
  return obj15366;
}();
om.core._value = function _value(x) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = om.core._value[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._value["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj15368 = {};
  return obj15368;
}();
om.core._path = function _path(cursor) {
  if (function() {
    var and__3627__auto__ = cursor;
    if (and__3627__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4275__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3639__auto__ = om.core._path[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._path["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function _state(cursor) {
  if (function() {
    var and__3627__auto__ = cursor;
    if (and__3627__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4275__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3639__auto__ = om.core._state[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._state["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj15370 = {};
  return obj15370;
}();
om.core._to_cursor = function() {
  var _to_cursor = null;
  var _to_cursor__2 = function(value, state) {
    if (function() {
      var and__3627__auto__ = value;
      if (and__3627__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$2;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
    } else {
      var x__4275__auto__ = value == null ? null : value;
      return function() {
        var or__3639__auto__ = om.core._to_cursor[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._to_cursor["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state);
    }
  };
  var _to_cursor__3 = function(value, state, path) {
    if (function() {
      var and__3627__auto__ = value;
      if (and__3627__auto__) {
        return value.om$core$IToCursor$_to_cursor$arity$3;
      } else {
        return and__3627__auto__;
      }
    }()) {
      return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
    } else {
      var x__4275__auto__ = value == null ? null : value;
      return function() {
        var or__3639__auto__ = om.core._to_cursor[goog.typeOf(x__4275__auto__)];
        if (or__3639__auto__) {
          return or__3639__auto__;
        } else {
          var or__3639__auto____$1 = om.core._to_cursor["_"];
          if (or__3639__auto____$1) {
            return or__3639__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
          }
        }
      }().call(null, value, state, path);
    }
  };
  _to_cursor = function(value, state, path) {
    switch(arguments.length) {
      case 2:
        return _to_cursor__2.call(this, value, state);
      case 3:
        return _to_cursor__3.call(this, value, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _to_cursor.cljs$core$IFn$_invoke$arity$2 = _to_cursor__2;
  _to_cursor.cljs$core$IFn$_invoke$arity$3 = _to_cursor__3;
  return _to_cursor;
}();
om.core.ICursorDerive = function() {
  var obj15372 = {};
  return obj15372;
}();
om.core._derive = function _derive(cursor, derived, state, path) {
  if (function() {
    var and__3627__auto__ = cursor;
    if (and__3627__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4275__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3639__auto__ = om.core._derive[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._derive["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj15374 = {};
  return obj15374;
}();
om.core._transact_BANG_ = function _transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__3627__auto__ = cursor;
    if (and__3627__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4275__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__3639__auto__ = om.core._transact_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._transact_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj15376 = {};
  return obj15376;
}();
om.core._listen_BANG_ = function _listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = om.core._listen_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._listen_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function _unlisten_BANG_(x, key) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function _notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__3627__auto__ = x;
    if (and__3627__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__3627__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4275__auto__ = x == null ? null : x;
    return function() {
      var or__3639__auto__ = om.core._notify_BANG_[goog.typeOf(x__4275__auto__)];
      if (or__3639__auto__) {
        return or__3639__auto__;
      } else {
        var or__3639__auto____$1 = om.core._notify_BANG_["_"];
        if (or__3639__auto____$1) {
          return or__3639__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.transact_STAR_ = function transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__15378 = state;
    if (G__15378) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15378.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__15378.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__15378);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__15378);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function cursor_QMARK_(x) {
  var G__15380 = x;
  if (G__15380) {
    var bit__4302__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3639__auto__ = bit__4302__auto__;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return G__15380.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__15380.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15380);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__15380);
  }
};
om.core.children = function children(node) {
  var c = node.props.children;
  if (cljs.core.fn_QMARK_.call(null, c)) {
    return node.props.children = function() {
      var _STAR_read_enabled_STAR_15382 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        return c.call(null, node);
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15382;
      }
    }();
  } else {
    return c;
  }
};
om.core.get_props = function get_props(x) {
  return x.props["__om_cursor"];
};
om.core.get_state = function() {
  var get_state = null;
  var get_state__1 = function(owner) {
    return om.core._get_state.call(null, owner);
  };
  var get_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_state.call(null, owner, ks);
  };
  get_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_state__1.call(this, owner);
      case 2:
        return get_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_state.cljs$core$IFn$_invoke$arity$1 = get_state__1;
  get_state.cljs$core$IFn$_invoke$arity$2 = get_state__2;
  return get_state;
}();
om.core.get_shared = function() {
  var get_shared = null;
  var get_shared__1 = function(owner) {
    if (owner == null) {
      return null;
    } else {
      return owner.props["__om_shared"];
    }
  };
  var get_shared__2 = function(owner, korks) {
    if (!cljs.core.sequential_QMARK_.call(null, korks)) {
      return cljs.core.get.call(null, get_shared.call(null, owner), korks);
    } else {
      if (cljs.core.empty_QMARK_.call(null, korks)) {
        return get_shared.call(null, owner);
      } else {
        return cljs.core.get_in.call(null, get_shared.call(null, owner), korks);
      }
    }
  };
  get_shared = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_shared__1.call(this, owner);
      case 2:
        return get_shared__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_shared.cljs$core$IFn$_invoke$arity$1 = get_shared__1;
  get_shared.cljs$core$IFn$_invoke$arity$2 = get_shared__2;
  return get_shared;
}();
om.core.merge_pending_state = function merge_pending_state(owner) {
  var state = owner.state;
  var temp__4126__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var pending_state = temp__4126__auto__;
    var G__15384 = state;
    G__15384["__om_prev_state"] = state["__om_state"];
    G__15384["__om_state"] = pending_state;
    G__15384["__om_pending_state"] = null;
    return G__15384;
  } else {
    return null;
  }
};
om.core.merge_props_state = function() {
  var merge_props_state = null;
  var merge_props_state__1 = function(owner) {
    return merge_props_state.call(null, owner, null);
  };
  var merge_props_state__2 = function(owner, props) {
    var props__$1 = function() {
      var or__3639__auto__ = props;
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return owner.props;
      }
    }();
    var temp__4126__auto__ = props__$1["__om_state"];
    if (cljs.core.truth_(temp__4126__auto__)) {
      var props_state = temp__4126__auto__;
      var state = owner.state;
      state["__om_pending_state"] = cljs.core.merge.call(null, function() {
        var or__3639__auto__ = state["__om_pending_state"];
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return state["__om_state"];
        }
      }(), props_state);
      return props__$1["__om_state"] = null;
    } else {
      return null;
    }
  };
  merge_props_state = function(owner, props) {
    switch(arguments.length) {
      case 1:
        return merge_props_state__1.call(this, owner);
      case 2:
        return merge_props_state__2.call(this, owner, props);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge_props_state.cljs$core$IFn$_invoke$arity$1 = merge_props_state__1;
  merge_props_state.cljs$core$IFn$_invoke$arity$2 = merge_props_state__2;
  return merge_props_state;
}();
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, 
"componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15385 = c;
    if (G__15385) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15385.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15385.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15385);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__15385);
    }
  }()) {
    var state_15412 = this$.state;
    var _STAR_read_enabled_STAR_15386_15413 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props}), function() {
        var or__3639__auto__ = state_15412["__om_prev_state"];
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return state_15412["__om_state"];
        }
      }());
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15386_15413;
    }
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15387 = c;
    if (G__15387) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15387.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15387.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15387);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__15387);
    }
  }()) {
    var _STAR_read_enabled_STAR_15388 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_unmount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15388;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15389 = c;
    if (G__15389) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15389.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__15389.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__15389);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__15389);
    }
  }()) {
    var _STAR_read_enabled_STAR_15390 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props}));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15390;
    }
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var _STAR_read_enabled_STAR_15391 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    var props = this$.props;
    var state = this$.state;
    var c = om.core.children.call(null, this$);
    om.core.merge_props_state.call(null, this$, next_props);
    if (function() {
      var G__15392 = c;
      if (G__15392) {
        var bit__4302__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3639__auto__ = bit__4302__auto__;
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return G__15392.om$core$IShouldUpdate$;
          }
        }())) {
          return true;
        } else {
          if (!G__15392.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__15392);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__15392);
      }
    }()) {
      return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } else {
      var cursor = props["__om_cursor"];
      var next_cursor = next_props["__om_cursor"];
      if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
        return true;
      } else {
        if (om.core.cursor_QMARK_.call(null, cursor) && om.core.cursor_QMARK_.call(null, next_cursor) && cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor))) {
          return true;
        } else {
          if (!(state["__om_pending_state"] == null)) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15391;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_read_enabled_STAR_15393 = om.core._STAR_read_enabled_STAR_;
  try {
    om.core._STAR_read_enabled_STAR_ = true;
    if (function() {
      var G__15394 = c;
      if (G__15394) {
        var bit__4302__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3639__auto__ = bit__4302__auto__;
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return G__15394.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__15394.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15394);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15394);
      }
    }()) {
      var _STAR_parent_STAR_15395 = om.core._STAR_parent_STAR_;
      var _STAR_state_STAR_15396 = om.core._STAR_state_STAR_;
      var _STAR_instrument_STAR_15397 = om.core._STAR_instrument_STAR_;
      try {
        om.core._STAR_parent_STAR_ = this$;
        om.core._STAR_state_STAR_ = props["__om_app_state"];
        om.core._STAR_instrument_STAR_ = props["__om_instrument"];
        return om.core.render.call(null, c);
      } finally {
        om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_15397;
        om.core._STAR_state_STAR_ = _STAR_state_STAR_15396;
        om.core._STAR_parent_STAR_ = _STAR_parent_STAR_15395;
      }
    } else {
      if (function() {
        var G__15398 = c;
        if (G__15398) {
          var bit__4302__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3639__auto__ = bit__4302__auto__;
            if (cljs.core.truth_(or__3639__auto__)) {
              return or__3639__auto__;
            } else {
              return G__15398.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__15398.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15398);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15398);
        }
      }()) {
        var _STAR_parent_STAR_15399 = om.core._STAR_parent_STAR_;
        var _STAR_state_STAR_15400 = om.core._STAR_state_STAR_;
        var _STAR_instrument_STAR_15401 = om.core._STAR_instrument_STAR_;
        try {
          om.core._STAR_parent_STAR_ = this$;
          om.core._STAR_state_STAR_ = props["__om_app_state"];
          om.core._STAR_instrument_STAR_ = props["__om_instrument"];
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } finally {
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_15401;
          om.core._STAR_state_STAR_ = _STAR_state_STAR_15400;
          om.core._STAR_parent_STAR_ = _STAR_parent_STAR_15399;
        }
      } else {
        return c;
      }
    }
  } finally {
    om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15393;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_15414 = om.core.children.call(null, this$);
  if (function() {
    var G__15402 = c_15414;
    if (G__15402) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15402.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__15402.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15402);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__15402);
    }
  }()) {
    var state_15415 = this$.state;
    var _STAR_read_enabled_STAR_15403_15416 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_update.call(null, c_15414, om.core.get_props.call(null, {"props":next_props}), om.core._get_state.call(null, this$));
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15403_15416;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__3639__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_state":cljs.core.merge.call(null, function() {
    var G__15404 = c;
    if (G__15404) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15404.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__15404.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15404);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__15404);
    }
  }() ? function() {
    var _STAR_read_enabled_STAR_15405 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.init_state.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15405;
    }
  }() : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693))), "__om_id":function() {
    var or__3639__auto__ = id;
    if (cljs.core.truth_(or__3639__auto__)) {
      return or__3639__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }()};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15406 = c;
    if (G__15406) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15406.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15406.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__15406);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__15406);
    }
  }()) {
    var _STAR_read_enabled_STAR_15407 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.did_mount.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15407;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__15408 = c;
    if (G__15408) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15408.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__15408.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__15408);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__15408);
    }
  }()) {
    var _STAR_read_enabled_STAR_15409 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      return om.core.display_name.call(null, c);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15409;
    }
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_15417 = om.core.children.call(null, this$);
  if (function() {
    var G__15410 = c_15417;
    if (G__15410) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15410.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__15410.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15410);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__15410);
    }
  }()) {
    var _STAR_read_enabled_STAR_15411_15418 = om.core._STAR_read_enabled_STAR_;
    try {
      om.core._STAR_read_enabled_STAR_ = true;
      om.core.will_mount.call(null, c_15417);
    } finally {
      om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15411_15418;
    }
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function specify_state_methods_BANG_(obj) {
  var x15422 = obj;
  x15422.om$core$IGetState$ = true;
  x15422.om$core$IGetState$_get_state$arity$1 = function(x15422) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__3639__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__3639__auto__)) {
        return or__3639__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x15422);
  x15422.om$core$IGetState$_get_state$arity$2 = function(x15422) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x15422);
  x15422.om$core$IGetRenderState$ = true;
  x15422.om$core$IGetRenderState$_get_render_state$arity$1 = function(x15422) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x15422);
  x15422.om$core$IGetRenderState$_get_render_state$arity$2 = function(x15422) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x15422);
  x15422.om$core$ISetState$ = true;
  x15422.om$core$ISetState$_set_state_BANG_$arity$3 = function(x15422) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_15423 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var app_state = props["__om_app_state"];
        this$__$1.state["__om_pending_state"] = val;
        if (cljs.core.truth_(function() {
          var and__3627__auto__ = !(app_state == null);
          if (and__3627__auto__) {
            return render;
          } else {
            return and__3627__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15423;
      }
    };
  }(x15422);
  x15422.om$core$ISetState$_set_state_BANG_$arity$4 = function(x15422) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var _STAR_read_enabled_STAR_15424 = om.core._STAR_read_enabled_STAR_;
      try {
        om.core._STAR_read_enabled_STAR_ = true;
        var props = this$__$1.props;
        var state = this$__$1.state;
        var pstate = om.core._get_state.call(null, this$__$1);
        var app_state = props["__om_app_state"];
        state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
        if (cljs.core.truth_(function() {
          var and__3627__auto__ = !(app_state == null);
          if (and__3627__auto__) {
            return render;
          } else {
            return and__3627__auto__;
          }
        }())) {
          return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
        } else {
          return null;
        }
      } finally {
        om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15424;
      }
    };
  }(x15422);
  return x15422;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2162591503;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "om.core/MapCursor");
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    var v = cljs.core._lookup.call(null, self__.value, k, not_found);
    if (!cljs.core._EQ_.call(null, v, not_found)) {
      return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(p__15426) {
          var vec__15427 = p__15426;
          var k = cljs.core.nth.call(null, vec__15427, 0, null);
          var v = cljs.core.nth.call(null, vec__15427, 1, null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
        };
      }(this$__$1), self__.value);
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.MapCursor.prototype.call = function() {
  var G__15428 = null;
  var G__15428__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15428__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15428 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15428__2.call(this, self__, k);
      case 3:
        return G__15428__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15428.cljs$core$IFn$_invoke$arity$2 = G__15428__2;
  G__15428.cljs$core$IFn$_invoke$arity$3 = G__15428__3;
  return G__15428;
}();
om.core.MapCursor.prototype.apply = function(self__, args15425) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15425)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_MapCursor = function __GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2179375903;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
  return cljs.core._write.call(null, writer__4216__auto__, "om.core/IndexedCursor");
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, null);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._nth.call(null, this$__$1, n, not_found);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (n < cljs.core._count.call(null, self__.value)) {
      return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
    } else {
      return not_found;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._pr_writer.call(null, self__.value, writer, opts);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.meta.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._count.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core.hash.call(null, self__.value);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (om.core.cursor_QMARK_.call(null, other)) {
      return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
    } else {
      return cljs.core._EQ_.call(null, self__.value, other);
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    if (cljs.core.count.call(null, self__.value) > 0) {
      return cljs.core.map.call(null, function(this$__$1) {
        return function(v, i) {
          return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
        };
      }(this$__$1), self__.value, cljs.core.range.call(null));
    } else {
      return null;
    }
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  if (om.core._STAR_read_enabled_STAR_) {
    return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
  } else {
    throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
  }
};
om.core.IndexedCursor.prototype.call = function() {
  var G__15430 = null;
  var G__15430__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__15430__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__15430 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__15430__2.call(this, self__, k);
      case 3:
        return G__15430__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15430.cljs$core$IFn$_invoke$arity$2 = G__15430__2;
  G__15430.cljs$core$IFn$_invoke$arity$3 = G__15430__3;
  return G__15430;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args15429) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args15429)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$2(null, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (!om.core._STAR_read_enabled_STAR_) {
    return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path);
  } else {
    throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
  }
};
om.core.__GT_IndexedCursor = function __GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function to_cursor_STAR_(val, state, path) {
  var x15432 = cljs.core.clone.call(null, val);
  x15432.cljs$core$IEquiv$ = true;
  x15432.cljs$core$IEquiv$_equiv$arity$2 = function(x15432) {
    return function(_, other) {
      var ___$1 = this;
      if (om.core._STAR_read_enabled_STAR_) {
        if (om.core.cursor_QMARK_.call(null, other)) {
          return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
        } else {
          return cljs.core._EQ_.call(null, val, other);
        }
      } else {
        throw new Error("Cannot manipulate cursor outside of render phase, only om.core/transact!, om.core/update!, and cljs.core/deref operations allowed");
      }
    };
  }(x15432);
  x15432.om$core$ITransact$ = true;
  x15432.om$core$ITransact$_transact_BANG_$arity$4 = function(x15432) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x15432);
  x15432.om$core$ICursor$ = true;
  x15432.om$core$ICursor$_path$arity$1 = function(x15432) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x15432);
  x15432.om$core$ICursor$_state$arity$1 = function(x15432) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x15432);
  x15432.cljs$core$IDeref$ = true;
  x15432.cljs$core$IDeref$_deref$arity$1 = function(x15432) {
    return function(this$) {
      var this$__$1 = this;
      if (!om.core._STAR_read_enabled_STAR_) {
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path);
      } else {
        throw new Error("Cannot deref cursor during render phase: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1));
      }
    };
  }(x15432);
  return x15432;
};
om.core.to_cursor = function() {
  var to_cursor = null;
  var to_cursor__1 = function(val) {
    return to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__2 = function(val, state) {
    return to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
  };
  var to_cursor__3 = function(val, state, path) {
    if (om.core.cursor_QMARK_.call(null, val)) {
      return val;
    } else {
      if (function() {
        var G__15435 = val;
        if (G__15435) {
          var bit__4302__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__3639__auto__ = bit__4302__auto__;
            if (cljs.core.truth_(or__3639__auto__)) {
              return or__3639__auto__;
            } else {
              return G__15435.om$core$IToCursor$;
            }
          }())) {
            return true;
          } else {
            if (!G__15435.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__15435);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__15435);
        }
      }()) {
        return om.core._to_cursor.call(null, val, state, path);
      } else {
        if (cljs.core.indexed_QMARK_.call(null, val)) {
          return new om.core.IndexedCursor(val, state, path);
        } else {
          if (cljs.core.map_QMARK_.call(null, val)) {
            return new om.core.MapCursor(val, state, path);
          } else {
            if (function() {
              var G__15436 = val;
              if (G__15436) {
                var bit__4302__auto__ = G__15436.cljs$lang$protocol_mask$partition1$ & 8192;
                if (bit__4302__auto__ || G__15436.cljs$core$ICloneable$) {
                  return true;
                } else {
                  if (!G__15436.cljs$lang$protocol_mask$partition1$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15436);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__15436);
              }
            }()) {
              return om.core.to_cursor_STAR_.call(null, val, state, path);
            } else {
              return val;
            }
          }
        }
      }
    }
  };
  to_cursor = function(val, state, path) {
    switch(arguments.length) {
      case 1:
        return to_cursor__1.call(this, val);
      case 2:
        return to_cursor__2.call(this, val, state);
      case 3:
        return to_cursor__3.call(this, val, state, path);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  to_cursor.cljs$core$IFn$_invoke$arity$1 = to_cursor__1;
  to_cursor.cljs$core$IFn$_invoke$arity$2 = to_cursor__2;
  to_cursor.cljs$core$IFn$_invoke$arity$3 = to_cursor__3;
  return to_cursor;
}();
om.core.notify_STAR_ = function notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.render_all = function render_all() {
  om.core.refresh_queued = false;
  var seq__15441 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__15442 = null;
  var count__15443 = 0;
  var i__15444 = 0;
  while (true) {
    if (i__15444 < count__15443) {
      var f = cljs.core._nth.call(null, chunk__15442, i__15444);
      f.call(null);
      var G__15445 = seq__15441;
      var G__15446 = chunk__15442;
      var G__15447 = count__15443;
      var G__15448 = i__15444 + 1;
      seq__15441 = G__15445;
      chunk__15442 = G__15446;
      count__15443 = G__15447;
      i__15444 = G__15448;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__15441);
      if (temp__4126__auto__) {
        var seq__15441__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15441__$1)) {
          var c__4408__auto__ = cljs.core.chunk_first.call(null, seq__15441__$1);
          var G__15449 = cljs.core.chunk_rest.call(null, seq__15441__$1);
          var G__15450 = c__4408__auto__;
          var G__15451 = cljs.core.count.call(null, c__4408__auto__);
          var G__15452 = 0;
          seq__15441 = G__15449;
          chunk__15442 = G__15450;
          count__15443 = G__15451;
          i__15444 = G__15452;
          continue;
        } else {
          var f = cljs.core.first.call(null, seq__15441__$1);
          f.call(null);
          var G__15453 = cljs.core.next.call(null, seq__15441__$1);
          var G__15454 = null;
          var G__15455 = 0;
          var G__15456 = 0;
          seq__15441 = G__15453;
          chunk__15442 = G__15454;
          count__15443 = G__15455;
          i__15444 = G__15456;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function valid_component_QMARK_(x, f) {
  if (function() {
    var or__3639__auto__ = function() {
      var G__15461 = x;
      if (G__15461) {
        var bit__4302__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3639__auto__ = bit__4302__auto__;
          if (cljs.core.truth_(or__3639__auto__)) {
            return or__3639__auto__;
          } else {
            return G__15461.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__15461.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15461);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__15461);
      }
    }();
    if (or__3639__auto__) {
      return or__3639__auto__;
    } else {
      var G__15462 = x;
      if (G__15462) {
        var bit__4302__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3639__auto____$1 = bit__4302__auto__;
          if (cljs.core.truth_(or__3639__auto____$1)) {
            return or__3639__auto____$1;
          } else {
            return G__15462.om$core$IRenderState$;
          }
        }())) {
          return true;
        } else {
          if (!G__15462.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15462);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__15462);
      }
    }
  }()) {
    return null;
  } else {
    throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1("Invalid Om component fn, " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(f.name) + " does not return valid instance") + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))));
  }
};
om.core.valid_QMARK_ = function valid_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function() {
  var get_descriptor = null;
  var get_descriptor__1 = function(f) {
    return get_descriptor.call(null, f, null);
  };
  var get_descriptor__2 = function(f, descriptor) {
    if (f["om$descriptor"] == null) {
      f["om$descriptor"] = React.createClass(function() {
        var or__3639__auto__ = descriptor;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return om.core.pure_descriptor;
        }
      }());
    } else {
    }
    return f["om$descriptor"];
  };
  get_descriptor = function(f, descriptor) {
    switch(arguments.length) {
      case 1:
        return get_descriptor__1.call(this, f);
      case 2:
        return get_descriptor__2.call(this, f, descriptor);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_descriptor.cljs$core$IFn$_invoke$arity$1 = get_descriptor__1;
  get_descriptor.cljs$core$IFn$_invoke$arity$2 = get_descriptor__2;
  return get_descriptor;
}();
om.core.build_STAR_ = function() {
  var build_STAR_ = null;
  var build_STAR___2 = function(f, cursor) {
    return build_STAR_.call(null, f, cursor, null);
  };
  var build_STAR___3 = function(f, cursor, m) {
    if (om.core.valid_QMARK_.call(null, m)) {
    } else {
      throw new Error("Assert failed: " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))) + "\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid?", "valid?", 1428119148, null), new cljs.core.Symbol(null, 
      "m", "m", -1021758608, null)))));
    }
    if (m == null) {
      var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      var ctor = om.core.get_descriptor.call(null, f);
      return ctor.call(null, {"children":function(shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_15467 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15467;
          }
        };
      }(shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_shared":shared, "__om_cursor":cursor});
    } else {
      var map__15468 = m;
      var map__15468__$1 = cljs.core.seq_QMARK_.call(null, map__15468) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15468) : map__15468;
      var opts = cljs.core.get.call(null, map__15468__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
      var init_state = cljs.core.get.call(null, map__15468__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
      var state = cljs.core.get.call(null, map__15468__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
      var key = cljs.core.get.call(null, map__15468__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
      var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
      var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
        var temp__4124__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var i = temp__4124__auto__;
          return dataf.call(null, cursor, i);
        } else {
          return dataf.call(null, cursor);
        }
      }() : cursor;
      var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
      var shared = function() {
        var or__3639__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
        }
      }();
      var ctor = om.core.get_descriptor.call(null, f, (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
      return ctor.call(null, {"__om_shared":shared, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_cursor":cursor_SINGLEQUOTE_, "__om_app_state":om.core._STAR_state_STAR_, "key":rkey, "__om_init_state":init_state, "children":opts == null ? function(map__15468, map__15468__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_15469 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15469;
          }
        };
      }(map__15468, map__15468__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__15468, map__15468__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
        return function(this$) {
          var _STAR_read_enabled_STAR_15470 = om.core._STAR_read_enabled_STAR_;
          try {
            om.core._STAR_read_enabled_STAR_ = true;
            var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
            om.core.valid_component_QMARK_.call(null, ret, f);
            return ret;
          } finally {
            om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15470;
          }
        };
      }(map__15468, map__15468__$1, opts, init_state, state, key, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_instrument":om.core._STAR_instrument_STAR_, "__om_state":state});
    }
  };
  build_STAR_ = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build_STAR___2.call(this, f, cursor);
      case 3:
        return build_STAR___3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_STAR_.cljs$core$IFn$_invoke$arity$2 = build_STAR___2;
  build_STAR_.cljs$core$IFn$_invoke$arity$3 = build_STAR___3;
  return build_STAR_;
}();
om.core.build = function() {
  var build = null;
  var build__2 = function(f, cursor) {
    return build.call(null, f, cursor, null);
  };
  var build__3 = function(f, cursor, m) {
    if (!(om.core._STAR_instrument_STAR_ == null)) {
      var ret = function() {
        var _STAR_read_enabled_STAR_15472 = om.core._STAR_read_enabled_STAR_;
        try {
          om.core._STAR_read_enabled_STAR_ = true;
          return om.core._STAR_instrument_STAR_.call(null, f, cursor, m);
        } finally {
          om.core._STAR_read_enabled_STAR_ = _STAR_read_enabled_STAR_15472;
        }
      }();
      if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
        return om.core.build_STAR_.call(null, f, cursor, m);
      } else {
        return ret;
      }
    } else {
      return om.core.build_STAR_.call(null, f, cursor, m);
    }
  };
  build = function(f, cursor, m) {
    switch(arguments.length) {
      case 2:
        return build__2.call(this, f, cursor);
      case 3:
        return build__3.call(this, f, cursor, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build.cljs$core$IFn$_invoke$arity$2 = build__2;
  build.cljs$core$IFn$_invoke$arity$3 = build__3;
  return build;
}();
om.core.build_all = function() {
  var build_all = null;
  var build_all__2 = function(f, xs) {
    return build_all.call(null, f, xs, null);
  };
  var build_all__3 = function(f, xs, m) {
    return cljs.core.map.call(null, function(x, i) {
      return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
    }, xs, cljs.core.range.call(null));
  };
  build_all = function(f, xs, m) {
    switch(arguments.length) {
      case 2:
        return build_all__2.call(this, f, xs);
      case 3:
        return build_all__3.call(this, f, xs, m);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  build_all.cljs$core$IFn$_invoke$arity$2 = build_all__2;
  build_all.cljs$core$IFn$_invoke$arity$3 = build_all__3;
  return build_all;
}();
om.core.setup = function setup(state, key, tx_listen) {
  if (function() {
    var G__15481 = state;
    if (G__15481) {
      var bit__4302__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3639__auto__ = bit__4302__auto__;
        if (cljs.core.truth_(or__3639__auto__)) {
          return or__3639__auto__;
        } else {
          return G__15481.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__15481.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__15481);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__15481);
    }
  }()) {
  } else {
    var listeners_15489 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_15490 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x15482_15491 = state;
    x15482_15491.om$core$IRenderQueue$ = true;
    x15482_15491.om$core$IRenderQueue$_get_queue$arity$1 = function(x15482_15491, listeners_15489, render_queue_15490) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_15490);
      };
    }(x15482_15491, listeners_15489, render_queue_15490);
    x15482_15491.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x15482_15491, listeners_15489, render_queue_15490) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_15490), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_15490, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x15482_15491, listeners_15489, render_queue_15490);
    x15482_15491.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x15482_15491, listeners_15489, render_queue_15490) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_15490, cljs.core.empty);
      };
    }(x15482_15491, listeners_15489, render_queue_15490);
    x15482_15491.om$core$INotify$ = true;
    x15482_15491.om$core$INotify$_listen_BANG_$arity$3 = function(x15482_15491, listeners_15489, render_queue_15490) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_15489, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x15482_15491, listeners_15489, render_queue_15490);
    x15482_15491.om$core$INotify$_unlisten_BANG_$arity$2 = function(x15482_15491, listeners_15489, render_queue_15490) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_15489, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x15482_15491, listeners_15489, render_queue_15490);
    x15482_15491.om$core$INotify$_notify_BANG_$arity$3 = function(x15482_15491, listeners_15489, render_queue_15490) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__15483_15492 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_15489));
        var chunk__15484_15493 = null;
        var count__15485_15494 = 0;
        var i__15486_15495 = 0;
        while (true) {
          if (i__15486_15495 < count__15485_15494) {
            var vec__15487_15496 = cljs.core._nth.call(null, chunk__15484_15493, i__15486_15495);
            var __15497 = cljs.core.nth.call(null, vec__15487_15496, 0, null);
            var f_15498 = cljs.core.nth.call(null, vec__15487_15496, 1, null);
            f_15498.call(null, tx_data, root_cursor);
            var G__15499 = seq__15483_15492;
            var G__15500 = chunk__15484_15493;
            var G__15501 = count__15485_15494;
            var G__15502 = i__15486_15495 + 1;
            seq__15483_15492 = G__15499;
            chunk__15484_15493 = G__15500;
            count__15485_15494 = G__15501;
            i__15486_15495 = G__15502;
            continue;
          } else {
            var temp__4126__auto___15503 = cljs.core.seq.call(null, seq__15483_15492);
            if (temp__4126__auto___15503) {
              var seq__15483_15504__$1 = temp__4126__auto___15503;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__15483_15504__$1)) {
                var c__4408__auto___15505 = cljs.core.chunk_first.call(null, seq__15483_15504__$1);
                var G__15506 = cljs.core.chunk_rest.call(null, seq__15483_15504__$1);
                var G__15507 = c__4408__auto___15505;
                var G__15508 = cljs.core.count.call(null, c__4408__auto___15505);
                var G__15509 = 0;
                seq__15483_15492 = G__15506;
                chunk__15484_15493 = G__15507;
                count__15485_15494 = G__15508;
                i__15486_15495 = G__15509;
                continue;
              } else {
                var vec__15488_15510 = cljs.core.first.call(null, seq__15483_15504__$1);
                var __15511 = cljs.core.nth.call(null, vec__15488_15510, 0, null);
                var f_15512 = cljs.core.nth.call(null, vec__15488_15510, 1, null);
                f_15512.call(null, tx_data, root_cursor);
                var G__15513 = cljs.core.next.call(null, seq__15483_15504__$1);
                var G__15514 = null;
                var G__15515 = 0;
                var G__15516 = 0;
                seq__15483_15492 = G__15513;
                chunk__15484_15493 = G__15514;
                count__15485_15494 = G__15515;
                i__15486_15495 = G__15516;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x15482_15491, listeners_15489, render_queue_15490);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.root = function root(f, value, p__15517) {
  var map__15532 = p__15517;
  var map__15532__$1 = cljs.core.seq_QMARK_.call(null, map__15532) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15532) : map__15532;
  var options = map__15532__$1;
  var instrument = cljs.core.get.call(null, map__15532__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var path = cljs.core.get.call(null, map__15532__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var tx_listen = cljs.core.get.call(null, map__15532__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var target = cljs.core.get.call(null, map__15532__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  if (!(target == null)) {
  } else {
    throw new Error("Assert failed: No target specified to om.core/root\n" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))));
  }
  var roots_SINGLEQUOTE__15546 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__15546, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__15546, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__15533 = value;
    if (G__15533) {
      var bit__4302__auto__ = G__15533.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4302__auto__ || G__15533.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__15533.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__15533);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__15533);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168));
  var rootf = function(watch_key, state, state__$1, m, map__15532, map__15532__$1, options, instrument, path, tx_listen, target) {
    return function rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path);
      om.dom.render.call(null, function() {
        var _STAR_instrument_STAR_15540 = om.core._STAR_instrument_STAR_;
        var _STAR_state_STAR_15541 = om.core._STAR_state_STAR_;
        try {
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          return om.core.build.call(null, f, cursor, m);
        } finally {
          om.core._STAR_state_STAR_ = _STAR_state_STAR_15541;
          om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_15540;
        }
      }(), target);
      var queue = om.core._get_queue.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue)) {
        return null;
      } else {
        var seq__15542_15547 = cljs.core.seq.call(null, queue);
        var chunk__15543_15548 = null;
        var count__15544_15549 = 0;
        var i__15545_15550 = 0;
        while (true) {
          if (i__15545_15550 < count__15544_15549) {
            var c_15551 = cljs.core._nth.call(null, chunk__15543_15548, i__15545_15550);
            if (cljs.core.truth_(c_15551.isMounted())) {
              c_15551.forceUpdate();
            } else {
            }
            var G__15552 = seq__15542_15547;
            var G__15553 = chunk__15543_15548;
            var G__15554 = count__15544_15549;
            var G__15555 = i__15545_15550 + 1;
            seq__15542_15547 = G__15552;
            chunk__15543_15548 = G__15553;
            count__15544_15549 = G__15554;
            i__15545_15550 = G__15555;
            continue;
          } else {
            var temp__4126__auto___15556 = cljs.core.seq.call(null, seq__15542_15547);
            if (temp__4126__auto___15556) {
              var seq__15542_15557__$1 = temp__4126__auto___15556;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__15542_15557__$1)) {
                var c__4408__auto___15558 = cljs.core.chunk_first.call(null, seq__15542_15557__$1);
                var G__15559 = cljs.core.chunk_rest.call(null, seq__15542_15557__$1);
                var G__15560 = c__4408__auto___15558;
                var G__15561 = cljs.core.count.call(null, c__4408__auto___15558);
                var G__15562 = 0;
                seq__15542_15547 = G__15559;
                chunk__15543_15548 = G__15560;
                count__15544_15549 = G__15561;
                i__15545_15550 = G__15562;
                continue;
              } else {
                var c_15563 = cljs.core.first.call(null, seq__15542_15557__$1);
                if (cljs.core.truth_(c_15563.isMounted())) {
                  c_15563.forceUpdate();
                } else {
                }
                var G__15564 = cljs.core.next.call(null, seq__15542_15557__$1);
                var G__15565 = null;
                var G__15566 = 0;
                var G__15567 = 0;
                seq__15542_15547 = G__15564;
                chunk__15543_15548 = G__15565;
                count__15544_15549 = G__15566;
                i__15545_15550 = G__15567;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return om.core._empty_queue_BANG_.call(null, state__$1);
      }
    };
  }(watch_key, state, state__$1, m, map__15532, map__15532__$1, options, instrument, path, tx_listen, target);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, m, rootf, map__15532, map__15532__$1, options, instrument, path, tx_listen, target) {
    return function(_, ___$1, ___$2, ___$3) {
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (typeof requestAnimationFrame !== "undefined") {
          return requestAnimationFrame(om.core.render_all);
        } else {
          return setTimeout(om.core.render_all, 16);
        }
      }
    };
  }(watch_key, state, state__$1, m, rootf, map__15532, map__15532__$1, options, instrument, path, tx_listen, target));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, m, rootf, map__15532, map__15532__$1, options, instrument, path, tx_listen, target) {
    return function() {
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, m, rootf, map__15532, map__15532__$1, options, instrument, path, tx_listen, target));
  return rootf.call(null);
};
om.core.detach_root = function detach_root(target) {
  var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4126__auto__)) {
    var f = temp__4126__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transact_BANG_ = function() {
  var transact_BANG_ = null;
  var transact_BANG___2 = function(cursor, f) {
    return transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
  };
  var transact_BANG___3 = function(cursor, korks, f) {
    return transact_BANG_.call(null, cursor, korks, f, null);
  };
  var transact_BANG___4 = function(cursor, korks, f, tag) {
    var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
  };
  transact_BANG_ = function(cursor, korks, f, tag) {
    switch(arguments.length) {
      case 2:
        return transact_BANG___2.call(this, cursor, korks);
      case 3:
        return transact_BANG___3.call(this, cursor, korks, f);
      case 4:
        return transact_BANG___4.call(this, cursor, korks, f, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transact_BANG_.cljs$core$IFn$_invoke$arity$2 = transact_BANG___2;
  transact_BANG_.cljs$core$IFn$_invoke$arity$3 = transact_BANG___3;
  transact_BANG_.cljs$core$IFn$_invoke$arity$4 = transact_BANG___4;
  return transact_BANG_;
}();
om.core.update_BANG_ = function() {
  var update_BANG_ = null;
  var update_BANG___2 = function(cursor, v) {
    return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
      return v;
    }, null);
  };
  var update_BANG___3 = function(cursor, korks, v) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, null);
  };
  var update_BANG___4 = function(cursor, korks, v, tag) {
    return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
      return v;
    }, tag);
  };
  update_BANG_ = function(cursor, korks, v, tag) {
    switch(arguments.length) {
      case 2:
        return update_BANG___2.call(this, cursor, korks);
      case 3:
        return update_BANG___3.call(this, cursor, korks, v);
      case 4:
        return update_BANG___4.call(this, cursor, korks, v, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_BANG_.cljs$core$IFn$_invoke$arity$2 = update_BANG___2;
  update_BANG_.cljs$core$IFn$_invoke$arity$3 = update_BANG___3;
  update_BANG_.cljs$core$IFn$_invoke$arity$4 = update_BANG___4;
  return update_BANG_;
}();
om.core.get_node = function() {
  var get_node = null;
  var get_node__1 = function(owner) {
    return owner.getDOMNode();
  };
  var get_node__2 = function(owner, name) {
    var temp__4126__auto__ = owner.refs;
    if (cljs.core.truth_(temp__4126__auto__)) {
      var refs = temp__4126__auto__;
      return refs[name].getDOMNode();
    } else {
      return null;
    }
  };
  get_node = function(owner, name) {
    switch(arguments.length) {
      case 1:
        return get_node__1.call(this, owner);
      case 2:
        return get_node__2.call(this, owner, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_node.cljs$core$IFn$_invoke$arity$1 = get_node__1;
  get_node.cljs$core$IFn$_invoke$arity$2 = get_node__2;
  return get_node;
}();
om.core.set_state_BANG_ = function() {
  var set_state_BANG_ = null;
  var set_state_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, true);
  };
  var set_state_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, true);
  };
  set_state_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_BANG___2;
  set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_BANG___3;
  return set_state_BANG_;
}();
om.core.set_state_nr_BANG_ = function() {
  var set_state_nr_BANG_ = null;
  var set_state_nr_BANG___2 = function(owner, v) {
    return om.core._set_state_BANG_.call(null, owner, v, false);
  };
  var set_state_nr_BANG___3 = function(owner, korks, v) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._set_state_BANG_.call(null, owner, ks, v, false);
  };
  set_state_nr_BANG_ = function(owner, korks, v) {
    switch(arguments.length) {
      case 2:
        return set_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return set_state_nr_BANG___3.call(this, owner, korks, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_state_nr_BANG___2;
  set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_state_nr_BANG___3;
  return set_state_nr_BANG_;
}();
om.core.update_state_BANG_ = function() {
  var update_state_BANG_ = null;
  var update_state_BANG___2 = function(owner, f) {
    return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_BANG___2;
  update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_BANG___3;
  return update_state_BANG_;
}();
om.core.update_state_nr_BANG_ = function() {
  var update_state_nr_BANG_ = null;
  var update_state_nr_BANG___2 = function(owner, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
  };
  var update_state_nr_BANG___3 = function(owner, korks, f) {
    return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
  };
  update_state_nr_BANG_ = function(owner, korks, f) {
    switch(arguments.length) {
      case 2:
        return update_state_nr_BANG___2.call(this, owner, korks);
      case 3:
        return update_state_nr_BANG___3.call(this, owner, korks, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = update_state_nr_BANG___2;
  update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = update_state_nr_BANG___3;
  return update_state_nr_BANG_;
}();
om.core.refresh_BANG_ = function refresh_BANG_(owner) {
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function() {
  var get_render_state = null;
  var get_render_state__1 = function(owner) {
    return om.core._get_render_state.call(null, owner);
  };
  var get_render_state__2 = function(owner, korks) {
    var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
    return om.core._get_render_state.call(null, owner, ks);
  };
  get_render_state = function(owner, korks) {
    switch(arguments.length) {
      case 1:
        return get_render_state__1.call(this, owner);
      case 2:
        return get_render_state__2.call(this, owner, korks);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_render_state.cljs$core$IFn$_invoke$arity$1 = get_render_state__1;
  get_render_state.cljs$core$IFn$_invoke$arity$2 = get_render_state__2;
  return get_render_state;
}();
om.core.rendering_QMARK_ = function rendering_QMARK_() {
  return om.core._STAR_read_enabled_STAR_ === true;
};
goog.provide("sailing_study_guide.core");
goog.require("cljs.core");
goog.require("sailing_study_guide.quiz");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("om.dom");
goog.require("om.dom");
goog.require("sailing_study_guide.quiz");
goog.require("cljs.core.async");
goog.require("clairvoyant.core");
goog.require("sailing_study_guide.dispatch");
goog.require("clairvoyant.core");
goog.require("sailing_study_guide.dispatch");
goog.require("om.core");
goog.require("om.core");
goog.require("clojure.string");
cljs.core.enable_console_print_BANG_.call(null);
cljs.core._STAR_print_meta_STAR_ = true;
sailing_study_guide.core.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "current-section", "current-section", 1519906460), 0, new cljs.core.Keyword(null, "current-question", "current-question", -749753188), 0, new cljs.core.Keyword(null, "quiz", "quiz", 829625914), sailing_study_guide.quiz.default_quiz], null));
sailing_study_guide.core.cljs_type__GT_str = function cljs_type__GT_str(x) {
  var temp__4124__auto__ = x.constructor;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var ctor = temp__4124__auto__;
    return cljs.core.type__GT_str.call(null, ctor);
  } else {
    return cljs.core.type__GT_str.call(null, x);
  }
};
sailing_study_guide.core.current_section = function current_section(app_state) {
  var current_section__$1 = (new cljs.core.Keyword(null, "current-section", "current-section", 1519906460)).cljs$core$IFn$_invoke$arity$1(app_state);
  return cljs.core.get_in.call(null, app_state, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "quiz", "quiz", 829625914), new cljs.core.Keyword(null, "sections", "sections", -886710106), current_section__$1], null));
};
sailing_study_guide.core.current_question = function current_question(app_state) {
  var current_question__$1 = (new cljs.core.Keyword(null, "current-section", "current-section", 1519906460)).cljs$core$IFn$_invoke$arity$1(app_state);
  return cljs.core.get_in.call(null, sailing_study_guide.core.current_section.call(null, app_state), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "questions", "questions", 1226225380), current_question__$1], null));
};
sailing_study_guide.core.question_answered = function question_answered() {
  console.log("Chose correctly");
  var num_questions = cljs.core.count.call(null, (new cljs.core.Keyword(null, "questions", "questions", 1226225380)).cljs$core$IFn$_invoke$arity$1(sailing_study_guide.core.current_section.call(null, cljs.core.deref.call(null, sailing_study_guide.core.app_state))));
  return cljs.core.swap_BANG_.call(null, sailing_study_guide.core.app_state, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "current-question", "current-question", -749753188)], null), cljs.core.inc);
};
sailing_study_guide.core.answer_css_class = function answer_css_class(status, correct) {
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unchosen", "unchosen", -205763213), status)) {
    return "answer-default";
  } else {
    if (cljs.core.truth_(correct)) {
      return "answer-correct success";
    } else {
      return "answer-incorrect alert";
    }
  }
};
sailing_study_guide.core.answer_css_class.call(null, new cljs.core.Keyword(null, "unchosen", "unchosen", -205763213), false);
sailing_study_guide.core.answer_css_class.call(null, new cljs.core.Keyword(null, "chosen", "chosen", -1422409985), false);
sailing_study_guide.core.answer_css_class.call(null, new cljs.core.Keyword(null, "chosen", "chosen", -1422409985), true);
sailing_study_guide.core.answer_view = function answer_view(answer, owner) {
  if (typeof sailing_study_guide.core.t10436 !== "undefined") {
  } else {
    sailing_study_guide.core.t10436 = function(owner, answer, answer_view, meta10437) {
      this.owner = owner;
      this.answer = answer;
      this.answer_view = answer_view;
      this.meta10437 = meta10437;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10436.cljs$lang$type = true;
    sailing_study_guide.core.t10436.cljs$lang$ctorStr = "sailing-study-guide.core/t10436";
    sailing_study_guide.core.t10436.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10436");
    };
    sailing_study_guide.core.t10436.prototype.om$core$IRenderState$ = true;
    sailing_study_guide.core.t10436.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__10439) {
      var self__ = this;
      var map__10440 = p__10439;
      var map__10440__$1 = cljs.core.seq_QMARK_.call(null, map__10440) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10440) : map__10440;
      var status = cljs.core.get.call(null, map__10440__$1, new cljs.core.Keyword(null, "status", "status", -1997798413));
      var answer_chan = cljs.core.get.call(null, map__10440__$1, new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176));
      var ___$1 = this;
      return React.DOM.div({"className":"answer-container"}, React.DOM.button({"className":"answer " + cljs.core.str.cljs$core$IFn$_invoke$arity$1(sailing_study_guide.core.answer_css_class.call(null, status, (new cljs.core.Keyword(null, "correct", "correct", 984806334)).cljs$core$IFn$_invoke$arity$1(self__.answer))), "onClick":function(___$1, map__10440, map__10440__$1, status, answer_chan) {
        return function(e) {
          return sailing_study_guide.dispatch.dispatch_BANG_.call(null, new cljs.core.Keyword(null, "answer-chosen", "answer-chosen", -703375083), self__.answer);
        };
      }(___$1, map__10440, map__10440__$1, status, answer_chan)}, (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(self__.answer)));
    };
    sailing_study_guide.core.t10436.prototype.om$core$IInitState$ = true;
    sailing_study_guide.core.t10436.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "status", "status", -1997798413), new cljs.core.Keyword(null, "unchosen", "unchosen", -205763213)], null);
    };
    sailing_study_guide.core.t10436.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10438) {
      var self__ = this;
      var _10438__$1 = this;
      return self__.meta10437;
    };
    sailing_study_guide.core.t10436.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10438, meta10437__$1) {
      var self__ = this;
      var _10438__$1 = this;
      return new sailing_study_guide.core.t10436(self__.owner, self__.answer, self__.answer_view, meta10437__$1);
    };
    sailing_study_guide.core.__GT_t10436 = function __GT_t10436(owner__$1, answer__$1, answer_view__$1, meta10437) {
      return new sailing_study_guide.core.t10436(owner__$1, answer__$1, answer_view__$1, meta10437);
    };
  }
  return new sailing_study_guide.core.t10436(owner, answer, answer_view, null);
};
sailing_study_guide.core.answer_section_view = function answer_section_view(answers, owner) {
  if (typeof sailing_study_guide.core.t10446 !== "undefined") {
  } else {
    sailing_study_guide.core.t10446 = function(owner, answers, answer_section_view, meta10447) {
      this.owner = owner;
      this.answers = answers;
      this.answer_section_view = answer_section_view;
      this.meta10447 = meta10447;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10446.cljs$lang$type = true;
    sailing_study_guide.core.t10446.cljs$lang$ctorStr = "sailing-study-guide.core/t10446";
    sailing_study_guide.core.t10446.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10446");
    };
    sailing_study_guide.core.t10446.prototype.om$core$IRenderState$ = true;
    sailing_study_guide.core.t10446.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__10449) {
      var self__ = this;
      var map__10450 = p__10449;
      var map__10450__$1 = cljs.core.seq_QMARK_.call(null, map__10450) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10450) : map__10450;
      var answer_chan = cljs.core.get.call(null, map__10450__$1, new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176));
      var ___$1 = this;
      return cljs.core.apply.call(null, om.dom.div, {"className":"answer-section"}, om.core.build_all.call(null, sailing_study_guide.core.answer_view, self__.answers, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176), answer_chan], null)], null)));
    };
    sailing_study_guide.core.t10446.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10448) {
      var self__ = this;
      var _10448__$1 = this;
      return self__.meta10447;
    };
    sailing_study_guide.core.t10446.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10448, meta10447__$1) {
      var self__ = this;
      var _10448__$1 = this;
      return new sailing_study_guide.core.t10446(self__.owner, self__.answers, self__.answer_section_view, meta10447__$1);
    };
    sailing_study_guide.core.__GT_t10446 = function __GT_t10446(owner__$1, answers__$1, answer_section_view__$1, meta10447) {
      return new sailing_study_guide.core.t10446(owner__$1, answers__$1, answer_section_view__$1, meta10447);
    };
  }
  return new sailing_study_guide.core.t10446(owner, answers, answer_section_view, null);
};
sailing_study_guide.core.question_view = function question_view(quiz_question, owner) {
  if (typeof sailing_study_guide.core.t10456 !== "undefined") {
  } else {
    sailing_study_guide.core.t10456 = function(owner, quiz_question, question_view, meta10457) {
      this.owner = owner;
      this.quiz_question = quiz_question;
      this.question_view = question_view;
      this.meta10457 = meta10457;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10456.cljs$lang$type = true;
    sailing_study_guide.core.t10456.cljs$lang$ctorStr = "sailing-study-guide.core/t10456";
    sailing_study_guide.core.t10456.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10456");
    };
    sailing_study_guide.core.t10456.prototype.om$core$IRenderState$ = true;
    sailing_study_guide.core.t10456.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__10459) {
      var self__ = this;
      var map__10460 = p__10459;
      var map__10460__$1 = cljs.core.seq_QMARK_.call(null, map__10460) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10460) : map__10460;
      var answer_chan = cljs.core.get.call(null, map__10460__$1, new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176));
      var ___$1 = this;
      return React.DOM.div({"className":"question-container"}, React.DOM.div({"className":"question-text-container"}, React.DOM.h3({"className":"question-text"}, (new cljs.core.Keyword(null, "question", "question", -1411720117)).cljs$core$IFn$_invoke$arity$1(self__.quiz_question))), React.DOM.div({"className":"media-container"}), om.core.build.call(null, sailing_study_guide.core.answer_section_view, (new cljs.core.Keyword(null, "answers", "answers", -2066449770)).cljs$core$IFn$_invoke$arity$1(self__.quiz_question), 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "init-state", "init-state", 1450863212), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "answer-chan", "answer-chan", 2060719176), answer_chan], null)], null)));
    };
    sailing_study_guide.core.t10456.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10458) {
      var self__ = this;
      var _10458__$1 = this;
      return self__.meta10457;
    };
    sailing_study_guide.core.t10456.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10458, meta10457__$1) {
      var self__ = this;
      var _10458__$1 = this;
      return new sailing_study_guide.core.t10456(self__.owner, self__.quiz_question, self__.question_view, meta10457__$1);
    };
    sailing_study_guide.core.__GT_t10456 = function __GT_t10456(owner__$1, quiz_question__$1, question_view__$1, meta10457) {
      return new sailing_study_guide.core.t10456(owner__$1, quiz_question__$1, question_view__$1, meta10457);
    };
  }
  return new sailing_study_guide.core.t10456(owner, quiz_question, question_view, null);
};
sailing_study_guide.core.header_bar_view = function header_bar_view(section, _) {
  if (typeof sailing_study_guide.core.t10464 !== "undefined") {
  } else {
    sailing_study_guide.core.t10464 = function(_, section, header_bar_view, meta10465) {
      this._ = _;
      this.section = section;
      this.header_bar_view = header_bar_view;
      this.meta10465 = meta10465;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10464.cljs$lang$type = true;
    sailing_study_guide.core.t10464.cljs$lang$ctorStr = "sailing-study-guide.core/t10464";
    sailing_study_guide.core.t10464.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10464");
    };
    sailing_study_guide.core.t10464.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t10464.prototype.om$core$IRender$render$arity$1 = function(___$2) {
      var self__ = this;
      var ___$3 = this;
      var current_question_num = (new cljs.core.Keyword(null, "current-question", "current-question", -749753188)).cljs$core$IFn$_invoke$arity$1(self__.section) + 1;
      var total_num_questions = cljs.core.count.call(null, (new cljs.core.Keyword(null, "questions", "questions", 1226225380)).cljs$core$IFn$_invoke$arity$1(self__.section));
      return React.DOM.nav({"className":"tab-bar"}, React.DOM.section({"className":"left-small text-center"}, "" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_question_num) + "/" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(total_num_questions)), React.DOM.section({"className":"middle tab-bar-section"}, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(self__.section)), React.DOM.section({"className":"right-small"}, React.DOM.a({"href":"#", "className":"right-off-canvas-toggle menu-icon"}, 
      React.DOM.span(null))));
    };
    sailing_study_guide.core.t10464.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10466) {
      var self__ = this;
      var _10466__$1 = this;
      return self__.meta10465;
    };
    sailing_study_guide.core.t10464.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10466, meta10465__$1) {
      var self__ = this;
      var _10466__$1 = this;
      return new sailing_study_guide.core.t10464(self__._, self__.section, self__.header_bar_view, meta10465__$1);
    };
    sailing_study_guide.core.__GT_t10464 = function __GT_t10464(___$1, section__$1, header_bar_view__$1, meta10465) {
      return new sailing_study_guide.core.t10464(___$1, section__$1, header_bar_view__$1, meta10465);
    };
  }
  return new sailing_study_guide.core.t10464(_, section, header_bar_view, null);
};
sailing_study_guide.core.header_progress_view = function header_progress_view(section, _) {
  if (typeof sailing_study_guide.core.t10470 !== "undefined") {
  } else {
    sailing_study_guide.core.t10470 = function(_, section, header_progress_view, meta10471) {
      this._ = _;
      this.section = section;
      this.header_progress_view = header_progress_view;
      this.meta10471 = meta10471;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10470.cljs$lang$type = true;
    sailing_study_guide.core.t10470.cljs$lang$ctorStr = "sailing-study-guide.core/t10470";
    sailing_study_guide.core.t10470.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10470");
    };
    sailing_study_guide.core.t10470.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t10470.prototype.om$core$IRender$render$arity$1 = function(___$2) {
      var self__ = this;
      var ___$3 = this;
      var current_question_num = (new cljs.core.Keyword(null, "current-question", "current-question", -749753188)).cljs$core$IFn$_invoke$arity$1(self__.section) + 1;
      var total_num_questions = cljs.core.count.call(null, (new cljs.core.Keyword(null, "questions", "questions", 1226225380)).cljs$core$IFn$_invoke$arity$1(self__.section));
      return React.DOM.div({"className":"progress"}, React.DOM.span({"style":{"width":"" + cljs.core.str.cljs$core$IFn$_invoke$arity$1(100 * (current_question_num / total_num_questions)) + "%"}, "className":"meter"}));
    };
    sailing_study_guide.core.t10470.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10472) {
      var self__ = this;
      var _10472__$1 = this;
      return self__.meta10471;
    };
    sailing_study_guide.core.t10470.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10472, meta10471__$1) {
      var self__ = this;
      var _10472__$1 = this;
      return new sailing_study_guide.core.t10470(self__._, self__.section, self__.header_progress_view, meta10471__$1);
    };
    sailing_study_guide.core.__GT_t10470 = function __GT_t10470(___$1, section__$1, header_progress_view__$1, meta10471) {
      return new sailing_study_guide.core.t10470(___$1, section__$1, header_progress_view__$1, meta10471);
    };
  }
  return new sailing_study_guide.core.t10470(_, section, header_progress_view, null);
};
sailing_study_guide.core.header_view = function header_view(section, _) {
  if (typeof sailing_study_guide.core.t10476 !== "undefined") {
  } else {
    sailing_study_guide.core.t10476 = function(_, section, header_view, meta10477) {
      this._ = _;
      this.section = section;
      this.header_view = header_view;
      this.meta10477 = meta10477;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10476.cljs$lang$type = true;
    sailing_study_guide.core.t10476.cljs$lang$ctorStr = "sailing-study-guide.core/t10476";
    sailing_study_guide.core.t10476.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10476");
    };
    sailing_study_guide.core.t10476.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t10476.prototype.om$core$IRender$render$arity$1 = function(___$2) {
      var self__ = this;
      var ___$3 = this;
      return React.DOM.div({"className":"quiz-header"}, om.core.build.call(null, sailing_study_guide.core.header_bar_view, self__.section), om.core.build.call(null, sailing_study_guide.core.header_progress_view, self__.section));
    };
    sailing_study_guide.core.t10476.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10478) {
      var self__ = this;
      var _10478__$1 = this;
      return self__.meta10477;
    };
    sailing_study_guide.core.t10476.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10478, meta10477__$1) {
      var self__ = this;
      var _10478__$1 = this;
      return new sailing_study_guide.core.t10476(self__._, self__.section, self__.header_view, meta10477__$1);
    };
    sailing_study_guide.core.__GT_t10476 = function __GT_t10476(___$1, section__$1, header_view__$1, meta10477) {
      return new sailing_study_guide.core.t10476(___$1, section__$1, header_view__$1, meta10477);
    };
  }
  return new sailing_study_guide.core.t10476(_, section, header_view, null);
};
sailing_study_guide.core.section_view = function section_view(section, owner) {
  if (typeof sailing_study_guide.core.t10482 !== "undefined") {
  } else {
    sailing_study_guide.core.t10482 = function(owner, section, section_view, meta10483) {
      this.owner = owner;
      this.section = section;
      this.section_view = section_view;
      this.meta10483 = meta10483;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10482.cljs$lang$type = true;
    sailing_study_guide.core.t10482.cljs$lang$ctorStr = "sailing-study-guide.core/t10482";
    sailing_study_guide.core.t10482.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10482");
    };
    sailing_study_guide.core.t10482.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t10482.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div({"data-offcanvas":true, "className":"off-canvas-wrap", "id":"quiz-section"}, React.DOM.div({"className":"main-content inner-wrap"}, om.core.build.call(null, sailing_study_guide.core.header_view, self__.section), om.core.build.call(null, sailing_study_guide.core.question_view, sailing_study_guide.core.current_question.call(null, self__.section)), React.DOM.a({"className":"exit-off-canvas"})));
    };
    sailing_study_guide.core.t10482.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10484) {
      var self__ = this;
      var _10484__$1 = this;
      return self__.meta10483;
    };
    sailing_study_guide.core.t10482.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10484, meta10483__$1) {
      var self__ = this;
      var _10484__$1 = this;
      return new sailing_study_guide.core.t10482(self__.owner, self__.section, self__.section_view, meta10483__$1);
    };
    sailing_study_guide.core.__GT_t10482 = function __GT_t10482(owner__$1, section__$1, section_view__$1, meta10483) {
      return new sailing_study_guide.core.t10482(owner__$1, section__$1, section_view__$1, meta10483);
    };
  }
  return new sailing_study_guide.core.t10482(owner, section, section_view, null);
};
sailing_study_guide.core.quiz_view = function quiz_view(app_state, owner) {
  if (typeof sailing_study_guide.core.t10488 !== "undefined") {
  } else {
    sailing_study_guide.core.t10488 = function(owner, app_state, quiz_view, meta10489) {
      this.owner = owner;
      this.app_state = app_state;
      this.quiz_view = quiz_view;
      this.meta10489 = meta10489;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    sailing_study_guide.core.t10488.cljs$lang$type = true;
    sailing_study_guide.core.t10488.cljs$lang$ctorStr = "sailing-study-guide.core/t10488";
    sailing_study_guide.core.t10488.cljs$lang$ctorPrWriter = function(this__4215__auto__, writer__4216__auto__, opt__4217__auto__) {
      return cljs.core._write.call(null, writer__4216__auto__, "sailing-study-guide.core/t10488");
    };
    sailing_study_guide.core.t10488.prototype.om$core$IRender$ = true;
    sailing_study_guide.core.t10488.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return React.DOM.div(null, om.core.build.call(null, sailing_study_guide.core.section_view, cljs.core.nth.call(null, (new cljs.core.Keyword(null, "sections", "sections", -886710106)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "quiz", "quiz", 829625914)).cljs$core$IFn$_invoke$arity$1(self__.app_state)), (new cljs.core.Keyword(null, "current-section", "current-section", 1519906460)).cljs$core$IFn$_invoke$arity$1(self__.app_state))));
    };
    sailing_study_guide.core.t10488.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10490) {
      var self__ = this;
      var _10490__$1 = this;
      return self__.meta10489;
    };
    sailing_study_guide.core.t10488.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10490, meta10489__$1) {
      var self__ = this;
      var _10490__$1 = this;
      return new sailing_study_guide.core.t10488(self__.owner, self__.app_state, self__.quiz_view, meta10489__$1);
    };
    sailing_study_guide.core.__GT_t10488 = function __GT_t10488(owner__$1, app_state__$1, quiz_view__$1, meta10489) {
      return new sailing_study_guide.core.t10488(owner__$1, app_state__$1, quiz_view__$1, meta10489);
    };
  }
  return new sailing_study_guide.core.t10488(owner, app_state, quiz_view, null);
};
om.core.root.call(null, sailing_study_guide.core.quiz_view, sailing_study_guide.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), document.getElementById("app")], null));

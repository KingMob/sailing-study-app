// Compiled by ClojureScript 0.0-2913 {:elide-asserts false, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__20972__delegate = function (args){
return console.log.apply(console,(function (){var G__20971 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__20971) : cljs.core.into_array.call(null,G__20971));
})());
};
var G__20972 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20973__i = 0, G__20973__a = new Array(arguments.length -  0);
while (G__20973__i < G__20973__a.length) {G__20973__a[G__20973__i] = arguments[G__20973__i + 0]; ++G__20973__i;}
  args = new cljs.core.IndexedSeq(G__20973__a,0);
} 
return G__20972__delegate.call(this,args);};
G__20972.cljs$lang$maxFixedArity = 0;
G__20972.cljs$lang$applyTo = (function (arglist__20974){
var args = cljs.core.seq(arglist__20974);
return G__20972__delegate(args);
});
G__20972.cljs$core$IFn$_invoke$arity$variadic = G__20972__delegate;
return G__20972;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__20976 = x;
return goog.isString(G__20976);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__20978 = x__$1;
return goog.typeOf(G__20978);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__13453__auto__ = ty;
if(cljs.core.truth_(and__13453__auto__)){
return ty.cljs$lang$type;
} else {
return and__13453__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__20980 = obj;
return goog.typeOf(G__20980);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__20982 = Symbol;
return goog.typeOf(G__20982);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__14352__auto___20984 = len;
var i_20985 = (0);
while(true){
if((i_20985 < n__14352__auto___20984)){
(new_arr[i_20985] = (arr[i_20985]));

var G__20986 = (i_20985 + (1));
i_20985 = G__20986;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__20987 = (i + (1));
i = G__20987;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__20996__delegate = function (array,i,idxs){
var G__20993 = aget;
var G__20994 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__20995 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20993,G__20994,G__20995) : cljs.core.apply.call(null,G__20993,G__20994,G__20995));
};
var G__20996 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__20997__i = 0, G__20997__a = new Array(arguments.length -  2);
while (G__20997__i < G__20997__a.length) {G__20997__a[G__20997__i] = arguments[G__20997__i + 2]; ++G__20997__i;}
  idxs = new cljs.core.IndexedSeq(G__20997__a,0);
} 
return G__20996__delegate.call(this,array,i,idxs);};
G__20996.cljs$lang$maxFixedArity = 2;
G__20996.cljs$lang$applyTo = (function (arglist__20998){
var array = cljs.core.first(arglist__20998);
arglist__20998 = cljs.core.next(arglist__20998);
var i = cljs.core.first(arglist__20998);
var idxs = cljs.core.rest(arglist__20998);
return G__20996__delegate(array,i,idxs);
});
G__20996.cljs$core$IFn$_invoke$arity$variadic = G__20996__delegate;
return G__20996;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__20999 = null;
if (arguments.length > 2) {
var G__21000__i = 0, G__21000__a = new Array(arguments.length -  2);
while (G__21000__i < G__21000__a.length) {G__21000__a[G__21000__i] = arguments[G__21000__i + 2]; ++G__21000__i;}
G__20999 = new cljs.core.IndexedSeq(G__21000__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__20999);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__21009__delegate = function (array,idx,idx2,idxv){
var G__21005 = aset;
var G__21006 = (array[idx]);
var G__21007 = idx2;
var G__21008 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__21005,G__21006,G__21007,G__21008) : cljs.core.apply.call(null,G__21005,G__21006,G__21007,G__21008));
};
var G__21009 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__21010__i = 0, G__21010__a = new Array(arguments.length -  3);
while (G__21010__i < G__21010__a.length) {G__21010__a[G__21010__i] = arguments[G__21010__i + 3]; ++G__21010__i;}
  idxv = new cljs.core.IndexedSeq(G__21010__a,0);
} 
return G__21009__delegate.call(this,array,idx,idx2,idxv);};
G__21009.cljs$lang$maxFixedArity = 3;
G__21009.cljs$lang$applyTo = (function (arglist__21011){
var array = cljs.core.first(arglist__21011);
arglist__21011 = cljs.core.next(arglist__21011);
var idx = cljs.core.first(arglist__21011);
arglist__21011 = cljs.core.next(arglist__21011);
var idx2 = cljs.core.first(arglist__21011);
var idxv = cljs.core.rest(arglist__21011);
return G__21009__delegate(array,idx,idx2,idxv);
});
G__21009.cljs$core$IFn$_invoke$arity$variadic = G__21009__delegate;
return G__21009;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__21012 = null;
if (arguments.length > 3) {
var G__21013__i = 0, G__21013__a = new Array(arguments.length -  3);
while (G__21013__i < G__21013__a.length) {G__21013__a[G__21013__i] = arguments[G__21013__i + 3]; ++G__21013__i;}
G__21012 = new cljs.core.IndexedSeq(G__21013__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__21012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__21019 = (function (a,x){
a.push(x);

return a;
});
var G__21020 = [];
var G__21021 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21019,G__21020,G__21021) : cljs.core.reduce.call(null,G__21019,G__21020,G__21021));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__21022__i = 0, G__21022__a = new Array(arguments.length -  2);
while (G__21022__i < G__21022__a.length) {G__21022__a[G__21022__i] = arguments[G__21022__i + 2]; ++G__21022__i;}
  args = new cljs.core.IndexedSeq(G__21022__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__21023){
var obj = cljs.core.first(arglist__21023);
arglist__21023 = cljs.core.next(arglist__21023);
var s = cljs.core.first(arglist__21023);
var args = cljs.core.rest(arglist__21023);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj21025 = {};
return obj21025;
})();


cljs.core.IFn = (function (){var obj21027 = {};
return obj21027;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21073 = x__14109__auto__;
return goog.typeOf(G__21073);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21075 = x__14109__auto__;
return goog.typeOf(G__21075);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21077 = x__14109__auto__;
return goog.typeOf(G__21077);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21079 = x__14109__auto__;
return goog.typeOf(G__21079);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21081 = x__14109__auto__;
return goog.typeOf(G__21081);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21083 = x__14109__auto__;
return goog.typeOf(G__21083);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21085 = x__14109__auto__;
return goog.typeOf(G__21085);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21087 = x__14109__auto__;
return goog.typeOf(G__21087);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21089 = x__14109__auto__;
return goog.typeOf(G__21089);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21091 = x__14109__auto__;
return goog.typeOf(G__21091);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21093 = x__14109__auto__;
return goog.typeOf(G__21093);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21095 = x__14109__auto__;
return goog.typeOf(G__21095);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21097 = x__14109__auto__;
return goog.typeOf(G__21097);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21099 = x__14109__auto__;
return goog.typeOf(G__21099);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21101 = x__14109__auto__;
return goog.typeOf(G__21101);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21103 = x__14109__auto__;
return goog.typeOf(G__21103);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21105 = x__14109__auto__;
return goog.typeOf(G__21105);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21107 = x__14109__auto__;
return goog.typeOf(G__21107);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21109 = x__14109__auto__;
return goog.typeOf(G__21109);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21111 = x__14109__auto__;
return goog.typeOf(G__21111);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21113 = x__14109__auto__;
return goog.typeOf(G__21113);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._invoke[(function (){var G__21115 = x__14109__auto__;
return goog.typeOf(G__21115);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._invoke["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj21117 = {};
return obj21117;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__13453__auto__ = value;
if(and__13453__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__13453__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__14109__auto__ = (((value == null))?null:value);
return (function (){var or__13465__auto__ = (cljs.core._clone[(function (){var G__21121 = x__14109__auto__;
return goog.typeOf(G__21121);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._clone["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj21123 = {};
return obj21123;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._count[(function (){var G__21127 = x__14109__auto__;
return goog.typeOf(G__21127);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._count["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj21129 = {};
return obj21129;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._empty[(function (){var G__21133 = x__14109__auto__;
return goog.typeOf(G__21133);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._empty["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj21135 = {};
return obj21135;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._conj[(function (){var G__21139 = x__14109__auto__;
return goog.typeOf(G__21139);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._conj["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj21141 = {};
return obj21141;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._nth[(function (){var G__21147 = x__14109__auto__;
return goog.typeOf(G__21147);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._nth["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._nth[(function (){var G__21149 = x__14109__auto__;
return goog.typeOf(G__21149);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._nth["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj21151 = {};
return obj21151;
})();


cljs.core.ISeq = (function (){var obj21153 = {};
return obj21153;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._first[(function (){var G__21157 = x__14109__auto__;
return goog.typeOf(G__21157);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._first["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._rest[(function (){var G__21161 = x__14109__auto__;
return goog.typeOf(G__21161);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._rest["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj21163 = {};
return obj21163;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._next[(function (){var G__21167 = x__14109__auto__;
return goog.typeOf(G__21167);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._next["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj21169 = {};
return obj21169;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._lookup[(function (){var G__21175 = x__14109__auto__;
return goog.typeOf(G__21175);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._lookup["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._lookup[(function (){var G__21177 = x__14109__auto__;
return goog.typeOf(G__21177);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._lookup["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj21179 = {};
return obj21179;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__21183 = x__14109__auto__;
return goog.typeOf(G__21183);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._assoc[(function (){var G__21187 = x__14109__auto__;
return goog.typeOf(G__21187);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._assoc["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj21189 = {};
return obj21189;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._dissoc[(function (){var G__21193 = x__14109__auto__;
return goog.typeOf(G__21193);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._dissoc["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj21195 = {};
return obj21195;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._key[(function (){var G__21199 = x__14109__auto__;
return goog.typeOf(G__21199);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._key["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._val[(function (){var G__21203 = x__14109__auto__;
return goog.typeOf(G__21203);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._val["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj21205 = {};
return obj21205;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._disjoin[(function (){var G__21209 = x__14109__auto__;
return goog.typeOf(G__21209);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._disjoin["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj21211 = {};
return obj21211;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._peek[(function (){var G__21215 = x__14109__auto__;
return goog.typeOf(G__21215);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._peek["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._pop[(function (){var G__21219 = x__14109__auto__;
return goog.typeOf(G__21219);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._pop["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj21221 = {};
return obj21221;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._assoc_n[(function (){var G__21225 = x__14109__auto__;
return goog.typeOf(G__21225);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj21227 = {};
return obj21227;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._deref[(function (){var G__21231 = x__14109__auto__;
return goog.typeOf(G__21231);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._deref["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj21233 = {};
return obj21233;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._deref_with_timeout[(function (){var G__21237 = x__14109__auto__;
return goog.typeOf(G__21237);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj21239 = {};
return obj21239;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._meta[(function (){var G__21243 = x__14109__auto__;
return goog.typeOf(G__21243);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._meta["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj21245 = {};
return obj21245;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._with_meta[(function (){var G__21249 = x__14109__auto__;
return goog.typeOf(G__21249);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._with_meta["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj21251 = {};
return obj21251;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._reduce[(function (){var G__21257 = x__14109__auto__;
return goog.typeOf(G__21257);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._reduce["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._reduce[(function (){var G__21259 = x__14109__auto__;
return goog.typeOf(G__21259);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._reduce["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj21261 = {};
return obj21261;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._kv_reduce[(function (){var G__21265 = x__14109__auto__;
return goog.typeOf(G__21265);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj21267 = {};
return obj21267;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._equiv[(function (){var G__21271 = x__14109__auto__;
return goog.typeOf(G__21271);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._equiv["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj21273 = {};
return obj21273;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._hash[(function (){var G__21277 = x__14109__auto__;
return goog.typeOf(G__21277);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._hash["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj21279 = {};
return obj21279;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._seq[(function (){var G__21283 = x__14109__auto__;
return goog.typeOf(G__21283);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._seq["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj21285 = {};
return obj21285;
})();


cljs.core.IList = (function (){var obj21287 = {};
return obj21287;
})();


cljs.core.IRecord = (function (){var obj21289 = {};
return obj21289;
})();


cljs.core.IReversible = (function (){var obj21291 = {};
return obj21291;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._rseq[(function (){var G__21295 = x__14109__auto__;
return goog.typeOf(G__21295);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._rseq["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj21297 = {};
return obj21297;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._sorted_seq[(function (){var G__21301 = x__14109__auto__;
return goog.typeOf(G__21301);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._sorted_seq_from[(function (){var G__21305 = x__14109__auto__;
return goog.typeOf(G__21305);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._entry_key[(function (){var G__21309 = x__14109__auto__;
return goog.typeOf(G__21309);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._entry_key["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._comparator[(function (){var G__21313 = x__14109__auto__;
return goog.typeOf(G__21313);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._comparator["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj21315 = {};
return obj21315;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__13453__auto__ = writer;
if(and__13453__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__13453__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__14109__auto__ = (((writer == null))?null:writer);
return (function (){var or__13465__auto__ = (cljs.core._write[(function (){var G__21319 = x__14109__auto__;
return goog.typeOf(G__21319);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._write["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__13453__auto__ = writer;
if(and__13453__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__13453__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__14109__auto__ = (((writer == null))?null:writer);
return (function (){var or__13465__auto__ = (cljs.core._flush[(function (){var G__21323 = x__14109__auto__;
return goog.typeOf(G__21323);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._flush["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj21325 = {};
return obj21325;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._pr_writer[(function (){var G__21329 = x__14109__auto__;
return goog.typeOf(G__21329);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj21331 = {};
return obj21331;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__13453__auto__ = d;
if(and__13453__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__13453__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__14109__auto__ = (((d == null))?null:d);
return (function (){var or__13465__auto__ = (cljs.core._realized_QMARK_[(function (){var G__21335 = x__14109__auto__;
return goog.typeOf(G__21335);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj21337 = {};
return obj21337;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._notify_watches[(function (){var G__21341 = x__14109__auto__;
return goog.typeOf(G__21341);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._add_watch[(function (){var G__21345 = x__14109__auto__;
return goog.typeOf(G__21345);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._add_watch["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__13453__auto__ = this$;
if(and__13453__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__13453__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__14109__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13465__auto__ = (cljs.core._remove_watch[(function (){var G__21349 = x__14109__auto__;
return goog.typeOf(G__21349);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj21351 = {};
return obj21351;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._as_transient[(function (){var G__21355 = x__14109__auto__;
return goog.typeOf(G__21355);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._as_transient["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj21357 = {};
return obj21357;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__13453__auto__ = tcoll;
if(and__13453__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__13453__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__14109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13465__auto__ = (cljs.core._conj_BANG_[(function (){var G__21361 = x__14109__auto__;
return goog.typeOf(G__21361);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__13453__auto__ = tcoll;
if(and__13453__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__13453__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__14109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13465__auto__ = (cljs.core._persistent_BANG_[(function (){var G__21365 = x__14109__auto__;
return goog.typeOf(G__21365);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj21367 = {};
return obj21367;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__13453__auto__ = tcoll;
if(and__13453__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__13453__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__14109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13465__auto__ = (cljs.core._assoc_BANG_[(function (){var G__21371 = x__14109__auto__;
return goog.typeOf(G__21371);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj21373 = {};
return obj21373;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__13453__auto__ = tcoll;
if(and__13453__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__13453__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__14109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13465__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__21377 = x__14109__auto__;
return goog.typeOf(G__21377);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj21379 = {};
return obj21379;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__13453__auto__ = tcoll;
if(and__13453__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__13453__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__14109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13465__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__21383 = x__14109__auto__;
return goog.typeOf(G__21383);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__13453__auto__ = tcoll;
if(and__13453__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__13453__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__14109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13465__auto__ = (cljs.core._pop_BANG_[(function (){var G__21387 = x__14109__auto__;
return goog.typeOf(G__21387);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj21389 = {};
return obj21389;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__13453__auto__ = tcoll;
if(and__13453__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__13453__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__14109__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13465__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__21393 = x__14109__auto__;
return goog.typeOf(G__21393);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj21395 = {};
return obj21395;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__13453__auto__ = x;
if(and__13453__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__13453__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__14109__auto__ = (((x == null))?null:x);
return (function (){var or__13465__auto__ = (cljs.core._compare[(function (){var G__21399 = x__14109__auto__;
return goog.typeOf(G__21399);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._compare["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj21401 = {};
return obj21401;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._drop_first[(function (){var G__21405 = x__14109__auto__;
return goog.typeOf(G__21405);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._drop_first["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj21407 = {};
return obj21407;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._chunked_first[(function (){var G__21411 = x__14109__auto__;
return goog.typeOf(G__21411);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._chunked_rest[(function (){var G__21415 = x__14109__auto__;
return goog.typeOf(G__21415);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj21417 = {};
return obj21417;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._chunked_next[(function (){var G__21421 = x__14109__auto__;
return goog.typeOf(G__21421);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj21423 = {};
return obj21423;
})();

cljs.core._name = (function _name(x){
if((function (){var and__13453__auto__ = x;
if(and__13453__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__13453__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__14109__auto__ = (((x == null))?null:x);
return (function (){var or__13465__auto__ = (cljs.core._name[(function (){var G__21427 = x__14109__auto__;
return goog.typeOf(G__21427);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._name["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__13453__auto__ = x;
if(and__13453__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__13453__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__14109__auto__ = (((x == null))?null:x);
return (function (){var or__13465__auto__ = (cljs.core._namespace[(function (){var G__21431 = x__14109__auto__;
return goog.typeOf(G__21431);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._namespace["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj21433 = {};
return obj21433;
})();


cljs.core.IReset = (function (){var obj21435 = {};
return obj21435;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._reset_BANG_[(function (){var G__21439 = x__14109__auto__;
return goog.typeOf(G__21439);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj21441 = {};
return obj21441;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._swap_BANG_[(function (){var G__21451 = x__14109__auto__;
return goog.typeOf(G__21451);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._swap_BANG_[(function (){var G__21453 = x__14109__auto__;
return goog.typeOf(G__21453);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._swap_BANG_[(function (){var G__21455 = x__14109__auto__;
return goog.typeOf(G__21455);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._swap_BANG_[(function (){var G__21457 = x__14109__auto__;
return goog.typeOf(G__21457);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj21459 = {};
return obj21459;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__13453__auto__ = o;
if(and__13453__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__13453__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__14109__auto__ = (((o == null))?null:o);
return (function (){var or__13465__auto__ = (cljs.core._vreset_BANG_[(function (){var G__21463 = x__14109__auto__;
return goog.typeOf(G__21463);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj21465 = {};
return obj21465;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__13453__auto__ = coll;
if(and__13453__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__13453__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__14109__auto__ = (((coll == null))?null:coll);
return (function (){var or__13465__auto__ = (cljs.core._iterator[(function (){var G__21469 = x__14109__auto__;
return goog.typeOf(G__21469);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._iterator["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__21472 = (4294967295);
var G__21473 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21472,G__21473) : Math.imul.call(null,G__21472,G__21473));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__21476 = a;
var G__21477 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21476,G__21477) : Math.imul.call(null,G__21476,G__21477));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__21478 = (i + (2));
var G__21479 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__21478;
h1 = G__21479;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj21481 = {};
return obj21481;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__21482 = (i + (1));
var G__21483 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__21482;
hash = G__21483;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj21487 = {};
return obj21487;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__21490 = o;
if(G__21490){
var bit__14139__auto__ = (G__21490.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__14139__auto__) || (G__21490.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__21491 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21491) : Math.floor.call(null,G__21491));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13453__auto__ = cljs.core.not(a.ns);
if(and__13453__auto__){
return b.ns;
} else {
return and__13453__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21498 = a.ns;
var G__21499 = b.ns;
return goog.array.defaultCompare(G__21498,G__21499);
})();
if(((0) === nsc)){
var G__21500 = a.name;
var G__21501 = b.name;
return goog.array.defaultCompare(G__21500,G__21501);
} else {
return nsc;
}
}
} else {
var G__21502 = a.name;
var G__21503 = b.name;
return goog.array.defaultCompare(G__21502,G__21503);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13886__auto__ = self__._hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__21505 = null;
var G__21505__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__21505__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__21505 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21505__2.call(this,self__,coll);
case 3:
return G__21505__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21505.cljs$core$IFn$_invoke$arity$2 = G__21505__2;
G__21505.cljs$core$IFn$_invoke$arity$3 = G__21505__3;
return G__21505;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args21504){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21504)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__21553 = null;
var G__21553__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__21553__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__21553__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__21553__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__21553__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__21553__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__21553__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__21553__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__21553__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__21553__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__21553__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__21553__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__21553__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__21553__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__21553__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__21553__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__21553__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__21553__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__21553__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__21553__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__21553__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__21553__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21509 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21510 = a;
var G__21511 = b;
var G__21512 = c;
var G__21513 = d;
var G__21514 = e;
var G__21515 = f;
var G__21516 = g;
var G__21517 = h;
var G__21518 = i;
var G__21519 = j;
var G__21520 = k;
var G__21521 = l;
var G__21522 = m;
var G__21523 = n;
var G__21524 = o;
var G__21525 = p;
var G__21526 = q;
var G__21527 = r;
var G__21528 = s;
var G__21529 = t;
var G__21530 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21509,G__21510,G__21511,G__21512,G__21513,G__21514,G__21515,G__21516,G__21517,G__21518,G__21519,G__21520,G__21521,G__21522,G__21523,G__21524,G__21525,G__21526,G__21527,G__21528,G__21529,G__21530) : cljs.core.apply.call(null,G__21509,G__21510,G__21511,G__21512,G__21513,G__21514,G__21515,G__21516,G__21517,G__21518,G__21519,G__21520,G__21521,G__21522,G__21523,G__21524,G__21525,G__21526,G__21527,G__21528,G__21529,G__21530));
});
G__21553 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21553__1.call(this,self__);
case 2:
return G__21553__2.call(this,self__,a);
case 3:
return G__21553__3.call(this,self__,a,b);
case 4:
return G__21553__4.call(this,self__,a,b,c);
case 5:
return G__21553__5.call(this,self__,a,b,c,d);
case 6:
return G__21553__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21553__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21553__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21553__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21553__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21553__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21553__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21553__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21553__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21553__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21553__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21553__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21553__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21553__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21553__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21553__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21553__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21553.cljs$core$IFn$_invoke$arity$1 = G__21553__1;
G__21553.cljs$core$IFn$_invoke$arity$2 = G__21553__2;
G__21553.cljs$core$IFn$_invoke$arity$3 = G__21553__3;
G__21553.cljs$core$IFn$_invoke$arity$4 = G__21553__4;
G__21553.cljs$core$IFn$_invoke$arity$5 = G__21553__5;
G__21553.cljs$core$IFn$_invoke$arity$6 = G__21553__6;
G__21553.cljs$core$IFn$_invoke$arity$7 = G__21553__7;
G__21553.cljs$core$IFn$_invoke$arity$8 = G__21553__8;
G__21553.cljs$core$IFn$_invoke$arity$9 = G__21553__9;
G__21553.cljs$core$IFn$_invoke$arity$10 = G__21553__10;
G__21553.cljs$core$IFn$_invoke$arity$11 = G__21553__11;
G__21553.cljs$core$IFn$_invoke$arity$12 = G__21553__12;
G__21553.cljs$core$IFn$_invoke$arity$13 = G__21553__13;
G__21553.cljs$core$IFn$_invoke$arity$14 = G__21553__14;
G__21553.cljs$core$IFn$_invoke$arity$15 = G__21553__15;
G__21553.cljs$core$IFn$_invoke$arity$16 = G__21553__16;
G__21553.cljs$core$IFn$_invoke$arity$17 = G__21553__17;
G__21553.cljs$core$IFn$_invoke$arity$18 = G__21553__18;
G__21553.cljs$core$IFn$_invoke$arity$19 = G__21553__19;
G__21553.cljs$core$IFn$_invoke$arity$20 = G__21553__20;
G__21553.cljs$core$IFn$_invoke$arity$21 = G__21553__21;
G__21553.cljs$core$IFn$_invoke$arity$22 = G__21553__22;
return G__21553;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args21508){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21508)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21531 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21532 = a;
var G__21533 = b;
var G__21534 = c;
var G__21535 = d;
var G__21536 = e;
var G__21537 = f;
var G__21538 = g;
var G__21539 = h;
var G__21540 = i;
var G__21541 = j;
var G__21542 = k;
var G__21543 = l;
var G__21544 = m;
var G__21545 = n;
var G__21546 = o;
var G__21547 = p;
var G__21548 = q;
var G__21549 = r;
var G__21550 = s;
var G__21551 = t;
var G__21552 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21531,G__21532,G__21533,G__21534,G__21535,G__21536,G__21537,G__21538,G__21539,G__21540,G__21541,G__21542,G__21543,G__21544,G__21545,G__21546,G__21547,G__21548,G__21549,G__21550,G__21551,G__21552) : cljs.core.apply.call(null,G__21531,G__21532,G__21533,G__21534,G__21535,G__21536,G__21537,G__21538,G__21539,G__21540,G__21541,G__21542,G__21543,G__21544,G__21545,G__21546,G__21547,G__21548,G__21549,G__21550,G__21551,G__21552));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__21555 = x;
if(G__21555){
var bit__14146__auto__ = null;
if(cljs.core.truth_((function (){var or__13465__auto__ = bit__14146__auto__;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return G__21555.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__21555.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21555);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21555);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__21557 = value;
if(G__21557){
var bit__14146__auto__ = (G__21557.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__14146__auto__) || (G__21557.cljs$core$ICloneable$)){
return true;
} else {
if((!G__21557.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21557);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21557);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21559 = coll;
if(G__21559){
var bit__14139__auto__ = (G__21559.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__14139__auto__) || (G__21559.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21561 = coll;
if(G__21561){
var bit__14139__auto__ = (G__21561.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14139__auto__) || (G__21561.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__21563 = coll;
if(G__21563){
var bit__14139__auto__ = (G__21563.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14139__auto__) || (G__21563.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21565 = coll;
if(G__21565){
var bit__14139__auto__ = (G__21565.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14139__auto__) || (G__21565.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__21570__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21571 = y;
var G__21572 = cljs.core.first(more);
var G__21573 = cljs.core.next(more);
x = G__21571;
y = G__21572;
more = G__21573;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21570 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21574__i = 0, G__21574__a = new Array(arguments.length -  2);
while (G__21574__i < G__21574__a.length) {G__21574__a[G__21574__i] = arguments[G__21574__i + 2]; ++G__21574__i;}
  more = new cljs.core.IndexedSeq(G__21574__a,0);
} 
return G__21570__delegate.call(this,x,y,more);};
G__21570.cljs$lang$maxFixedArity = 2;
G__21570.cljs$lang$applyTo = (function (arglist__21575){
var x = cljs.core.first(arglist__21575);
arglist__21575 = cljs.core.next(arglist__21575);
var y = cljs.core.first(arglist__21575);
var more = cljs.core.rest(arglist__21575);
return G__21570__delegate(x,y,more);
});
G__21570.cljs$core$IFn$_invoke$arity$variadic = G__21570__delegate;
return G__21570;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__21576 = null;
if (arguments.length > 2) {
var G__21577__i = 0, G__21577__a = new Array(arguments.length -  2);
while (G__21577__i < G__21577__a.length) {G__21577__a[G__21577__i] = arguments[G__21577__i + 2]; ++G__21577__i;}
G__21576 = new cljs.core.IndexedSeq(G__21577__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__21578 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__21578) : cljs.core.es6_iterator_seq.call(null,G__21578));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21579 = (n + (1));
var G__21580 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21581 = cljs.core.next(coll__$1);
n = G__21579;
hash_code = G__21580;
coll__$1 = G__21581;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21582 = (n + (1));
var G__21583 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21584 = cljs.core.next(coll__$1);
n = G__21582;
hash_code = G__21583;
coll__$1 = G__21584;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__21585 = o;
return goog.getUid(G__21585);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__21587 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21587) : cljs.core.deref.call(null,G__21587));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21594 = val;
var G__21595 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21594,G__21595) : f.call(null,G__21594,G__21595));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21600 = nval;
var G__21601 = (n + (1));
val = G__21600;
n = G__21601;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21596 = val__$1;
var G__21597 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21596,G__21597) : f.call(null,G__21596,G__21597));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21602 = nval;
var G__21603 = (n + (1));
val__$1 = G__21602;
n = G__21603;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21598 = val__$1;
var G__21599 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21598,G__21599) : f.call(null,G__21598,G__21599));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21604 = nval;
var G__21605 = (n + (1));
val__$1 = G__21604;
n = G__21605;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21612 = val;
var G__21613 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21612,G__21613) : f.call(null,G__21612,G__21613));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21618 = nval;
var G__21619 = (n + (1));
val = G__21618;
n = G__21619;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21614 = val__$1;
var G__21615 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21614,G__21615) : f.call(null,G__21614,G__21615));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21620 = nval;
var G__21621 = (n + (1));
val__$1 = G__21620;
n = G__21621;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21616 = val__$1;
var G__21617 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21616,G__21617) : f.call(null,G__21616,G__21617));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21622 = nval;
var G__21623 = (n + (1));
val__$1 = G__21622;
n = G__21623;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__21625 = x;
if(G__21625){
var bit__14146__auto__ = (G__21625.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__14146__auto__) || (G__21625.cljs$core$ICounted$)){
return true;
} else {
if((!G__21625.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21625);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21625);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__21627 = x;
if(G__21627){
var bit__14146__auto__ = (G__21627.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14146__auto__) || (G__21627.cljs$core$IIndexed$)){
return true;
} else {
if((!G__21627.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21627);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21627);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21628 = coll__$1;
var G__21629 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21628,G__21629) : cljs.core.equiv_sequential.call(null,G__21628,G__21629));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21630 = o;
var G__21631 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21630,G__21631) : cljs.core.cons.call(null,G__21630,G__21631));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21634 = coll__$1;
var G__21635 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21634,G__21635) : cljs.core.equiv_sequential.call(null,G__21634,G__21635));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21636 = cljs.core.List.EMPTY;
var G__21637 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__21636,G__21637) : cljs.core.with_meta.call(null,G__21636,G__21637));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__21638 = f;
var G__21639 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__21638,G__21639) : cljs.core.seq_reduce.call(null,G__21638,G__21639));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__21640 = f;
var G__21641 = start;
var G__21642 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__21640,G__21641,G__21642) : cljs.core.seq_reduce.call(null,G__21640,G__21641,G__21642));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21643 = o;
var G__21644 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21643,G__21644) : cljs.core.cons.call(null,G__21643,G__21644));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__21645 = sn;
s = G__21645;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__21650__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__21651 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__21652 = cljs.core.first(xs);
var G__21653 = cljs.core.next(xs);
coll = G__21651;
x = G__21652;
xs = G__21653;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__21650 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__21654__i = 0, G__21654__a = new Array(arguments.length -  2);
while (G__21654__i < G__21654__a.length) {G__21654__a[G__21654__i] = arguments[G__21654__i + 2]; ++G__21654__i;}
  xs = new cljs.core.IndexedSeq(G__21654__a,0);
} 
return G__21650__delegate.call(this,coll,x,xs);};
G__21650.cljs$lang$maxFixedArity = 2;
G__21650.cljs$lang$applyTo = (function (arglist__21655){
var coll = cljs.core.first(arglist__21655);
arglist__21655 = cljs.core.next(arglist__21655);
var x = cljs.core.first(arglist__21655);
var xs = cljs.core.rest(arglist__21655);
return G__21650__delegate(coll,x,xs);
});
G__21650.cljs$core$IFn$_invoke$arity$variadic = G__21650__delegate;
return G__21650;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__21656 = null;
if (arguments.length > 2) {
var G__21657__i = 0, G__21657__a = new Array(arguments.length -  2);
while (G__21657__i < G__21657__a.length) {G__21657__a[G__21657__i] = arguments[G__21657__i + 2]; ++G__21657__i;}
G__21656 = new cljs.core.IndexedSeq(G__21657__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__21656);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__21658 = cljs.core.next(s);
var G__21659 = (acc + (1));
s = G__21658;
acc = G__21659;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__21661 = coll;
if(G__21661){
var bit__14139__auto__ = (G__21661.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__14139__auto__) || (G__21661.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__21662 = cljs.core.next(coll);
var G__21663 = (n - (1));
coll = G__21662;
n = G__21663;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__21664 = cljs.core.next(coll);
var G__21665 = (n - (1));
var G__21666 = not_found;
coll = G__21664;
n = G__21665;
not_found = G__21666;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__21671 = coll;
if(G__21671){
var bit__14139__auto__ = (G__21671.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14139__auto__) || (G__21671.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21672 = coll;
if(G__21672){
var bit__14146__auto__ = (G__21672.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14146__auto__) || (G__21672.cljs$core$ISeq$)){
return true;
} else {
if((!G__21672.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21672);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21672);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__21673 = coll;
if(G__21673){
var bit__14139__auto__ = (G__21673.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14139__auto__) || (G__21673.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21674 = coll;
if(G__21674){
var bit__14146__auto__ = (G__21674.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14146__auto__) || (G__21674.cljs$core$ISeq$)){
return true;
} else {
if((!G__21674.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21674);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21674);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__21675 = (n__$1 - (1));
var G__21676 = cljs.core.rest(xs);
n__$1 = G__21675;
xs = G__21676;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__21679 = o;
if(G__21679){
var bit__14139__auto__ = (G__21679.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14139__auto__) || (G__21679.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__21680 = o;
if(G__21680){
var bit__14139__auto__ = (G__21680.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14139__auto__) || (G__21680.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__21684__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__21685 = ret;
var G__21686 = cljs.core.first(kvs);
var G__21687 = cljs.core.second(kvs);
var G__21688 = cljs.core.nnext(kvs);
coll = G__21685;
k = G__21686;
v = G__21687;
kvs = G__21688;
continue;
} else {
return ret;
}
break;
}
};
var G__21684 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21689__i = 0, G__21689__a = new Array(arguments.length -  3);
while (G__21689__i < G__21689__a.length) {G__21689__a[G__21689__i] = arguments[G__21689__i + 3]; ++G__21689__i;}
  kvs = new cljs.core.IndexedSeq(G__21689__a,0);
} 
return G__21684__delegate.call(this,coll,k,v,kvs);};
G__21684.cljs$lang$maxFixedArity = 3;
G__21684.cljs$lang$applyTo = (function (arglist__21690){
var coll = cljs.core.first(arglist__21690);
arglist__21690 = cljs.core.next(arglist__21690);
var k = cljs.core.first(arglist__21690);
arglist__21690 = cljs.core.next(arglist__21690);
var v = cljs.core.first(arglist__21690);
var kvs = cljs.core.rest(arglist__21690);
return G__21684__delegate(coll,k,v,kvs);
});
G__21684.cljs$core$IFn$_invoke$arity$variadic = G__21684__delegate;
return G__21684;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__21691 = null;
if (arguments.length > 3) {
var G__21692__i = 0, G__21692__a = new Array(arguments.length -  3);
while (G__21692__i < G__21692__a.length) {G__21692__a[G__21692__i] = arguments[G__21692__i + 3]; ++G__21692__i;}
G__21691 = new cljs.core.IndexedSeq(G__21692__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__21691);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__21695__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21696 = ret;
var G__21697 = cljs.core.first(ks);
var G__21698 = cljs.core.next(ks);
coll = G__21696;
k = G__21697;
ks = G__21698;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21695 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21699__i = 0, G__21699__a = new Array(arguments.length -  2);
while (G__21699__i < G__21699__a.length) {G__21699__a[G__21699__i] = arguments[G__21699__i + 2]; ++G__21699__i;}
  ks = new cljs.core.IndexedSeq(G__21699__a,0);
} 
return G__21695__delegate.call(this,coll,k,ks);};
G__21695.cljs$lang$maxFixedArity = 2;
G__21695.cljs$lang$applyTo = (function (arglist__21700){
var coll = cljs.core.first(arglist__21700);
arglist__21700 = cljs.core.next(arglist__21700);
var k = cljs.core.first(arglist__21700);
var ks = cljs.core.rest(arglist__21700);
return G__21695__delegate(coll,k,ks);
});
G__21695.cljs$core$IFn$_invoke$arity$variadic = G__21695__delegate;
return G__21695;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__21701 = null;
if (arguments.length > 2) {
var G__21702__i = 0, G__21702__a = new Array(arguments.length -  2);
while (G__21702__i < G__21702__a.length) {G__21702__a[G__21702__i] = arguments[G__21702__i + 2]; ++G__21702__i;}
G__21701 = new cljs.core.IndexedSeq(G__21702__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__13465__auto__ = (function (){var G__21707 = f;
return goog.isFunction(G__21707);
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var G__21708 = f;
if(G__21708){
var bit__14146__auto__ = null;
if(cljs.core.truth_((function (){var or__13465__auto____$1 = bit__14146__auto__;
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
return G__21708.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__21708.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21708);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21708);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__22174 = null;
var G__22174__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__22174__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21710 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21710) : self__.afn.call(null,G__21710));
});
var G__22174__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21711 = a;
var G__21712 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21711,G__21712) : self__.afn.call(null,G__21711,G__21712));
});
var G__22174__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21713 = a;
var G__21714 = b;
var G__21715 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21713,G__21714,G__21715) : self__.afn.call(null,G__21713,G__21714,G__21715));
});
var G__22174__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21716 = a;
var G__21717 = b;
var G__21718 = c;
var G__21719 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21716,G__21717,G__21718,G__21719) : self__.afn.call(null,G__21716,G__21717,G__21718,G__21719));
});
var G__22174__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21720 = a;
var G__21721 = b;
var G__21722 = c;
var G__21723 = d;
var G__21724 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21720,G__21721,G__21722,G__21723,G__21724) : self__.afn.call(null,G__21720,G__21721,G__21722,G__21723,G__21724));
});
var G__22174__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21725 = a;
var G__21726 = b;
var G__21727 = c;
var G__21728 = d;
var G__21729 = e;
var G__21730 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21725,G__21726,G__21727,G__21728,G__21729,G__21730) : self__.afn.call(null,G__21725,G__21726,G__21727,G__21728,G__21729,G__21730));
});
var G__22174__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21731 = a;
var G__21732 = b;
var G__21733 = c;
var G__21734 = d;
var G__21735 = e;
var G__21736 = f;
var G__21737 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21731,G__21732,G__21733,G__21734,G__21735,G__21736,G__21737) : self__.afn.call(null,G__21731,G__21732,G__21733,G__21734,G__21735,G__21736,G__21737));
});
var G__22174__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21738 = a;
var G__21739 = b;
var G__21740 = c;
var G__21741 = d;
var G__21742 = e;
var G__21743 = f;
var G__21744 = g;
var G__21745 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21738,G__21739,G__21740,G__21741,G__21742,G__21743,G__21744,G__21745) : self__.afn.call(null,G__21738,G__21739,G__21740,G__21741,G__21742,G__21743,G__21744,G__21745));
});
var G__22174__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21746 = a;
var G__21747 = b;
var G__21748 = c;
var G__21749 = d;
var G__21750 = e;
var G__21751 = f;
var G__21752 = g;
var G__21753 = h;
var G__21754 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21746,G__21747,G__21748,G__21749,G__21750,G__21751,G__21752,G__21753,G__21754) : self__.afn.call(null,G__21746,G__21747,G__21748,G__21749,G__21750,G__21751,G__21752,G__21753,G__21754));
});
var G__22174__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21755 = a;
var G__21756 = b;
var G__21757 = c;
var G__21758 = d;
var G__21759 = e;
var G__21760 = f;
var G__21761 = g;
var G__21762 = h;
var G__21763 = i;
var G__21764 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21755,G__21756,G__21757,G__21758,G__21759,G__21760,G__21761,G__21762,G__21763,G__21764) : self__.afn.call(null,G__21755,G__21756,G__21757,G__21758,G__21759,G__21760,G__21761,G__21762,G__21763,G__21764));
});
var G__22174__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21765 = a;
var G__21766 = b;
var G__21767 = c;
var G__21768 = d;
var G__21769 = e;
var G__21770 = f;
var G__21771 = g;
var G__21772 = h;
var G__21773 = i;
var G__21774 = j;
var G__21775 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772,G__21773,G__21774,G__21775) : self__.afn.call(null,G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772,G__21773,G__21774,G__21775));
});
var G__22174__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21776 = a;
var G__21777 = b;
var G__21778 = c;
var G__21779 = d;
var G__21780 = e;
var G__21781 = f;
var G__21782 = g;
var G__21783 = h;
var G__21784 = i;
var G__21785 = j;
var G__21786 = k;
var G__21787 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21776,G__21777,G__21778,G__21779,G__21780,G__21781,G__21782,G__21783,G__21784,G__21785,G__21786,G__21787) : self__.afn.call(null,G__21776,G__21777,G__21778,G__21779,G__21780,G__21781,G__21782,G__21783,G__21784,G__21785,G__21786,G__21787));
});
var G__22174__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21788 = a;
var G__21789 = b;
var G__21790 = c;
var G__21791 = d;
var G__21792 = e;
var G__21793 = f;
var G__21794 = g;
var G__21795 = h;
var G__21796 = i;
var G__21797 = j;
var G__21798 = k;
var G__21799 = l;
var G__21800 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21788,G__21789,G__21790,G__21791,G__21792,G__21793,G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800) : self__.afn.call(null,G__21788,G__21789,G__21790,G__21791,G__21792,G__21793,G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800));
});
var G__22174__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21801 = a;
var G__21802 = b;
var G__21803 = c;
var G__21804 = d;
var G__21805 = e;
var G__21806 = f;
var G__21807 = g;
var G__21808 = h;
var G__21809 = i;
var G__21810 = j;
var G__21811 = k;
var G__21812 = l;
var G__21813 = m;
var G__21814 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21801,G__21802,G__21803,G__21804,G__21805,G__21806,G__21807,G__21808,G__21809,G__21810,G__21811,G__21812,G__21813,G__21814) : self__.afn.call(null,G__21801,G__21802,G__21803,G__21804,G__21805,G__21806,G__21807,G__21808,G__21809,G__21810,G__21811,G__21812,G__21813,G__21814));
});
var G__22174__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21815 = a;
var G__21816 = b;
var G__21817 = c;
var G__21818 = d;
var G__21819 = e;
var G__21820 = f;
var G__21821 = g;
var G__21822 = h;
var G__21823 = i;
var G__21824 = j;
var G__21825 = k;
var G__21826 = l;
var G__21827 = m;
var G__21828 = n;
var G__21829 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21815,G__21816,G__21817,G__21818,G__21819,G__21820,G__21821,G__21822,G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829) : self__.afn.call(null,G__21815,G__21816,G__21817,G__21818,G__21819,G__21820,G__21821,G__21822,G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829));
});
var G__22174__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21830 = a;
var G__21831 = b;
var G__21832 = c;
var G__21833 = d;
var G__21834 = e;
var G__21835 = f;
var G__21836 = g;
var G__21837 = h;
var G__21838 = i;
var G__21839 = j;
var G__21840 = k;
var G__21841 = l;
var G__21842 = m;
var G__21843 = n;
var G__21844 = o;
var G__21845 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21830,G__21831,G__21832,G__21833,G__21834,G__21835,G__21836,G__21837,G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845) : self__.afn.call(null,G__21830,G__21831,G__21832,G__21833,G__21834,G__21835,G__21836,G__21837,G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845));
});
var G__22174__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21846 = a;
var G__21847 = b;
var G__21848 = c;
var G__21849 = d;
var G__21850 = e;
var G__21851 = f;
var G__21852 = g;
var G__21853 = h;
var G__21854 = i;
var G__21855 = j;
var G__21856 = k;
var G__21857 = l;
var G__21858 = m;
var G__21859 = n;
var G__21860 = o;
var G__21861 = p;
var G__21862 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21846,G__21847,G__21848,G__21849,G__21850,G__21851,G__21852,G__21853,G__21854,G__21855,G__21856,G__21857,G__21858,G__21859,G__21860,G__21861,G__21862) : self__.afn.call(null,G__21846,G__21847,G__21848,G__21849,G__21850,G__21851,G__21852,G__21853,G__21854,G__21855,G__21856,G__21857,G__21858,G__21859,G__21860,G__21861,G__21862));
});
var G__22174__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21863 = a;
var G__21864 = b;
var G__21865 = c;
var G__21866 = d;
var G__21867 = e;
var G__21868 = f;
var G__21869 = g;
var G__21870 = h;
var G__21871 = i;
var G__21872 = j;
var G__21873 = k;
var G__21874 = l;
var G__21875 = m;
var G__21876 = n;
var G__21877 = o;
var G__21878 = p;
var G__21879 = q;
var G__21880 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21863,G__21864,G__21865,G__21866,G__21867,G__21868,G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879,G__21880) : self__.afn.call(null,G__21863,G__21864,G__21865,G__21866,G__21867,G__21868,G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879,G__21880));
});
var G__22174__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21881 = a;
var G__21882 = b;
var G__21883 = c;
var G__21884 = d;
var G__21885 = e;
var G__21886 = f;
var G__21887 = g;
var G__21888 = h;
var G__21889 = i;
var G__21890 = j;
var G__21891 = k;
var G__21892 = l;
var G__21893 = m;
var G__21894 = n;
var G__21895 = o;
var G__21896 = p;
var G__21897 = q;
var G__21898 = r;
var G__21899 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891,G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899) : self__.afn.call(null,G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891,G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899));
});
var G__22174__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21900 = a;
var G__21901 = b;
var G__21902 = c;
var G__21903 = d;
var G__21904 = e;
var G__21905 = f;
var G__21906 = g;
var G__21907 = h;
var G__21908 = i;
var G__21909 = j;
var G__21910 = k;
var G__21911 = l;
var G__21912 = m;
var G__21913 = n;
var G__21914 = o;
var G__21915 = p;
var G__21916 = q;
var G__21917 = r;
var G__21918 = s;
var G__21919 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907,G__21908,G__21909,G__21910,G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917,G__21918,G__21919) : self__.afn.call(null,G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907,G__21908,G__21909,G__21910,G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917,G__21918,G__21919));
});
var G__22174__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21920 = self__.afn;
var G__21921 = a;
var G__21922 = b;
var G__21923 = c;
var G__21924 = d;
var G__21925 = e;
var G__21926 = f;
var G__21927 = g;
var G__21928 = h;
var G__21929 = i;
var G__21930 = j;
var G__21931 = k;
var G__21932 = l;
var G__21933 = m;
var G__21934 = n;
var G__21935 = o;
var G__21936 = p;
var G__21937 = q;
var G__21938 = r;
var G__21939 = s;
var G__21940 = t;
var G__21941 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21920,G__21921,G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933,G__21934,G__21935,G__21936,G__21937,G__21938,G__21939,G__21940,G__21941) : cljs.core.apply.call(null,G__21920,G__21921,G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933,G__21934,G__21935,G__21936,G__21937,G__21938,G__21939,G__21940,G__21941));
});
G__22174 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__22174__1.call(this,self__);
case 2:
return G__22174__2.call(this,self__,a);
case 3:
return G__22174__3.call(this,self__,a,b);
case 4:
return G__22174__4.call(this,self__,a,b,c);
case 5:
return G__22174__5.call(this,self__,a,b,c,d);
case 6:
return G__22174__6.call(this,self__,a,b,c,d,e);
case 7:
return G__22174__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__22174__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__22174__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__22174__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__22174__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__22174__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__22174__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__22174__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__22174__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__22174__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__22174__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__22174__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__22174__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__22174__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__22174__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__22174__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22174.cljs$core$IFn$_invoke$arity$1 = G__22174__1;
G__22174.cljs$core$IFn$_invoke$arity$2 = G__22174__2;
G__22174.cljs$core$IFn$_invoke$arity$3 = G__22174__3;
G__22174.cljs$core$IFn$_invoke$arity$4 = G__22174__4;
G__22174.cljs$core$IFn$_invoke$arity$5 = G__22174__5;
G__22174.cljs$core$IFn$_invoke$arity$6 = G__22174__6;
G__22174.cljs$core$IFn$_invoke$arity$7 = G__22174__7;
G__22174.cljs$core$IFn$_invoke$arity$8 = G__22174__8;
G__22174.cljs$core$IFn$_invoke$arity$9 = G__22174__9;
G__22174.cljs$core$IFn$_invoke$arity$10 = G__22174__10;
G__22174.cljs$core$IFn$_invoke$arity$11 = G__22174__11;
G__22174.cljs$core$IFn$_invoke$arity$12 = G__22174__12;
G__22174.cljs$core$IFn$_invoke$arity$13 = G__22174__13;
G__22174.cljs$core$IFn$_invoke$arity$14 = G__22174__14;
G__22174.cljs$core$IFn$_invoke$arity$15 = G__22174__15;
G__22174.cljs$core$IFn$_invoke$arity$16 = G__22174__16;
G__22174.cljs$core$IFn$_invoke$arity$17 = G__22174__17;
G__22174.cljs$core$IFn$_invoke$arity$18 = G__22174__18;
G__22174.cljs$core$IFn$_invoke$arity$19 = G__22174__19;
G__22174.cljs$core$IFn$_invoke$arity$20 = G__22174__20;
G__22174.cljs$core$IFn$_invoke$arity$21 = G__22174__21;
G__22174.cljs$core$IFn$_invoke$arity$22 = G__22174__22;
return G__22174;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args21709){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21709)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__21942 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21942) : self__.afn.call(null,G__21942));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__21943 = a;
var G__21944 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21943,G__21944) : self__.afn.call(null,G__21943,G__21944));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__21945 = a;
var G__21946 = b;
var G__21947 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21945,G__21946,G__21947) : self__.afn.call(null,G__21945,G__21946,G__21947));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__21948 = a;
var G__21949 = b;
var G__21950 = c;
var G__21951 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21948,G__21949,G__21950,G__21951) : self__.afn.call(null,G__21948,G__21949,G__21950,G__21951));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__21952 = a;
var G__21953 = b;
var G__21954 = c;
var G__21955 = d;
var G__21956 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21952,G__21953,G__21954,G__21955,G__21956) : self__.afn.call(null,G__21952,G__21953,G__21954,G__21955,G__21956));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__21957 = a;
var G__21958 = b;
var G__21959 = c;
var G__21960 = d;
var G__21961 = e;
var G__21962 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21957,G__21958,G__21959,G__21960,G__21961,G__21962) : self__.afn.call(null,G__21957,G__21958,G__21959,G__21960,G__21961,G__21962));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__21963 = a;
var G__21964 = b;
var G__21965 = c;
var G__21966 = d;
var G__21967 = e;
var G__21968 = f;
var G__21969 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21963,G__21964,G__21965,G__21966,G__21967,G__21968,G__21969) : self__.afn.call(null,G__21963,G__21964,G__21965,G__21966,G__21967,G__21968,G__21969));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__21970 = a;
var G__21971 = b;
var G__21972 = c;
var G__21973 = d;
var G__21974 = e;
var G__21975 = f;
var G__21976 = g;
var G__21977 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21970,G__21971,G__21972,G__21973,G__21974,G__21975,G__21976,G__21977) : self__.afn.call(null,G__21970,G__21971,G__21972,G__21973,G__21974,G__21975,G__21976,G__21977));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__21978 = a;
var G__21979 = b;
var G__21980 = c;
var G__21981 = d;
var G__21982 = e;
var G__21983 = f;
var G__21984 = g;
var G__21985 = h;
var G__21986 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21978,G__21979,G__21980,G__21981,G__21982,G__21983,G__21984,G__21985,G__21986) : self__.afn.call(null,G__21978,G__21979,G__21980,G__21981,G__21982,G__21983,G__21984,G__21985,G__21986));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__21987 = a;
var G__21988 = b;
var G__21989 = c;
var G__21990 = d;
var G__21991 = e;
var G__21992 = f;
var G__21993 = g;
var G__21994 = h;
var G__21995 = i;
var G__21996 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21987,G__21988,G__21989,G__21990,G__21991,G__21992,G__21993,G__21994,G__21995,G__21996) : self__.afn.call(null,G__21987,G__21988,G__21989,G__21990,G__21991,G__21992,G__21993,G__21994,G__21995,G__21996));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__21997 = a;
var G__21998 = b;
var G__21999 = c;
var G__22000 = d;
var G__22001 = e;
var G__22002 = f;
var G__22003 = g;
var G__22004 = h;
var G__22005 = i;
var G__22006 = j;
var G__22007 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007) : self__.afn.call(null,G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__22008 = a;
var G__22009 = b;
var G__22010 = c;
var G__22011 = d;
var G__22012 = e;
var G__22013 = f;
var G__22014 = g;
var G__22015 = h;
var G__22016 = i;
var G__22017 = j;
var G__22018 = k;
var G__22019 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__22008,G__22009,G__22010,G__22011,G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019) : self__.afn.call(null,G__22008,G__22009,G__22010,G__22011,G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__22020 = a;
var G__22021 = b;
var G__22022 = c;
var G__22023 = d;
var G__22024 = e;
var G__22025 = f;
var G__22026 = g;
var G__22027 = h;
var G__22028 = i;
var G__22029 = j;
var G__22030 = k;
var G__22031 = l;
var G__22032 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026,G__22027,G__22028,G__22029,G__22030,G__22031,G__22032) : self__.afn.call(null,G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026,G__22027,G__22028,G__22029,G__22030,G__22031,G__22032));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__22033 = a;
var G__22034 = b;
var G__22035 = c;
var G__22036 = d;
var G__22037 = e;
var G__22038 = f;
var G__22039 = g;
var G__22040 = h;
var G__22041 = i;
var G__22042 = j;
var G__22043 = k;
var G__22044 = l;
var G__22045 = m;
var G__22046 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__22033,G__22034,G__22035,G__22036,G__22037,G__22038,G__22039,G__22040,G__22041,G__22042,G__22043,G__22044,G__22045,G__22046) : self__.afn.call(null,G__22033,G__22034,G__22035,G__22036,G__22037,G__22038,G__22039,G__22040,G__22041,G__22042,G__22043,G__22044,G__22045,G__22046));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__22047 = a;
var G__22048 = b;
var G__22049 = c;
var G__22050 = d;
var G__22051 = e;
var G__22052 = f;
var G__22053 = g;
var G__22054 = h;
var G__22055 = i;
var G__22056 = j;
var G__22057 = k;
var G__22058 = l;
var G__22059 = m;
var G__22060 = n;
var G__22061 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__22047,G__22048,G__22049,G__22050,G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057,G__22058,G__22059,G__22060,G__22061) : self__.afn.call(null,G__22047,G__22048,G__22049,G__22050,G__22051,G__22052,G__22053,G__22054,G__22055,G__22056,G__22057,G__22058,G__22059,G__22060,G__22061));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__22062 = a;
var G__22063 = b;
var G__22064 = c;
var G__22065 = d;
var G__22066 = e;
var G__22067 = f;
var G__22068 = g;
var G__22069 = h;
var G__22070 = i;
var G__22071 = j;
var G__22072 = k;
var G__22073 = l;
var G__22074 = m;
var G__22075 = n;
var G__22076 = o;
var G__22077 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__22062,G__22063,G__22064,G__22065,G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073,G__22074,G__22075,G__22076,G__22077) : self__.afn.call(null,G__22062,G__22063,G__22064,G__22065,G__22066,G__22067,G__22068,G__22069,G__22070,G__22071,G__22072,G__22073,G__22074,G__22075,G__22076,G__22077));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__22078 = a;
var G__22079 = b;
var G__22080 = c;
var G__22081 = d;
var G__22082 = e;
var G__22083 = f;
var G__22084 = g;
var G__22085 = h;
var G__22086 = i;
var G__22087 = j;
var G__22088 = k;
var G__22089 = l;
var G__22090 = m;
var G__22091 = n;
var G__22092 = o;
var G__22093 = p;
var G__22094 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__22078,G__22079,G__22080,G__22081,G__22082,G__22083,G__22084,G__22085,G__22086,G__22087,G__22088,G__22089,G__22090,G__22091,G__22092,G__22093,G__22094) : self__.afn.call(null,G__22078,G__22079,G__22080,G__22081,G__22082,G__22083,G__22084,G__22085,G__22086,G__22087,G__22088,G__22089,G__22090,G__22091,G__22092,G__22093,G__22094));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__22095 = a;
var G__22096 = b;
var G__22097 = c;
var G__22098 = d;
var G__22099 = e;
var G__22100 = f;
var G__22101 = g;
var G__22102 = h;
var G__22103 = i;
var G__22104 = j;
var G__22105 = k;
var G__22106 = l;
var G__22107 = m;
var G__22108 = n;
var G__22109 = o;
var G__22110 = p;
var G__22111 = q;
var G__22112 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__22095,G__22096,G__22097,G__22098,G__22099,G__22100,G__22101,G__22102,G__22103,G__22104,G__22105,G__22106,G__22107,G__22108,G__22109,G__22110,G__22111,G__22112) : self__.afn.call(null,G__22095,G__22096,G__22097,G__22098,G__22099,G__22100,G__22101,G__22102,G__22103,G__22104,G__22105,G__22106,G__22107,G__22108,G__22109,G__22110,G__22111,G__22112));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__22113 = a;
var G__22114 = b;
var G__22115 = c;
var G__22116 = d;
var G__22117 = e;
var G__22118 = f;
var G__22119 = g;
var G__22120 = h;
var G__22121 = i;
var G__22122 = j;
var G__22123 = k;
var G__22124 = l;
var G__22125 = m;
var G__22126 = n;
var G__22127 = o;
var G__22128 = p;
var G__22129 = q;
var G__22130 = r;
var G__22131 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__22113,G__22114,G__22115,G__22116,G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123,G__22124,G__22125,G__22126,G__22127,G__22128,G__22129,G__22130,G__22131) : self__.afn.call(null,G__22113,G__22114,G__22115,G__22116,G__22117,G__22118,G__22119,G__22120,G__22121,G__22122,G__22123,G__22124,G__22125,G__22126,G__22127,G__22128,G__22129,G__22130,G__22131));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__22132 = a;
var G__22133 = b;
var G__22134 = c;
var G__22135 = d;
var G__22136 = e;
var G__22137 = f;
var G__22138 = g;
var G__22139 = h;
var G__22140 = i;
var G__22141 = j;
var G__22142 = k;
var G__22143 = l;
var G__22144 = m;
var G__22145 = n;
var G__22146 = o;
var G__22147 = p;
var G__22148 = q;
var G__22149 = r;
var G__22150 = s;
var G__22151 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__22132,G__22133,G__22134,G__22135,G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142,G__22143,G__22144,G__22145,G__22146,G__22147,G__22148,G__22149,G__22150,G__22151) : self__.afn.call(null,G__22132,G__22133,G__22134,G__22135,G__22136,G__22137,G__22138,G__22139,G__22140,G__22141,G__22142,G__22143,G__22144,G__22145,G__22146,G__22147,G__22148,G__22149,G__22150,G__22151));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__22152 = self__.afn;
var G__22153 = a;
var G__22154 = b;
var G__22155 = c;
var G__22156 = d;
var G__22157 = e;
var G__22158 = f;
var G__22159 = g;
var G__22160 = h;
var G__22161 = i;
var G__22162 = j;
var G__22163 = k;
var G__22164 = l;
var G__22165 = m;
var G__22166 = n;
var G__22167 = o;
var G__22168 = p;
var G__22169 = q;
var G__22170 = r;
var G__22171 = s;
var G__22172 = t;
var G__22173 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22152,G__22153,G__22154,G__22155,G__22156,G__22157,G__22158,G__22159,G__22160,G__22161,G__22162,G__22163,G__22164,G__22165,G__22166,G__22167,G__22168,G__22169,G__22170,G__22171,G__22172,G__22173) : cljs.core.apply.call(null,G__22152,G__22153,G__22154,G__22155,G__22156,G__22157,G__22158,G__22159,G__22160,G__22161,G__22162,G__22163,G__22164,G__22165,G__22166,G__22167,G__22168,G__22169,G__22170,G__22171,G__22172,G__22173));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__22178 = o;
if(G__22178){
var bit__14146__auto__ = (G__22178.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__14146__auto__) || (G__22178.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__22178.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__22178);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__22178);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__13453__auto__ = !((o == null));
if(and__13453__auto__){
var G__22182 = o;
if(G__22182){
var bit__14146__auto__ = (G__22182.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14146__auto__) || (G__22182.cljs$core$IMeta$)){
return true;
} else {
if((!G__22182.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22182);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22182);
}
} else {
return and__13453__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__22185__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__22186 = ret;
var G__22187 = cljs.core.first(ks);
var G__22188 = cljs.core.next(ks);
coll = G__22186;
k = G__22187;
ks = G__22188;
continue;
} else {
return ret;
}
}
break;
}
};
var G__22185 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22189__i = 0, G__22189__a = new Array(arguments.length -  2);
while (G__22189__i < G__22189__a.length) {G__22189__a[G__22189__i] = arguments[G__22189__i + 2]; ++G__22189__i;}
  ks = new cljs.core.IndexedSeq(G__22189__a,0);
} 
return G__22185__delegate.call(this,coll,k,ks);};
G__22185.cljs$lang$maxFixedArity = 2;
G__22185.cljs$lang$applyTo = (function (arglist__22190){
var coll = cljs.core.first(arglist__22190);
arglist__22190 = cljs.core.next(arglist__22190);
var k = cljs.core.first(arglist__22190);
var ks = cljs.core.rest(arglist__22190);
return G__22185__delegate(coll,k,ks);
});
G__22185.cljs$core$IFn$_invoke$arity$variadic = G__22185__delegate;
return G__22185;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__22191 = null;
if (arguments.length > 2) {
var G__22192__i = 0, G__22192__a = new Array(arguments.length -  2);
while (G__22192__i < G__22192__a.length) {G__22192__a[G__22192__i] = arguments[G__22192__i + 2]; ++G__22192__i;}
G__22191 = new cljs.core.IndexedSeq(G__22192__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__22191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22194 = x;
if(G__22194){
var bit__14146__auto__ = (G__22194.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__14146__auto__) || (G__22194.cljs$core$ICollection$)){
return true;
} else {
if((!G__22194.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__22194);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__22194);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22196 = x;
if(G__22196){
var bit__14146__auto__ = (G__22196.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__14146__auto__) || (G__22196.cljs$core$ISet$)){
return true;
} else {
if((!G__22196.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__22196);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__22196);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__22198 = x;
if(G__22198){
var bit__14146__auto__ = (G__22198.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__14146__auto__) || (G__22198.cljs$core$IAssociative$)){
return true;
} else {
if((!G__22198.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__22198);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__22198);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__22200 = x;
if(G__22200){
var bit__14146__auto__ = (G__22200.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__14146__auto__) || (G__22200.cljs$core$ISequential$)){
return true;
} else {
if((!G__22200.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__22200);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__22200);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__22202 = x;
if(G__22202){
var bit__14146__auto__ = (G__22202.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__14146__auto__) || (G__22202.cljs$core$ISorted$)){
return true;
} else {
if((!G__22202.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__22202);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__22202);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__22204 = x;
if(G__22204){
var bit__14146__auto__ = (G__22204.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14146__auto__) || (G__22204.cljs$core$IReduce$)){
return true;
} else {
if((!G__22204.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__22204);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__22204);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22206 = x;
if(G__22206){
var bit__14146__auto__ = (G__22206.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__14146__auto__) || (G__22206.cljs$core$IMap$)){
return true;
} else {
if((!G__22206.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__22206);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__22206);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__22208 = x;
if(G__22208){
var bit__14146__auto__ = (G__22208.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__14146__auto__) || (G__22208.cljs$core$IVector$)){
return true;
} else {
if((!G__22208.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__22208);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__22208);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__22210 = x;
if(G__22210){
var bit__14139__auto__ = (G__22210.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__14139__auto__) || (G__22210.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj22216 = {};
return obj22216;
});
var js_obj__1 = (function() { 
var G__22219__delegate = function (keyvals){
var G__22217 = goog.object.create;
var G__22218 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__22217,G__22218) : cljs.core.apply.call(null,G__22217,G__22218));
};
var G__22219 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22220__i = 0, G__22220__a = new Array(arguments.length -  0);
while (G__22220__i < G__22220__a.length) {G__22220__a[G__22220__i] = arguments[G__22220__i + 0]; ++G__22220__i;}
  keyvals = new cljs.core.IndexedSeq(G__22220__a,0);
} 
return G__22219__delegate.call(this,keyvals);};
G__22219.cljs$lang$maxFixedArity = 0;
G__22219.cljs$lang$applyTo = (function (arglist__22221){
var keyvals = cljs.core.seq(arglist__22221);
return G__22219__delegate(keyvals);
});
G__22219.cljs$core$IFn$_invoke$arity$variadic = G__22219__delegate;
return G__22219;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__22222 = null;
if (arguments.length > 0) {
var G__22223__i = 0, G__22223__a = new Array(arguments.length -  0);
while (G__22223__i < G__22223__a.length) {G__22223__a[G__22223__i] = arguments[G__22223__i + 0]; ++G__22223__i;}
G__22222 = new cljs.core.IndexedSeq(G__22223__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__22222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__22226_22228 = obj;
var G__22227_22229 = ((function (G__22226_22228,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__22226_22228,keys))
;
goog.object.forEach(G__22226_22228,G__22227_22229);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22230 = (i__$1 + (1));
var G__22231 = (j__$1 + (1));
var G__22232 = (len__$1 - (1));
i__$1 = G__22230;
j__$1 = G__22231;
len__$1 = G__22232;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22233 = (i__$1 - (1));
var G__22234 = (j__$1 - (1));
var G__22235 = (len__$1 - (1));
i__$1 = G__22233;
j__$1 = G__22234;
len__$1 = G__22235;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj22237 = {};
return obj22237;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__22239 = s;
if(G__22239){
var bit__14146__auto__ = (G__22239.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14146__auto__) || (G__22239.cljs$core$ISeq$)){
return true;
} else {
if((!G__22239.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22239);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22239);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__22241 = s;
if(G__22241){
var bit__14146__auto__ = (G__22241.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__14146__auto__) || (G__22241.cljs$core$ISeqable$)){
return true;
} else {
if((!G__22241.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22241);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22241);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__13465__auto__ = cljs.core.fn_QMARK_(f);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var G__22245 = f;
if(G__22245){
var bit__14146__auto__ = (G__22245.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__14146__auto__) || (G__22245.cljs$core$IFn$)){
return true;
} else {
if((!G__22245.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22245);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22245);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__22258 = n;
return isNaN(G__22258);
})())) && (!((n === Infinity))) && (((function (){var G__22259 = n;
return parseFloat(G__22259);
})() === (function (){var G__22260 = n;
var G__22261 = (10);
return parseInt(G__22260,G__22261);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__22262__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__22263 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__22264 = etc;
s = G__22263;
xs = G__22264;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__22262 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22265__i = 0, G__22265__a = new Array(arguments.length -  2);
while (G__22265__i < G__22265__a.length) {G__22265__a[G__22265__i] = arguments[G__22265__i + 2]; ++G__22265__i;}
  more = new cljs.core.IndexedSeq(G__22265__a,0);
} 
return G__22262__delegate.call(this,x,y,more);};
G__22262.cljs$lang$maxFixedArity = 2;
G__22262.cljs$lang$applyTo = (function (arglist__22266){
var x = cljs.core.first(arglist__22266);
arglist__22266 = cljs.core.next(arglist__22266);
var y = cljs.core.first(arglist__22266);
var more = cljs.core.rest(arglist__22266);
return G__22262__delegate(x,y,more);
});
G__22262.cljs$core$IFn$_invoke$arity$variadic = G__22262__delegate;
return G__22262;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__22267 = null;
if (arguments.length > 2) {
var G__22268__i = 0, G__22268__a = new Array(arguments.length -  2);
while (G__22268__i < G__22268__a.length) {G__22268__a[G__22268__i] = arguments[G__22268__i + 2]; ++G__22268__i;}
G__22267 = new cljs.core.IndexedSeq(G__22268__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__22272 = x;
if(G__22272){
var bit__14139__auto__ = (G__22272.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__14139__auto__) || (G__22272.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__22273 = x;
var G__22274 = y;
return goog.array.defaultCompare(G__22273,G__22274);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__22279 = xs;
var G__22280 = ys;
var G__22281 = len;
var G__22282 = (n + (1));
xs = G__22279;
ys = G__22280;
len = G__22281;
n = G__22282;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__22287 = x;
var G__22288 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22287,G__22288) : f.call(null,G__22287,G__22288));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__22289 = y;
var G__22290 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22289,G__22290) : f.call(null,G__22289,G__22290));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__22296 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22296) : cljs.core.to_array.call(null,G__22296));
})();
var G__22297_22299 = a;
var G__22298_22300 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__22297_22299,G__22298_22300);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__22306 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22306) : keyfn.call(null,G__22306));
})(),(function (){var G__22307 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22307) : keyfn.call(null,G__22307));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__22313 = f;
var G__22314 = cljs.core.first(s);
var G__22315 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22313,G__22314,G__22315) : cljs.core.reduce.call(null,G__22313,G__22314,G__22315));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__22316 = val__$1;
var G__22317 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22316,G__22317) : f.call(null,G__22316,G__22317));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22318 = nval;
var G__22319 = cljs.core.next(coll__$1);
val__$1 = G__22318;
coll__$1 = G__22319;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__22323 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22323) : cljs.core.to_array.call(null,G__22323));
})();
var G__22324_22326 = a;
goog.array.shuffle(G__22324_22326);

var G__22325 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__22325) : cljs.core.vec.call(null,G__22325));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__22329 = coll;
if(G__22329){
var bit__14139__auto__ = (G__22329.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14139__auto__) || (G__22329.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__22330 = coll;
if(G__22330){
var bit__14139__auto__ = (G__22330.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14139__auto__) || (G__22330.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__22339 = null;
var G__22339__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__22339__1 = (function (x){
var G__22336 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__22336) : cf.call(null,G__22336));
});
var G__22339__2 = (function (x,y){
var G__22337 = x;
var G__22338 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22337,G__22338) : f.call(null,G__22337,G__22338));
});
G__22339 = function(x,y){
switch(arguments.length){
case 0:
return G__22339__0.call(this);
case 1:
return G__22339__1.call(this,x);
case 2:
return G__22339__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22339.cljs$core$IFn$_invoke$arity$0 = G__22339__0;
G__22339.cljs$core$IFn$_invoke$arity$1 = G__22339__1;
G__22339.cljs$core$IFn$_invoke$arity$2 = G__22339__2;
return G__22339;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__22346 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22346) : xform.call(null,G__22346));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__22347 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__22347) : f__$1.call(null,G__22347));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__22348__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__22348 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22349__i = 0, G__22349__a = new Array(arguments.length -  2);
while (G__22349__i < G__22349__a.length) {G__22349__a[G__22349__i] = arguments[G__22349__i + 2]; ++G__22349__i;}
  more = new cljs.core.IndexedSeq(G__22349__a,0);
} 
return G__22348__delegate.call(this,x,y,more);};
G__22348.cljs$lang$maxFixedArity = 2;
G__22348.cljs$lang$applyTo = (function (arglist__22350){
var x = cljs.core.first(arglist__22350);
arglist__22350 = cljs.core.next(arglist__22350);
var y = cljs.core.first(arglist__22350);
var more = cljs.core.rest(arglist__22350);
return G__22348__delegate(x,y,more);
});
G__22348.cljs$core$IFn$_invoke$arity$variadic = G__22348__delegate;
return G__22348;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__22351 = null;
if (arguments.length > 2) {
var G__22352__i = 0, G__22352__a = new Array(arguments.length -  2);
while (G__22352__i < G__22352__a.length) {G__22352__a[G__22352__i] = arguments[G__22352__i + 2]; ++G__22352__i;}
G__22351 = new cljs.core.IndexedSeq(G__22352__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__22353__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__22353 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22354__i = 0, G__22354__a = new Array(arguments.length -  2);
while (G__22354__i < G__22354__a.length) {G__22354__a[G__22354__i] = arguments[G__22354__i + 2]; ++G__22354__i;}
  more = new cljs.core.IndexedSeq(G__22354__a,0);
} 
return G__22353__delegate.call(this,x,y,more);};
G__22353.cljs$lang$maxFixedArity = 2;
G__22353.cljs$lang$applyTo = (function (arglist__22355){
var x = cljs.core.first(arglist__22355);
arglist__22355 = cljs.core.next(arglist__22355);
var y = cljs.core.first(arglist__22355);
var more = cljs.core.rest(arglist__22355);
return G__22353__delegate(x,y,more);
});
G__22353.cljs$core$IFn$_invoke$arity$variadic = G__22353__delegate;
return G__22353;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__22356 = null;
if (arguments.length > 2) {
var G__22357__i = 0, G__22357__a = new Array(arguments.length -  2);
while (G__22357__i < G__22357__a.length) {G__22357__a[G__22357__i] = arguments[G__22357__i + 2]; ++G__22357__i;}
G__22356 = new cljs.core.IndexedSeq(G__22357__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__22358__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__22358 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22359__i = 0, G__22359__a = new Array(arguments.length -  2);
while (G__22359__i < G__22359__a.length) {G__22359__a[G__22359__i] = arguments[G__22359__i + 2]; ++G__22359__i;}
  more = new cljs.core.IndexedSeq(G__22359__a,0);
} 
return G__22358__delegate.call(this,x,y,more);};
G__22358.cljs$lang$maxFixedArity = 2;
G__22358.cljs$lang$applyTo = (function (arglist__22360){
var x = cljs.core.first(arglist__22360);
arglist__22360 = cljs.core.next(arglist__22360);
var y = cljs.core.first(arglist__22360);
var more = cljs.core.rest(arglist__22360);
return G__22358__delegate(x,y,more);
});
G__22358.cljs$core$IFn$_invoke$arity$variadic = G__22358__delegate;
return G__22358;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__22361 = null;
if (arguments.length > 2) {
var G__22362__i = 0, G__22362__a = new Array(arguments.length -  2);
while (G__22362__i < G__22362__a.length) {G__22362__a[G__22362__i] = arguments[G__22362__i + 2]; ++G__22362__i;}
G__22361 = new cljs.core.IndexedSeq(G__22362__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22361);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__22367__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22367 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22368__i = 0, G__22368__a = new Array(arguments.length -  2);
while (G__22368__i < G__22368__a.length) {G__22368__a[G__22368__i] = arguments[G__22368__i + 2]; ++G__22368__i;}
  more = new cljs.core.IndexedSeq(G__22368__a,0);
} 
return G__22367__delegate.call(this,x,y,more);};
G__22367.cljs$lang$maxFixedArity = 2;
G__22367.cljs$lang$applyTo = (function (arglist__22369){
var x = cljs.core.first(arglist__22369);
arglist__22369 = cljs.core.next(arglist__22369);
var y = cljs.core.first(arglist__22369);
var more = cljs.core.rest(arglist__22369);
return G__22367__delegate(x,y,more);
});
G__22367.cljs$core$IFn$_invoke$arity$variadic = G__22367__delegate;
return G__22367;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__22370 = null;
if (arguments.length > 2) {
var G__22371__i = 0, G__22371__a = new Array(arguments.length -  2);
while (G__22371__i < G__22371__a.length) {G__22371__a[G__22371__i] = arguments[G__22371__i + 2]; ++G__22371__i;}
G__22370 = new cljs.core.IndexedSeq(G__22371__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__22372__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__22373 = y;
var G__22374 = cljs.core.first(more);
var G__22375 = cljs.core.next(more);
x = G__22373;
y = G__22374;
more = G__22375;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22372 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22376__i = 0, G__22376__a = new Array(arguments.length -  2);
while (G__22376__i < G__22376__a.length) {G__22376__a[G__22376__i] = arguments[G__22376__i + 2]; ++G__22376__i;}
  more = new cljs.core.IndexedSeq(G__22376__a,0);
} 
return G__22372__delegate.call(this,x,y,more);};
G__22372.cljs$lang$maxFixedArity = 2;
G__22372.cljs$lang$applyTo = (function (arglist__22377){
var x = cljs.core.first(arglist__22377);
arglist__22377 = cljs.core.next(arglist__22377);
var y = cljs.core.first(arglist__22377);
var more = cljs.core.rest(arglist__22377);
return G__22372__delegate(x,y,more);
});
G__22372.cljs$core$IFn$_invoke$arity$variadic = G__22372__delegate;
return G__22372;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__22378 = null;
if (arguments.length > 2) {
var G__22379__i = 0, G__22379__a = new Array(arguments.length -  2);
while (G__22379__i < G__22379__a.length) {G__22379__a[G__22379__i] = arguments[G__22379__i + 2]; ++G__22379__i;}
G__22378 = new cljs.core.IndexedSeq(G__22379__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22378);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__22380__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__22381 = y;
var G__22382 = cljs.core.first(more);
var G__22383 = cljs.core.next(more);
x = G__22381;
y = G__22382;
more = G__22383;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22380 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22384__i = 0, G__22384__a = new Array(arguments.length -  2);
while (G__22384__i < G__22384__a.length) {G__22384__a[G__22384__i] = arguments[G__22384__i + 2]; ++G__22384__i;}
  more = new cljs.core.IndexedSeq(G__22384__a,0);
} 
return G__22380__delegate.call(this,x,y,more);};
G__22380.cljs$lang$maxFixedArity = 2;
G__22380.cljs$lang$applyTo = (function (arglist__22385){
var x = cljs.core.first(arglist__22385);
arglist__22385 = cljs.core.next(arglist__22385);
var y = cljs.core.first(arglist__22385);
var more = cljs.core.rest(arglist__22385);
return G__22380__delegate(x,y,more);
});
G__22380.cljs$core$IFn$_invoke$arity$variadic = G__22380__delegate;
return G__22380;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__22386 = null;
if (arguments.length > 2) {
var G__22387__i = 0, G__22387__a = new Array(arguments.length -  2);
while (G__22387__i < G__22387__a.length) {G__22387__a[G__22387__i] = arguments[G__22387__i + 2]; ++G__22387__i;}
G__22386 = new cljs.core.IndexedSeq(G__22387__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22386);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__22388__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__22389 = y;
var G__22390 = cljs.core.first(more);
var G__22391 = cljs.core.next(more);
x = G__22389;
y = G__22390;
more = G__22391;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22388 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22392__i = 0, G__22392__a = new Array(arguments.length -  2);
while (G__22392__i < G__22392__a.length) {G__22392__a[G__22392__i] = arguments[G__22392__i + 2]; ++G__22392__i;}
  more = new cljs.core.IndexedSeq(G__22392__a,0);
} 
return G__22388__delegate.call(this,x,y,more);};
G__22388.cljs$lang$maxFixedArity = 2;
G__22388.cljs$lang$applyTo = (function (arglist__22393){
var x = cljs.core.first(arglist__22393);
arglist__22393 = cljs.core.next(arglist__22393);
var y = cljs.core.first(arglist__22393);
var more = cljs.core.rest(arglist__22393);
return G__22388__delegate(x,y,more);
});
G__22388.cljs$core$IFn$_invoke$arity$variadic = G__22388__delegate;
return G__22388;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__22394 = null;
if (arguments.length > 2) {
var G__22395__i = 0, G__22395__a = new Array(arguments.length -  2);
while (G__22395__i < G__22395__a.length) {G__22395__a[G__22395__i] = arguments[G__22395__i + 2]; ++G__22395__i;}
G__22394 = new cljs.core.IndexedSeq(G__22395__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22394);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__22396__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__22397 = y;
var G__22398 = cljs.core.first(more);
var G__22399 = cljs.core.next(more);
x = G__22397;
y = G__22398;
more = G__22399;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22396 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22400__i = 0, G__22400__a = new Array(arguments.length -  2);
while (G__22400__i < G__22400__a.length) {G__22400__a[G__22400__i] = arguments[G__22400__i + 2]; ++G__22400__i;}
  more = new cljs.core.IndexedSeq(G__22400__a,0);
} 
return G__22396__delegate.call(this,x,y,more);};
G__22396.cljs$lang$maxFixedArity = 2;
G__22396.cljs$lang$applyTo = (function (arglist__22401){
var x = cljs.core.first(arglist__22401);
arglist__22401 = cljs.core.next(arglist__22401);
var y = cljs.core.first(arglist__22401);
var more = cljs.core.rest(arglist__22401);
return G__22396__delegate(x,y,more);
});
G__22396.cljs$core$IFn$_invoke$arity$variadic = G__22396__delegate;
return G__22396;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__22402 = null;
if (arguments.length > 2) {
var G__22403__i = 0, G__22403__a = new Array(arguments.length -  2);
while (G__22403__i < G__22403__a.length) {G__22403__a[G__22403__i] = arguments[G__22403__i + 2]; ++G__22403__i;}
G__22402 = new cljs.core.IndexedSeq(G__22403__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__13782__auto__ = x;
var y__13783__auto__ = y;
return ((x__13782__auto__ > y__13783__auto__) ? x__13782__auto__ : y__13783__auto__);
});
var max__3 = (function() { 
var G__22404__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__13782__auto__ = x;
var y__13783__auto__ = y;
return ((x__13782__auto__ > y__13783__auto__) ? x__13782__auto__ : y__13783__auto__);
})(),more);
};
var G__22404 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22405__i = 0, G__22405__a = new Array(arguments.length -  2);
while (G__22405__i < G__22405__a.length) {G__22405__a[G__22405__i] = arguments[G__22405__i + 2]; ++G__22405__i;}
  more = new cljs.core.IndexedSeq(G__22405__a,0);
} 
return G__22404__delegate.call(this,x,y,more);};
G__22404.cljs$lang$maxFixedArity = 2;
G__22404.cljs$lang$applyTo = (function (arglist__22406){
var x = cljs.core.first(arglist__22406);
arglist__22406 = cljs.core.next(arglist__22406);
var y = cljs.core.first(arglist__22406);
var more = cljs.core.rest(arglist__22406);
return G__22404__delegate(x,y,more);
});
G__22404.cljs$core$IFn$_invoke$arity$variadic = G__22404__delegate;
return G__22404;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__22407 = null;
if (arguments.length > 2) {
var G__22408__i = 0, G__22408__a = new Array(arguments.length -  2);
while (G__22408__i < G__22408__a.length) {G__22408__a[G__22408__i] = arguments[G__22408__i + 2]; ++G__22408__i;}
G__22407 = new cljs.core.IndexedSeq(G__22408__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__13789__auto__ = x;
var y__13790__auto__ = y;
return ((x__13789__auto__ < y__13790__auto__) ? x__13789__auto__ : y__13790__auto__);
});
var min__3 = (function() { 
var G__22409__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__13789__auto__ = x;
var y__13790__auto__ = y;
return ((x__13789__auto__ < y__13790__auto__) ? x__13789__auto__ : y__13790__auto__);
})(),more);
};
var G__22409 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22410__i = 0, G__22410__a = new Array(arguments.length -  2);
while (G__22410__i < G__22410__a.length) {G__22410__a[G__22410__i] = arguments[G__22410__i + 2]; ++G__22410__i;}
  more = new cljs.core.IndexedSeq(G__22410__a,0);
} 
return G__22409__delegate.call(this,x,y,more);};
G__22409.cljs$lang$maxFixedArity = 2;
G__22409.cljs$lang$applyTo = (function (arglist__22411){
var x = cljs.core.first(arglist__22411);
arglist__22411 = cljs.core.next(arglist__22411);
var y = cljs.core.first(arglist__22411);
var more = cljs.core.rest(arglist__22411);
return G__22409__delegate(x,y,more);
});
G__22409.cljs$core$IFn$_invoke$arity$variadic = G__22409__delegate;
return G__22409;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__22412 = null;
if (arguments.length > 2) {
var G__22413__i = 0, G__22413__a = new Array(arguments.length -  2);
while (G__22413__i < G__22413__a.length) {G__22413__a[G__22413__i] = arguments[G__22413__i + 2]; ++G__22413__i;}
G__22412 = new cljs.core.IndexedSeq(G__22413__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__22414__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__22414 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22415__i = 0, G__22415__a = new Array(arguments.length -  2);
while (G__22415__i < G__22415__a.length) {G__22415__a[G__22415__i] = arguments[G__22415__i + 2]; ++G__22415__i;}
  more = new cljs.core.IndexedSeq(G__22415__a,0);
} 
return G__22414__delegate.call(this,x,y,more);};
G__22414.cljs$lang$maxFixedArity = 2;
G__22414.cljs$lang$applyTo = (function (arglist__22416){
var x = cljs.core.first(arglist__22416);
arglist__22416 = cljs.core.next(arglist__22416);
var y = cljs.core.first(arglist__22416);
var more = cljs.core.rest(arglist__22416);
return G__22414__delegate(x,y,more);
});
G__22414.cljs$core$IFn$_invoke$arity$variadic = G__22414__delegate;
return G__22414;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__22417 = null;
if (arguments.length > 2) {
var G__22418__i = 0, G__22418__a = new Array(arguments.length -  2);
while (G__22418__i < G__22418__a.length) {G__22418__a[G__22418__i] = arguments[G__22418__i + 2]; ++G__22418__i;}
G__22417 = new cljs.core.IndexedSeq(G__22418__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__22419__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__22419 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22420__i = 0, G__22420__a = new Array(arguments.length -  2);
while (G__22420__i < G__22420__a.length) {G__22420__a[G__22420__i] = arguments[G__22420__i + 2]; ++G__22420__i;}
  more = new cljs.core.IndexedSeq(G__22420__a,0);
} 
return G__22419__delegate.call(this,x,y,more);};
G__22419.cljs$lang$maxFixedArity = 2;
G__22419.cljs$lang$applyTo = (function (arglist__22421){
var x = cljs.core.first(arglist__22421);
arglist__22421 = cljs.core.next(arglist__22421);
var y = cljs.core.first(arglist__22421);
var more = cljs.core.rest(arglist__22421);
return G__22419__delegate(x,y,more);
});
G__22419.cljs$core$IFn$_invoke$arity$variadic = G__22419__delegate;
return G__22419;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__22422 = null;
if (arguments.length > 2) {
var G__22423__i = 0, G__22423__a = new Array(arguments.length -  2);
while (G__22423__i < G__22423__a.length) {G__22423__a[G__22423__i] = arguments[G__22423__i + 2]; ++G__22423__i;}
G__22422 = new cljs.core.IndexedSeq(G__22423__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__22428__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22428 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22429__i = 0, G__22429__a = new Array(arguments.length -  2);
while (G__22429__i < G__22429__a.length) {G__22429__a[G__22429__i] = arguments[G__22429__i + 2]; ++G__22429__i;}
  more = new cljs.core.IndexedSeq(G__22429__a,0);
} 
return G__22428__delegate.call(this,x,y,more);};
G__22428.cljs$lang$maxFixedArity = 2;
G__22428.cljs$lang$applyTo = (function (arglist__22430){
var x = cljs.core.first(arglist__22430);
arglist__22430 = cljs.core.next(arglist__22430);
var y = cljs.core.first(arglist__22430);
var more = cljs.core.rest(arglist__22430);
return G__22428__delegate(x,y,more);
});
G__22428.cljs$core$IFn$_invoke$arity$variadic = G__22428__delegate;
return G__22428;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__22431 = null;
if (arguments.length > 2) {
var G__22432__i = 0, G__22432__a = new Array(arguments.length -  2);
while (G__22432__i < G__22432__a.length) {G__22432__a[G__22432__i] = arguments[G__22432__i + 2]; ++G__22432__i;}
G__22431 = new cljs.core.IndexedSeq(G__22432__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__22433__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__22433 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22434__i = 0, G__22434__a = new Array(arguments.length -  2);
while (G__22434__i < G__22434__a.length) {G__22434__a[G__22434__i] = arguments[G__22434__i + 2]; ++G__22434__i;}
  more = new cljs.core.IndexedSeq(G__22434__a,0);
} 
return G__22433__delegate.call(this,x,y,more);};
G__22433.cljs$lang$maxFixedArity = 2;
G__22433.cljs$lang$applyTo = (function (arglist__22435){
var x = cljs.core.first(arglist__22435);
arglist__22435 = cljs.core.next(arglist__22435);
var y = cljs.core.first(arglist__22435);
var more = cljs.core.rest(arglist__22435);
return G__22433__delegate(x,y,more);
});
G__22433.cljs$core$IFn$_invoke$arity$variadic = G__22433__delegate;
return G__22433;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__22436 = null;
if (arguments.length > 2) {
var G__22437__i = 0, G__22437__a = new Array(arguments.length -  2);
while (G__22437__i < G__22437__a.length) {G__22437__a[G__22437__i] = arguments[G__22437__i + 2]; ++G__22437__i;}
G__22436 = new cljs.core.IndexedSeq(G__22437__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__22438__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__22438 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22439__i = 0, G__22439__a = new Array(arguments.length -  2);
while (G__22439__i < G__22439__a.length) {G__22439__a[G__22439__i] = arguments[G__22439__i + 2]; ++G__22439__i;}
  more = new cljs.core.IndexedSeq(G__22439__a,0);
} 
return G__22438__delegate.call(this,x,y,more);};
G__22438.cljs$lang$maxFixedArity = 2;
G__22438.cljs$lang$applyTo = (function (arglist__22440){
var x = cljs.core.first(arglist__22440);
arglist__22440 = cljs.core.next(arglist__22440);
var y = cljs.core.first(arglist__22440);
var more = cljs.core.rest(arglist__22440);
return G__22438__delegate(x,y,more);
});
G__22438.cljs$core$IFn$_invoke$arity$variadic = G__22438__delegate;
return G__22438;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__22441 = null;
if (arguments.length > 2) {
var G__22442__i = 0, G__22442__a = new Array(arguments.length -  2);
while (G__22442__i < G__22442__a.length) {G__22442__a[G__22442__i] = arguments[G__22442__i + 2]; ++G__22442__i;}
G__22441 = new cljs.core.IndexedSeq(G__22442__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__22445 = x;
var G__22446 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__22445,G__22446) : cljs.core.mod.call(null,G__22445,G__22446));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__22447__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__22447 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22448__i = 0, G__22448__a = new Array(arguments.length -  2);
while (G__22448__i < G__22448__a.length) {G__22448__a[G__22448__i] = arguments[G__22448__i + 2]; ++G__22448__i;}
  more = new cljs.core.IndexedSeq(G__22448__a,0);
} 
return G__22447__delegate.call(this,x,y,more);};
G__22447.cljs$lang$maxFixedArity = 2;
G__22447.cljs$lang$applyTo = (function (arglist__22449){
var x = cljs.core.first(arglist__22449);
arglist__22449 = cljs.core.next(arglist__22449);
var y = cljs.core.first(arglist__22449);
var more = cljs.core.rest(arglist__22449);
return G__22447__delegate(x,y,more);
});
G__22447.cljs$core$IFn$_invoke$arity$variadic = G__22447__delegate;
return G__22447;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__22450 = null;
if (arguments.length > 2) {
var G__22451__i = 0, G__22451__a = new Array(arguments.length -  2);
while (G__22451__i < G__22451__a.length) {G__22451__a[G__22451__i] = arguments[G__22451__i + 2]; ++G__22451__i;}
G__22450 = new cljs.core.IndexedSeq(G__22451__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__22452__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__22452 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22453__i = 0, G__22453__a = new Array(arguments.length -  2);
while (G__22453__i < G__22453__a.length) {G__22453__a[G__22453__i] = arguments[G__22453__i + 2]; ++G__22453__i;}
  more = new cljs.core.IndexedSeq(G__22453__a,0);
} 
return G__22452__delegate.call(this,x,y,more);};
G__22452.cljs$lang$maxFixedArity = 2;
G__22452.cljs$lang$applyTo = (function (arglist__22454){
var x = cljs.core.first(arglist__22454);
arglist__22454 = cljs.core.next(arglist__22454);
var y = cljs.core.first(arglist__22454);
var more = cljs.core.rest(arglist__22454);
return G__22452__delegate(x,y,more);
});
G__22452.cljs$core$IFn$_invoke$arity$variadic = G__22452__delegate;
return G__22452;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__22455 = null;
if (arguments.length > 2) {
var G__22456__i = 0, G__22456__a = new Array(arguments.length -  2);
while (G__22456__i < G__22456__a.length) {G__22456__a[G__22456__i] = arguments[G__22456__i + 2]; ++G__22456__i;}
G__22455 = new cljs.core.IndexedSeq(G__22456__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__22459 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22459) : Math.floor.call(null,G__22459));
} else {
var G__22460 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22460) : Math.ceil.call(null,G__22460));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__22461__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__22461 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22462__i = 0, G__22462__a = new Array(arguments.length -  2);
while (G__22462__i < G__22462__a.length) {G__22462__a[G__22462__i] = arguments[G__22462__i + 2]; ++G__22462__i;}
  more = new cljs.core.IndexedSeq(G__22462__a,0);
} 
return G__22461__delegate.call(this,x,y,more);};
G__22461.cljs$lang$maxFixedArity = 2;
G__22461.cljs$lang$applyTo = (function (arglist__22463){
var x = cljs.core.first(arglist__22463);
arglist__22463 = cljs.core.next(arglist__22463);
var y = cljs.core.first(arglist__22463);
var more = cljs.core.rest(arglist__22463);
return G__22461__delegate(x,y,more);
});
G__22461.cljs$core$IFn$_invoke$arity$variadic = G__22461__delegate;
return G__22461;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__22464 = null;
if (arguments.length > 2) {
var G__22465__i = 0, G__22465__a = new Array(arguments.length -  2);
while (G__22465__i < G__22465__a.length) {G__22465__a[G__22465__i] = arguments[G__22465__i + 2]; ++G__22465__i;}
G__22464 = new cljs.core.IndexedSeq(G__22465__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22464);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__22466__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__22466 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22467__i = 0, G__22467__a = new Array(arguments.length -  2);
while (G__22467__i < G__22467__a.length) {G__22467__a[G__22467__i] = arguments[G__22467__i + 2]; ++G__22467__i;}
  more = new cljs.core.IndexedSeq(G__22467__a,0);
} 
return G__22466__delegate.call(this,x,y,more);};
G__22466.cljs$lang$maxFixedArity = 2;
G__22466.cljs$lang$applyTo = (function (arglist__22468){
var x = cljs.core.first(arglist__22468);
arglist__22468 = cljs.core.next(arglist__22468);
var y = cljs.core.first(arglist__22468);
var more = cljs.core.rest(arglist__22468);
return G__22466__delegate(x,y,more);
});
G__22466.cljs$core$IFn$_invoke$arity$variadic = G__22466__delegate;
return G__22466;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__22469 = null;
if (arguments.length > 2) {
var G__22470__i = 0, G__22470__a = new Array(arguments.length -  2);
while (G__22470__i < G__22470__a.length) {G__22470__a[G__22470__i] = arguments[G__22470__i + 2]; ++G__22470__i;}
G__22469 = new cljs.core.IndexedSeq(G__22470__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__22471__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__22471 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22472__i = 0, G__22472__a = new Array(arguments.length -  2);
while (G__22472__i < G__22472__a.length) {G__22472__a[G__22472__i] = arguments[G__22472__i + 2]; ++G__22472__i;}
  more = new cljs.core.IndexedSeq(G__22472__a,0);
} 
return G__22471__delegate.call(this,x,y,more);};
G__22471.cljs$lang$maxFixedArity = 2;
G__22471.cljs$lang$applyTo = (function (arglist__22473){
var x = cljs.core.first(arglist__22473);
arglist__22473 = cljs.core.next(arglist__22473);
var y = cljs.core.first(arglist__22473);
var more = cljs.core.rest(arglist__22473);
return G__22471__delegate(x,y,more);
});
G__22471.cljs$core$IFn$_invoke$arity$variadic = G__22471__delegate;
return G__22471;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__22474 = null;
if (arguments.length > 2) {
var G__22475__i = 0, G__22475__a = new Array(arguments.length -  2);
while (G__22475__i < G__22475__a.length) {G__22475__a[G__22475__i] = arguments[G__22475__i + 2]; ++G__22475__i;}
G__22474 = new cljs.core.IndexedSeq(G__22475__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__22476__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__22476 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22477__i = 0, G__22477__a = new Array(arguments.length -  2);
while (G__22477__i < G__22477__a.length) {G__22477__a[G__22477__i] = arguments[G__22477__i + 2]; ++G__22477__i;}
  more = new cljs.core.IndexedSeq(G__22477__a,0);
} 
return G__22476__delegate.call(this,x,y,more);};
G__22476.cljs$lang$maxFixedArity = 2;
G__22476.cljs$lang$applyTo = (function (arglist__22478){
var x = cljs.core.first(arglist__22478);
arglist__22478 = cljs.core.next(arglist__22478);
var y = cljs.core.first(arglist__22478);
var more = cljs.core.rest(arglist__22478);
return G__22476__delegate(x,y,more);
});
G__22476.cljs$core$IFn$_invoke$arity$variadic = G__22476__delegate;
return G__22476;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__22479 = null;
if (arguments.length > 2) {
var G__22480__i = 0, G__22480__a = new Array(arguments.length -  2);
while (G__22480__i < G__22480__a.length) {G__22480__a[G__22480__i] = arguments[G__22480__i + 2]; ++G__22480__i;}
G__22479 = new cljs.core.IndexedSeq(G__22480__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22479);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__22485__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__22486 = y;
var G__22487 = cljs.core.first(more);
var G__22488 = cljs.core.next(more);
x = G__22486;
y = G__22487;
more = G__22488;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22485 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22489__i = 0, G__22489__a = new Array(arguments.length -  2);
while (G__22489__i < G__22489__a.length) {G__22489__a[G__22489__i] = arguments[G__22489__i + 2]; ++G__22489__i;}
  more = new cljs.core.IndexedSeq(G__22489__a,0);
} 
return G__22485__delegate.call(this,x,y,more);};
G__22485.cljs$lang$maxFixedArity = 2;
G__22485.cljs$lang$applyTo = (function (arglist__22490){
var x = cljs.core.first(arglist__22490);
arglist__22490 = cljs.core.next(arglist__22490);
var y = cljs.core.first(arglist__22490);
var more = cljs.core.rest(arglist__22490);
return G__22485__delegate(x,y,more);
});
G__22485.cljs$core$IFn$_invoke$arity$variadic = G__22485__delegate;
return G__22485;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__22491 = null;
if (arguments.length > 2) {
var G__22492__i = 0, G__22492__a = new Array(arguments.length -  2);
while (G__22492__i < G__22492__a.length) {G__22492__a[G__22492__i] = arguments[G__22492__i + 2]; ++G__22492__i;}
G__22491 = new cljs.core.IndexedSeq(G__22492__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__22493 = (n__$1 - (1));
var G__22494 = cljs.core.next(xs);
n__$1 = G__22493;
xs = G__22494;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__22498 = x;
return goog.string.buildString(G__22498);
}
});
var str__2 = (function() { 
var G__22499__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__22500 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__22501 = cljs.core.next(more);
sb = G__22500;
more = G__22501;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__22499 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__22502__i = 0, G__22502__a = new Array(arguments.length -  1);
while (G__22502__i < G__22502__a.length) {G__22502__a[G__22502__i] = arguments[G__22502__i + 1]; ++G__22502__i;}
  ys = new cljs.core.IndexedSeq(G__22502__a,0);
} 
return G__22499__delegate.call(this,x,ys);};
G__22499.cljs$lang$maxFixedArity = 1;
G__22499.cljs$lang$applyTo = (function (arglist__22503){
var x = cljs.core.first(arglist__22503);
var ys = cljs.core.rest(arglist__22503);
return G__22499__delegate(x,ys);
});
G__22499.cljs$core$IFn$_invoke$arity$variadic = G__22499__delegate;
return G__22499;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__22504 = null;
if (arguments.length > 1) {
var G__22505__i = 0, G__22505__a = new Array(arguments.length -  1);
while (G__22505__i < G__22505__a.length) {G__22505__a[G__22505__i] = arguments[G__22505__i + 1]; ++G__22505__i;}
G__22504 = new cljs.core.IndexedSeq(G__22505__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__22506 = cljs.core.next(xs);
var G__22507 = cljs.core.next(ys);
xs = G__22506;
ys = G__22507;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__22508 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__22509 = cljs.core.next(s);
res = G__22508;
s = G__22509;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__22514 = ((h + (cljs.core.hash((function (){var G__22512 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22512) : cljs.core.key.call(null,G__22512));
})()) ^ cljs.core.hash((function (){var G__22513 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22513) : cljs.core.val.call(null,G__22513));
})()))) % (4503599627370496));
var G__22515 = cljs.core.next(s);
h = G__22514;
s = G__22515;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__22516 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__22517 = cljs.core.next(s__$1);
h = G__22516;
s__$1 = G__22517;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__22528_22538 = cljs.core.seq(fn_map);
var chunk__22529_22539 = null;
var count__22530_22540 = (0);
var i__22531_22541 = (0);
while(true){
if((i__22531_22541 < count__22530_22540)){
var vec__22532_22542 = chunk__22529_22539.cljs$core$IIndexed$_nth$arity$2(null,i__22531_22541);
var key_name_22543 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22532_22542,(0),null);
var f_22544 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22532_22542,(1),null);
var str_name_22545 = (function (){var G__22533 = key_name_22543;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22533) : cljs.core.name.call(null,G__22533));
})();
(obj[str_name_22545] = f_22544);

var G__22546 = seq__22528_22538;
var G__22547 = chunk__22529_22539;
var G__22548 = count__22530_22540;
var G__22549 = (i__22531_22541 + (1));
seq__22528_22538 = G__22546;
chunk__22529_22539 = G__22547;
count__22530_22540 = G__22548;
i__22531_22541 = G__22549;
continue;
} else {
var temp__4126__auto___22550 = cljs.core.seq(seq__22528_22538);
if(temp__4126__auto___22550){
var seq__22528_22551__$1 = temp__4126__auto___22550;
if(cljs.core.chunked_seq_QMARK_(seq__22528_22551__$1)){
var c__14252__auto___22552 = (function (){var G__22534 = seq__22528_22551__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__22534) : cljs.core.chunk_first.call(null,G__22534));
})();
var G__22553 = (function (){var G__22535 = seq__22528_22551__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__22535) : cljs.core.chunk_rest.call(null,G__22535));
})();
var G__22554 = c__14252__auto___22552;
var G__22555 = cljs.core.count(c__14252__auto___22552);
var G__22556 = (0);
seq__22528_22538 = G__22553;
chunk__22529_22539 = G__22554;
count__22530_22540 = G__22555;
i__22531_22541 = G__22556;
continue;
} else {
var vec__22536_22557 = cljs.core.first(seq__22528_22551__$1);
var key_name_22558 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22536_22557,(0),null);
var f_22559 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22536_22557,(1),null);
var str_name_22560 = (function (){var G__22537 = key_name_22558;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22537) : cljs.core.name.call(null,G__22537));
})();
(obj[str_name_22560] = f_22559);

var G__22561 = cljs.core.next(seq__22528_22551__$1);
var G__22562 = null;
var G__22563 = (0);
var G__22564 = (0);
seq__22528_22538 = G__22561;
chunk__22529_22539 = G__22562;
count__22530_22540 = G__22563;
i__22531_22541 = G__22564;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__22566 = coll;
if(G__22566){
var bit__14146__auto__ = (G__22566.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__14146__auto__) || (G__22566.cljs$core$IReversible$)){
return true;
} else {
if((!G__22566.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22566);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22566);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__22567 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__22567;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__22568 = (i - (1));
var G__22569 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__22568;
r = G__22569;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__22570__i = 0, G__22570__a = new Array(arguments.length -  0);
while (G__22570__i < G__22570__a.length) {G__22570__a[G__22570__i] = arguments[G__22570__i + 0]; ++G__22570__i;}
  xs = new cljs.core.IndexedSeq(G__22570__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__22571){
var xs = cljs.core.seq(arglist__22571);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__13465__auto__ = (coll == null);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var G__22575 = coll;
if(G__22575){
var bit__14139__auto__ = (G__22575.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14139__auto__) || (G__22575.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__22577 = x;
if(G__22577){
var bit__14146__auto__ = (G__22577.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__14146__auto__) || (G__22577.cljs$core$IList$)){
return true;
} else {
if((!G__22577.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22577);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22577);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13453__auto__ = cljs.core.not(a.ns);
if(and__13453__auto__){
return b.ns;
} else {
return and__13453__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__22584 = a.ns;
var G__22585 = b.ns;
return goog.array.defaultCompare(G__22584,G__22585);
})();
if(((0) === nsc)){
var G__22586 = a.name;
var G__22587 = b.name;
return goog.array.defaultCompare(G__22586,G__22587);
} else {
return nsc;
}
}
} else {
var G__22588 = a.name;
var G__22589 = b.name;
return goog.array.defaultCompare(G__22588,G__22589);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13886__auto__ = self__._hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__22591 = null;
var G__22591__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__22591__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__22591 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__22591__2.call(this,self__,coll);
case 3:
return G__22591__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22591.cljs$core$IFn$_invoke$arity$2 = G__22591__2;
G__22591.cljs$core$IFn$_invoke$arity$3 = G__22591__3;
return G__22591;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args22590){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22590)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__22593 = x;
if(G__22593){
var bit__14139__auto__ = (G__22593.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__14139__auto__) || (G__22593.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__22595 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22595) : cljs.core.name.call(null,G__22595));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__22596 = ls.sval();
ls = G__22596;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__22598 = s;
if(G__22598){
var bit__14139__auto__ = (G__22598.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__14139__auto__) || (G__22598.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__22599 = cljs.core.next(s__$1);
s__$1 = G__22599;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_22600 = (0);
var xs_22601 = cljs.core.seq(coll);
while(true){
if(xs_22601){
(ret[i_22600] = cljs.core.to_array(cljs.core.first(xs_22601)));

var G__22602 = (i_22600 + (1));
var G__22603 = cljs.core.next(xs_22601);
i_22600 = G__22602;
xs_22601 = G__22603;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22606 = (i + (1));
var G__22607 = cljs.core.next(s__$1);
i = G__22606;
s__$1 = G__22607;
continue;
} else {
return a;
}
break;
}
} else {
var n__14352__auto___22608 = size;
var i_22609 = (0);
while(true){
if((i_22609 < n__14352__auto___22608)){
(a[i_22609] = init_val_or_seq);

var G__22610 = (i_22609 + (1));
i_22609 = G__22610;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22613 = (i + (1));
var G__22614 = cljs.core.next(s__$1);
i = G__22613;
s__$1 = G__22614;
continue;
} else {
return a;
}
break;
}
} else {
var n__14352__auto___22615 = size;
var i_22616 = (0);
while(true){
if((i_22616 < n__14352__auto___22615)){
(a[i_22616] = init_val_or_seq);

var G__22617 = (i_22616 + (1));
i_22616 = G__22617;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22620 = (i + (1));
var G__22621 = cljs.core.next(s__$1);
i = G__22620;
s__$1 = G__22621;
continue;
} else {
return a;
}
break;
}
} else {
var n__14352__auto___22622 = size;
var i_22623 = (0);
while(true){
if((i_22623 < n__14352__auto___22622)){
(a[i_22623] = init_val_or_seq);

var G__22624 = (i_22623 + (1));
i_22623 = G__22624;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22627 = (i + (1));
var G__22628 = cljs.core.next(s__$1);
i = G__22627;
s__$1 = G__22628;
continue;
} else {
return a;
}
break;
}
} else {
var n__14352__auto___22629 = size;
var i_22630 = (0);
while(true){
if((i_22630 < n__14352__auto___22629)){
(a[i_22630] = init_val_or_seq);

var G__22631 = (i_22630 + (1));
i_22630 = G__22631;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__22632 = cljs.core.next(s__$1);
var G__22633 = (i - (1));
var G__22634 = (sum + (1));
s__$1 = G__22632;
i = G__22633;
sum = G__22634;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__22654__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__22654 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22655__i = 0, G__22655__a = new Array(arguments.length -  2);
while (G__22655__i < G__22655__a.length) {G__22655__a[G__22655__i] = arguments[G__22655__i + 2]; ++G__22655__i;}
  zs = new cljs.core.IndexedSeq(G__22655__a,0);
} 
return G__22654__delegate.call(this,x,y,zs);};
G__22654.cljs$lang$maxFixedArity = 2;
G__22654.cljs$lang$applyTo = (function (arglist__22656){
var x = cljs.core.first(arglist__22656);
arglist__22656 = cljs.core.next(arglist__22656);
var y = cljs.core.first(arglist__22656);
var zs = cljs.core.rest(arglist__22656);
return G__22654__delegate(x,y,zs);
});
G__22654.cljs$core$IFn$_invoke$arity$variadic = G__22654__delegate;
return G__22654;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__22657 = null;
if (arguments.length > 2) {
var G__22658__i = 0, G__22658__a = new Array(arguments.length -  2);
while (G__22658__i < G__22658__a.length) {G__22658__a[G__22658__i] = arguments[G__22658__i + 2]; ++G__22658__i;}
G__22657 = new cljs.core.IndexedSeq(G__22658__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__22659__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__22659 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__22660__i = 0, G__22660__a = new Array(arguments.length -  4);
while (G__22660__i < G__22660__a.length) {G__22660__a[G__22660__i] = arguments[G__22660__i + 4]; ++G__22660__i;}
  more = new cljs.core.IndexedSeq(G__22660__a,0);
} 
return G__22659__delegate.call(this,a,b,c,d,more);};
G__22659.cljs$lang$maxFixedArity = 4;
G__22659.cljs$lang$applyTo = (function (arglist__22661){
var a = cljs.core.first(arglist__22661);
arglist__22661 = cljs.core.next(arglist__22661);
var b = cljs.core.first(arglist__22661);
arglist__22661 = cljs.core.next(arglist__22661);
var c = cljs.core.first(arglist__22661);
arglist__22661 = cljs.core.next(arglist__22661);
var d = cljs.core.first(arglist__22661);
var more = cljs.core.rest(arglist__22661);
return G__22659__delegate(a,b,c,d,more);
});
G__22659.cljs$core$IFn$_invoke$arity$variadic = G__22659__delegate;
return G__22659;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__22662 = null;
if (arguments.length > 4) {
var G__22663__i = 0, G__22663__a = new Array(arguments.length -  4);
while (G__22663__i < G__22663__a.length) {G__22663__a[G__22663__i] = arguments[G__22663__i + 4]; ++G__22663__i;}
G__22662 = new cljs.core.IndexedSeq(G__22663__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__22662);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__22664__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22665 = ntcoll;
var G__22666 = cljs.core.first(vals);
var G__22667 = cljs.core.next(vals);
tcoll = G__22665;
val = G__22666;
vals = G__22667;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22664 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22668__i = 0, G__22668__a = new Array(arguments.length -  2);
while (G__22668__i < G__22668__a.length) {G__22668__a[G__22668__i] = arguments[G__22668__i + 2]; ++G__22668__i;}
  vals = new cljs.core.IndexedSeq(G__22668__a,0);
} 
return G__22664__delegate.call(this,tcoll,val,vals);};
G__22664.cljs$lang$maxFixedArity = 2;
G__22664.cljs$lang$applyTo = (function (arglist__22669){
var tcoll = cljs.core.first(arglist__22669);
arglist__22669 = cljs.core.next(arglist__22669);
var val = cljs.core.first(arglist__22669);
var vals = cljs.core.rest(arglist__22669);
return G__22664__delegate(tcoll,val,vals);
});
G__22664.cljs$core$IFn$_invoke$arity$variadic = G__22664__delegate;
return G__22664;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__22670 = null;
if (arguments.length > 2) {
var G__22671__i = 0, G__22671__a = new Array(arguments.length -  2);
while (G__22671__i < G__22671__a.length) {G__22671__a[G__22671__i] = arguments[G__22671__i + 2]; ++G__22671__i;}
G__22670 = new cljs.core.IndexedSeq(G__22671__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22670);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__22672__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__22673 = ntcoll;
var G__22674 = cljs.core.first(kvs);
var G__22675 = cljs.core.second(kvs);
var G__22676 = cljs.core.nnext(kvs);
tcoll = G__22673;
key = G__22674;
val = G__22675;
kvs = G__22676;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22672 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__22677__i = 0, G__22677__a = new Array(arguments.length -  3);
while (G__22677__i < G__22677__a.length) {G__22677__a[G__22677__i] = arguments[G__22677__i + 3]; ++G__22677__i;}
  kvs = new cljs.core.IndexedSeq(G__22677__a,0);
} 
return G__22672__delegate.call(this,tcoll,key,val,kvs);};
G__22672.cljs$lang$maxFixedArity = 3;
G__22672.cljs$lang$applyTo = (function (arglist__22678){
var tcoll = cljs.core.first(arglist__22678);
arglist__22678 = cljs.core.next(arglist__22678);
var key = cljs.core.first(arglist__22678);
arglist__22678 = cljs.core.next(arglist__22678);
var val = cljs.core.first(arglist__22678);
var kvs = cljs.core.rest(arglist__22678);
return G__22672__delegate(tcoll,key,val,kvs);
});
G__22672.cljs$core$IFn$_invoke$arity$variadic = G__22672__delegate;
return G__22672;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__22679 = null;
if (arguments.length > 3) {
var G__22680__i = 0, G__22680__a = new Array(arguments.length -  3);
while (G__22680__i < G__22680__a.length) {G__22680__a[G__22680__i] = arguments[G__22680__i + 3]; ++G__22680__i;}
G__22679 = new cljs.core.IndexedSeq(G__22680__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__22679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__22681__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__22682 = ntcoll;
var G__22683 = cljs.core.first(ks);
var G__22684 = cljs.core.next(ks);
tcoll = G__22682;
key = G__22683;
ks = G__22684;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22681 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22685__i = 0, G__22685__a = new Array(arguments.length -  2);
while (G__22685__i < G__22685__a.length) {G__22685__a[G__22685__i] = arguments[G__22685__i + 2]; ++G__22685__i;}
  ks = new cljs.core.IndexedSeq(G__22685__a,0);
} 
return G__22681__delegate.call(this,tcoll,key,ks);};
G__22681.cljs$lang$maxFixedArity = 2;
G__22681.cljs$lang$applyTo = (function (arglist__22686){
var tcoll = cljs.core.first(arglist__22686);
arglist__22686 = cljs.core.next(arglist__22686);
var key = cljs.core.first(arglist__22686);
var ks = cljs.core.rest(arglist__22686);
return G__22681__delegate(tcoll,key,ks);
});
G__22681.cljs$core$IFn$_invoke$arity$variadic = G__22681__delegate;
return G__22681;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__22687 = null;
if (arguments.length > 2) {
var G__22688__i = 0, G__22688__a = new Array(arguments.length -  2);
while (G__22688__i < G__22688__a.length) {G__22688__a[G__22688__i] = arguments[G__22688__i + 2]; ++G__22688__i;}
G__22687 = new cljs.core.IndexedSeq(G__22688__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__22687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__22689__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22690 = ntcoll;
var G__22691 = cljs.core.first(vals);
var G__22692 = cljs.core.next(vals);
tcoll = G__22690;
val = G__22691;
vals = G__22692;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22689 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22693__i = 0, G__22693__a = new Array(arguments.length -  2);
while (G__22693__i < G__22693__a.length) {G__22693__a[G__22693__i] = arguments[G__22693__i + 2]; ++G__22693__i;}
  vals = new cljs.core.IndexedSeq(G__22693__a,0);
} 
return G__22689__delegate.call(this,tcoll,val,vals);};
G__22689.cljs$lang$maxFixedArity = 2;
G__22689.cljs$lang$applyTo = (function (arglist__22694){
var tcoll = cljs.core.first(arglist__22694);
arglist__22694 = cljs.core.next(arglist__22694);
var val = cljs.core.first(arglist__22694);
var vals = cljs.core.rest(arglist__22694);
return G__22689__delegate(tcoll,val,vals);
});
G__22689.cljs$core$IFn$_invoke$arity$variadic = G__22689__delegate;
return G__22689;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__22695 = null;
if (arguments.length > 2) {
var G__22696__i = 0, G__22696__a = new Array(arguments.length -  2);
while (G__22696__i < G__22696__a.length) {G__22696__a[G__22696__i] = arguments[G__22696__i + 2]; ++G__22696__i;}
G__22695 = new cljs.core.IndexedSeq(G__22696__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a14396 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a14396);
} else {
var G__22907 = a14396;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22907) : f.call(null,G__22907));
}
} else {
var b14397 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a14396,b14397);
} else {
var G__22908 = a14396;
var G__22909 = b14397;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22908,G__22909) : f.call(null,G__22908,G__22909));
}
} else {
var c14398 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a14396,b14397,c14398);
} else {
var G__22910 = a14396;
var G__22911 = b14397;
var G__22912 = c14398;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22910,G__22911,G__22912) : f.call(null,G__22910,G__22911,G__22912));
}
} else {
var d14399 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a14396,b14397,c14398,d14399);
} else {
var G__22913 = a14396;
var G__22914 = b14397;
var G__22915 = c14398;
var G__22916 = d14399;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22913,G__22914,G__22915,G__22916) : f.call(null,G__22913,G__22914,G__22915,G__22916));
}
} else {
var e14400 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a14396,b14397,c14398,d14399,e14400);
} else {
var G__22917 = a14396;
var G__22918 = b14397;
var G__22919 = c14398;
var G__22920 = d14399;
var G__22921 = e14400;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22917,G__22918,G__22919,G__22920,G__22921) : f.call(null,G__22917,G__22918,G__22919,G__22920,G__22921));
}
} else {
var f14401 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a14396,b14397,c14398,d14399,e14400,f14401);
} else {
var G__22922 = a14396;
var G__22923 = b14397;
var G__22924 = c14398;
var G__22925 = d14399;
var G__22926 = e14400;
var G__22927 = f14401;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22922,G__22923,G__22924,G__22925,G__22926,G__22927) : f.call(null,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927));
}
} else {
var g14402 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a14396,b14397,c14398,d14399,e14400,f14401,g14402);
} else {
var G__22928 = a14396;
var G__22929 = b14397;
var G__22930 = c14398;
var G__22931 = d14399;
var G__22932 = e14400;
var G__22933 = f14401;
var G__22934 = g14402;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__22928,G__22929,G__22930,G__22931,G__22932,G__22933,G__22934) : f.call(null,G__22928,G__22929,G__22930,G__22931,G__22932,G__22933,G__22934));
}
} else {
var h14403 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403);
} else {
var G__22935 = a14396;
var G__22936 = b14397;
var G__22937 = c14398;
var G__22938 = d14399;
var G__22939 = e14400;
var G__22940 = f14401;
var G__22941 = g14402;
var G__22942 = h14403;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__22935,G__22936,G__22937,G__22938,G__22939,G__22940,G__22941,G__22942) : f.call(null,G__22935,G__22936,G__22937,G__22938,G__22939,G__22940,G__22941,G__22942));
}
} else {
var i14404 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404);
} else {
var G__22943 = a14396;
var G__22944 = b14397;
var G__22945 = c14398;
var G__22946 = d14399;
var G__22947 = e14400;
var G__22948 = f14401;
var G__22949 = g14402;
var G__22950 = h14403;
var G__22951 = i14404;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949,G__22950,G__22951) : f.call(null,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949,G__22950,G__22951));
}
} else {
var j14405 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405);
} else {
var G__22952 = a14396;
var G__22953 = b14397;
var G__22954 = c14398;
var G__22955 = d14399;
var G__22956 = e14400;
var G__22957 = f14401;
var G__22958 = g14402;
var G__22959 = h14403;
var G__22960 = i14404;
var G__22961 = j14405;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961) : f.call(null,G__22952,G__22953,G__22954,G__22955,G__22956,G__22957,G__22958,G__22959,G__22960,G__22961));
}
} else {
var k14406 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406);
} else {
var G__22962 = a14396;
var G__22963 = b14397;
var G__22964 = c14398;
var G__22965 = d14399;
var G__22966 = e14400;
var G__22967 = f14401;
var G__22968 = g14402;
var G__22969 = h14403;
var G__22970 = i14404;
var G__22971 = j14405;
var G__22972 = k14406;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__22962,G__22963,G__22964,G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972) : f.call(null,G__22962,G__22963,G__22964,G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972));
}
} else {
var l14407 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407);
} else {
var G__22973 = a14396;
var G__22974 = b14397;
var G__22975 = c14398;
var G__22976 = d14399;
var G__22977 = e14400;
var G__22978 = f14401;
var G__22979 = g14402;
var G__22980 = h14403;
var G__22981 = i14404;
var G__22982 = j14405;
var G__22983 = k14406;
var G__22984 = l14407;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__22973,G__22974,G__22975,G__22976,G__22977,G__22978,G__22979,G__22980,G__22981,G__22982,G__22983,G__22984) : f.call(null,G__22973,G__22974,G__22975,G__22976,G__22977,G__22978,G__22979,G__22980,G__22981,G__22982,G__22983,G__22984));
}
} else {
var m14408 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408);
} else {
var G__22985 = a14396;
var G__22986 = b14397;
var G__22987 = c14398;
var G__22988 = d14399;
var G__22989 = e14400;
var G__22990 = f14401;
var G__22991 = g14402;
var G__22992 = h14403;
var G__22993 = i14404;
var G__22994 = j14405;
var G__22995 = k14406;
var G__22996 = l14407;
var G__22997 = m14408;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__22985,G__22986,G__22987,G__22988,G__22989,G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997) : f.call(null,G__22985,G__22986,G__22987,G__22988,G__22989,G__22990,G__22991,G__22992,G__22993,G__22994,G__22995,G__22996,G__22997));
}
} else {
var n14409 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408,n14409);
} else {
var G__22998 = a14396;
var G__22999 = b14397;
var G__23000 = c14398;
var G__23001 = d14399;
var G__23002 = e14400;
var G__23003 = f14401;
var G__23004 = g14402;
var G__23005 = h14403;
var G__23006 = i14404;
var G__23007 = j14405;
var G__23008 = k14406;
var G__23009 = l14407;
var G__23010 = m14408;
var G__23011 = n14409;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__22998,G__22999,G__23000,G__23001,G__23002,G__23003,G__23004,G__23005,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011) : f.call(null,G__22998,G__22999,G__23000,G__23001,G__23002,G__23003,G__23004,G__23005,G__23006,G__23007,G__23008,G__23009,G__23010,G__23011));
}
} else {
var o14410 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408,n14409,o14410);
} else {
var G__23012 = a14396;
var G__23013 = b14397;
var G__23014 = c14398;
var G__23015 = d14399;
var G__23016 = e14400;
var G__23017 = f14401;
var G__23018 = g14402;
var G__23019 = h14403;
var G__23020 = i14404;
var G__23021 = j14405;
var G__23022 = k14406;
var G__23023 = l14407;
var G__23024 = m14408;
var G__23025 = n14409;
var G__23026 = o14410;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023,G__23024,G__23025,G__23026) : f.call(null,G__23012,G__23013,G__23014,G__23015,G__23016,G__23017,G__23018,G__23019,G__23020,G__23021,G__23022,G__23023,G__23024,G__23025,G__23026));
}
} else {
var p14411 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408,n14409,o14410,p14411);
} else {
var G__23027 = a14396;
var G__23028 = b14397;
var G__23029 = c14398;
var G__23030 = d14399;
var G__23031 = e14400;
var G__23032 = f14401;
var G__23033 = g14402;
var G__23034 = h14403;
var G__23035 = i14404;
var G__23036 = j14405;
var G__23037 = k14406;
var G__23038 = l14407;
var G__23039 = m14408;
var G__23040 = n14409;
var G__23041 = o14410;
var G__23042 = p14411;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037,G__23038,G__23039,G__23040,G__23041,G__23042) : f.call(null,G__23027,G__23028,G__23029,G__23030,G__23031,G__23032,G__23033,G__23034,G__23035,G__23036,G__23037,G__23038,G__23039,G__23040,G__23041,G__23042));
}
} else {
var q14412 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408,n14409,o14410,p14411,q14412);
} else {
var G__23043 = a14396;
var G__23044 = b14397;
var G__23045 = c14398;
var G__23046 = d14399;
var G__23047 = e14400;
var G__23048 = f14401;
var G__23049 = g14402;
var G__23050 = h14403;
var G__23051 = i14404;
var G__23052 = j14405;
var G__23053 = k14406;
var G__23054 = l14407;
var G__23055 = m14408;
var G__23056 = n14409;
var G__23057 = o14410;
var G__23058 = p14411;
var G__23059 = q14412;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050,G__23051,G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059) : f.call(null,G__23043,G__23044,G__23045,G__23046,G__23047,G__23048,G__23049,G__23050,G__23051,G__23052,G__23053,G__23054,G__23055,G__23056,G__23057,G__23058,G__23059));
}
} else {
var r14413 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408,n14409,o14410,p14411,q14412,r14413);
} else {
var G__23060 = a14396;
var G__23061 = b14397;
var G__23062 = c14398;
var G__23063 = d14399;
var G__23064 = e14400;
var G__23065 = f14401;
var G__23066 = g14402;
var G__23067 = h14403;
var G__23068 = i14404;
var G__23069 = j14405;
var G__23070 = k14406;
var G__23071 = l14407;
var G__23072 = m14408;
var G__23073 = n14409;
var G__23074 = o14410;
var G__23075 = p14411;
var G__23076 = q14412;
var G__23077 = r14413;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__23060,G__23061,G__23062,G__23063,G__23064,G__23065,G__23066,G__23067,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074,G__23075,G__23076,G__23077) : f.call(null,G__23060,G__23061,G__23062,G__23063,G__23064,G__23065,G__23066,G__23067,G__23068,G__23069,G__23070,G__23071,G__23072,G__23073,G__23074,G__23075,G__23076,G__23077));
}
} else {
var s14414 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408,n14409,o14410,p14411,q14412,r14413,s14414);
} else {
var G__23078 = a14396;
var G__23079 = b14397;
var G__23080 = c14398;
var G__23081 = d14399;
var G__23082 = e14400;
var G__23083 = f14401;
var G__23084 = g14402;
var G__23085 = h14403;
var G__23086 = i14404;
var G__23087 = j14405;
var G__23088 = k14406;
var G__23089 = l14407;
var G__23090 = m14408;
var G__23091 = n14409;
var G__23092 = o14410;
var G__23093 = p14411;
var G__23094 = q14412;
var G__23095 = r14413;
var G__23096 = s14414;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__23078,G__23079,G__23080,G__23081,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096) : f.call(null,G__23078,G__23079,G__23080,G__23081,G__23082,G__23083,G__23084,G__23085,G__23086,G__23087,G__23088,G__23089,G__23090,G__23091,G__23092,G__23093,G__23094,G__23095,G__23096));
}
} else {
var t14415 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a14396,b14397,c14398,d14399,e14400,f14401,g14402,h14403,i14404,j14405,k14406,l14407,m14408,n14409,o14410,p14411,q14412,r14413,s14414,t14415);
} else {
var G__23097 = a14396;
var G__23098 = b14397;
var G__23099 = c14398;
var G__23100 = d14399;
var G__23101 = e14400;
var G__23102 = f14401;
var G__23103 = g14402;
var G__23104 = h14403;
var G__23105 = i14404;
var G__23106 = j14405;
var G__23107 = k14406;
var G__23108 = l14407;
var G__23109 = m14408;
var G__23110 = n14409;
var G__23111 = o14410;
var G__23112 = p14411;
var G__23113 = q14412;
var G__23114 = r14413;
var G__23115 = s14414;
var G__23116 = t14415;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116) : f.call(null,G__23097,G__23098,G__23099,G__23100,G__23101,G__23102,G__23103,G__23104,G__23105,G__23106,G__23107,G__23108,G__23109,G__23110,G__23111,G__23112,G__23113,G__23114,G__23115,G__23116));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__23117__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__23117 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__23118__i = 0, G__23118__a = new Array(arguments.length -  5);
while (G__23118__i < G__23118__a.length) {G__23118__a[G__23118__i] = arguments[G__23118__i + 5]; ++G__23118__i;}
  args = new cljs.core.IndexedSeq(G__23118__a,0);
} 
return G__23117__delegate.call(this,f,a,b,c,d,args);};
G__23117.cljs$lang$maxFixedArity = 5;
G__23117.cljs$lang$applyTo = (function (arglist__23119){
var f = cljs.core.first(arglist__23119);
arglist__23119 = cljs.core.next(arglist__23119);
var a = cljs.core.first(arglist__23119);
arglist__23119 = cljs.core.next(arglist__23119);
var b = cljs.core.first(arglist__23119);
arglist__23119 = cljs.core.next(arglist__23119);
var c = cljs.core.first(arglist__23119);
arglist__23119 = cljs.core.next(arglist__23119);
var d = cljs.core.first(arglist__23119);
var args = cljs.core.rest(arglist__23119);
return G__23117__delegate(f,a,b,c,d,args);
});
G__23117.cljs$core$IFn$_invoke$arity$variadic = G__23117__delegate;
return G__23117;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__23120 = null;
if (arguments.length > 5) {
var G__23121__i = 0, G__23121__a = new Array(arguments.length -  5);
while (G__23121__i < G__23121__a.length) {G__23121__a[G__23121__i] = arguments[G__23121__i + 5]; ++G__23121__i;}
G__23120 = new cljs.core.IndexedSeq(G__23121__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__23120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__23137 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23137) : f.call(null,G__23137));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__23138 = cljs.core.meta(obj);
var G__23139 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23138,G__23139) : f.call(null,G__23138,G__23139));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__23140 = cljs.core.meta(obj);
var G__23141 = a;
var G__23142 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23140,G__23141,G__23142) : f.call(null,G__23140,G__23141,G__23142));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__23143 = cljs.core.meta(obj);
var G__23144 = a;
var G__23145 = b;
var G__23146 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23143,G__23144,G__23145,G__23146) : f.call(null,G__23143,G__23144,G__23145,G__23146));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__23147 = cljs.core.meta(obj);
var G__23148 = a;
var G__23149 = b;
var G__23150 = c;
var G__23151 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23147,G__23148,G__23149,G__23150,G__23151) : f.call(null,G__23147,G__23148,G__23149,G__23150,G__23151));
})());
});
var vary_meta__7 = (function() { 
var G__23152__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__23152 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__23153__i = 0, G__23153__a = new Array(arguments.length -  6);
while (G__23153__i < G__23153__a.length) {G__23153__a[G__23153__i] = arguments[G__23153__i + 6]; ++G__23153__i;}
  args = new cljs.core.IndexedSeq(G__23153__a,0);
} 
return G__23152__delegate.call(this,obj,f,a,b,c,d,args);};
G__23152.cljs$lang$maxFixedArity = 6;
G__23152.cljs$lang$applyTo = (function (arglist__23154){
var obj = cljs.core.first(arglist__23154);
arglist__23154 = cljs.core.next(arglist__23154);
var f = cljs.core.first(arglist__23154);
arglist__23154 = cljs.core.next(arglist__23154);
var a = cljs.core.first(arglist__23154);
arglist__23154 = cljs.core.next(arglist__23154);
var b = cljs.core.first(arglist__23154);
arglist__23154 = cljs.core.next(arglist__23154);
var c = cljs.core.first(arglist__23154);
arglist__23154 = cljs.core.next(arglist__23154);
var d = cljs.core.first(arglist__23154);
var args = cljs.core.rest(arglist__23154);
return G__23152__delegate(obj,f,a,b,c,d,args);
});
G__23152.cljs$core$IFn$_invoke$arity$variadic = G__23152__delegate;
return G__23152;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__23155 = null;
if (arguments.length > 6) {
var G__23156__i = 0, G__23156__a = new Array(arguments.length -  6);
while (G__23156__i < G__23156__a.length) {G__23156__a[G__23156__i] = arguments[G__23156__i + 6]; ++G__23156__i;}
G__23155 = new cljs.core.IndexedSeq(G__23156__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__23155);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__23157__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__23157 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23158__i = 0, G__23158__a = new Array(arguments.length -  2);
while (G__23158__i < G__23158__a.length) {G__23158__a[G__23158__i] = arguments[G__23158__i + 2]; ++G__23158__i;}
  more = new cljs.core.IndexedSeq(G__23158__a,0);
} 
return G__23157__delegate.call(this,x,y,more);};
G__23157.cljs$lang$maxFixedArity = 2;
G__23157.cljs$lang$applyTo = (function (arglist__23159){
var x = cljs.core.first(arglist__23159);
arglist__23159 = cljs.core.next(arglist__23159);
var y = cljs.core.first(arglist__23159);
var more = cljs.core.rest(arglist__23159);
return G__23157__delegate(x,y,more);
});
G__23157.cljs$core$IFn$_invoke$arity$variadic = G__23157__delegate;
return G__23157;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__23160 = null;
if (arguments.length > 2) {
var G__23161__i = 0, G__23161__a = new Array(arguments.length -  2);
while (G__23161__i < G__23161__a.length) {G__23161__a[G__23161__i] = arguments[G__23161__i + 2]; ++G__23161__i;}
G__23160 = new cljs.core.IndexedSeq(G__23161__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t23165 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t23165 = (function (nil_iter,meta23166){
this.nil_iter = nil_iter;
this.meta23166 = meta23166;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t23165.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t23165.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t23165.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t23165.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_23167){
var self__ = this;
var _23167__$1 = this;
return self__.meta23166;
});

cljs.core.t23165.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_23167,meta23166__$1){
var self__ = this;
var _23167__$1 = this;
return (new cljs.core.t23165(self__.nil_iter,meta23166__$1));
});

cljs.core.t23165.cljs$lang$type = true;

cljs.core.t23165.cljs$lang$ctorStr = "cljs.core/t23165";

cljs.core.t23165.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/t23165");
});

cljs.core.__GT_t23165 = (function __GT_t23165(nil_iter__$1,meta23166){
return (new cljs.core.t23165(nil_iter__$1,meta23166));
});

}

return (new cljs.core.t23165(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13453__auto__ = !((lt.stepper == null));
if(and__13453__auto__){
return self__.iter.hasNext();
} else {
return and__13453__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__23168 = lt;
var G__23169 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__23168,G__23169) : self__.xform.call(null,G__23168,G__23169));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__23170 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__23170) : self__.xform.call(null,G__23170));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__23172 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__23172) : xform.call(null,G__23172));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__23174 = cljs.core.next(iters__$1);
iters__$1 = G__23174;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__14352__auto___23175 = self__.iters.length;
var i_23176 = (0);
while(true){
if((i_23176 < n__14352__auto___23175)){
(self__.nexts[i_23176] = (self__.iters[i_23176]).next());

var G__23177 = (i_23176 + (1));
i_23176 = G__23177;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13453__auto__ = !((lt.stepper == null));
if(and__13453__auto__){
return this$.hasNext();
} else {
return and__13453__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__23173 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__23173) : self__.xform.call(null,G__23173));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__23182 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__23182) : xform.call(null,G__23182));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__23183_23187 = cljs.core.seq(colls);
var chunk__23184_23188 = null;
var count__23185_23189 = (0);
var i__23186_23190 = (0);
while(true){
if((i__23186_23190 < count__23185_23189)){
var coll_23191 = chunk__23184_23188.cljs$core$IIndexed$_nth$arity$2(null,i__23186_23190);
iters.push(cljs.core.iter(coll_23191));

var G__23192 = seq__23183_23187;
var G__23193 = chunk__23184_23188;
var G__23194 = count__23185_23189;
var G__23195 = (i__23186_23190 + (1));
seq__23183_23187 = G__23192;
chunk__23184_23188 = G__23193;
count__23185_23189 = G__23194;
i__23186_23190 = G__23195;
continue;
} else {
var temp__4126__auto___23196 = cljs.core.seq(seq__23183_23187);
if(temp__4126__auto___23196){
var seq__23183_23197__$1 = temp__4126__auto___23196;
if(cljs.core.chunked_seq_QMARK_(seq__23183_23197__$1)){
var c__14252__auto___23198 = cljs.core.chunk_first(seq__23183_23197__$1);
var G__23199 = cljs.core.chunk_rest(seq__23183_23197__$1);
var G__23200 = c__14252__auto___23198;
var G__23201 = cljs.core.count(c__14252__auto___23198);
var G__23202 = (0);
seq__23183_23187 = G__23199;
chunk__23184_23188 = G__23200;
count__23185_23189 = G__23201;
i__23186_23190 = G__23202;
continue;
} else {
var coll_23203 = cljs.core.first(seq__23183_23197__$1);
iters.push(cljs.core.iter(coll_23203));

var G__23204 = cljs.core.next(seq__23183_23197__$1);
var G__23205 = null;
var G__23206 = (0);
var G__23207 = (0);
seq__23183_23187 = G__23204;
chunk__23184_23188 = G__23205;
count__23185_23189 = G__23206;
i__23186_23190 = G__23207;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__13465__auto__ = cljs.core.seq(coll);
if(or__13465__auto__){
return or__13465__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__23208__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__23208 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23209__i = 0, G__23209__a = new Array(arguments.length -  2);
while (G__23209__i < G__23209__a.length) {G__23209__a[G__23209__i] = arguments[G__23209__i + 2]; ++G__23209__i;}
  colls = new cljs.core.IndexedSeq(G__23209__a,0);
} 
return G__23208__delegate.call(this,xform,coll,colls);};
G__23208.cljs$lang$maxFixedArity = 2;
G__23208.cljs$lang$applyTo = (function (arglist__23210){
var xform = cljs.core.first(arglist__23210);
arglist__23210 = cljs.core.next(arglist__23210);
var coll = cljs.core.first(arglist__23210);
var colls = cljs.core.rest(arglist__23210);
return G__23208__delegate(xform,coll,colls);
});
G__23208.cljs$core$IFn$_invoke$arity$variadic = G__23208__delegate;
return G__23208;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__23211 = null;
if (arguments.length > 2) {
var G__23212__i = 0, G__23212__a = new Array(arguments.length -  2);
while (G__23212__i < G__23212__a.length) {G__23212__a[G__23212__i] = arguments[G__23212__i + 2]; ++G__23212__i;}
G__23211 = new cljs.core.IndexedSeq(G__23212__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__23211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__23214 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23214) : pred.call(null,G__23214));
})())){
var G__23215 = pred;
var G__23216 = cljs.core.next(coll);
pred = G__23215;
coll = G__23216;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__13465__auto__ = (function (){var G__23220 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23220) : pred.call(null,G__23220));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var G__23221 = pred;
var G__23222 = cljs.core.next(coll);
pred = G__23221;
coll = G__23222;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__23229 = null;
var G__23229__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__23229__1 = (function (x){
return cljs.core.not((function (){var G__23226 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23226) : f.call(null,G__23226));
})());
});
var G__23229__2 = (function (x,y){
return cljs.core.not((function (){var G__23227 = x;
var G__23228 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23227,G__23228) : f.call(null,G__23227,G__23228));
})());
});
var G__23229__3 = (function() { 
var G__23230__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__23230 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__23231__i = 0, G__23231__a = new Array(arguments.length -  2);
while (G__23231__i < G__23231__a.length) {G__23231__a[G__23231__i] = arguments[G__23231__i + 2]; ++G__23231__i;}
  zs = new cljs.core.IndexedSeq(G__23231__a,0);
} 
return G__23230__delegate.call(this,x,y,zs);};
G__23230.cljs$lang$maxFixedArity = 2;
G__23230.cljs$lang$applyTo = (function (arglist__23232){
var x = cljs.core.first(arglist__23232);
arglist__23232 = cljs.core.next(arglist__23232);
var y = cljs.core.first(arglist__23232);
var zs = cljs.core.rest(arglist__23232);
return G__23230__delegate(x,y,zs);
});
G__23230.cljs$core$IFn$_invoke$arity$variadic = G__23230__delegate;
return G__23230;
})()
;
G__23229 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__23229__0.call(this);
case 1:
return G__23229__1.call(this,x);
case 2:
return G__23229__2.call(this,x,y);
default:
var G__23233 = null;
if (arguments.length > 2) {
var G__23234__i = 0, G__23234__a = new Array(arguments.length -  2);
while (G__23234__i < G__23234__a.length) {G__23234__a[G__23234__i] = arguments[G__23234__i + 2]; ++G__23234__i;}
G__23233 = new cljs.core.IndexedSeq(G__23234__a,0);
}
return G__23229__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23229.cljs$lang$maxFixedArity = 2;
G__23229.cljs$lang$applyTo = G__23229__3.cljs$lang$applyTo;
G__23229.cljs$core$IFn$_invoke$arity$0 = G__23229__0;
G__23229.cljs$core$IFn$_invoke$arity$1 = G__23229__1;
G__23229.cljs$core$IFn$_invoke$arity$2 = G__23229__2;
G__23229.cljs$core$IFn$_invoke$arity$variadic = G__23229__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23229;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__23235__delegate = function (args){
return x;
};
var G__23235 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23236__i = 0, G__23236__a = new Array(arguments.length -  0);
while (G__23236__i < G__23236__a.length) {G__23236__a[G__23236__i] = arguments[G__23236__i + 0]; ++G__23236__i;}
  args = new cljs.core.IndexedSeq(G__23236__a,0);
} 
return G__23235__delegate.call(this,args);};
G__23235.cljs$lang$maxFixedArity = 0;
G__23235.cljs$lang$applyTo = (function (arglist__23237){
var args = cljs.core.seq(arglist__23237);
return G__23235__delegate(args);
});
G__23235.cljs$core$IFn$_invoke$arity$variadic = G__23235__delegate;
return G__23235;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__23292 = null;
var G__23292__0 = (function (){
var G__23265 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23265) : f.call(null,G__23265));
});
var G__23292__1 = (function (x){
var G__23266 = (function (){var G__23267 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23267) : g.call(null,G__23267));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23266) : f.call(null,G__23266));
});
var G__23292__2 = (function (x,y){
var G__23268 = (function (){var G__23269 = x;
var G__23270 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23269,G__23270) : g.call(null,G__23269,G__23270));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23268) : f.call(null,G__23268));
});
var G__23292__3 = (function (x,y,z){
var G__23271 = (function (){var G__23272 = x;
var G__23273 = y;
var G__23274 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23272,G__23273,G__23274) : g.call(null,G__23272,G__23273,G__23274));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23271) : f.call(null,G__23271));
});
var G__23292__4 = (function() { 
var G__23293__delegate = function (x,y,z,args){
var G__23275 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23275) : f.call(null,G__23275));
};
var G__23293 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23294__i = 0, G__23294__a = new Array(arguments.length -  3);
while (G__23294__i < G__23294__a.length) {G__23294__a[G__23294__i] = arguments[G__23294__i + 3]; ++G__23294__i;}
  args = new cljs.core.IndexedSeq(G__23294__a,0);
} 
return G__23293__delegate.call(this,x,y,z,args);};
G__23293.cljs$lang$maxFixedArity = 3;
G__23293.cljs$lang$applyTo = (function (arglist__23295){
var x = cljs.core.first(arglist__23295);
arglist__23295 = cljs.core.next(arglist__23295);
var y = cljs.core.first(arglist__23295);
arglist__23295 = cljs.core.next(arglist__23295);
var z = cljs.core.first(arglist__23295);
var args = cljs.core.rest(arglist__23295);
return G__23293__delegate(x,y,z,args);
});
G__23293.cljs$core$IFn$_invoke$arity$variadic = G__23293__delegate;
return G__23293;
})()
;
G__23292 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23292__0.call(this);
case 1:
return G__23292__1.call(this,x);
case 2:
return G__23292__2.call(this,x,y);
case 3:
return G__23292__3.call(this,x,y,z);
default:
var G__23296 = null;
if (arguments.length > 3) {
var G__23297__i = 0, G__23297__a = new Array(arguments.length -  3);
while (G__23297__i < G__23297__a.length) {G__23297__a[G__23297__i] = arguments[G__23297__i + 3]; ++G__23297__i;}
G__23296 = new cljs.core.IndexedSeq(G__23297__a,0);
}
return G__23292__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23292.cljs$lang$maxFixedArity = 3;
G__23292.cljs$lang$applyTo = G__23292__4.cljs$lang$applyTo;
G__23292.cljs$core$IFn$_invoke$arity$0 = G__23292__0;
G__23292.cljs$core$IFn$_invoke$arity$1 = G__23292__1;
G__23292.cljs$core$IFn$_invoke$arity$2 = G__23292__2;
G__23292.cljs$core$IFn$_invoke$arity$3 = G__23292__3;
G__23292.cljs$core$IFn$_invoke$arity$variadic = G__23292__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23292;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__23298 = null;
var G__23298__0 = (function (){
var G__23276 = (function (){var G__23277 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23277) : g.call(null,G__23277));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23276) : f.call(null,G__23276));
});
var G__23298__1 = (function (x){
var G__23278 = (function (){var G__23279 = (function (){var G__23280 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23280) : h.call(null,G__23280));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23279) : g.call(null,G__23279));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23278) : f.call(null,G__23278));
});
var G__23298__2 = (function (x,y){
var G__23281 = (function (){var G__23282 = (function (){var G__23283 = x;
var G__23284 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23283,G__23284) : h.call(null,G__23283,G__23284));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23282) : g.call(null,G__23282));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23281) : f.call(null,G__23281));
});
var G__23298__3 = (function (x,y,z){
var G__23285 = (function (){var G__23286 = (function (){var G__23287 = x;
var G__23288 = y;
var G__23289 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23287,G__23288,G__23289) : h.call(null,G__23287,G__23288,G__23289));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23286) : g.call(null,G__23286));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23285) : f.call(null,G__23285));
});
var G__23298__4 = (function() { 
var G__23299__delegate = function (x,y,z,args){
var G__23290 = (function (){var G__23291 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23291) : g.call(null,G__23291));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23290) : f.call(null,G__23290));
};
var G__23299 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23300__i = 0, G__23300__a = new Array(arguments.length -  3);
while (G__23300__i < G__23300__a.length) {G__23300__a[G__23300__i] = arguments[G__23300__i + 3]; ++G__23300__i;}
  args = new cljs.core.IndexedSeq(G__23300__a,0);
} 
return G__23299__delegate.call(this,x,y,z,args);};
G__23299.cljs$lang$maxFixedArity = 3;
G__23299.cljs$lang$applyTo = (function (arglist__23301){
var x = cljs.core.first(arglist__23301);
arglist__23301 = cljs.core.next(arglist__23301);
var y = cljs.core.first(arglist__23301);
arglist__23301 = cljs.core.next(arglist__23301);
var z = cljs.core.first(arglist__23301);
var args = cljs.core.rest(arglist__23301);
return G__23299__delegate(x,y,z,args);
});
G__23299.cljs$core$IFn$_invoke$arity$variadic = G__23299__delegate;
return G__23299;
})()
;
G__23298 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23298__0.call(this);
case 1:
return G__23298__1.call(this,x);
case 2:
return G__23298__2.call(this,x,y);
case 3:
return G__23298__3.call(this,x,y,z);
default:
var G__23302 = null;
if (arguments.length > 3) {
var G__23303__i = 0, G__23303__a = new Array(arguments.length -  3);
while (G__23303__i < G__23303__a.length) {G__23303__a[G__23303__i] = arguments[G__23303__i + 3]; ++G__23303__i;}
G__23302 = new cljs.core.IndexedSeq(G__23303__a,0);
}
return G__23298__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23298.cljs$lang$maxFixedArity = 3;
G__23298.cljs$lang$applyTo = G__23298__4.cljs$lang$applyTo;
G__23298.cljs$core$IFn$_invoke$arity$0 = G__23298__0;
G__23298.cljs$core$IFn$_invoke$arity$1 = G__23298__1;
G__23298.cljs$core$IFn$_invoke$arity$2 = G__23298__2;
G__23298.cljs$core$IFn$_invoke$arity$3 = G__23298__3;
G__23298.cljs$core$IFn$_invoke$arity$variadic = G__23298__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23298;
})()
});
var comp__4 = (function() { 
var G__23304__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__23305__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__23306 = cljs.core.first(fs__$2).call(null,ret);
var G__23307 = cljs.core.next(fs__$2);
ret = G__23306;
fs__$2 = G__23307;
continue;
} else {
return ret;
}
break;
}
};
var G__23305 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23308__i = 0, G__23308__a = new Array(arguments.length -  0);
while (G__23308__i < G__23308__a.length) {G__23308__a[G__23308__i] = arguments[G__23308__i + 0]; ++G__23308__i;}
  args = new cljs.core.IndexedSeq(G__23308__a,0);
} 
return G__23305__delegate.call(this,args);};
G__23305.cljs$lang$maxFixedArity = 0;
G__23305.cljs$lang$applyTo = (function (arglist__23309){
var args = cljs.core.seq(arglist__23309);
return G__23305__delegate(args);
});
G__23305.cljs$core$IFn$_invoke$arity$variadic = G__23305__delegate;
return G__23305;
})()
;
;})(fs__$1))
};
var G__23304 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23310__i = 0, G__23310__a = new Array(arguments.length -  3);
while (G__23310__i < G__23310__a.length) {G__23310__a[G__23310__i] = arguments[G__23310__i + 3]; ++G__23310__i;}
  fs = new cljs.core.IndexedSeq(G__23310__a,0);
} 
return G__23304__delegate.call(this,f1,f2,f3,fs);};
G__23304.cljs$lang$maxFixedArity = 3;
G__23304.cljs$lang$applyTo = (function (arglist__23311){
var f1 = cljs.core.first(arglist__23311);
arglist__23311 = cljs.core.next(arglist__23311);
var f2 = cljs.core.first(arglist__23311);
arglist__23311 = cljs.core.next(arglist__23311);
var f3 = cljs.core.first(arglist__23311);
var fs = cljs.core.rest(arglist__23311);
return G__23304__delegate(f1,f2,f3,fs);
});
G__23304.cljs$core$IFn$_invoke$arity$variadic = G__23304__delegate;
return G__23304;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__23312 = null;
if (arguments.length > 3) {
var G__23313__i = 0, G__23313__a = new Array(arguments.length -  3);
while (G__23313__i < G__23313__a.length) {G__23313__a[G__23313__i] = arguments[G__23313__i + 3]; ++G__23313__i;}
G__23312 = new cljs.core.IndexedSeq(G__23313__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__23312);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__23398 = null;
var G__23398__0 = (function (){
var G__23356 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23356) : f.call(null,G__23356));
});
var G__23398__1 = (function (x){
var G__23357 = arg1;
var G__23358 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23357,G__23358) : f.call(null,G__23357,G__23358));
});
var G__23398__2 = (function (x,y){
var G__23359 = arg1;
var G__23360 = x;
var G__23361 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23359,G__23360,G__23361) : f.call(null,G__23359,G__23360,G__23361));
});
var G__23398__3 = (function (x,y,z){
var G__23362 = arg1;
var G__23363 = x;
var G__23364 = y;
var G__23365 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23362,G__23363,G__23364,G__23365) : f.call(null,G__23362,G__23363,G__23364,G__23365));
});
var G__23398__4 = (function() { 
var G__23399__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__23399 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23400__i = 0, G__23400__a = new Array(arguments.length -  3);
while (G__23400__i < G__23400__a.length) {G__23400__a[G__23400__i] = arguments[G__23400__i + 3]; ++G__23400__i;}
  args = new cljs.core.IndexedSeq(G__23400__a,0);
} 
return G__23399__delegate.call(this,x,y,z,args);};
G__23399.cljs$lang$maxFixedArity = 3;
G__23399.cljs$lang$applyTo = (function (arglist__23401){
var x = cljs.core.first(arglist__23401);
arglist__23401 = cljs.core.next(arglist__23401);
var y = cljs.core.first(arglist__23401);
arglist__23401 = cljs.core.next(arglist__23401);
var z = cljs.core.first(arglist__23401);
var args = cljs.core.rest(arglist__23401);
return G__23399__delegate(x,y,z,args);
});
G__23399.cljs$core$IFn$_invoke$arity$variadic = G__23399__delegate;
return G__23399;
})()
;
G__23398 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23398__0.call(this);
case 1:
return G__23398__1.call(this,x);
case 2:
return G__23398__2.call(this,x,y);
case 3:
return G__23398__3.call(this,x,y,z);
default:
var G__23402 = null;
if (arguments.length > 3) {
var G__23403__i = 0, G__23403__a = new Array(arguments.length -  3);
while (G__23403__i < G__23403__a.length) {G__23403__a[G__23403__i] = arguments[G__23403__i + 3]; ++G__23403__i;}
G__23402 = new cljs.core.IndexedSeq(G__23403__a,0);
}
return G__23398__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23402);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23398.cljs$lang$maxFixedArity = 3;
G__23398.cljs$lang$applyTo = G__23398__4.cljs$lang$applyTo;
G__23398.cljs$core$IFn$_invoke$arity$0 = G__23398__0;
G__23398.cljs$core$IFn$_invoke$arity$1 = G__23398__1;
G__23398.cljs$core$IFn$_invoke$arity$2 = G__23398__2;
G__23398.cljs$core$IFn$_invoke$arity$3 = G__23398__3;
G__23398.cljs$core$IFn$_invoke$arity$variadic = G__23398__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23398;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__23404 = null;
var G__23404__0 = (function (){
var G__23366 = arg1;
var G__23367 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23366,G__23367) : f.call(null,G__23366,G__23367));
});
var G__23404__1 = (function (x){
var G__23368 = arg1;
var G__23369 = arg2;
var G__23370 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23368,G__23369,G__23370) : f.call(null,G__23368,G__23369,G__23370));
});
var G__23404__2 = (function (x,y){
var G__23371 = arg1;
var G__23372 = arg2;
var G__23373 = x;
var G__23374 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23371,G__23372,G__23373,G__23374) : f.call(null,G__23371,G__23372,G__23373,G__23374));
});
var G__23404__3 = (function (x,y,z){
var G__23375 = arg1;
var G__23376 = arg2;
var G__23377 = x;
var G__23378 = y;
var G__23379 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23375,G__23376,G__23377,G__23378,G__23379) : f.call(null,G__23375,G__23376,G__23377,G__23378,G__23379));
});
var G__23404__4 = (function() { 
var G__23405__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__23405 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23406__i = 0, G__23406__a = new Array(arguments.length -  3);
while (G__23406__i < G__23406__a.length) {G__23406__a[G__23406__i] = arguments[G__23406__i + 3]; ++G__23406__i;}
  args = new cljs.core.IndexedSeq(G__23406__a,0);
} 
return G__23405__delegate.call(this,x,y,z,args);};
G__23405.cljs$lang$maxFixedArity = 3;
G__23405.cljs$lang$applyTo = (function (arglist__23407){
var x = cljs.core.first(arglist__23407);
arglist__23407 = cljs.core.next(arglist__23407);
var y = cljs.core.first(arglist__23407);
arglist__23407 = cljs.core.next(arglist__23407);
var z = cljs.core.first(arglist__23407);
var args = cljs.core.rest(arglist__23407);
return G__23405__delegate(x,y,z,args);
});
G__23405.cljs$core$IFn$_invoke$arity$variadic = G__23405__delegate;
return G__23405;
})()
;
G__23404 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23404__0.call(this);
case 1:
return G__23404__1.call(this,x);
case 2:
return G__23404__2.call(this,x,y);
case 3:
return G__23404__3.call(this,x,y,z);
default:
var G__23408 = null;
if (arguments.length > 3) {
var G__23409__i = 0, G__23409__a = new Array(arguments.length -  3);
while (G__23409__i < G__23409__a.length) {G__23409__a[G__23409__i] = arguments[G__23409__i + 3]; ++G__23409__i;}
G__23408 = new cljs.core.IndexedSeq(G__23409__a,0);
}
return G__23404__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23408);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23404.cljs$lang$maxFixedArity = 3;
G__23404.cljs$lang$applyTo = G__23404__4.cljs$lang$applyTo;
G__23404.cljs$core$IFn$_invoke$arity$0 = G__23404__0;
G__23404.cljs$core$IFn$_invoke$arity$1 = G__23404__1;
G__23404.cljs$core$IFn$_invoke$arity$2 = G__23404__2;
G__23404.cljs$core$IFn$_invoke$arity$3 = G__23404__3;
G__23404.cljs$core$IFn$_invoke$arity$variadic = G__23404__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23404;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__23410 = null;
var G__23410__0 = (function (){
var G__23380 = arg1;
var G__23381 = arg2;
var G__23382 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23380,G__23381,G__23382) : f.call(null,G__23380,G__23381,G__23382));
});
var G__23410__1 = (function (x){
var G__23383 = arg1;
var G__23384 = arg2;
var G__23385 = arg3;
var G__23386 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23383,G__23384,G__23385,G__23386) : f.call(null,G__23383,G__23384,G__23385,G__23386));
});
var G__23410__2 = (function (x,y){
var G__23387 = arg1;
var G__23388 = arg2;
var G__23389 = arg3;
var G__23390 = x;
var G__23391 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23387,G__23388,G__23389,G__23390,G__23391) : f.call(null,G__23387,G__23388,G__23389,G__23390,G__23391));
});
var G__23410__3 = (function (x,y,z){
var G__23392 = arg1;
var G__23393 = arg2;
var G__23394 = arg3;
var G__23395 = x;
var G__23396 = y;
var G__23397 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__23392,G__23393,G__23394,G__23395,G__23396,G__23397) : f.call(null,G__23392,G__23393,G__23394,G__23395,G__23396,G__23397));
});
var G__23410__4 = (function() { 
var G__23411__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__23411 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23412__i = 0, G__23412__a = new Array(arguments.length -  3);
while (G__23412__i < G__23412__a.length) {G__23412__a[G__23412__i] = arguments[G__23412__i + 3]; ++G__23412__i;}
  args = new cljs.core.IndexedSeq(G__23412__a,0);
} 
return G__23411__delegate.call(this,x,y,z,args);};
G__23411.cljs$lang$maxFixedArity = 3;
G__23411.cljs$lang$applyTo = (function (arglist__23413){
var x = cljs.core.first(arglist__23413);
arglist__23413 = cljs.core.next(arglist__23413);
var y = cljs.core.first(arglist__23413);
arglist__23413 = cljs.core.next(arglist__23413);
var z = cljs.core.first(arglist__23413);
var args = cljs.core.rest(arglist__23413);
return G__23411__delegate(x,y,z,args);
});
G__23411.cljs$core$IFn$_invoke$arity$variadic = G__23411__delegate;
return G__23411;
})()
;
G__23410 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23410__0.call(this);
case 1:
return G__23410__1.call(this,x);
case 2:
return G__23410__2.call(this,x,y);
case 3:
return G__23410__3.call(this,x,y,z);
default:
var G__23414 = null;
if (arguments.length > 3) {
var G__23415__i = 0, G__23415__a = new Array(arguments.length -  3);
while (G__23415__i < G__23415__a.length) {G__23415__a[G__23415__i] = arguments[G__23415__i + 3]; ++G__23415__i;}
G__23414 = new cljs.core.IndexedSeq(G__23415__a,0);
}
return G__23410__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23414);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23410.cljs$lang$maxFixedArity = 3;
G__23410.cljs$lang$applyTo = G__23410__4.cljs$lang$applyTo;
G__23410.cljs$core$IFn$_invoke$arity$0 = G__23410__0;
G__23410.cljs$core$IFn$_invoke$arity$1 = G__23410__1;
G__23410.cljs$core$IFn$_invoke$arity$2 = G__23410__2;
G__23410.cljs$core$IFn$_invoke$arity$3 = G__23410__3;
G__23410.cljs$core$IFn$_invoke$arity$variadic = G__23410__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23410;
})()
});
var partial__5 = (function() { 
var G__23416__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__23417__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__23417 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23418__i = 0, G__23418__a = new Array(arguments.length -  0);
while (G__23418__i < G__23418__a.length) {G__23418__a[G__23418__i] = arguments[G__23418__i + 0]; ++G__23418__i;}
  args = new cljs.core.IndexedSeq(G__23418__a,0);
} 
return G__23417__delegate.call(this,args);};
G__23417.cljs$lang$maxFixedArity = 0;
G__23417.cljs$lang$applyTo = (function (arglist__23419){
var args = cljs.core.seq(arglist__23419);
return G__23417__delegate(args);
});
G__23417.cljs$core$IFn$_invoke$arity$variadic = G__23417__delegate;
return G__23417;
})()
;
};
var G__23416 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__23420__i = 0, G__23420__a = new Array(arguments.length -  4);
while (G__23420__i < G__23420__a.length) {G__23420__a[G__23420__i] = arguments[G__23420__i + 4]; ++G__23420__i;}
  more = new cljs.core.IndexedSeq(G__23420__a,0);
} 
return G__23416__delegate.call(this,f,arg1,arg2,arg3,more);};
G__23416.cljs$lang$maxFixedArity = 4;
G__23416.cljs$lang$applyTo = (function (arglist__23421){
var f = cljs.core.first(arglist__23421);
arglist__23421 = cljs.core.next(arglist__23421);
var arg1 = cljs.core.first(arglist__23421);
arglist__23421 = cljs.core.next(arglist__23421);
var arg2 = cljs.core.first(arglist__23421);
arglist__23421 = cljs.core.next(arglist__23421);
var arg3 = cljs.core.first(arglist__23421);
var more = cljs.core.rest(arglist__23421);
return G__23416__delegate(f,arg1,arg2,arg3,more);
});
G__23416.cljs$core$IFn$_invoke$arity$variadic = G__23416__delegate;
return G__23416;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__23422 = null;
if (arguments.length > 4) {
var G__23423__i = 0, G__23423__a = new Array(arguments.length -  4);
while (G__23423__i < G__23423__a.length) {G__23423__a[G__23423__i] = arguments[G__23423__i + 4]; ++G__23423__i;}
G__23422 = new cljs.core.IndexedSeq(G__23423__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__23422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__23456 = null;
var G__23456__1 = (function (a){
var G__23440 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23440) : f.call(null,G__23440));
});
var G__23456__2 = (function (a,b){
var G__23441 = (((a == null))?x:a);
var G__23442 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23441,G__23442) : f.call(null,G__23441,G__23442));
});
var G__23456__3 = (function (a,b,c){
var G__23443 = (((a == null))?x:a);
var G__23444 = b;
var G__23445 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23443,G__23444,G__23445) : f.call(null,G__23443,G__23444,G__23445));
});
var G__23456__4 = (function() { 
var G__23457__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__23457 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23458__i = 0, G__23458__a = new Array(arguments.length -  3);
while (G__23458__i < G__23458__a.length) {G__23458__a[G__23458__i] = arguments[G__23458__i + 3]; ++G__23458__i;}
  ds = new cljs.core.IndexedSeq(G__23458__a,0);
} 
return G__23457__delegate.call(this,a,b,c,ds);};
G__23457.cljs$lang$maxFixedArity = 3;
G__23457.cljs$lang$applyTo = (function (arglist__23459){
var a = cljs.core.first(arglist__23459);
arglist__23459 = cljs.core.next(arglist__23459);
var b = cljs.core.first(arglist__23459);
arglist__23459 = cljs.core.next(arglist__23459);
var c = cljs.core.first(arglist__23459);
var ds = cljs.core.rest(arglist__23459);
return G__23457__delegate(a,b,c,ds);
});
G__23457.cljs$core$IFn$_invoke$arity$variadic = G__23457__delegate;
return G__23457;
})()
;
G__23456 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__23456__1.call(this,a);
case 2:
return G__23456__2.call(this,a,b);
case 3:
return G__23456__3.call(this,a,b,c);
default:
var G__23460 = null;
if (arguments.length > 3) {
var G__23461__i = 0, G__23461__a = new Array(arguments.length -  3);
while (G__23461__i < G__23461__a.length) {G__23461__a[G__23461__i] = arguments[G__23461__i + 3]; ++G__23461__i;}
G__23460 = new cljs.core.IndexedSeq(G__23461__a,0);
}
return G__23456__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23456.cljs$lang$maxFixedArity = 3;
G__23456.cljs$lang$applyTo = G__23456__4.cljs$lang$applyTo;
G__23456.cljs$core$IFn$_invoke$arity$1 = G__23456__1;
G__23456.cljs$core$IFn$_invoke$arity$2 = G__23456__2;
G__23456.cljs$core$IFn$_invoke$arity$3 = G__23456__3;
G__23456.cljs$core$IFn$_invoke$arity$variadic = G__23456__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23456;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__23462 = null;
var G__23462__2 = (function (a,b){
var G__23446 = (((a == null))?x:a);
var G__23447 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23446,G__23447) : f.call(null,G__23446,G__23447));
});
var G__23462__3 = (function (a,b,c){
var G__23448 = (((a == null))?x:a);
var G__23449 = (((b == null))?y:b);
var G__23450 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23448,G__23449,G__23450) : f.call(null,G__23448,G__23449,G__23450));
});
var G__23462__4 = (function() { 
var G__23463__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__23463 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23464__i = 0, G__23464__a = new Array(arguments.length -  3);
while (G__23464__i < G__23464__a.length) {G__23464__a[G__23464__i] = arguments[G__23464__i + 3]; ++G__23464__i;}
  ds = new cljs.core.IndexedSeq(G__23464__a,0);
} 
return G__23463__delegate.call(this,a,b,c,ds);};
G__23463.cljs$lang$maxFixedArity = 3;
G__23463.cljs$lang$applyTo = (function (arglist__23465){
var a = cljs.core.first(arglist__23465);
arglist__23465 = cljs.core.next(arglist__23465);
var b = cljs.core.first(arglist__23465);
arglist__23465 = cljs.core.next(arglist__23465);
var c = cljs.core.first(arglist__23465);
var ds = cljs.core.rest(arglist__23465);
return G__23463__delegate(a,b,c,ds);
});
G__23463.cljs$core$IFn$_invoke$arity$variadic = G__23463__delegate;
return G__23463;
})()
;
G__23462 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23462__2.call(this,a,b);
case 3:
return G__23462__3.call(this,a,b,c);
default:
var G__23466 = null;
if (arguments.length > 3) {
var G__23467__i = 0, G__23467__a = new Array(arguments.length -  3);
while (G__23467__i < G__23467__a.length) {G__23467__a[G__23467__i] = arguments[G__23467__i + 3]; ++G__23467__i;}
G__23466 = new cljs.core.IndexedSeq(G__23467__a,0);
}
return G__23462__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23462.cljs$lang$maxFixedArity = 3;
G__23462.cljs$lang$applyTo = G__23462__4.cljs$lang$applyTo;
G__23462.cljs$core$IFn$_invoke$arity$2 = G__23462__2;
G__23462.cljs$core$IFn$_invoke$arity$3 = G__23462__3;
G__23462.cljs$core$IFn$_invoke$arity$variadic = G__23462__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23462;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__23468 = null;
var G__23468__2 = (function (a,b){
var G__23451 = (((a == null))?x:a);
var G__23452 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23451,G__23452) : f.call(null,G__23451,G__23452));
});
var G__23468__3 = (function (a,b,c){
var G__23453 = (((a == null))?x:a);
var G__23454 = (((b == null))?y:b);
var G__23455 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23453,G__23454,G__23455) : f.call(null,G__23453,G__23454,G__23455));
});
var G__23468__4 = (function() { 
var G__23469__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__23469 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23470__i = 0, G__23470__a = new Array(arguments.length -  3);
while (G__23470__i < G__23470__a.length) {G__23470__a[G__23470__i] = arguments[G__23470__i + 3]; ++G__23470__i;}
  ds = new cljs.core.IndexedSeq(G__23470__a,0);
} 
return G__23469__delegate.call(this,a,b,c,ds);};
G__23469.cljs$lang$maxFixedArity = 3;
G__23469.cljs$lang$applyTo = (function (arglist__23471){
var a = cljs.core.first(arglist__23471);
arglist__23471 = cljs.core.next(arglist__23471);
var b = cljs.core.first(arglist__23471);
arglist__23471 = cljs.core.next(arglist__23471);
var c = cljs.core.first(arglist__23471);
var ds = cljs.core.rest(arglist__23471);
return G__23469__delegate(a,b,c,ds);
});
G__23469.cljs$core$IFn$_invoke$arity$variadic = G__23469__delegate;
return G__23469;
})()
;
G__23468 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23468__2.call(this,a,b);
case 3:
return G__23468__3.call(this,a,b,c);
default:
var G__23472 = null;
if (arguments.length > 3) {
var G__23473__i = 0, G__23473__a = new Array(arguments.length -  3);
while (G__23473__i < G__23473__a.length) {G__23473__a[G__23473__i] = arguments[G__23473__i + 3]; ++G__23473__i;}
G__23472 = new cljs.core.IndexedSeq(G__23473__a,0);
}
return G__23468__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23468.cljs$lang$maxFixedArity = 3;
G__23468.cljs$lang$applyTo = G__23468__4.cljs$lang$applyTo;
G__23468.cljs$core$IFn$_invoke$arity$2 = G__23468__2;
G__23468.cljs$core$IFn$_invoke$arity$3 = G__23468__3;
G__23468.cljs$core$IFn$_invoke$arity$variadic = G__23468__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23468;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__23504 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__23504) : cljs.core.volatile_BANG_.call(null,G__23504));
})();
return ((function (i){
return (function() {
var G__23534 = null;
var G__23534__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23534__1 = (function (result){
var G__23505 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23505) : rf.call(null,G__23505));
});
var G__23534__2 = (function (result,input){
var G__23506 = result;
var G__23507 = (function (){var G__23508 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__23509 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23508,G__23509) : f.call(null,G__23508,G__23509));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23506,G__23507) : rf.call(null,G__23506,G__23507));
});
G__23534 = function(result,input){
switch(arguments.length){
case 0:
return G__23534__0.call(this);
case 1:
return G__23534__1.call(this,result);
case 2:
return G__23534__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23534.cljs$core$IFn$_invoke$arity$0 = G__23534__0;
G__23534.cljs$core$IFn$_invoke$arity$1 = G__23534__1;
G__23534.cljs$core$IFn$_invoke$arity$2 = G__23534__2;
return G__23534;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14352__auto___23535 = size;
var i_23536 = (0);
while(true){
if((i_23536 < n__14352__auto___23535)){
cljs.core.chunk_append(b,(function (){var G__23530 = (idx + i_23536);
var G__23531 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23536);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23530,G__23531) : f.call(null,G__23530,G__23531));
})());

var G__23537 = (i_23536 + (1));
i_23536 = G__23537;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23532 = idx;
var G__23533 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23532,G__23533) : f.call(null,G__23532,G__23533));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__23556 = null;
var G__23556__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23556__1 = (function (result){
var G__23550 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23550) : rf.call(null,G__23550));
});
var G__23556__2 = (function (result,input){
var v = (function (){var G__23551 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23551) : f.call(null,G__23551));
})();
if((v == null)){
return result;
} else {
var G__23552 = result;
var G__23553 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23552,G__23553) : rf.call(null,G__23552,G__23553));
}
});
G__23556 = function(result,input){
switch(arguments.length){
case 0:
return G__23556__0.call(this);
case 1:
return G__23556__1.call(this,result);
case 2:
return G__23556__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23556.cljs$core$IFn$_invoke$arity$0 = G__23556__0;
G__23556.cljs$core$IFn$_invoke$arity$1 = G__23556__1;
G__23556.cljs$core$IFn$_invoke$arity$2 = G__23556__2;
return G__23556;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14352__auto___23557 = size;
var i_23558 = (0);
while(true){
if((i_23558 < n__14352__auto___23557)){
var x_23559 = (function (){var G__23554 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23558);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23554) : f.call(null,G__23554));
})();
if((x_23559 == null)){
} else {
cljs.core.chunk_append(b,x_23559);
}

var G__23560 = (i_23558 + (1));
i_23558 = G__23560;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23555 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23555) : f.call(null,G__23555));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23561 = this$__$1;
return goog.getUid(G__23561);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__23562 = cljs.core.seq(self__.watches);
var chunk__23563 = null;
var count__23564 = (0);
var i__23565 = (0);
while(true){
if((i__23565 < count__23564)){
var vec__23566 = chunk__23563.cljs$core$IIndexed$_nth$arity$2(null,i__23565);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23566,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23566,(1),null);
var G__23567_23576 = key;
var G__23568_23577 = this$__$1;
var G__23569_23578 = oldval;
var G__23570_23579 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23567_23576,G__23568_23577,G__23569_23578,G__23570_23579) : f.call(null,G__23567_23576,G__23568_23577,G__23569_23578,G__23570_23579));

var G__23580 = seq__23562;
var G__23581 = chunk__23563;
var G__23582 = count__23564;
var G__23583 = (i__23565 + (1));
seq__23562 = G__23580;
chunk__23563 = G__23581;
count__23564 = G__23582;
i__23565 = G__23583;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23562);
if(temp__4126__auto__){
var seq__23562__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23562__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__23562__$1);
var G__23584 = cljs.core.chunk_rest(seq__23562__$1);
var G__23585 = c__14252__auto__;
var G__23586 = cljs.core.count(c__14252__auto__);
var G__23587 = (0);
seq__23562 = G__23584;
chunk__23563 = G__23585;
count__23564 = G__23586;
i__23565 = G__23587;
continue;
} else {
var vec__23571 = cljs.core.first(seq__23562__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23571,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23571,(1),null);
var G__23572_23588 = key;
var G__23573_23589 = this$__$1;
var G__23574_23590 = oldval;
var G__23575_23591 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23572_23588,G__23573_23589,G__23574_23590,G__23575_23591) : f.call(null,G__23572_23588,G__23573_23589,G__23574_23590,G__23575_23591));

var G__23592 = cljs.core.next(seq__23562__$1);
var G__23593 = null;
var G__23594 = (0);
var G__23595 = (0);
seq__23562 = G__23592;
chunk__23563 = G__23593;
count__23564 = G__23594;
i__23565 = G__23595;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__23599__delegate = function (x,p__23596){
var map__23598 = p__23596;
var map__23598__$1 = ((cljs.core.seq_QMARK_(map__23598))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23598):map__23598);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23598__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23598__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__23599 = function (x,var_args){
var p__23596 = null;
if (arguments.length > 1) {
var G__23600__i = 0, G__23600__a = new Array(arguments.length -  1);
while (G__23600__i < G__23600__a.length) {G__23600__a[G__23600__i] = arguments[G__23600__i + 1]; ++G__23600__i;}
  p__23596 = new cljs.core.IndexedSeq(G__23600__a,0);
} 
return G__23599__delegate.call(this,x,p__23596);};
G__23599.cljs$lang$maxFixedArity = 1;
G__23599.cljs$lang$applyTo = (function (arglist__23601){
var x = cljs.core.first(arglist__23601);
var p__23596 = cljs.core.rest(arglist__23601);
return G__23599__delegate(x,p__23596);
});
G__23599.cljs$core$IFn$_invoke$arity$variadic = G__23599__delegate;
return G__23599;
})()
;
atom = function(x,var_args){
var p__23596 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__23602 = null;
if (arguments.length > 1) {
var G__23603__i = 0, G__23603__a = new Array(arguments.length -  1);
while (G__23603__i < G__23603__a.length) {G__23603__a[G__23603__i] = arguments[G__23603__i + 1]; ++G__23603__i;}
G__23602 = new cljs.core.IndexedSeq(G__23603__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23602);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__23606 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__23606) : validate.call(null,G__23606));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__23607 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23607) : cljs.core.pr_str.call(null,G__23607));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23614 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23614) : f.call(null,G__23614));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23615 = a.state;
var G__23616 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23615,G__23616) : f.call(null,G__23615,G__23616));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23617 = a.state;
var G__23618 = x;
var G__23619 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23617,G__23618,G__23619) : f.call(null,G__23617,G__23618,G__23619));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__23620__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__23620 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__23621__i = 0, G__23621__a = new Array(arguments.length -  4);
while (G__23621__i < G__23621__a.length) {G__23621__a[G__23621__i] = arguments[G__23621__i + 4]; ++G__23621__i;}
  more = new cljs.core.IndexedSeq(G__23621__a,0);
} 
return G__23620__delegate.call(this,a,f,x,y,more);};
G__23620.cljs$lang$maxFixedArity = 4;
G__23620.cljs$lang$applyTo = (function (arglist__23622){
var a = cljs.core.first(arglist__23622);
arglist__23622 = cljs.core.next(arglist__23622);
var f = cljs.core.first(arglist__23622);
arglist__23622 = cljs.core.next(arglist__23622);
var x = cljs.core.first(arglist__23622);
arglist__23622 = cljs.core.next(arglist__23622);
var y = cljs.core.first(arglist__23622);
var more = cljs.core.rest(arglist__23622);
return G__23620__delegate(a,f,x,y,more);
});
G__23620.cljs$core$IFn$_invoke$arity$variadic = G__23620__delegate;
return G__23620;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__23623 = null;
if (arguments.length > 4) {
var G__23624__i = 0, G__23624__a = new Array(arguments.length -  4);
while (G__23624__i < G__23624__a.length) {G__23624__a[G__23624__i] = arguments[G__23624__i + 4]; ++G__23624__i;}
G__23623 = new cljs.core.IndexedSeq(G__23624__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__23623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23691 = null;
var G__23691__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23691__1 = (function (result){
var G__23658 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23658) : rf.call(null,G__23658));
});
var G__23691__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__23659 = i;
var G__23660 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23659,G__23660) : f.call(null,G__23659,G__23660));
})();
if((v == null)){
return result;
} else {
var G__23661 = result;
var G__23662 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23661,G__23662) : rf.call(null,G__23661,G__23662));
}
});
G__23691 = function(result,input){
switch(arguments.length){
case 0:
return G__23691__0.call(this);
case 1:
return G__23691__1.call(this,result);
case 2:
return G__23691__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23691.cljs$core$IFn$_invoke$arity$0 = G__23691__0;
G__23691.cljs$core$IFn$_invoke$arity$1 = G__23691__1;
G__23691.cljs$core$IFn$_invoke$arity$2 = G__23691__2;
return G__23691;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14352__auto___23692 = size;
var i_23693 = (0);
while(true){
if((i_23693 < n__14352__auto___23692)){
var x_23694 = (function (){var G__23687 = (idx + i_23693);
var G__23688 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23693);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23687,G__23688) : f.call(null,G__23687,G__23688));
})();
if((x_23694 == null)){
} else {
cljs.core.chunk_append(b,x_23694);
}

var G__23695 = (i_23693 + (1));
i_23693 = G__23695;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23689 = idx;
var G__23690 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23689,G__23690) : f.call(null,G__23689,G__23690));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__23909 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23909) : p.call(null,G__23909));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__23911 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23911) : p.call(null,G__23911));
})();
if(cljs.core.truth_(and__13453__auto__)){
var G__23912 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23912) : p.call(null,G__23912));
} else {
return and__13453__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__23914 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23914) : p.call(null,G__23914));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__23916 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23916) : p.call(null,G__23916));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var G__23917 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23917) : p.call(null,G__23917));
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__24086__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__24086 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24087__i = 0, G__24087__a = new Array(arguments.length -  3);
while (G__24087__i < G__24087__a.length) {G__24087__a[G__24087__i] = arguments[G__24087__i + 3]; ++G__24087__i;}
  args = new cljs.core.IndexedSeq(G__24087__a,0);
} 
return G__24086__delegate.call(this,x,y,z,args);};
G__24086.cljs$lang$maxFixedArity = 3;
G__24086.cljs$lang$applyTo = (function (arglist__24088){
var x = cljs.core.first(arglist__24088);
arglist__24088 = cljs.core.next(arglist__24088);
var y = cljs.core.first(arglist__24088);
arglist__24088 = cljs.core.next(arglist__24088);
var z = cljs.core.first(arglist__24088);
var args = cljs.core.rest(arglist__24088);
return G__24086__delegate(x,y,z,args);
});
G__24086.cljs$core$IFn$_invoke$arity$variadic = G__24086__delegate;
return G__24086;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__24089 = null;
if (arguments.length > 3) {
var G__24090__i = 0, G__24090__a = new Array(arguments.length -  3);
while (G__24090__i < G__24090__a.length) {G__24090__a[G__24090__i] = arguments[G__24090__i + 3]; ++G__24090__i;}
G__24089 = new cljs.core.IndexedSeq(G__24090__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24089);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__23949 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23949) : p1.call(null,G__23949));
})();
if(cljs.core.truth_(and__13453__auto__)){
var G__23950 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23950) : p2.call(null,G__23950));
} else {
return and__13453__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__23952 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23952) : p1.call(null,G__23952));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__23954 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23954) : p1.call(null,G__23954));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var and__13453__auto____$2 = (function (){var G__23956 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23956) : p2.call(null,G__23956));
})();
if(cljs.core.truth_(and__13453__auto____$2)){
var G__23957 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23957) : p2.call(null,G__23957));
} else {
return and__13453__auto____$2;
}
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__23959 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23959) : p1.call(null,G__23959));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__23961 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23961) : p1.call(null,G__23961));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var and__13453__auto____$2 = (function (){var G__23963 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23963) : p1.call(null,G__23963));
})();
if(cljs.core.truth_(and__13453__auto____$2)){
var and__13453__auto____$3 = (function (){var G__23965 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23965) : p2.call(null,G__23965));
})();
if(cljs.core.truth_(and__13453__auto____$3)){
var and__13453__auto____$4 = (function (){var G__23967 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23967) : p2.call(null,G__23967));
})();
if(cljs.core.truth_(and__13453__auto____$4)){
var G__23968 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23968) : p2.call(null,G__23968));
} else {
return and__13453__auto____$4;
}
} else {
return and__13453__auto____$3;
}
} else {
return and__13453__auto____$2;
}
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__24091__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23696_SHARP_){
var and__13453__auto__ = (function (){var G__23973 = p1__23696_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23973) : p1.call(null,G__23973));
})();
if(cljs.core.truth_(and__13453__auto__)){
var G__23974 = p1__23696_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23974) : p2.call(null,G__23974));
} else {
return and__13453__auto__;
}
}),args)));
};
var G__24091 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24092__i = 0, G__24092__a = new Array(arguments.length -  3);
while (G__24092__i < G__24092__a.length) {G__24092__a[G__24092__i] = arguments[G__24092__i + 3]; ++G__24092__i;}
  args = new cljs.core.IndexedSeq(G__24092__a,0);
} 
return G__24091__delegate.call(this,x,y,z,args);};
G__24091.cljs$lang$maxFixedArity = 3;
G__24091.cljs$lang$applyTo = (function (arglist__24093){
var x = cljs.core.first(arglist__24093);
arglist__24093 = cljs.core.next(arglist__24093);
var y = cljs.core.first(arglist__24093);
arglist__24093 = cljs.core.next(arglist__24093);
var z = cljs.core.first(arglist__24093);
var args = cljs.core.rest(arglist__24093);
return G__24091__delegate(x,y,z,args);
});
G__24091.cljs$core$IFn$_invoke$arity$variadic = G__24091__delegate;
return G__24091;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__24094 = null;
if (arguments.length > 3) {
var G__24095__i = 0, G__24095__a = new Array(arguments.length -  3);
while (G__24095__i < G__24095__a.length) {G__24095__a[G__24095__i] = arguments[G__24095__i + 3]; ++G__24095__i;}
G__24094 = new cljs.core.IndexedSeq(G__24095__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24094);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__24020 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24020) : p1.call(null,G__24020));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__24022 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24022) : p2.call(null,G__24022));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var G__24023 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24023) : p3.call(null,G__24023));
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__24025 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24025) : p1.call(null,G__24025));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__24027 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24027) : p2.call(null,G__24027));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var and__13453__auto____$2 = (function (){var G__24029 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24029) : p3.call(null,G__24029));
})();
if(cljs.core.truth_(and__13453__auto____$2)){
var and__13453__auto____$3 = (function (){var G__24031 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24031) : p1.call(null,G__24031));
})();
if(cljs.core.truth_(and__13453__auto____$3)){
var and__13453__auto____$4 = (function (){var G__24033 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24033) : p2.call(null,G__24033));
})();
if(cljs.core.truth_(and__13453__auto____$4)){
var G__24034 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24034) : p3.call(null,G__24034));
} else {
return and__13453__auto____$4;
}
} else {
return and__13453__auto____$3;
}
} else {
return and__13453__auto____$2;
}
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13453__auto__ = (function (){var G__24036 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24036) : p1.call(null,G__24036));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__24038 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24038) : p2.call(null,G__24038));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var and__13453__auto____$2 = (function (){var G__24040 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24040) : p3.call(null,G__24040));
})();
if(cljs.core.truth_(and__13453__auto____$2)){
var and__13453__auto____$3 = (function (){var G__24042 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24042) : p1.call(null,G__24042));
})();
if(cljs.core.truth_(and__13453__auto____$3)){
var and__13453__auto____$4 = (function (){var G__24044 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24044) : p2.call(null,G__24044));
})();
if(cljs.core.truth_(and__13453__auto____$4)){
var and__13453__auto____$5 = (function (){var G__24046 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24046) : p3.call(null,G__24046));
})();
if(cljs.core.truth_(and__13453__auto____$5)){
var and__13453__auto____$6 = (function (){var G__24048 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24048) : p1.call(null,G__24048));
})();
if(cljs.core.truth_(and__13453__auto____$6)){
var and__13453__auto____$7 = (function (){var G__24050 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24050) : p2.call(null,G__24050));
})();
if(cljs.core.truth_(and__13453__auto____$7)){
var G__24051 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24051) : p3.call(null,G__24051));
} else {
return and__13453__auto____$7;
}
} else {
return and__13453__auto____$6;
}
} else {
return and__13453__auto____$5;
}
} else {
return and__13453__auto____$4;
}
} else {
return and__13453__auto____$3;
}
} else {
return and__13453__auto____$2;
}
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__24096__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23697_SHARP_){
var and__13453__auto__ = (function (){var G__24058 = p1__23697_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24058) : p1.call(null,G__24058));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__24060 = p1__23697_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24060) : p2.call(null,G__24060));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var G__24061 = p1__23697_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24061) : p3.call(null,G__24061));
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
}),args)));
};
var G__24096 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24097__i = 0, G__24097__a = new Array(arguments.length -  3);
while (G__24097__i < G__24097__a.length) {G__24097__a[G__24097__i] = arguments[G__24097__i + 3]; ++G__24097__i;}
  args = new cljs.core.IndexedSeq(G__24097__a,0);
} 
return G__24096__delegate.call(this,x,y,z,args);};
G__24096.cljs$lang$maxFixedArity = 3;
G__24096.cljs$lang$applyTo = (function (arglist__24098){
var x = cljs.core.first(arglist__24098);
arglist__24098 = cljs.core.next(arglist__24098);
var y = cljs.core.first(arglist__24098);
arglist__24098 = cljs.core.next(arglist__24098);
var z = cljs.core.first(arglist__24098);
var args = cljs.core.rest(arglist__24098);
return G__24096__delegate(x,y,z,args);
});
G__24096.cljs$core$IFn$_invoke$arity$variadic = G__24096__delegate;
return G__24096;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__24099 = null;
if (arguments.length > 3) {
var G__24100__i = 0, G__24100__a = new Array(arguments.length -  3);
while (G__24100__i < G__24100__a.length) {G__24100__a[G__24100__i] = arguments[G__24100__i + 3]; ++G__24100__i;}
G__24099 = new cljs.core.IndexedSeq(G__24100__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24099);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__24101__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23698_SHARP_){
var G__24077 = x;
return (p1__23698_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23698_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24077) : p1__23698_SHARP_.call(null,G__24077));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23699_SHARP_){
var and__13453__auto__ = (function (){var G__24079 = x;
return (p1__23699_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23699_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24079) : p1__23699_SHARP_.call(null,G__24079));
})();
if(cljs.core.truth_(and__13453__auto__)){
var G__24080 = y;
return (p1__23699_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23699_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24080) : p1__23699_SHARP_.call(null,G__24080));
} else {
return and__13453__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23700_SHARP_){
var and__13453__auto__ = (function (){var G__24082 = x;
return (p1__23700_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23700_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24082) : p1__23700_SHARP_.call(null,G__24082));
})();
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__24084 = y;
return (p1__23700_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23700_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24084) : p1__23700_SHARP_.call(null,G__24084));
})();
if(cljs.core.truth_(and__13453__auto____$1)){
var G__24085 = z;
return (p1__23700_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23700_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24085) : p1__23700_SHARP_.call(null,G__24085));
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__24102__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23701_SHARP_){
return cljs.core.every_QMARK_(p1__23701_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__24102 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24103__i = 0, G__24103__a = new Array(arguments.length -  3);
while (G__24103__i < G__24103__a.length) {G__24103__a[G__24103__i] = arguments[G__24103__i + 3]; ++G__24103__i;}
  args = new cljs.core.IndexedSeq(G__24103__a,0);
} 
return G__24102__delegate.call(this,x,y,z,args);};
G__24102.cljs$lang$maxFixedArity = 3;
G__24102.cljs$lang$applyTo = (function (arglist__24104){
var x = cljs.core.first(arglist__24104);
arglist__24104 = cljs.core.next(arglist__24104);
var y = cljs.core.first(arglist__24104);
arglist__24104 = cljs.core.next(arglist__24104);
var z = cljs.core.first(arglist__24104);
var args = cljs.core.rest(arglist__24104);
return G__24102__delegate(x,y,z,args);
});
G__24102.cljs$core$IFn$_invoke$arity$variadic = G__24102__delegate;
return G__24102;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__24105 = null;
if (arguments.length > 3) {
var G__24106__i = 0, G__24106__a = new Array(arguments.length -  3);
while (G__24106__i < G__24106__a.length) {G__24106__a[G__24106__i] = arguments[G__24106__i + 3]; ++G__24106__i;}
G__24105 = new cljs.core.IndexedSeq(G__24106__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24105);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__24101 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__24107__i = 0, G__24107__a = new Array(arguments.length -  3);
while (G__24107__i < G__24107__a.length) {G__24107__a[G__24107__i] = arguments[G__24107__i + 3]; ++G__24107__i;}
  ps = new cljs.core.IndexedSeq(G__24107__a,0);
} 
return G__24101__delegate.call(this,p1,p2,p3,ps);};
G__24101.cljs$lang$maxFixedArity = 3;
G__24101.cljs$lang$applyTo = (function (arglist__24108){
var p1 = cljs.core.first(arglist__24108);
arglist__24108 = cljs.core.next(arglist__24108);
var p2 = cljs.core.first(arglist__24108);
arglist__24108 = cljs.core.next(arglist__24108);
var p3 = cljs.core.first(arglist__24108);
var ps = cljs.core.rest(arglist__24108);
return G__24101__delegate(p1,p2,p3,ps);
});
G__24101.cljs$core$IFn$_invoke$arity$variadic = G__24101__delegate;
return G__24101;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__24109 = null;
if (arguments.length > 3) {
var G__24110__i = 0, G__24110__a = new Array(arguments.length -  3);
while (G__24110__i < G__24110__a.length) {G__24110__a[G__24110__i] = arguments[G__24110__i + 3]; ++G__24110__i;}
G__24109 = new cljs.core.IndexedSeq(G__24110__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__24109);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__24316 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24316) : p.call(null,G__24316));
});
var sp1__2 = (function (x,y){
var or__13465__auto__ = (function (){var G__24318 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24318) : p.call(null,G__24318));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var G__24319 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24319) : p.call(null,G__24319));
}
});
var sp1__3 = (function (x,y,z){
var or__13465__auto__ = (function (){var G__24321 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24321) : p.call(null,G__24321));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var G__24323 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24323) : p.call(null,G__24323));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var G__24324 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24324) : p.call(null,G__24324));
}
}
});
var sp1__4 = (function() { 
var G__24485__delegate = function (x,y,z,args){
var or__13465__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__24485 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24486__i = 0, G__24486__a = new Array(arguments.length -  3);
while (G__24486__i < G__24486__a.length) {G__24486__a[G__24486__i] = arguments[G__24486__i + 3]; ++G__24486__i;}
  args = new cljs.core.IndexedSeq(G__24486__a,0);
} 
return G__24485__delegate.call(this,x,y,z,args);};
G__24485.cljs$lang$maxFixedArity = 3;
G__24485.cljs$lang$applyTo = (function (arglist__24487){
var x = cljs.core.first(arglist__24487);
arglist__24487 = cljs.core.next(arglist__24487);
var y = cljs.core.first(arglist__24487);
arglist__24487 = cljs.core.next(arglist__24487);
var z = cljs.core.first(arglist__24487);
var args = cljs.core.rest(arglist__24487);
return G__24485__delegate(x,y,z,args);
});
G__24485.cljs$core$IFn$_invoke$arity$variadic = G__24485__delegate;
return G__24485;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__24488 = null;
if (arguments.length > 3) {
var G__24489__i = 0, G__24489__a = new Array(arguments.length -  3);
while (G__24489__i < G__24489__a.length) {G__24489__a[G__24489__i] = arguments[G__24489__i + 3]; ++G__24489__i;}
G__24488 = new cljs.core.IndexedSeq(G__24489__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24488);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__13465__auto__ = (function (){var G__24356 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24356) : p1.call(null,G__24356));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var G__24357 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24357) : p2.call(null,G__24357));
}
});
var sp2__2 = (function (x,y){
var or__13465__auto__ = (function (){var G__24359 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24359) : p1.call(null,G__24359));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var G__24361 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24361) : p1.call(null,G__24361));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var or__13465__auto____$2 = (function (){var G__24363 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24363) : p2.call(null,G__24363));
})();
if(cljs.core.truth_(or__13465__auto____$2)){
return or__13465__auto____$2;
} else {
var G__24364 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24364) : p2.call(null,G__24364));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__13465__auto__ = (function (){var G__24366 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24366) : p1.call(null,G__24366));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var G__24368 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24368) : p1.call(null,G__24368));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var or__13465__auto____$2 = (function (){var G__24370 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24370) : p1.call(null,G__24370));
})();
if(cljs.core.truth_(or__13465__auto____$2)){
return or__13465__auto____$2;
} else {
var or__13465__auto____$3 = (function (){var G__24372 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24372) : p2.call(null,G__24372));
})();
if(cljs.core.truth_(or__13465__auto____$3)){
return or__13465__auto____$3;
} else {
var or__13465__auto____$4 = (function (){var G__24374 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24374) : p2.call(null,G__24374));
})();
if(cljs.core.truth_(or__13465__auto____$4)){
return or__13465__auto____$4;
} else {
var G__24375 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24375) : p2.call(null,G__24375));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__24490__delegate = function (x,y,z,args){
var or__13465__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.some(((function (or__13465__auto__){
return (function (p1__24111_SHARP_){
var or__13465__auto____$1 = (function (){var G__24377 = p1__24111_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24377) : p1.call(null,G__24377));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var G__24378 = p1__24111_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24378) : p2.call(null,G__24378));
}
});})(or__13465__auto__))
,args);
}
};
var G__24490 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24491__i = 0, G__24491__a = new Array(arguments.length -  3);
while (G__24491__i < G__24491__a.length) {G__24491__a[G__24491__i] = arguments[G__24491__i + 3]; ++G__24491__i;}
  args = new cljs.core.IndexedSeq(G__24491__a,0);
} 
return G__24490__delegate.call(this,x,y,z,args);};
G__24490.cljs$lang$maxFixedArity = 3;
G__24490.cljs$lang$applyTo = (function (arglist__24492){
var x = cljs.core.first(arglist__24492);
arglist__24492 = cljs.core.next(arglist__24492);
var y = cljs.core.first(arglist__24492);
arglist__24492 = cljs.core.next(arglist__24492);
var z = cljs.core.first(arglist__24492);
var args = cljs.core.rest(arglist__24492);
return G__24490__delegate(x,y,z,args);
});
G__24490.cljs$core$IFn$_invoke$arity$variadic = G__24490__delegate;
return G__24490;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__24493 = null;
if (arguments.length > 3) {
var G__24494__i = 0, G__24494__a = new Array(arguments.length -  3);
while (G__24494__i < G__24494__a.length) {G__24494__a[G__24494__i] = arguments[G__24494__i + 3]; ++G__24494__i;}
G__24493 = new cljs.core.IndexedSeq(G__24494__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24493);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__13465__auto__ = (function (){var G__24424 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24424) : p1.call(null,G__24424));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var G__24426 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24426) : p2.call(null,G__24426));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var G__24427 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24427) : p3.call(null,G__24427));
}
}
});
var sp3__2 = (function (x,y){
var or__13465__auto__ = (function (){var G__24429 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24429) : p1.call(null,G__24429));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var G__24431 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24431) : p2.call(null,G__24431));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var or__13465__auto____$2 = (function (){var G__24433 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24433) : p3.call(null,G__24433));
})();
if(cljs.core.truth_(or__13465__auto____$2)){
return or__13465__auto____$2;
} else {
var or__13465__auto____$3 = (function (){var G__24435 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24435) : p1.call(null,G__24435));
})();
if(cljs.core.truth_(or__13465__auto____$3)){
return or__13465__auto____$3;
} else {
var or__13465__auto____$4 = (function (){var G__24437 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24437) : p2.call(null,G__24437));
})();
if(cljs.core.truth_(or__13465__auto____$4)){
return or__13465__auto____$4;
} else {
var G__24438 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24438) : p3.call(null,G__24438));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__13465__auto__ = (function (){var G__24440 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24440) : p1.call(null,G__24440));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var G__24442 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24442) : p2.call(null,G__24442));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var or__13465__auto____$2 = (function (){var G__24444 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24444) : p3.call(null,G__24444));
})();
if(cljs.core.truth_(or__13465__auto____$2)){
return or__13465__auto____$2;
} else {
var or__13465__auto____$3 = (function (){var G__24446 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24446) : p1.call(null,G__24446));
})();
if(cljs.core.truth_(or__13465__auto____$3)){
return or__13465__auto____$3;
} else {
var or__13465__auto____$4 = (function (){var G__24448 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24448) : p2.call(null,G__24448));
})();
if(cljs.core.truth_(or__13465__auto____$4)){
return or__13465__auto____$4;
} else {
var or__13465__auto____$5 = (function (){var G__24450 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24450) : p3.call(null,G__24450));
})();
if(cljs.core.truth_(or__13465__auto____$5)){
return or__13465__auto____$5;
} else {
var or__13465__auto____$6 = (function (){var G__24452 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24452) : p1.call(null,G__24452));
})();
if(cljs.core.truth_(or__13465__auto____$6)){
return or__13465__auto____$6;
} else {
var or__13465__auto____$7 = (function (){var G__24454 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24454) : p2.call(null,G__24454));
})();
if(cljs.core.truth_(or__13465__auto____$7)){
return or__13465__auto____$7;
} else {
var G__24455 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24455) : p3.call(null,G__24455));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__24495__delegate = function (x,y,z,args){
var or__13465__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.some(((function (or__13465__auto__){
return (function (p1__24112_SHARP_){
var or__13465__auto____$1 = (function (){var G__24457 = p1__24112_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24457) : p1.call(null,G__24457));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var or__13465__auto____$2 = (function (){var G__24459 = p1__24112_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24459) : p2.call(null,G__24459));
})();
if(cljs.core.truth_(or__13465__auto____$2)){
return or__13465__auto____$2;
} else {
var G__24460 = p1__24112_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24460) : p3.call(null,G__24460));
}
}
});})(or__13465__auto__))
,args);
}
};
var G__24495 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24496__i = 0, G__24496__a = new Array(arguments.length -  3);
while (G__24496__i < G__24496__a.length) {G__24496__a[G__24496__i] = arguments[G__24496__i + 3]; ++G__24496__i;}
  args = new cljs.core.IndexedSeq(G__24496__a,0);
} 
return G__24495__delegate.call(this,x,y,z,args);};
G__24495.cljs$lang$maxFixedArity = 3;
G__24495.cljs$lang$applyTo = (function (arglist__24497){
var x = cljs.core.first(arglist__24497);
arglist__24497 = cljs.core.next(arglist__24497);
var y = cljs.core.first(arglist__24497);
arglist__24497 = cljs.core.next(arglist__24497);
var z = cljs.core.first(arglist__24497);
var args = cljs.core.rest(arglist__24497);
return G__24495__delegate(x,y,z,args);
});
G__24495.cljs$core$IFn$_invoke$arity$variadic = G__24495__delegate;
return G__24495;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__24498 = null;
if (arguments.length > 3) {
var G__24499__i = 0, G__24499__a = new Array(arguments.length -  3);
while (G__24499__i < G__24499__a.length) {G__24499__a[G__24499__i] = arguments[G__24499__i + 3]; ++G__24499__i;}
G__24498 = new cljs.core.IndexedSeq(G__24499__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24498);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__24500__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__24113_SHARP_){
var G__24476 = x;
return (p1__24113_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24113_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24476) : p1__24113_SHARP_.call(null,G__24476));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__24114_SHARP_){
var or__13465__auto__ = (function (){var G__24478 = x;
return (p1__24114_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24114_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24478) : p1__24114_SHARP_.call(null,G__24478));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var G__24479 = y;
return (p1__24114_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24114_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24479) : p1__24114_SHARP_.call(null,G__24479));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__24115_SHARP_){
var or__13465__auto__ = (function (){var G__24481 = x;
return (p1__24115_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24115_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24481) : p1__24115_SHARP_.call(null,G__24481));
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var G__24483 = y;
return (p1__24115_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24115_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24483) : p1__24115_SHARP_.call(null,G__24483));
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var G__24484 = z;
return (p1__24115_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__24115_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24484) : p1__24115_SHARP_.call(null,G__24484));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__24501__delegate = function (x,y,z,args){
var or__13465__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.some(((function (or__13465__auto__,ps__$1){
return (function (p1__24116_SHARP_){
return cljs.core.some(p1__24116_SHARP_,args);
});})(or__13465__auto__,ps__$1))
,ps__$1);
}
};
var G__24501 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24502__i = 0, G__24502__a = new Array(arguments.length -  3);
while (G__24502__i < G__24502__a.length) {G__24502__a[G__24502__i] = arguments[G__24502__i + 3]; ++G__24502__i;}
  args = new cljs.core.IndexedSeq(G__24502__a,0);
} 
return G__24501__delegate.call(this,x,y,z,args);};
G__24501.cljs$lang$maxFixedArity = 3;
G__24501.cljs$lang$applyTo = (function (arglist__24503){
var x = cljs.core.first(arglist__24503);
arglist__24503 = cljs.core.next(arglist__24503);
var y = cljs.core.first(arglist__24503);
arglist__24503 = cljs.core.next(arglist__24503);
var z = cljs.core.first(arglist__24503);
var args = cljs.core.rest(arglist__24503);
return G__24501__delegate(x,y,z,args);
});
G__24501.cljs$core$IFn$_invoke$arity$variadic = G__24501__delegate;
return G__24501;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__24504 = null;
if (arguments.length > 3) {
var G__24505__i = 0, G__24505__a = new Array(arguments.length -  3);
while (G__24505__i < G__24505__a.length) {G__24505__a[G__24505__i] = arguments[G__24505__i + 3]; ++G__24505__i;}
G__24504 = new cljs.core.IndexedSeq(G__24505__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24504);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__24500 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__24506__i = 0, G__24506__a = new Array(arguments.length -  3);
while (G__24506__i < G__24506__a.length) {G__24506__a[G__24506__i] = arguments[G__24506__i + 3]; ++G__24506__i;}
  ps = new cljs.core.IndexedSeq(G__24506__a,0);
} 
return G__24500__delegate.call(this,p1,p2,p3,ps);};
G__24500.cljs$lang$maxFixedArity = 3;
G__24500.cljs$lang$applyTo = (function (arglist__24507){
var p1 = cljs.core.first(arglist__24507);
arglist__24507 = cljs.core.next(arglist__24507);
var p2 = cljs.core.first(arglist__24507);
arglist__24507 = cljs.core.next(arglist__24507);
var p3 = cljs.core.first(arglist__24507);
var ps = cljs.core.rest(arglist__24507);
return G__24500__delegate(p1,p2,p3,ps);
});
G__24500.cljs$core$IFn$_invoke$arity$variadic = G__24500__delegate;
return G__24500;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__24508 = null;
if (arguments.length > 3) {
var G__24509__i = 0, G__24509__a = new Array(arguments.length -  3);
while (G__24509__i < G__24509__a.length) {G__24509__a[G__24509__i] = arguments[G__24509__i + 3]; ++G__24509__i;}
G__24508 = new cljs.core.IndexedSeq(G__24509__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__24508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__24564 = null;
var G__24564__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24564__1 = (function (result){
var G__24550 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24550) : rf.call(null,G__24550));
});
var G__24564__2 = (function (result,input){
var G__24551 = result;
var G__24552 = (function (){var G__24553 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24553) : f.call(null,G__24553));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24551,G__24552) : rf.call(null,G__24551,G__24552));
});
var G__24564__3 = (function() { 
var G__24565__delegate = function (result,input,inputs){
var G__24554 = result;
var G__24555 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24554,G__24555) : rf.call(null,G__24554,G__24555));
};
var G__24565 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__24566__i = 0, G__24566__a = new Array(arguments.length -  2);
while (G__24566__i < G__24566__a.length) {G__24566__a[G__24566__i] = arguments[G__24566__i + 2]; ++G__24566__i;}
  inputs = new cljs.core.IndexedSeq(G__24566__a,0);
} 
return G__24565__delegate.call(this,result,input,inputs);};
G__24565.cljs$lang$maxFixedArity = 2;
G__24565.cljs$lang$applyTo = (function (arglist__24567){
var result = cljs.core.first(arglist__24567);
arglist__24567 = cljs.core.next(arglist__24567);
var input = cljs.core.first(arglist__24567);
var inputs = cljs.core.rest(arglist__24567);
return G__24565__delegate(result,input,inputs);
});
G__24565.cljs$core$IFn$_invoke$arity$variadic = G__24565__delegate;
return G__24565;
})()
;
G__24564 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__24564__0.call(this);
case 1:
return G__24564__1.call(this,result);
case 2:
return G__24564__2.call(this,result,input);
default:
var G__24568 = null;
if (arguments.length > 2) {
var G__24569__i = 0, G__24569__a = new Array(arguments.length -  2);
while (G__24569__i < G__24569__a.length) {G__24569__a[G__24569__i] = arguments[G__24569__i + 2]; ++G__24569__i;}
G__24568 = new cljs.core.IndexedSeq(G__24569__a,0);
}
return G__24564__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__24568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24564.cljs$lang$maxFixedArity = 2;
G__24564.cljs$lang$applyTo = G__24564__3.cljs$lang$applyTo;
G__24564.cljs$core$IFn$_invoke$arity$0 = G__24564__0;
G__24564.cljs$core$IFn$_invoke$arity$1 = G__24564__1;
G__24564.cljs$core$IFn$_invoke$arity$2 = G__24564__2;
G__24564.cljs$core$IFn$_invoke$arity$variadic = G__24564__3.cljs$core$IFn$_invoke$arity$variadic;
return G__24564;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14352__auto___24570 = size;
var i_24571 = (0);
while(true){
if((i_24571 < n__14352__auto___24570)){
cljs.core.chunk_append(b,(function (){var G__24556 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24571);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24556) : f.call(null,G__24556));
})());

var G__24572 = (i_24571 + (1));
i_24571 = G__24572;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__24557 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24557) : f.call(null,G__24557));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__24558 = cljs.core.first(s1);
var G__24559 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24558,G__24559) : f.call(null,G__24558,G__24559));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__24560 = cljs.core.first(s1);
var G__24561 = cljs.core.first(s2);
var G__24562 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24560,G__24561,G__24562) : f.call(null,G__24560,G__24561,G__24562));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__24573__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__24510_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__24510_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__24573 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24574__i = 0, G__24574__a = new Array(arguments.length -  4);
while (G__24574__i < G__24574__a.length) {G__24574__a[G__24574__i] = arguments[G__24574__i + 4]; ++G__24574__i;}
  colls = new cljs.core.IndexedSeq(G__24574__a,0);
} 
return G__24573__delegate.call(this,f,c1,c2,c3,colls);};
G__24573.cljs$lang$maxFixedArity = 4;
G__24573.cljs$lang$applyTo = (function (arglist__24575){
var f = cljs.core.first(arglist__24575);
arglist__24575 = cljs.core.next(arglist__24575);
var c1 = cljs.core.first(arglist__24575);
arglist__24575 = cljs.core.next(arglist__24575);
var c2 = cljs.core.first(arglist__24575);
arglist__24575 = cljs.core.next(arglist__24575);
var c3 = cljs.core.first(arglist__24575);
var colls = cljs.core.rest(arglist__24575);
return G__24573__delegate(f,c1,c2,c3,colls);
});
G__24573.cljs$core$IFn$_invoke$arity$variadic = G__24573__delegate;
return G__24573;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__24576 = null;
if (arguments.length > 4) {
var G__24577__i = 0, G__24577__a = new Array(arguments.length -  4);
while (G__24577__i < G__24577__a.length) {G__24577__a[G__24577__i] = arguments[G__24577__i + 4]; ++G__24577__i;}
G__24576 = new cljs.core.IndexedSeq(G__24577__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24586 = null;
var G__24586__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24586__1 = (function (result){
var G__24583 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24583) : rf.call(null,G__24583));
});
var G__24586__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__24584 = result;
var G__24585 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24584,G__24585) : rf.call(null,G__24584,G__24585));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__24586 = function(result,input){
switch(arguments.length){
case 0:
return G__24586__0.call(this);
case 1:
return G__24586__1.call(this,result);
case 2:
return G__24586__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24586.cljs$core$IFn$_invoke$arity$0 = G__24586__0;
G__24586.cljs$core$IFn$_invoke$arity$1 = G__24586__1;
G__24586.cljs$core$IFn$_invoke$arity$2 = G__24586__2;
return G__24586;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24593 = null;
var G__24593__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24593__1 = (function (result){
var G__24590 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24590) : rf.call(null,G__24590));
});
var G__24593__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__24591 = result;
var G__24592 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24591,G__24592) : rf.call(null,G__24591,G__24592));
}
});
G__24593 = function(result,input){
switch(arguments.length){
case 0:
return G__24593__0.call(this);
case 1:
return G__24593__1.call(this,result);
case 2:
return G__24593__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24593.cljs$core$IFn$_invoke$arity$0 = G__24593__0;
G__24593.cljs$core$IFn$_invoke$arity$1 = G__24593__1;
G__24593.cljs$core$IFn$_invoke$arity$2 = G__24593__2;
return G__24593;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__24594 = (n__$1 - (1));
var G__24595 = cljs.core.rest(s);
n__$1 = G__24594;
coll__$1 = G__24595;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__24598 = cljs.core.next(s);
var G__24599 = cljs.core.next(lead);
s = G__24598;
lead = G__24599;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__24612 = null;
var G__24612__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24612__1 = (function (result){
var G__24606 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24606) : rf.call(null,G__24606));
});
var G__24612__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__13453__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__13453__auto__)){
var G__24607 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24607) : pred.call(null,G__24607));
} else {
return and__13453__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__24608 = result;
var G__24609 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24608,G__24609) : rf.call(null,G__24608,G__24609));
}
});
G__24612 = function(result,input){
switch(arguments.length){
case 0:
return G__24612__0.call(this);
case 1:
return G__24612__1.call(this,result);
case 2:
return G__24612__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24612.cljs$core$IFn$_invoke$arity$0 = G__24612__0;
G__24612.cljs$core$IFn$_invoke$arity$1 = G__24612__1;
G__24612.cljs$core$IFn$_invoke$arity$2 = G__24612__2;
return G__24612;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__13453__auto__ = s;
if(and__13453__auto__){
var G__24611 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__24611) : pred__$1.call(null,G__24611));
} else {
return and__13453__auto__;
}
})())){
var G__24613 = pred__$1;
var G__24614 = cljs.core.rest(s);
pred__$1 = G__24613;
coll__$1 = G__24614;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__24623 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24623) : f.call(null,G__24623));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__24626__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__24626 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__24627__i = 0, G__24627__a = new Array(arguments.length -  2);
while (G__24627__i < G__24627__a.length) {G__24627__a[G__24627__i] = arguments[G__24627__i + 2]; ++G__24627__i;}
  colls = new cljs.core.IndexedSeq(G__24627__a,0);
} 
return G__24626__delegate.call(this,c1,c2,colls);};
G__24626.cljs$lang$maxFixedArity = 2;
G__24626.cljs$lang$applyTo = (function (arglist__24628){
var c1 = cljs.core.first(arglist__24628);
arglist__24628 = cljs.core.next(arglist__24628);
var c2 = cljs.core.first(arglist__24628);
var colls = cljs.core.rest(arglist__24628);
return G__24626__delegate(c1,c2,colls);
});
G__24626.cljs$core$IFn$_invoke$arity$variadic = G__24626__delegate;
return G__24626;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__24629 = null;
if (arguments.length > 2) {
var G__24630__i = 0, G__24630__a = new Array(arguments.length -  2);
while (G__24630__i < G__24630__a.length) {G__24630__a[G__24630__i] = arguments[G__24630__i + 2]; ++G__24630__i;}
G__24629 = new cljs.core.IndexedSeq(G__24630__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__24629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__24645 = null;
var G__24645__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24645__1 = (function (result){
var G__24638 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24638) : rf.call(null,G__24638));
});
var G__24645__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__24639 = result;
var G__24640 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24639,G__24640) : rf.call(null,G__24639,G__24640));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__24641 = sepr;
var G__24642 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24641,G__24642) : rf.call(null,G__24641,G__24642));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__24643 = result;
var G__24644 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24643,G__24644) : rf.call(null,G__24643,G__24644));
}
});
G__24645 = function(result,input){
switch(arguments.length){
case 0:
return G__24645__0.call(this);
case 1:
return G__24645__1.call(this,result);
case 2:
return G__24645__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24645.cljs$core$IFn$_invoke$arity$0 = G__24645__0;
G__24645.cljs$core$IFn$_invoke$arity$1 = G__24645__1;
G__24645.cljs$core$IFn$_invoke$arity$2 = G__24645__2;
return G__24645;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__24654__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__24654 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__24655__i = 0, G__24655__a = new Array(arguments.length -  1);
while (G__24655__i < G__24655__a.length) {G__24655__a[G__24655__i] = arguments[G__24655__i + 1]; ++G__24655__i;}
  colls = new cljs.core.IndexedSeq(G__24655__a,0);
} 
return G__24654__delegate.call(this,f,colls);};
G__24654.cljs$lang$maxFixedArity = 1;
G__24654.cljs$lang$applyTo = (function (arglist__24656){
var f = cljs.core.first(arglist__24656);
var colls = cljs.core.rest(arglist__24656);
return G__24654__delegate(f,colls);
});
G__24654.cljs$core$IFn$_invoke$arity$variadic = G__24654__delegate;
return G__24654;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__24657 = null;
if (arguments.length > 1) {
var G__24658__i = 0, G__24658__a = new Array(arguments.length -  1);
while (G__24658__i < G__24658__a.length) {G__24658__a[G__24658__i] = arguments[G__24658__i + 1]; ++G__24658__i;}
G__24657 = new cljs.core.IndexedSeq(G__24658__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__24657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__24677 = null;
var G__24677__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24677__1 = (function (result){
var G__24671 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24671) : rf.call(null,G__24671));
});
var G__24677__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24672 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24672) : pred.call(null,G__24672));
})())){
var G__24673 = result;
var G__24674 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24673,G__24674) : rf.call(null,G__24673,G__24674));
} else {
return result;
}
});
G__24677 = function(result,input){
switch(arguments.length){
case 0:
return G__24677__0.call(this);
case 1:
return G__24677__1.call(this,result);
case 2:
return G__24677__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24677.cljs$core$IFn$_invoke$arity$0 = G__24677__0;
G__24677.cljs$core$IFn$_invoke$arity$1 = G__24677__1;
G__24677.cljs$core$IFn$_invoke$arity$2 = G__24677__2;
return G__24677;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14352__auto___24678 = size;
var i_24679 = (0);
while(true){
if((i_24679 < n__14352__auto___24678)){
if(cljs.core.truth_((function (){var G__24675 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24679);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24675) : pred.call(null,G__24675));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24679));
} else {
}

var G__24680 = (i_24679 + (1));
i_24679 = G__24680;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__24676 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24676) : pred.call(null,G__24676));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__24687 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__24687) : branch_QMARK_.call(null,G__24687));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__24688 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__24688) : children.call(null,G__24688));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__24689_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__24689_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__24692 = to;
if(G__24692){
var bit__14139__auto__ = (G__24692.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__14139__auto__) || (G__24692.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__24693 = to;
if(G__24693){
var bit__14139__auto__ = (G__24693.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__14139__auto__) || (G__24693.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__24695 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24695) : f.call(null,G__24695));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__24696__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__24696 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24697__i = 0, G__24697__a = new Array(arguments.length -  4);
while (G__24697__i < G__24697__a.length) {G__24697__a[G__24697__i] = arguments[G__24697__i + 4]; ++G__24697__i;}
  colls = new cljs.core.IndexedSeq(G__24697__a,0);
} 
return G__24696__delegate.call(this,f,c1,c2,c3,colls);};
G__24696.cljs$lang$maxFixedArity = 4;
G__24696.cljs$lang$applyTo = (function (arglist__24698){
var f = cljs.core.first(arglist__24698);
arglist__24698 = cljs.core.next(arglist__24698);
var c1 = cljs.core.first(arglist__24698);
arglist__24698 = cljs.core.next(arglist__24698);
var c2 = cljs.core.first(arglist__24698);
arglist__24698 = cljs.core.next(arglist__24698);
var c3 = cljs.core.first(arglist__24698);
var colls = cljs.core.rest(arglist__24698);
return G__24696__delegate(f,c1,c2,c3,colls);
});
G__24696.cljs$core$IFn$_invoke$arity$variadic = G__24696__delegate;
return G__24696;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__24699 = null;
if (arguments.length > 4) {
var G__24700__i = 0, G__24700__a = new Array(arguments.length -  4);
while (G__24700__i < G__24700__a.length) {G__24700__a[G__24700__i] = arguments[G__24700__i + 4]; ++G__24700__i;}
G__24699 = new cljs.core.IndexedSeq(G__24700__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24699);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__24702 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24702) : pred.call(null,G__24702));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__24717 = m__$1;
if(G__24717){
var bit__14146__auto__ = (G__24717.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14146__auto__) || (G__24717.cljs$core$ILookup$)){
return true;
} else {
if((!G__24717.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24717);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24717);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__24718 = sentinel;
var G__24719 = m__$2;
var G__24720 = cljs.core.next(ks__$1);
sentinel = G__24718;
m__$1 = G__24719;
ks__$1 = G__24720;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__24721,v){
var vec__24726 = p__24721;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24726,(0),null);
var ks = cljs.core.nthnext(vec__24726,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__24727,f){
var vec__24765 = p__24727;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24765,(0),null);
var ks = cljs.core.nthnext(vec__24765,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24766 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24766) : f.call(null,G__24766));
})());
}
});
var update_in__4 = (function (m,p__24728,f,a){
var vec__24767 = p__24728;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24767,(0),null);
var ks = cljs.core.nthnext(vec__24767,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24768 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24769 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24768,G__24769) : f.call(null,G__24768,G__24769));
})());
}
});
var update_in__5 = (function (m,p__24729,f,a,b){
var vec__24770 = p__24729;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24770,(0),null);
var ks = cljs.core.nthnext(vec__24770,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24771 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24772 = a;
var G__24773 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24771,G__24772,G__24773) : f.call(null,G__24771,G__24772,G__24773));
})());
}
});
var update_in__6 = (function (m,p__24730,f,a,b,c){
var vec__24774 = p__24730;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24774,(0),null);
var ks = cljs.core.nthnext(vec__24774,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24775 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24776 = a;
var G__24777 = b;
var G__24778 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24775,G__24776,G__24777,G__24778) : f.call(null,G__24775,G__24776,G__24777,G__24778));
})());
}
});
var update_in__7 = (function() { 
var G__24780__delegate = function (m,p__24731,f,a,b,c,args){
var vec__24779 = p__24731;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24779,(0),null);
var ks = cljs.core.nthnext(vec__24779,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__24780 = function (m,p__24731,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__24781__i = 0, G__24781__a = new Array(arguments.length -  6);
while (G__24781__i < G__24781__a.length) {G__24781__a[G__24781__i] = arguments[G__24781__i + 6]; ++G__24781__i;}
  args = new cljs.core.IndexedSeq(G__24781__a,0);
} 
return G__24780__delegate.call(this,m,p__24731,f,a,b,c,args);};
G__24780.cljs$lang$maxFixedArity = 6;
G__24780.cljs$lang$applyTo = (function (arglist__24782){
var m = cljs.core.first(arglist__24782);
arglist__24782 = cljs.core.next(arglist__24782);
var p__24731 = cljs.core.first(arglist__24782);
arglist__24782 = cljs.core.next(arglist__24782);
var f = cljs.core.first(arglist__24782);
arglist__24782 = cljs.core.next(arglist__24782);
var a = cljs.core.first(arglist__24782);
arglist__24782 = cljs.core.next(arglist__24782);
var b = cljs.core.first(arglist__24782);
arglist__24782 = cljs.core.next(arglist__24782);
var c = cljs.core.first(arglist__24782);
var args = cljs.core.rest(arglist__24782);
return G__24780__delegate(m,p__24731,f,a,b,c,args);
});
G__24780.cljs$core$IFn$_invoke$arity$variadic = G__24780__delegate;
return G__24780;
})()
;
update_in = function(m,p__24731,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__24731,f);
case 4:
return update_in__4.call(this,m,p__24731,f,a);
case 5:
return update_in__5.call(this,m,p__24731,f,a,b);
case 6:
return update_in__6.call(this,m,p__24731,f,a,b,c);
default:
var G__24783 = null;
if (arguments.length > 6) {
var G__24784__i = 0, G__24784__a = new Array(arguments.length -  6);
while (G__24784__i < G__24784__a.length) {G__24784__a[G__24784__i] = arguments[G__24784__i + 6]; ++G__24784__i;}
G__24783 = new cljs.core.IndexedSeq(G__24784__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__24731,f,a,b,c, G__24783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24795 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24795) : f.call(null,G__24795));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24796 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24797 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24796,G__24797) : f.call(null,G__24796,G__24797));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24798 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24799 = x;
var G__24800 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24798,G__24799,G__24800) : f.call(null,G__24798,G__24799,G__24800));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24801 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24802 = x;
var G__24803 = y;
var G__24804 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24801,G__24802,G__24803,G__24804) : f.call(null,G__24801,G__24802,G__24803,G__24804));
})());
});
var update__7 = (function() { 
var G__24805__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__24805 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__24806__i = 0, G__24806__a = new Array(arguments.length -  6);
while (G__24806__i < G__24806__a.length) {G__24806__a[G__24806__i] = arguments[G__24806__i + 6]; ++G__24806__i;}
  more = new cljs.core.IndexedSeq(G__24806__a,0);
} 
return G__24805__delegate.call(this,m,k,f,x,y,z,more);};
G__24805.cljs$lang$maxFixedArity = 6;
G__24805.cljs$lang$applyTo = (function (arglist__24807){
var m = cljs.core.first(arglist__24807);
arglist__24807 = cljs.core.next(arglist__24807);
var k = cljs.core.first(arglist__24807);
arglist__24807 = cljs.core.next(arglist__24807);
var f = cljs.core.first(arglist__24807);
arglist__24807 = cljs.core.next(arglist__24807);
var x = cljs.core.first(arglist__24807);
arglist__24807 = cljs.core.next(arglist__24807);
var y = cljs.core.first(arglist__24807);
arglist__24807 = cljs.core.next(arglist__24807);
var z = cljs.core.first(arglist__24807);
var more = cljs.core.rest(arglist__24807);
return G__24805__delegate(m,k,f,x,y,z,more);
});
G__24805.cljs$core$IFn$_invoke$arity$variadic = G__24805__delegate;
return G__24805;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__24808 = null;
if (arguments.length > 6) {
var G__24809__i = 0, G__24809__a = new Array(arguments.length -  6);
while (G__24809__i < G__24809__a.length) {G__24809__a[G__24809__i] = arguments[G__24809__i + 6]; ++G__24809__i;}
G__24808 = new cljs.core.IndexedSeq(G__24809__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__24808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__24810 = (ll - (5));
var G__24811 = r;
ll = G__24810;
ret = G__24811;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24816 = cljs.core.pv_aget(node,(0));
var G__24817 = (level - (5));
node = G__24816;
level = G__24817;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24818 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__24819 = (level - (5));
node = G__24818;
level = G__24819;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24829 = init__$2;
var G__24830 = (j + i);
var G__24831 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24829,G__24830,G__24831) : f.call(null,G__24829,G__24830,G__24831));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24842 = (j + (1));
var G__24843 = init__$3;
j = G__24842;
init__$2 = G__24843;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24832 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24832) : cljs.core.deref.call(null,G__24832));
} else {
var G__24844 = (i + len);
var G__24845 = init__$2;
i = G__24844;
init__$1 = G__24845;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__24833 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__24833) : cljs.core.tv_editable_root.call(null,G__24833));
})(),(function (){var G__24834 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__24834) : cljs.core.tv_editable_tail.call(null,G__24834));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24835 = init__$2;
var G__24836 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24835,G__24836) : f.call(null,G__24835,G__24836));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24846 = (j + (1));
var G__24847 = init__$3;
j = G__24846;
init__$2 = G__24847;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24837 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24837) : cljs.core.deref.call(null,G__24837));
} else {
var G__24848 = (i + len);
var G__24849 = init__$2;
i = G__24848;
init__$1 = G__24849;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__24838 = coll__$1;
var G__24839 = cljs.core.first_array_for_longvec(coll__$1);
var G__24840 = (0);
var G__24841 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24838,G__24839,G__24840,G__24841) : cljs.core.chunked_seq.call(null,G__24838,G__24839,G__24840,G__24841));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__14352__auto___24850 = len;
var i_24851 = (0);
while(true){
if((i_24851 < n__14352__auto___24850)){
(new_tail[i_24851] = (self__.tail[i_24851]));

var G__24852 = (i_24851 + (1));
i_24851 = G__24852;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__24853 = null;
var G__24853__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24853__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24853 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24853__2.call(this,self__,k);
case 3:
return G__24853__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24853.cljs$core$IFn$_invoke$arity$2 = G__24853__2;
G__24853.cljs$core$IFn$_invoke$arity$3 = G__24853__3;
return G__24853;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args24828){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24828)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__24854 = (i + (1));
var G__24855 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__24854;
out = G__24855;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24856__i = 0, G__24856__a = new Array(arguments.length -  0);
while (G__24856__i < G__24856__a.length) {G__24856__a[G__24856__i] = arguments[G__24856__i + 0]; ++G__24856__i;}
  args = new cljs.core.IndexedSeq(G__24856__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__24857){
var args = cljs.core.seq(arglist__24857);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24858 = self__.vec;
var G__24859 = self__.node;
var G__24860 = self__.i;
var G__24861 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24858,G__24859,G__24860,G__24861) : cljs.core.chunked_seq.call(null,G__24858,G__24859,G__24860,G__24861));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__24862 = self__.vec;
var G__24863 = (self__.i + self__.off);
var G__24864 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24862,G__24863,G__24864) : cljs.core.subvec.call(null,G__24862,G__24863,G__24864));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__24865 = self__.vec;
var G__24866 = (self__.i + self__.off);
var G__24867 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24865,G__24866,G__24867) : cljs.core.subvec.call(null,G__24865,G__24866,G__24867));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24868 = self__.vec;
var G__24869 = self__.node;
var G__24870 = self__.i;
var G__24871 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24868,G__24869,G__24870,G__24871) : cljs.core.chunked_seq.call(null,G__24868,G__24869,G__24870,G__24871));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24872 = self__.vec;
var G__24873 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24874 = end;
var G__24875 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24872,G__24873,G__24874,G__24875) : cljs.core.chunked_seq.call(null,G__24872,G__24873,G__24874,G__24875));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__24876 = self__.vec;
var G__24877 = self__.node;
var G__24878 = self__.i;
var G__24879 = self__.off;
var G__24880 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__24876,G__24877,G__24878,G__24879,G__24880) : cljs.core.chunked_seq.call(null,G__24876,G__24877,G__24878,G__24879,G__24880));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24881 = self__.vec;
var G__24882 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24883 = end;
var G__24884 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24881,G__24882,G__24883,G__24884) : cljs.core.chunked_seq.call(null,G__24881,G__24882,G__24883,G__24884));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__24886 = self__.meta;
var G__24887 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__24888 = self__.start;
var G__24889 = (function (){var x__13782__auto__ = self__.end;
var y__13783__auto__ = (v_pos + (1));
return ((x__13782__auto__ > y__13783__auto__) ? x__13782__auto__ : y__13783__auto__);
})();
var G__24890 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24886,G__24887,G__24888,G__24889,G__24890) : cljs.core.build_subvec.call(null,G__24886,G__24887,G__24888,G__24889,G__24890));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__24891 = self__.meta;
var G__24892 = self__.v;
var G__24893 = self__.start;
var G__24894 = (self__.end - (1));
var G__24895 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24891,G__24892,G__24893,G__24894,G__24895) : cljs.core.build_subvec.call(null,G__24891,G__24892,G__24893,G__24894,G__24895));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__24897 = meta__$1;
var G__24898 = self__.v;
var G__24899 = self__.start;
var G__24900 = self__.end;
var G__24901 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24897,G__24898,G__24899,G__24900,G__24901) : cljs.core.build_subvec.call(null,G__24897,G__24898,G__24899,G__24900,G__24901));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24902 = self__.meta;
var G__24903 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__24904 = self__.start;
var G__24905 = (self__.end + (1));
var G__24906 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24902,G__24903,G__24904,G__24905,G__24906) : cljs.core.build_subvec.call(null,G__24902,G__24903,G__24904,G__24905,G__24906));
});

cljs.core.Subvec.prototype.call = (function() {
var G__24907 = null;
var G__24907__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24907__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24907 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24907__2.call(this,self__,k);
case 3:
return G__24907__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24907.cljs$core$IFn$_invoke$arity$2 = G__24907__2;
G__24907.cljs$core$IFn$_invoke$arity$3 = G__24907__3;
return G__24907;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args24885){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24885)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__24908 = meta;
var G__24909 = v.v;
var G__24910 = (v.start + start);
var G__24911 = (v.start + end);
var G__24912 = __hash;
meta = G__24908;
v = G__24909;
start = G__24910;
end = G__24911;
__hash = G__24912;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj24919 = {};
return obj24919;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__24927 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__24928 = (level - (5));
node = G__24927;
level = G__24928;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__24932 = null;
var G__24932__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24932__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24932 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24932__2.call(this,self__,k);
case 3:
return G__24932__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24932.cljs$core$IFn$_invoke$arity$2 = G__24932__2;
G__24932.cljs$core$IFn$_invoke$arity$3 = G__24932__3;
return G__24932;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args24929){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24929)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__13465__auto__ = self__.front;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13465__auto__ = self__.rear;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__24933 = (i + incr);
i = G__24933;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__24934 = (i + (1));
var G__24935 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__24934;
out = G__24935;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj24939 = {};
return obj24939;
})();
var l = ks.length;
var i_24940 = (0);
while(true){
if((i_24940 < l)){
var k_24941 = (ks[i_24940]);
(new_obj[k_24941] = (obj[k_24941]));

var G__24942 = (i_24940 + (1));
i_24940 = G__24942;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13453__auto__ = (function (){var G__24946 = k;
return goog.isString(G__24946);
})();
if(cljs.core.truth_(and__13453__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13453__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__24947 = init__$1;
var G__24948 = k;
var G__24949 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24947,G__24948,G__24949) : f.call(null,G__24947,G__24948,G__24949));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24950 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24950) : cljs.core.deref.call(null,G__24950));
} else {
var G__24956 = cljs.core.rest(keys__$1);
var G__24957 = init__$2;
keys__$1 = G__24956;
init__$1 = G__24957;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13453__auto__ = (function (){var G__24952 = k;
return goog.isString(G__24952);
})();
if(cljs.core.truth_(and__13453__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13453__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__24953 = k;
return goog.isString(G__24953);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13453__auto__ = (function (){var G__24955 = k;
return goog.isString(G__24955);
})();
if(cljs.core.truth_(and__13453__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13453__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__24943_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__24943_SHARP_,(self__.strobj[p1__24943_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__24958 = null;
var G__24958__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24958__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24958 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24958__2.call(this,self__,k);
case 3:
return G__24958__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24958.cljs$core$IFn$_invoke$arity$2 = G__24958__2;
G__24958.cljs$core$IFn$_invoke$arity$3 = G__24958__3;
return G__24958;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args24944){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24944)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj24960 = {};
return obj24960;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__24961 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24961,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24961,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__24962 = (i + (2));
i = G__24962;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__24963 = (i + (2));
i = G__24963;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__24964 = (i + (2));
i = G__24964;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__24965 = (i + (2));
i = G__24965;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__24966 = (i + (2));
i = G__24966;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__13465__auto__ = (function (){var G__24970 = k;
return goog.isString(G__24970);
})();
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_24971 = (0);
while(true){
if((i_24971 < l)){
(narr[i_24971] = (arr[i_24971]));

var G__24972 = (i_24971 + (1));
i_24971 = G__24972;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24974 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24974) : cljs.core.keys.call(null,G__24974));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24975 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24975) : cljs.core.vals.call(null,G__24975));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24976 = cljs.core.seq(coll);
var chunk__24977 = null;
var count__24978 = (0);
var i__24979 = (0);
while(true){
if((i__24979 < count__24978)){
var vec__24980 = chunk__24977.cljs$core$IIndexed$_nth$arity$2(null,i__24979);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24980,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24980,(1),null);
var G__24981_24994 = v;
var G__24982_24995 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24981_24994,G__24982_24995) : f.call(null,G__24981_24994,G__24982_24995));

var G__24996 = seq__24976;
var G__24997 = chunk__24977;
var G__24998 = count__24978;
var G__24999 = (i__24979 + (1));
seq__24976 = G__24996;
chunk__24977 = G__24997;
count__24978 = G__24998;
i__24979 = G__24999;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24976);
if(temp__4126__auto__){
var seq__24976__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24976__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__24976__$1);
var G__25000 = cljs.core.chunk_rest(seq__24976__$1);
var G__25001 = c__14252__auto__;
var G__25002 = cljs.core.count(c__14252__auto__);
var G__25003 = (0);
seq__24976 = G__25000;
chunk__24977 = G__25001;
count__24978 = G__25002;
i__24979 = G__25003;
continue;
} else {
var vec__24983 = cljs.core.first(seq__24976__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24983,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24983,(1),null);
var G__24984_25004 = v;
var G__24985_25005 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24984_25004,G__24985_25005) : f.call(null,G__24984_25004,G__24985_25005));

var G__25006 = cljs.core.next(seq__24976__$1);
var G__25007 = null;
var G__25008 = (0);
var G__25009 = (0);
seq__24976 = G__25006;
chunk__24977 = G__25007;
count__24978 = G__25008;
i__24979 = G__25009;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__24986 = init__$1;
var G__24987 = (self__.arr[i]);
var G__24988 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24986,G__24987,G__24988) : f.call(null,G__24986,G__24987,G__24988));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24989 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24989) : cljs.core.deref.call(null,G__24989));
} else {
var G__25010 = (i + (2));
var G__25011 = init__$2;
i = G__25010;
init__$1 = G__25011;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__24990 = other;
if(G__24990){
var bit__14139__auto__ = (G__24990.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__14139__auto__) || (G__24990.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__25012 = (i + (2));
i = G__25012;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj24992 = {};
return obj24992;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__25013 = (s + (2));
var G__25014 = d;
s = G__25013;
d = G__25014;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__25015 = (s + (2));
var G__25016 = (d + (2));
s = G__25015;
d = G__25016;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__24993 = cljs.core.aclone(self__.arr);
(G__24993[(idx + (1))] = v);

return G__24993;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25017 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25018 = cljs.core.next(es);
ret = G__25017;
es = G__25018;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__25019 = null;
var G__25019__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25019__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25019 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25019__2.call(this,self__,k);
case 3:
return G__25019__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25019.cljs$core$IFn$_invoke$arity$2 = G__25019__2;
G__25019.cljs$core$IFn$_invoke$arity$3 = G__25019__3;
return G__25019;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args24973){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24973)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__25020 = (i + (2));
var G__25021 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__25020;
ret = G__25021;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__25022_25030 = self__.arr;
G__25022_25030.pop();

G__25022_25030.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__25023 = self__.len;
var G__25024 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__25023,G__25024) : cljs.core.array__GT_transient_hash_map.call(null,G__25023,G__25024));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__25025 = o;
if(G__25025){
var bit__14146__auto__ = (G__25025.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14146__auto__) || (G__25025.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__25025.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25025);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25025);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__25026 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25026) : cljs.core.key.call(null,G__25026));
})(),(function (){var G__25027 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25027) : cljs.core.val.call(null,G__25027));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__25031 = cljs.core.next(es);
var G__25032 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__25028 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25028) : cljs.core.key.call(null,G__25028));
})(),(function (){var G__25029 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25029) : cljs.core.val.call(null,G__25029));
})());
es = G__25031;
tcoll__$2 = G__25032;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__25033 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__25034 = (i + (2));
out = G__25033;
i = G__25034;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__25037 = cljs.core.aclone(arr);
(G__25037[i] = a);

return G__25037;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__25038 = cljs.core.aclone(arr);
(G__25038[i] = a);

(G__25038[j] = b);

return G__25038;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__25043 = init__$1;
var G__25044 = k;
var G__25045 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25043,G__25044,G__25045) : f.call(null,G__25043,G__25044,G__25045));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25046 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25046) : cljs.core.deref.call(null,G__25046));
} else {
var G__25047 = (i + (2));
var G__25048 = init__$2;
i = G__25047;
init__$1 = G__25048;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__25049 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__25049) : cljs.core.create_inode_seq.call(null,G__25049));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_25063 = (0);
var j_25064 = (0);
while(true){
if((i_25063 < (32))){
if((((self__.bitmap >>> i_25063) & (1)) === (0))){
var G__25065 = (i_25063 + (1));
var G__25066 = j_25064;
i_25063 = G__25065;
j_25064 = G__25066;
continue;
} else {
(nodes[i_25063] = ((!(((self__.arr[j_25064]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_25064])),(self__.arr[j_25064]),(self__.arr[(j_25064 + (1))]),added_leaf_QMARK_):(self__.arr[(j_25064 + (1))])));

var G__25067 = (i_25063 + (1));
var G__25068 = (j_25064 + (2));
i_25063 = G__25067;
j_25064 = G__25068;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__25050 = edit__$1;
var G__25051 = (shift + (5));
var G__25052 = key_or_nil;
var G__25053 = val_or_node;
var G__25054 = hash;
var G__25055 = key;
var G__25056 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056) : cljs.core.create_node.call(null,G__25050,G__25051,G__25052,G__25053,G__25054,G__25055,G__25056));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_25069 = (0);
var j_25070 = (0);
while(true){
if((i_25069 < (32))){
if((((self__.bitmap >>> i_25069) & (1)) === (0))){
var G__25071 = (i_25069 + (1));
var G__25072 = j_25070;
i_25069 = G__25071;
j_25070 = G__25072;
continue;
} else {
(nodes[i_25069] = ((!(((self__.arr[j_25070]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_25070])),(self__.arr[j_25070]),(self__.arr[(j_25070 + (1))]),added_leaf_QMARK_):(self__.arr[(j_25070 + (1))])));

var G__25073 = (i_25069 + (1));
var G__25074 = (j_25070 + (2));
i_25069 = G__25073;
j_25070 = G__25074;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__25057 = (shift + (5));
var G__25058 = key_or_nil;
var G__25059 = val_or_node;
var G__25060 = hash;
var G__25061 = key;
var G__25062 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__25057,G__25058,G__25059,G__25060,G__25061,G__25062) : cljs.core.create_node.call(null,G__25057,G__25058,G__25059,G__25060,G__25061,G__25062));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__25075 = (i + (1));
var G__25076 = (j + (2));
var G__25077 = (bitmap | ((1) << i));
i = G__25075;
j = G__25076;
bitmap = G__25077;
continue;
} else {
var G__25078 = (i + (1));
var G__25079 = j;
var G__25080 = bitmap;
i = G__25078;
j = G__25079;
bitmap = G__25080;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__25081 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__25081) : cljs.core.create_array_node_seq.call(null,G__25081));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25082 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25082) : cljs.core.deref.call(null,G__25082));
} else {
var G__25083 = (i + (1));
var G__25084 = init__$2;
i = G__25083;
init__$1 = G__25084;
continue;
}
} else {
var G__25085 = (i + (1));
var G__25086 = init__$1;
i = G__25085;
init__$1 = G__25086;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__25087 = (i + (2));
i = G__25087;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__25088 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__25088) : cljs.core.create_inode_seq.call(null,G__25088));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__25089 = self__.nodes;
var G__25090 = (self__.i + (2));
var G__25091 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__25089,G__25090,G__25091) : cljs.core.create_inode_seq.call(null,G__25089,G__25090,G__25091));
} else {
var G__25092 = self__.nodes;
var G__25093 = self__.i;
var G__25094 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__25092,G__25093,G__25094) : cljs.core.create_inode_seq.call(null,G__25092,G__25093,G__25094));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__25098 = (j + (2));
j = G__25098;
continue;
}
} else {
var G__25099 = (j + (2));
j = G__25099;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__25100 = null;
var G__25101 = self__.nodes;
var G__25102 = self__.i;
var G__25103 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__25100,G__25101,G__25102,G__25103) : cljs.core.create_array_node_seq.call(null,G__25100,G__25101,G__25102,G__25103));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__25108 = (j + (1));
j = G__25108;
continue;
}
} else {
var G__25109 = (j + (1));
j = G__25109;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25111 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__25111) : cljs.core.keys.call(null,G__25111));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25112 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__25112) : cljs.core.vals.call(null,G__25112));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25113 = cljs.core.seq(coll);
var chunk__25114 = null;
var count__25115 = (0);
var i__25116 = (0);
while(true){
if((i__25116 < count__25115)){
var vec__25117 = chunk__25114.cljs$core$IIndexed$_nth$arity$2(null,i__25116);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25117,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25117,(1),null);
var G__25118_25129 = v;
var G__25119_25130 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25118_25129,G__25119_25130) : f.call(null,G__25118_25129,G__25119_25130));

var G__25131 = seq__25113;
var G__25132 = chunk__25114;
var G__25133 = count__25115;
var G__25134 = (i__25116 + (1));
seq__25113 = G__25131;
chunk__25114 = G__25132;
count__25115 = G__25133;
i__25116 = G__25134;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25113);
if(temp__4126__auto__){
var seq__25113__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25113__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__25113__$1);
var G__25135 = cljs.core.chunk_rest(seq__25113__$1);
var G__25136 = c__14252__auto__;
var G__25137 = cljs.core.count(c__14252__auto__);
var G__25138 = (0);
seq__25113 = G__25135;
chunk__25114 = G__25136;
count__25115 = G__25137;
i__25116 = G__25138;
continue;
} else {
var vec__25120 = cljs.core.first(seq__25113__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25120,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25120,(1),null);
var G__25121_25139 = v;
var G__25122_25140 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25121_25139,G__25122_25140) : f.call(null,G__25121_25139,G__25122_25140));

var G__25141 = cljs.core.next(seq__25113__$1);
var G__25142 = null;
var G__25143 = (0);
var G__25144 = (0);
seq__25113 = G__25141;
chunk__25114 = G__25142;
count__25115 = G__25143;
i__25116 = G__25144;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__25123 = init;
var G__25124 = null;
var G__25125 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25123,G__25124,G__25125) : f.call(null,G__25123,G__25124,G__25125));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__25126 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25126) : cljs.core.deref.call(null,G__25126));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj25128 = {};
return obj25128;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25145 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25146 = cljs.core.next(es);
ret = G__25145;
es = G__25146;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__25147 = null;
var G__25147__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25147__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25147 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25147__2.call(this,self__,k);
case 3:
return G__25147__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25147.cljs$core$IFn$_invoke$arity$2 = G__25147__2;
G__25147.cljs$core$IFn$_invoke$arity$3 = G__25147__3;
return G__25147;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args25110){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25110)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__25148 = (i + (2));
var G__25149 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__25148;
ret = G__25149;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__25150 = (i + (1));
var G__25151 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__25150;
out = G__25151;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__25152 = o;
if(G__25152){
var bit__14146__auto__ = (G__25152.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14146__auto__) || (G__25152.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__25152.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25152);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25152);
}
})()){
return tcoll.assoc_BANG_((function (){var G__25153 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25153) : cljs.core.key.call(null,G__25153));
})(),(function (){var G__25154 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25154) : cljs.core.val.call(null,G__25154));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__25157 = cljs.core.next(es);
var G__25158 = tcoll__$1.assoc_BANG_((function (){var G__25155 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25155) : cljs.core.key.call(null,G__25155));
})(),(function (){var G__25156 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25156) : cljs.core.val.call(null,G__25156));
})());
es = G__25157;
tcoll__$1 = G__25158;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__25159 = ((ascending_QMARK_)?t.left:t.right);
var G__25160 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__25159;
stack__$1 = G__25160;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__25173 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25173) : cljs.core.deref.call(null,G__25173));
} else {
var init__$2 = (function (){var G__25174 = init__$1;
var G__25175 = node.key;
var G__25176 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25174,G__25175,G__25176) : f.call(null,G__25174,G__25175,G__25176));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25177 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25177) : cljs.core.deref.call(null,G__25177));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__25178 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25178) : cljs.core.deref.call(null,G__25178));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__25180 = null;
var G__25180__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25180__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25180 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25180__2.call(this,self__,k);
case 3:
return G__25180__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25180.cljs$core$IFn$_invoke$arity$2 = G__25180__2;
G__25180.cljs$core$IFn$_invoke$arity$3 = G__25180__3;
return G__25180;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args25179){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25179)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__25182 = null;
var G__25182__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25182__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25182 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25182__2.call(this,self__,k);
case 3:
return G__25182__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25182.cljs$core$IFn$_invoke$arity$2 = G__25182__2;
G__25182.cljs$core$IFn$_invoke$arity$3 = G__25182__3;
return G__25182;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args25181){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25181)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__25195 = k;
var G__25196 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25195,G__25196) : comp.call(null,G__25195,G__25196));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__25215 = k;
var G__25216 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25215,G__25216) : comp.call(null,G__25215,G__25216));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__25227 = k;
var G__25228 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25227,G__25228) : comp.call(null,G__25227,G__25228));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25230 = cljs.core.seq(coll);
var chunk__25231 = null;
var count__25232 = (0);
var i__25233 = (0);
while(true){
if((i__25233 < count__25232)){
var vec__25234 = chunk__25231.cljs$core$IIndexed$_nth$arity$2(null,i__25233);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25234,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25234,(1),null);
var G__25235_25247 = v;
var G__25236_25248 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25235_25247,G__25236_25248) : f.call(null,G__25235_25247,G__25236_25248));

var G__25249 = seq__25230;
var G__25250 = chunk__25231;
var G__25251 = count__25232;
var G__25252 = (i__25233 + (1));
seq__25230 = G__25249;
chunk__25231 = G__25250;
count__25232 = G__25251;
i__25233 = G__25252;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25230);
if(temp__4126__auto__){
var seq__25230__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25230__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__25230__$1);
var G__25253 = cljs.core.chunk_rest(seq__25230__$1);
var G__25254 = c__14252__auto__;
var G__25255 = cljs.core.count(c__14252__auto__);
var G__25256 = (0);
seq__25230 = G__25253;
chunk__25231 = G__25254;
count__25232 = G__25255;
i__25233 = G__25256;
continue;
} else {
var vec__25237 = cljs.core.first(seq__25230__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25237,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25237,(1),null);
var G__25238_25257 = v;
var G__25239_25258 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25238_25257,G__25239_25258) : f.call(null,G__25238_25257,G__25239_25258));

var G__25259 = cljs.core.next(seq__25230__$1);
var G__25260 = null;
var G__25261 = (0);
var G__25262 = (0);
seq__25230 = G__25259;
chunk__25231 = G__25260;
count__25232 = G__25261;
i__25233 = G__25262;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25240 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__25240) : cljs.core.keys.call(null,G__25240));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25241 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__25241) : cljs.core.vals.call(null,G__25241));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25242 = k;
var G__25243 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25242,G__25243) : self__.comp.call(null,G__25242,G__25243));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__25263 = t.left;
t = G__25263;
continue;
} else {
var G__25264 = t.right;
t = G__25264;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25265 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25266 = cljs.core.next(es);
ret = G__25265;
es = G__25266;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__25267 = null;
var G__25267__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25267__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25267 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25267__2.call(this,self__,k);
case 3:
return G__25267__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25267.cljs$core$IFn$_invoke$arity$2 = G__25267__2;
G__25267.cljs$core$IFn$_invoke$arity$3 = G__25267__3;
return G__25267;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args25229){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25229)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25244 = k;
var G__25245 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25244,G__25245) : self__.comp.call(null,G__25244,G__25245));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__25268 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25269 = t.left;
stack = G__25268;
t = G__25269;
continue;
} else {
var G__25270 = stack;
var G__25271 = t.right;
stack = G__25270;
t = G__25271;
continue;
}
} else {
if((c > (0))){
var G__25272 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25273 = t.right;
stack = G__25272;
t = G__25273;
continue;
} else {
var G__25274 = stack;
var G__25275 = t.left;
stack = G__25274;
t = G__25275;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__25246 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25246) : cljs.core.key.call(null,G__25246));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__25276 = cljs.core.nnext(in$);
var G__25277 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25276;
out = G__25277;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25278__i = 0, G__25278__a = new Array(arguments.length -  0);
while (G__25278__i < G__25278__a.length) {G__25278__a[G__25278__i] = arguments[G__25278__i + 0]; ++G__25278__i;}
  keyvals = new cljs.core.IndexedSeq(G__25278__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__25279){
var keyvals = cljs.core.seq(arglist__25279);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25280__i = 0, G__25280__a = new Array(arguments.length -  0);
while (G__25280__i < G__25280__a.length) {G__25280__a[G__25280__i] = arguments[G__25280__i + 0]; ++G__25280__i;}
  keyvals = new cljs.core.IndexedSeq(G__25280__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__25281){
var keyvals = cljs.core.seq(arglist__25281);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj25285 = {};
return obj25285;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__25286 = cljs.core.nnext(kvs);
kvs = G__25286;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25287__i = 0, G__25287__a = new Array(arguments.length -  0);
while (G__25287__i < G__25287__a.length) {G__25287__a[G__25287__i] = arguments[G__25287__i + 0]; ++G__25287__i;}
  keyvals = new cljs.core.IndexedSeq(G__25287__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__25288){
var keyvals = cljs.core.seq(arglist__25288);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__25289 = cljs.core.nnext(in$);
var G__25290 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25289;
out = G__25290;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25291__i = 0, G__25291__a = new Array(arguments.length -  0);
while (G__25291__i < G__25291__a.length) {G__25291__a[G__25291__i] = arguments[G__25291__i + 0]; ++G__25291__i;}
  keyvals = new cljs.core.IndexedSeq(G__25291__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__25292){
var keyvals = cljs.core.seq(arglist__25292);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__25293 = cljs.core.nnext(in$);
var G__25294 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25293;
out = G__25294;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__25295__i = 0, G__25295__a = new Array(arguments.length -  1);
while (G__25295__i < G__25295__a.length) {G__25295__a[G__25295__i] = arguments[G__25295__i + 1]; ++G__25295__i;}
  keyvals = new cljs.core.IndexedSeq(G__25295__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__25296){
var comparator = cljs.core.first(arglist__25296);
var keyvals = cljs.core.rest(arglist__25296);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25297 = self__.mseq;
if(G__25297){
var bit__14146__auto__ = (G__25297.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14146__auto__) || (G__25297.cljs$core$INext$)){
return true;
} else {
if((!G__25297.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25297);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25297);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25298 = self__.mseq;
if(G__25298){
var bit__14146__auto__ = (G__25298.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14146__auto__) || (G__25298.cljs$core$INext$)){
return true;
} else {
if((!G__25298.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25298);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25298);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25299 = self__.mseq;
if(G__25299){
var bit__14146__auto__ = (G__25299.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14146__auto__) || (G__25299.cljs$core$INext$)){
return true;
} else {
if((!G__25299.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25299);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25299);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25300 = self__.mseq;
if(G__25300){
var bit__14146__auto__ = (G__25300.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14146__auto__) || (G__25300.cljs$core$INext$)){
return true;
} else {
if((!G__25300.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25300);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25300);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__25301_SHARP_,p2__25302_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13465__auto__ = p1__25301_SHARP_;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__25302_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__25303__i = 0, G__25303__a = new Array(arguments.length -  0);
while (G__25303__i < G__25303__a.length) {G__25303__a[G__25303__i] = arguments[G__25303__i + 0]; ++G__25303__i;}
  maps = new cljs.core.IndexedSeq(G__25303__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__25304){
var maps = cljs.core.seq(arglist__25304);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25307 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25308 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25307,G__25308) : f.call(null,G__25307,G__25308));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__13465__auto__ = m1;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__25309__i = 0, G__25309__a = new Array(arguments.length -  1);
while (G__25309__i < G__25309__a.length) {G__25309__a[G__25309__i] = arguments[G__25309__i + 1]; ++G__25309__i;}
  maps = new cljs.core.IndexedSeq(G__25309__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__25310){
var f = cljs.core.first(arglist__25310);
var maps = cljs.core.rest(arglist__25310);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__25311 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__25312 = cljs.core.next(keys);
ret = G__25311;
keys = G__25312;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25315 = cljs.core.seq(coll);
var chunk__25316 = null;
var count__25317 = (0);
var i__25318 = (0);
while(true){
if((i__25318 < count__25317)){
var vec__25319 = chunk__25316.cljs$core$IIndexed$_nth$arity$2(null,i__25318);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25319,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25319,(1),null);
var G__25320_25325 = v;
var G__25321_25326 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25320_25325,G__25321_25326) : f.call(null,G__25320_25325,G__25321_25326));

var G__25327 = seq__25315;
var G__25328 = chunk__25316;
var G__25329 = count__25317;
var G__25330 = (i__25318 + (1));
seq__25315 = G__25327;
chunk__25316 = G__25328;
count__25317 = G__25329;
i__25318 = G__25330;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25315);
if(temp__4126__auto__){
var seq__25315__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25315__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__25315__$1);
var G__25331 = cljs.core.chunk_rest(seq__25315__$1);
var G__25332 = c__14252__auto__;
var G__25333 = cljs.core.count(c__14252__auto__);
var G__25334 = (0);
seq__25315 = G__25331;
chunk__25316 = G__25332;
count__25317 = G__25333;
i__25318 = G__25334;
continue;
} else {
var vec__25322 = cljs.core.first(seq__25315__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25322,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25322,(1),null);
var G__25323_25335 = v;
var G__25324_25336 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25323_25335,G__25324_25336) : f.call(null,G__25323_25335,G__25324_25336));

var G__25337 = cljs.core.next(seq__25315__$1);
var G__25338 = null;
var G__25339 = (0);
var G__25340 = (0);
seq__25315 = G__25337;
chunk__25316 = G__25338;
count__25317 = G__25339;
i__25318 = G__25340;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25313_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25313_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__25341 = null;
var G__25341__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25341__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25341 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25341__2.call(this,self__,k);
case 3:
return G__25341__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25341.cljs$core$IFn$_invoke$arity$2 = G__25341__2;
G__25341.cljs$core$IFn$_invoke$arity$3 = G__25341__3;
return G__25341;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args25314){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25314)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__25342 = (i + (1));
var G__25343 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__25342;
out = G__25343;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__25344 = (i + (1));
var G__25345 = cljs.core._conj_BANG_(out,(items[i]));
i = G__25344;
out = G__25345;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__25347 = null;
var G__25347__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__25347__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__25347 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25347__2.call(this,self__,k);
case 3:
return G__25347__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25347.cljs$core$IFn$_invoke$arity$2 = G__25347__2;
G__25347.cljs$core$IFn$_invoke$arity$3 = G__25347__3;
return G__25347;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args25346){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25346)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25350 = cljs.core.seq(coll);
var chunk__25351 = null;
var count__25352 = (0);
var i__25353 = (0);
while(true){
if((i__25353 < count__25352)){
var vec__25354 = chunk__25351.cljs$core$IIndexed$_nth$arity$2(null,i__25353);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25354,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25354,(1),null);
var G__25355_25360 = v;
var G__25356_25361 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25355_25360,G__25356_25361) : f.call(null,G__25355_25360,G__25356_25361));

var G__25362 = seq__25350;
var G__25363 = chunk__25351;
var G__25364 = count__25352;
var G__25365 = (i__25353 + (1));
seq__25350 = G__25362;
chunk__25351 = G__25363;
count__25352 = G__25364;
i__25353 = G__25365;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25350);
if(temp__4126__auto__){
var seq__25350__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25350__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__25350__$1);
var G__25366 = cljs.core.chunk_rest(seq__25350__$1);
var G__25367 = c__14252__auto__;
var G__25368 = cljs.core.count(c__14252__auto__);
var G__25369 = (0);
seq__25350 = G__25366;
chunk__25351 = G__25367;
count__25352 = G__25368;
i__25353 = G__25369;
continue;
} else {
var vec__25357 = cljs.core.first(seq__25350__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25357,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25357,(1),null);
var G__25358_25370 = v;
var G__25359_25371 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25358_25370,G__25359_25371) : f.call(null,G__25358_25370,G__25359_25371));

var G__25372 = cljs.core.next(seq__25350__$1);
var G__25373 = null;
var G__25374 = (0);
var G__25375 = (0);
seq__25350 = G__25372;
chunk__25351 = G__25373;
count__25352 = G__25374;
i__25353 = G__25375;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25348_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25348_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__25376 = null;
var G__25376__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25376__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25376 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25376__2.call(this,self__,k);
case 3:
return G__25376__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25376.cljs$core$IFn$_invoke$arity$2 = G__25376__2;
G__25376.cljs$core$IFn$_invoke$arity$3 = G__25376__3;
return G__25376;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args25349){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25349)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__14346__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__14346__auto__.length)){
var G__25377 = (i + (1));
var G__25378 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__25377;
res = G__25378;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__25379 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__25380 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__25379;
out = G__25380;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__25381__delegate = function (keys){
return cljs.core.set(keys);
};
var G__25381 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25382__i = 0, G__25382__a = new Array(arguments.length -  0);
while (G__25382__i < G__25382__a.length) {G__25382__a[G__25382__i] = arguments[G__25382__i + 0]; ++G__25382__i;}
  keys = new cljs.core.IndexedSeq(G__25382__a,0);
} 
return G__25381__delegate.call(this,keys);};
G__25381.cljs$lang$maxFixedArity = 0;
G__25381.cljs$lang$applyTo = (function (arglist__25383){
var keys = cljs.core.seq(arglist__25383);
return G__25381__delegate(keys);
});
G__25381.cljs$core$IFn$_invoke$arity$variadic = G__25381__delegate;
return G__25381;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__25384 = null;
if (arguments.length > 0) {
var G__25385__i = 0, G__25385__a = new Array(arguments.length -  0);
while (G__25385__i < G__25385__a.length) {G__25385__a[G__25385__i] = arguments[G__25385__i + 0]; ++G__25385__i;}
G__25384 = new cljs.core.IndexedSeq(G__25385__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__25384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25386__i = 0, G__25386__a = new Array(arguments.length -  0);
while (G__25386__i < G__25386__a.length) {G__25386__a[G__25386__i] = arguments[G__25386__i + 0]; ++G__25386__i;}
  keys = new cljs.core.IndexedSeq(G__25386__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__25387){
var keys = cljs.core.seq(arglist__25387);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__25388__i = 0, G__25388__a = new Array(arguments.length -  1);
while (G__25388__i < G__25388__a.length) {G__25388__a[G__25388__i] = arguments[G__25388__i + 1]; ++G__25388__i;}
  keys = new cljs.core.IndexedSeq(G__25388__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__25389){
var comparator = cljs.core.first(arglist__25389);
var keys = cljs.core.rest(arglist__25389);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__25390_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25390_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__25390_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__25391_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25391_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__25391_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__25412 = null;
var G__25412__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25412__1 = (function (result){
var G__25402 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25402) : rf.call(null,G__25402));
});
var G__25412__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__25403 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25403) : cljs.core.deref.call(null,G__25403));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__25404 = result;
var G__25405 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25404,G__25405) : rf.call(null,G__25404,G__25405));
}
});
G__25412 = function(result,input){
switch(arguments.length){
case 0:
return G__25412__0.call(this);
case 1:
return G__25412__1.call(this,result);
case 2:
return G__25412__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25412.cljs$core$IFn$_invoke$arity$0 = G__25412__0;
G__25412.cljs$core$IFn$_invoke$arity$1 = G__25412__1;
G__25412.cljs$core$IFn$_invoke$arity$2 = G__25412__2;
return G__25412;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__25410,seen__$1){
while(true){
var vec__25411 = p__25410;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25411,(0),null);
var xs__$1 = vec__25411;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__25413 = cljs.core.rest(s);
var G__25414 = seen__$1;
p__25410 = G__25413;
seen__$1 = G__25414;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__25415 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__25416 = cljs.core.next(s__$1);
ret = G__25415;
s__$1 = G__25416;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__25418 = x;
if(G__25418){
var bit__14139__auto__ = (G__25418.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__14139__auto__) || (G__25418.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__25419 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__25420 = cljs.core.next(ks);
var G__25421 = cljs.core.next(vs);
map = G__25419;
ks = G__25420;
vs = G__25421;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__25432 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25432) : k.call(null,G__25432));
})() > (function (){var G__25433 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25433) : k.call(null,G__25433));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__25434__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25422_SHARP_,p2__25423_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__25422_SHARP_,p2__25423_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25434 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25435__i = 0, G__25435__a = new Array(arguments.length -  3);
while (G__25435__i < G__25435__a.length) {G__25435__a[G__25435__i] = arguments[G__25435__i + 3]; ++G__25435__i;}
  more = new cljs.core.IndexedSeq(G__25435__a,0);
} 
return G__25434__delegate.call(this,k,x,y,more);};
G__25434.cljs$lang$maxFixedArity = 3;
G__25434.cljs$lang$applyTo = (function (arglist__25436){
var k = cljs.core.first(arglist__25436);
arglist__25436 = cljs.core.next(arglist__25436);
var x = cljs.core.first(arglist__25436);
arglist__25436 = cljs.core.next(arglist__25436);
var y = cljs.core.first(arglist__25436);
var more = cljs.core.rest(arglist__25436);
return G__25434__delegate(k,x,y,more);
});
G__25434.cljs$core$IFn$_invoke$arity$variadic = G__25434__delegate;
return G__25434;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__25437 = null;
if (arguments.length > 3) {
var G__25438__i = 0, G__25438__a = new Array(arguments.length -  3);
while (G__25438__i < G__25438__a.length) {G__25438__a[G__25438__i] = arguments[G__25438__i + 3]; ++G__25438__i;}
G__25437 = new cljs.core.IndexedSeq(G__25438__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__25449 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25449) : k.call(null,G__25449));
})() < (function (){var G__25450 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25450) : k.call(null,G__25450));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__25451__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25439_SHARP_,p2__25440_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__25439_SHARP_,p2__25440_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25451 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25452__i = 0, G__25452__a = new Array(arguments.length -  3);
while (G__25452__i < G__25452__a.length) {G__25452__a[G__25452__i] = arguments[G__25452__i + 3]; ++G__25452__i;}
  more = new cljs.core.IndexedSeq(G__25452__a,0);
} 
return G__25451__delegate.call(this,k,x,y,more);};
G__25451.cljs$lang$maxFixedArity = 3;
G__25451.cljs$lang$applyTo = (function (arglist__25453){
var k = cljs.core.first(arglist__25453);
arglist__25453 = cljs.core.next(arglist__25453);
var x = cljs.core.first(arglist__25453);
arglist__25453 = cljs.core.next(arglist__25453);
var y = cljs.core.first(arglist__25453);
var more = cljs.core.rest(arglist__25453);
return G__25451__delegate(k,x,y,more);
});
G__25451.cljs$core$IFn$_invoke$arity$variadic = G__25451__delegate;
return G__25451;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__25454 = null;
if (arguments.length > 3) {
var G__25455__i = 0, G__25455__a = new Array(arguments.length -  3);
while (G__25455__i < G__25455__a.length) {G__25455__a[G__25455__i] = arguments[G__25455__i + 3]; ++G__25455__i;}
G__25454 = new cljs.core.IndexedSeq(G__25455__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25454);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__25472 = null;
var G__25472__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25472__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25467 = result;
var G__25468 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25467,G__25468) : rf.call(null,G__25467,G__25468));
})());
})());
var G__25469 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25469) : rf.call(null,G__25469));
});
var G__25472__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__25470 = result;
var G__25471 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25470,G__25471) : rf.call(null,G__25470,G__25471));
} else {
return result;
}
});
G__25472 = function(result,input){
switch(arguments.length){
case 0:
return G__25472__0.call(this);
case 1:
return G__25472__1.call(this,result);
case 2:
return G__25472__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25472.cljs$core$IFn$_invoke$arity$0 = G__25472__0;
G__25472.cljs$core$IFn$_invoke$arity$1 = G__25472__1;
G__25472.cljs$core$IFn$_invoke$arity$2 = G__25472__2;
return G__25472;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__25485 = null;
var G__25485__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25485__1 = (function (result){
var G__25480 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25480) : rf.call(null,G__25480));
});
var G__25485__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__25481 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25481) : pred.call(null,G__25481));
})())){
var G__25482 = result;
var G__25483 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25482,G__25483) : rf.call(null,G__25482,G__25483));
} else {
return cljs.core.reduced(result);
}
});
G__25485 = function(result,input){
switch(arguments.length){
case 0:
return G__25485__0.call(this);
case 1:
return G__25485__1.call(this,result);
case 2:
return G__25485__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25485.cljs$core$IFn$_invoke$arity$0 = G__25485__0;
G__25485.cljs$core$IFn$_invoke$arity$1 = G__25485__1;
G__25485.cljs$core$IFn$_invoke$arity$2 = G__25485__2;
return G__25485;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__25484 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25484) : pred.call(null,G__25484));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__25490 = (function (){var G__25492 = cljs.core._entry_key(sc,e);
var G__25493 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25492,G__25493) : comp.call(null,G__25492,G__25493));
})();
var G__25491 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__25490,G__25491) : test.call(null,G__25490,G__25491));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25497 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25497,(0),null);
var s = vec__25497;
if(cljs.core.truth_((function (){var G__25498 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25498) : include.call(null,G__25498));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25499 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25499,(0),null);
var s = vec__25499;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25503 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25503,(0),null);
var s = vec__25503;
if(cljs.core.truth_((function (){var G__25504 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25504) : include.call(null,G__25504));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25505 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25505,(0),null);
var s = vec__25505;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__25506 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25506) : Math.ceil.call(null,G__25506));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13886__auto__ = self__.__hash;
if(!((h__13886__auto__ == null))){
return h__13886__auto__;
} else {
var h__13886__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13886__auto____$1;

return h__13886__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__25507 = ret;
var G__25508 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25507,G__25508) : f.call(null,G__25507,G__25508));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__25509 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25509) : cljs.core.deref.call(null,G__25509));
} else {
var G__25510 = (i + self__.step);
var G__25511 = ret__$1;
i = G__25510;
ret = G__25511;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25529 = null;
var G__25529__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25529__1 = (function (result){
var G__25526 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25526) : rf.call(null,G__25526));
});
var G__25529__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__25527 = result;
var G__25528 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25527,G__25528) : rf.call(null,G__25527,G__25528));
} else {
return result;
}
});
G__25529 = function(result,input){
switch(arguments.length){
case 0:
return G__25529__0.call(this);
case 1:
return G__25529__1.call(this,result);
case 2:
return G__25529__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25529.cljs$core$IFn$_invoke$arity$0 = G__25529__0;
G__25529.cljs$core$IFn$_invoke$arity$1 = G__25529__1;
G__25529.cljs$core$IFn$_invoke$arity$2 = G__25529__2;
return G__25529;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__25551 = null;
var G__25551__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25551__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25542 = result;
var G__25543 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25542,G__25543) : rf.call(null,G__25542,G__25543));
})());
})());
var G__25544 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25544) : rf.call(null,G__25544));
});
var G__25551__2 = (function (result,input){
var pval = (function (){var G__25545 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25545) : cljs.core.deref.call(null,G__25545));
})();
var val = (function (){var G__25546 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25546) : f.call(null,G__25546));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__25547 = result;
var G__25548 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25547,G__25548) : rf.call(null,G__25547,G__25548));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__25551 = function(result,input){
switch(arguments.length){
case 0:
return G__25551__0.call(this);
case 1:
return G__25551__1.call(this,result);
case 2:
return G__25551__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25551.cljs$core$IFn$_invoke$arity$0 = G__25551__0;
G__25551.cljs$core$IFn$_invoke$arity$1 = G__25551__1;
G__25551.cljs$core$IFn$_invoke$arity$2 = G__25551__2;
return G__25551;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__25549 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25549) : f.call(null,G__25549));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__25530_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__25550 = p1__25530_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25550) : f.call(null,G__25550));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__25560 = init;
var G__25561 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25560,G__25561) : f.call(null,G__25560,G__25561));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__25656 = null;
var G__25656__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__25656__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25614 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25614) : f.call(null,G__25614));
})()],null));
});
var G__25656__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25615 = x;
var G__25616 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25615,G__25616) : f.call(null,G__25615,G__25616));
})()],null));
});
var G__25656__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25617 = x;
var G__25618 = y;
var G__25619 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25617,G__25618,G__25619) : f.call(null,G__25617,G__25618,G__25619));
})()],null));
});
var G__25656__4 = (function() { 
var G__25657__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__25657 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25658__i = 0, G__25658__a = new Array(arguments.length -  3);
while (G__25658__i < G__25658__a.length) {G__25658__a[G__25658__i] = arguments[G__25658__i + 3]; ++G__25658__i;}
  args = new cljs.core.IndexedSeq(G__25658__a,0);
} 
return G__25657__delegate.call(this,x,y,z,args);};
G__25657.cljs$lang$maxFixedArity = 3;
G__25657.cljs$lang$applyTo = (function (arglist__25659){
var x = cljs.core.first(arglist__25659);
arglist__25659 = cljs.core.next(arglist__25659);
var y = cljs.core.first(arglist__25659);
arglist__25659 = cljs.core.next(arglist__25659);
var z = cljs.core.first(arglist__25659);
var args = cljs.core.rest(arglist__25659);
return G__25657__delegate(x,y,z,args);
});
G__25657.cljs$core$IFn$_invoke$arity$variadic = G__25657__delegate;
return G__25657;
})()
;
G__25656 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25656__0.call(this);
case 1:
return G__25656__1.call(this,x);
case 2:
return G__25656__2.call(this,x,y);
case 3:
return G__25656__3.call(this,x,y,z);
default:
var G__25660 = null;
if (arguments.length > 3) {
var G__25661__i = 0, G__25661__a = new Array(arguments.length -  3);
while (G__25661__i < G__25661__a.length) {G__25661__a[G__25661__i] = arguments[G__25661__i + 3]; ++G__25661__i;}
G__25660 = new cljs.core.IndexedSeq(G__25661__a,0);
}
return G__25656__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25660);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25656.cljs$lang$maxFixedArity = 3;
G__25656.cljs$lang$applyTo = G__25656__4.cljs$lang$applyTo;
G__25656.cljs$core$IFn$_invoke$arity$0 = G__25656__0;
G__25656.cljs$core$IFn$_invoke$arity$1 = G__25656__1;
G__25656.cljs$core$IFn$_invoke$arity$2 = G__25656__2;
G__25656.cljs$core$IFn$_invoke$arity$3 = G__25656__3;
G__25656.cljs$core$IFn$_invoke$arity$variadic = G__25656__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25656;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__25662 = null;
var G__25662__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__25662__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25620 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25620) : f.call(null,G__25620));
})(),(function (){var G__25621 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25621) : g.call(null,G__25621));
})()],null));
});
var G__25662__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25622 = x;
var G__25623 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25622,G__25623) : f.call(null,G__25622,G__25623));
})(),(function (){var G__25624 = x;
var G__25625 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25624,G__25625) : g.call(null,G__25624,G__25625));
})()],null));
});
var G__25662__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25626 = x;
var G__25627 = y;
var G__25628 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25626,G__25627,G__25628) : f.call(null,G__25626,G__25627,G__25628));
})(),(function (){var G__25629 = x;
var G__25630 = y;
var G__25631 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25629,G__25630,G__25631) : g.call(null,G__25629,G__25630,G__25631));
})()],null));
});
var G__25662__4 = (function() { 
var G__25663__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__25663 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25664__i = 0, G__25664__a = new Array(arguments.length -  3);
while (G__25664__i < G__25664__a.length) {G__25664__a[G__25664__i] = arguments[G__25664__i + 3]; ++G__25664__i;}
  args = new cljs.core.IndexedSeq(G__25664__a,0);
} 
return G__25663__delegate.call(this,x,y,z,args);};
G__25663.cljs$lang$maxFixedArity = 3;
G__25663.cljs$lang$applyTo = (function (arglist__25665){
var x = cljs.core.first(arglist__25665);
arglist__25665 = cljs.core.next(arglist__25665);
var y = cljs.core.first(arglist__25665);
arglist__25665 = cljs.core.next(arglist__25665);
var z = cljs.core.first(arglist__25665);
var args = cljs.core.rest(arglist__25665);
return G__25663__delegate(x,y,z,args);
});
G__25663.cljs$core$IFn$_invoke$arity$variadic = G__25663__delegate;
return G__25663;
})()
;
G__25662 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25662__0.call(this);
case 1:
return G__25662__1.call(this,x);
case 2:
return G__25662__2.call(this,x,y);
case 3:
return G__25662__3.call(this,x,y,z);
default:
var G__25666 = null;
if (arguments.length > 3) {
var G__25667__i = 0, G__25667__a = new Array(arguments.length -  3);
while (G__25667__i < G__25667__a.length) {G__25667__a[G__25667__i] = arguments[G__25667__i + 3]; ++G__25667__i;}
G__25666 = new cljs.core.IndexedSeq(G__25667__a,0);
}
return G__25662__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25666);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25662.cljs$lang$maxFixedArity = 3;
G__25662.cljs$lang$applyTo = G__25662__4.cljs$lang$applyTo;
G__25662.cljs$core$IFn$_invoke$arity$0 = G__25662__0;
G__25662.cljs$core$IFn$_invoke$arity$1 = G__25662__1;
G__25662.cljs$core$IFn$_invoke$arity$2 = G__25662__2;
G__25662.cljs$core$IFn$_invoke$arity$3 = G__25662__3;
G__25662.cljs$core$IFn$_invoke$arity$variadic = G__25662__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25662;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__25668 = null;
var G__25668__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__25668__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25632 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25632) : f.call(null,G__25632));
})(),(function (){var G__25633 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25633) : g.call(null,G__25633));
})(),(function (){var G__25634 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25634) : h.call(null,G__25634));
})()],null));
});
var G__25668__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25635 = x;
var G__25636 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25635,G__25636) : f.call(null,G__25635,G__25636));
})(),(function (){var G__25637 = x;
var G__25638 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25637,G__25638) : g.call(null,G__25637,G__25638));
})(),(function (){var G__25639 = x;
var G__25640 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25639,G__25640) : h.call(null,G__25639,G__25640));
})()],null));
});
var G__25668__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25641 = x;
var G__25642 = y;
var G__25643 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25641,G__25642,G__25643) : f.call(null,G__25641,G__25642,G__25643));
})(),(function (){var G__25644 = x;
var G__25645 = y;
var G__25646 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25644,G__25645,G__25646) : g.call(null,G__25644,G__25645,G__25646));
})(),(function (){var G__25647 = x;
var G__25648 = y;
var G__25649 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25647,G__25648,G__25649) : h.call(null,G__25647,G__25648,G__25649));
})()],null));
});
var G__25668__4 = (function() { 
var G__25669__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__25669 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25670__i = 0, G__25670__a = new Array(arguments.length -  3);
while (G__25670__i < G__25670__a.length) {G__25670__a[G__25670__i] = arguments[G__25670__i + 3]; ++G__25670__i;}
  args = new cljs.core.IndexedSeq(G__25670__a,0);
} 
return G__25669__delegate.call(this,x,y,z,args);};
G__25669.cljs$lang$maxFixedArity = 3;
G__25669.cljs$lang$applyTo = (function (arglist__25671){
var x = cljs.core.first(arglist__25671);
arglist__25671 = cljs.core.next(arglist__25671);
var y = cljs.core.first(arglist__25671);
arglist__25671 = cljs.core.next(arglist__25671);
var z = cljs.core.first(arglist__25671);
var args = cljs.core.rest(arglist__25671);
return G__25669__delegate(x,y,z,args);
});
G__25669.cljs$core$IFn$_invoke$arity$variadic = G__25669__delegate;
return G__25669;
})()
;
G__25668 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25668__0.call(this);
case 1:
return G__25668__1.call(this,x);
case 2:
return G__25668__2.call(this,x,y);
case 3:
return G__25668__3.call(this,x,y,z);
default:
var G__25672 = null;
if (arguments.length > 3) {
var G__25673__i = 0, G__25673__a = new Array(arguments.length -  3);
while (G__25673__i < G__25673__a.length) {G__25673__a[G__25673__i] = arguments[G__25673__i + 3]; ++G__25673__i;}
G__25672 = new cljs.core.IndexedSeq(G__25673__a,0);
}
return G__25668__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25672);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25668.cljs$lang$maxFixedArity = 3;
G__25668.cljs$lang$applyTo = G__25668__4.cljs$lang$applyTo;
G__25668.cljs$core$IFn$_invoke$arity$0 = G__25668__0;
G__25668.cljs$core$IFn$_invoke$arity$1 = G__25668__1;
G__25668.cljs$core$IFn$_invoke$arity$2 = G__25668__2;
G__25668.cljs$core$IFn$_invoke$arity$3 = G__25668__3;
G__25668.cljs$core$IFn$_invoke$arity$variadic = G__25668__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25668;
})()
});
var juxt__4 = (function() { 
var G__25674__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__25675 = null;
var G__25675__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25562_SHARP_,p2__25563_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25562_SHARP_,(function (){return (p2__25563_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__25563_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__25563_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25675__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25564_SHARP_,p2__25565_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25564_SHARP_,(function (){var G__25650 = x;
return (p2__25565_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__25565_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25650) : p2__25565_SHARP_.call(null,G__25650));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25675__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25566_SHARP_,p2__25567_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25566_SHARP_,(function (){var G__25651 = x;
var G__25652 = y;
return (p2__25567_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__25567_SHARP_.cljs$core$IFn$_invoke$arity$2(G__25651,G__25652) : p2__25567_SHARP_.call(null,G__25651,G__25652));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25675__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25568_SHARP_,p2__25569_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25568_SHARP_,(function (){var G__25653 = x;
var G__25654 = y;
var G__25655 = z;
return (p2__25569_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__25569_SHARP_.cljs$core$IFn$_invoke$arity$3(G__25653,G__25654,G__25655) : p2__25569_SHARP_.call(null,G__25653,G__25654,G__25655));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25675__4 = (function() { 
var G__25676__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25570_SHARP_,p2__25571_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25570_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__25571_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__25676 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25677__i = 0, G__25677__a = new Array(arguments.length -  3);
while (G__25677__i < G__25677__a.length) {G__25677__a[G__25677__i] = arguments[G__25677__i + 3]; ++G__25677__i;}
  args = new cljs.core.IndexedSeq(G__25677__a,0);
} 
return G__25676__delegate.call(this,x,y,z,args);};
G__25676.cljs$lang$maxFixedArity = 3;
G__25676.cljs$lang$applyTo = (function (arglist__25678){
var x = cljs.core.first(arglist__25678);
arglist__25678 = cljs.core.next(arglist__25678);
var y = cljs.core.first(arglist__25678);
arglist__25678 = cljs.core.next(arglist__25678);
var z = cljs.core.first(arglist__25678);
var args = cljs.core.rest(arglist__25678);
return G__25676__delegate(x,y,z,args);
});
G__25676.cljs$core$IFn$_invoke$arity$variadic = G__25676__delegate;
return G__25676;
})()
;
G__25675 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25675__0.call(this);
case 1:
return G__25675__1.call(this,x);
case 2:
return G__25675__2.call(this,x,y);
case 3:
return G__25675__3.call(this,x,y,z);
default:
var G__25679 = null;
if (arguments.length > 3) {
var G__25680__i = 0, G__25680__a = new Array(arguments.length -  3);
while (G__25680__i < G__25680__a.length) {G__25680__a[G__25680__i] = arguments[G__25680__i + 3]; ++G__25680__i;}
G__25679 = new cljs.core.IndexedSeq(G__25680__a,0);
}
return G__25675__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25675.cljs$lang$maxFixedArity = 3;
G__25675.cljs$lang$applyTo = G__25675__4.cljs$lang$applyTo;
G__25675.cljs$core$IFn$_invoke$arity$0 = G__25675__0;
G__25675.cljs$core$IFn$_invoke$arity$1 = G__25675__1;
G__25675.cljs$core$IFn$_invoke$arity$2 = G__25675__2;
G__25675.cljs$core$IFn$_invoke$arity$3 = G__25675__3;
G__25675.cljs$core$IFn$_invoke$arity$variadic = G__25675__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25675;
})()
;})(fs__$1))
};
var G__25674 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25681__i = 0, G__25681__a = new Array(arguments.length -  3);
while (G__25681__i < G__25681__a.length) {G__25681__a[G__25681__i] = arguments[G__25681__i + 3]; ++G__25681__i;}
  fs = new cljs.core.IndexedSeq(G__25681__a,0);
} 
return G__25674__delegate.call(this,f,g,h,fs);};
G__25674.cljs$lang$maxFixedArity = 3;
G__25674.cljs$lang$applyTo = (function (arglist__25682){
var f = cljs.core.first(arglist__25682);
arglist__25682 = cljs.core.next(arglist__25682);
var g = cljs.core.first(arglist__25682);
arglist__25682 = cljs.core.next(arglist__25682);
var h = cljs.core.first(arglist__25682);
var fs = cljs.core.rest(arglist__25682);
return G__25674__delegate(f,g,h,fs);
});
G__25674.cljs$core$IFn$_invoke$arity$variadic = G__25674__delegate;
return G__25674;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__25683 = null;
if (arguments.length > 3) {
var G__25684__i = 0, G__25684__a = new Array(arguments.length -  3);
while (G__25684__i < G__25684__a.length) {G__25684__a[G__25684__i] = arguments[G__25684__i + 3]; ++G__25684__i;}
G__25683 = new cljs.core.IndexedSeq(G__25684__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__25683);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__25685 = cljs.core.next(coll);
coll = G__25685;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__25686 = (n - (1));
var G__25687 = cljs.core.next(coll);
n = G__25686;
coll = G__25687;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__25691 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25691,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25691,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25691,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_25699 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__13465__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__25700_25706 = cljs.core.first(coll);
var G__25701_25707 = writer;
var G__25702_25708 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25700_25706,G__25701_25707,G__25702_25708) : print_one.call(null,G__25700_25706,G__25701_25707,G__25702_25708));
} else {
}

var coll_25709__$1 = cljs.core.next(coll);
var n_25710 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_25709__$1) && (((n_25710 == null)) || (!((n_25710 === (0)))))){
cljs.core._write(writer,sep);

var G__25703_25711 = cljs.core.first(coll_25709__$1);
var G__25704_25712 = writer;
var G__25705_25713 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25703_25711,G__25704_25712,G__25705_25713) : print_one.call(null,G__25703_25711,G__25704_25712,G__25705_25713));

var G__25714 = cljs.core.next(coll_25709__$1);
var G__25715 = (n_25710 - (1));
coll_25709__$1 = G__25714;
n_25710 = G__25715;
continue;
} else {
if((cljs.core.seq(coll_25709__$1)) && ((n_25710 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__13465__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_25699;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__25720 = cljs.core.seq(ss);
var chunk__25721 = null;
var count__25722 = (0);
var i__25723 = (0);
while(true){
if((i__25723 < count__25722)){
var s = chunk__25721.cljs$core$IIndexed$_nth$arity$2(null,i__25723);
cljs.core._write(writer,s);

var G__25724 = seq__25720;
var G__25725 = chunk__25721;
var G__25726 = count__25722;
var G__25727 = (i__25723 + (1));
seq__25720 = G__25724;
chunk__25721 = G__25725;
count__25722 = G__25726;
i__25723 = G__25727;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25720);
if(temp__4126__auto__){
var seq__25720__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25720__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__25720__$1);
var G__25728 = cljs.core.chunk_rest(seq__25720__$1);
var G__25729 = c__14252__auto__;
var G__25730 = cljs.core.count(c__14252__auto__);
var G__25731 = (0);
seq__25720 = G__25728;
chunk__25721 = G__25729;
count__25722 = G__25730;
i__25723 = G__25731;
continue;
} else {
var s = cljs.core.first(seq__25720__$1);
cljs.core._write(writer,s);

var G__25732 = cljs.core.next(seq__25720__$1);
var G__25733 = null;
var G__25734 = (0);
var G__25735 = (0);
seq__25720 = G__25732;
chunk__25721 = G__25733;
count__25722 = G__25734;
i__25723 = G__25735;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__25736__i = 0, G__25736__a = new Array(arguments.length -  1);
while (G__25736__i < G__25736__a.length) {G__25736__a[G__25736__i] = arguments[G__25736__i + 1]; ++G__25736__i;}
  ss = new cljs.core.IndexedSeq(G__25736__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__25737){
var writer = cljs.core.first(arglist__25737);
var ss = cljs.core.rest(arglist__25737);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj25739 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj25739;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__25742 = "[\\\\\"\b\f\n\r\t]";
var G__25743 = "g";
return RegExp(G__25742,G__25743);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__13453__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__13453__auto__)){
var and__13453__auto____$1 = (function (){var G__25757 = obj;
if(G__25757){
var bit__14146__auto__ = (G__25757.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14146__auto__) || (G__25757.cljs$core$IMeta$)){
return true;
} else {
if((!G__25757.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25757);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25757);
}
})();
if(and__13453__auto____$1){
return cljs.core.meta(obj);
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__25758_25768 = cljs.core.meta(obj);
var G__25759_25769 = writer;
var G__25760_25770 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__25758_25768,G__25759_25769,G__25760_25770) : cljs.core.pr_writer.call(null,G__25758_25768,G__25759_25769,G__25760_25770));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__25761 = obj;
if(G__25761){
var bit__14139__auto__ = (G__25761.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__14139__auto__) || (G__25761.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__25762 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__25763 = cljs.core.pr_writer;
var G__25764 = writer;
var G__25765 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__25762,G__25763,G__25764,G__25765) : cljs.core.print_map.call(null,G__25762,G__25763,G__25764,G__25765));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__25766 = obj;
return goog.isString(G__25766);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__25771 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__25771;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__25767 = obj;
if(G__25767){
var bit__14146__auto__ = (G__25767.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__14146__auto__) || (G__25767.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__25767.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25767);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25767);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__25775 = obj;
var G__25776 = writer;
var G__25777 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__25775,G__25776,G__25777) : alt_impl.call(null,G__25775,G__25776,G__25777));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__25782 = cljs.core.seq(cljs.core.next(objs));
var chunk__25783 = null;
var count__25784 = (0);
var i__25785 = (0);
while(true){
if((i__25785 < count__25784)){
var obj = chunk__25783.cljs$core$IIndexed$_nth$arity$2(null,i__25785);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25786 = seq__25782;
var G__25787 = chunk__25783;
var G__25788 = count__25784;
var G__25789 = (i__25785 + (1));
seq__25782 = G__25786;
chunk__25783 = G__25787;
count__25784 = G__25788;
i__25785 = G__25789;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25782);
if(temp__4126__auto__){
var seq__25782__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25782__$1)){
var c__14252__auto__ = cljs.core.chunk_first(seq__25782__$1);
var G__25790 = cljs.core.chunk_rest(seq__25782__$1);
var G__25791 = c__14252__auto__;
var G__25792 = cljs.core.count(c__14252__auto__);
var G__25793 = (0);
seq__25782 = G__25790;
chunk__25783 = G__25791;
count__25784 = G__25792;
i__25785 = G__25793;
continue;
} else {
var obj = cljs.core.first(seq__25782__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25794 = cljs.core.next(seq__25782__$1);
var G__25795 = null;
var G__25796 = (0);
var G__25797 = (0);
seq__25782 = G__25794;
chunk__25783 = G__25795;
count__25784 = G__25796;
i__25785 = G__25797;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25798__i = 0, G__25798__a = new Array(arguments.length -  0);
while (G__25798__i < G__25798__a.length) {G__25798__a[G__25798__i] = arguments[G__25798__i + 0]; ++G__25798__i;}
  objs = new cljs.core.IndexedSeq(G__25798__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__25799){
var objs = cljs.core.seq(arglist__25799);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25800__i = 0, G__25800__a = new Array(arguments.length -  0);
while (G__25800__i < G__25800__a.length) {G__25800__a[G__25800__i] = arguments[G__25800__i + 0]; ++G__25800__i;}
  objs = new cljs.core.IndexedSeq(G__25800__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__25801){
var objs = cljs.core.seq(arglist__25801);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25802__i = 0, G__25802__a = new Array(arguments.length -  0);
while (G__25802__i < G__25802__a.length) {G__25802__a[G__25802__i] = arguments[G__25802__i + 0]; ++G__25802__i;}
  objs = new cljs.core.IndexedSeq(G__25802__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__25803){
var objs = cljs.core.seq(arglist__25803);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25804__i = 0, G__25804__a = new Array(arguments.length -  0);
while (G__25804__i < G__25804__a.length) {G__25804__a[G__25804__i] = arguments[G__25804__i + 0]; ++G__25804__i;}
  objs = new cljs.core.IndexedSeq(G__25804__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__25805){
var objs = cljs.core.seq(arglist__25805);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25806__i = 0, G__25806__a = new Array(arguments.length -  0);
while (G__25806__i < G__25806__a.length) {G__25806__a[G__25806__i] = arguments[G__25806__i + 0]; ++G__25806__i;}
  objs = new cljs.core.IndexedSeq(G__25806__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__25807){
var objs = cljs.core.seq(arglist__25807);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25808__i = 0, G__25808__a = new Array(arguments.length -  0);
while (G__25808__i < G__25808__a.length) {G__25808__a[G__25808__i] = arguments[G__25808__i + 0]; ++G__25808__i;}
  objs = new cljs.core.IndexedSeq(G__25808__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__25809){
var objs = cljs.core.seq(arglist__25809);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25810__i = 0, G__25810__a = new Array(arguments.length -  0);
while (G__25810__i < G__25810__a.length) {G__25810__a[G__25810__i] = arguments[G__25810__i + 0]; ++G__25810__i;}
  objs = new cljs.core.IndexedSeq(G__25810__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__25811){
var objs = cljs.core.seq(arglist__25811);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25812__i = 0, G__25812__a = new Array(arguments.length -  0);
while (G__25812__i < G__25812__a.length) {G__25812__a[G__25812__i] = arguments[G__25812__i + 0]; ++G__25812__i;}
  objs = new cljs.core.IndexedSeq(G__25812__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__25813){
var objs = cljs.core.seq(arglist__25813);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__25820_25826 = cljs.core.key(e);
var G__25821_25827 = w;
var G__25822_25828 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25820_25826,G__25821_25827,G__25822_25828) : print_one.call(null,G__25820_25826,G__25821_25827,G__25822_25828));

cljs.core._write(w," ");

var G__25823 = cljs.core.val(e);
var G__25824 = w;
var G__25825 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25823,G__25824,G__25825) : print_one.call(null,G__25823,G__25824,G__25825));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__25829__i = 0, G__25829__a = new Array(arguments.length -  2);
while (G__25829__i < G__25829__a.length) {G__25829__a[G__25829__i] = arguments[G__25829__i + 2]; ++G__25829__i;}
  args = new cljs.core.IndexedSeq(G__25829__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__25830){
var iref = cljs.core.first(arglist__25830);
arglist__25830 = cljs.core.next(arglist__25830);
var f = cljs.core.first(arglist__25830);
var args = cljs.core.rest(arglist__25830);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__25833 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25833) : cljs.core.atom.call(null,G__25833));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__25835 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25835) : cljs.core.deref.call(null,G__25835));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__25836_SHARP_,p2__25837_SHARP_){
var ret = (function (){var G__25840 = p1__25836_SHARP_;
var G__25841 = p2__25837_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25840,G__25841) : rf.call(null,G__25840,G__25841));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__25844 = null;
var G__25844__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25844__1 = (function (result){
var G__25843 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25843) : rf.call(null,G__25843));
});
var G__25844__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__25844 = function(result,input){
switch(arguments.length){
case 0:
return G__25844__0.call(this);
case 1:
return G__25844__1.call(this,result);
case 2:
return G__25844__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25844.cljs$core$IFn$_invoke$arity$0 = G__25844__0;
G__25844.cljs$core$IFn$_invoke$arity$1 = G__25844__1;
G__25844.cljs$core$IFn$_invoke$arity$2 = G__25844__2;
return G__25844;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__25853 = null;
var G__25853__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25853__1 = (function (result){
var G__25849 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25849) : rf.call(null,G__25849));
});
var G__25853__2 = (function (result,input){
var prior = (function (){var G__25850 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25850) : cljs.core.deref.call(null,G__25850));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__25851 = result;
var G__25852 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25851,G__25852) : rf.call(null,G__25851,G__25852));
}
});
G__25853 = function(result,input){
switch(arguments.length){
case 0:
return G__25853__0.call(this);
case 1:
return G__25853__1.call(this,result);
case 2:
return G__25853__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25853.cljs$core$IFn$_invoke$arity$0 = G__25853__0;
G__25853.cljs$core$IFn$_invoke$arity$1 = G__25853__1;
G__25853.cljs$core$IFn$_invoke$arity$2 = G__25853__2;
return G__25853;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14443__auto__ = this;
return cljs.core.es6_iterator(this__14443__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25855_SHARP_,p2__25854_SHARP_){
var G__25857 = p2__25854_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__25857) : proc.call(null,G__25857));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj25859 = {};
return obj25859;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__13453__auto__ = x;
if(and__13453__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__13453__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__14109__auto__ = (((x == null))?null:x);
return (function (){var or__13465__auto__ = (cljs.core._clj__GT_js[(function (){var G__25863 = x__14109__auto__;
return goog.typeOf(G__25863);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__13453__auto__ = x;
if(and__13453__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__13453__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__14109__auto__ = (((x == null))?null:x);
return (function (){var or__13465__auto__ = (cljs.core._key__GT_js[(function (){var G__25867 = x__14109__auto__;
return goog.typeOf(G__25867);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__25870 = k;
if(G__25870){
var bit__14146__auto__ = null;
if(cljs.core.truth_((function (){var or__13465__auto__ = bit__14146__auto__;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return G__25870.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25870.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25870);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25870);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__25871 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__25871) : cljs.core.clj__GT_js.call(null,G__25871));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__25887 = x;
if(G__25887){
var bit__14146__auto__ = null;
if(cljs.core.truth_((function (){var or__13465__auto__ = bit__14146__auto__;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return G__25887.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25887.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25887);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25887);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj25889 = {};
return obj25889;
})();
var seq__25890_25900 = cljs.core.seq(x);
var chunk__25891_25901 = null;
var count__25892_25902 = (0);
var i__25893_25903 = (0);
while(true){
if((i__25893_25903 < count__25892_25902)){
var vec__25894_25904 = chunk__25891_25901.cljs$core$IIndexed$_nth$arity$2(null,i__25893_25903);
var k_25905 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25894_25904,(0),null);
var v_25906 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25894_25904,(1),null);
(m[cljs.core.key__GT_js(k_25905)] = clj__GT_js(v_25906));

var G__25907 = seq__25890_25900;
var G__25908 = chunk__25891_25901;
var G__25909 = count__25892_25902;
var G__25910 = (i__25893_25903 + (1));
seq__25890_25900 = G__25907;
chunk__25891_25901 = G__25908;
count__25892_25902 = G__25909;
i__25893_25903 = G__25910;
continue;
} else {
var temp__4126__auto___25911 = cljs.core.seq(seq__25890_25900);
if(temp__4126__auto___25911){
var seq__25890_25912__$1 = temp__4126__auto___25911;
if(cljs.core.chunked_seq_QMARK_(seq__25890_25912__$1)){
var c__14252__auto___25913 = cljs.core.chunk_first(seq__25890_25912__$1);
var G__25914 = cljs.core.chunk_rest(seq__25890_25912__$1);
var G__25915 = c__14252__auto___25913;
var G__25916 = cljs.core.count(c__14252__auto___25913);
var G__25917 = (0);
seq__25890_25900 = G__25914;
chunk__25891_25901 = G__25915;
count__25892_25902 = G__25916;
i__25893_25903 = G__25917;
continue;
} else {
var vec__25895_25918 = cljs.core.first(seq__25890_25912__$1);
var k_25919 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25895_25918,(0),null);
var v_25920 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25895_25918,(1),null);
(m[cljs.core.key__GT_js(k_25919)] = clj__GT_js(v_25920));

var G__25921 = cljs.core.next(seq__25890_25912__$1);
var G__25922 = null;
var G__25923 = (0);
var G__25924 = (0);
seq__25890_25900 = G__25921;
chunk__25891_25901 = G__25922;
count__25892_25902 = G__25923;
i__25893_25903 = G__25924;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__25896_25925 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__25897_25926 = null;
var count__25898_25927 = (0);
var i__25899_25928 = (0);
while(true){
if((i__25899_25928 < count__25898_25927)){
var x_25929__$1 = chunk__25897_25926.cljs$core$IIndexed$_nth$arity$2(null,i__25899_25928);
arr.push(x_25929__$1);

var G__25930 = seq__25896_25925;
var G__25931 = chunk__25897_25926;
var G__25932 = count__25898_25927;
var G__25933 = (i__25899_25928 + (1));
seq__25896_25925 = G__25930;
chunk__25897_25926 = G__25931;
count__25898_25927 = G__25932;
i__25899_25928 = G__25933;
continue;
} else {
var temp__4126__auto___25934 = cljs.core.seq(seq__25896_25925);
if(temp__4126__auto___25934){
var seq__25896_25935__$1 = temp__4126__auto___25934;
if(cljs.core.chunked_seq_QMARK_(seq__25896_25935__$1)){
var c__14252__auto___25936 = cljs.core.chunk_first(seq__25896_25935__$1);
var G__25937 = cljs.core.chunk_rest(seq__25896_25935__$1);
var G__25938 = c__14252__auto___25936;
var G__25939 = cljs.core.count(c__14252__auto___25936);
var G__25940 = (0);
seq__25896_25925 = G__25937;
chunk__25897_25926 = G__25938;
count__25898_25927 = G__25939;
i__25899_25928 = G__25940;
continue;
} else {
var x_25941__$1 = cljs.core.first(seq__25896_25935__$1);
arr.push(x_25941__$1);

var G__25942 = cljs.core.next(seq__25896_25935__$1);
var G__25943 = null;
var G__25944 = (0);
var G__25945 = (0);
seq__25896_25925 = G__25942;
chunk__25897_25926 = G__25943;
count__25898_25927 = G__25944;
i__25899_25928 = G__25945;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj25947 = {};
return obj25947;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__13453__auto__ = x;
if(and__13453__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__13453__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__14109__auto__ = (((x == null))?null:x);
return (function (){var or__13465__auto__ = (cljs.core._js__GT_clj[(function (){var G__25951 = x__14109__auto__;
return goog.typeOf(G__25951);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__26008__delegate = function (x,opts){
var map__25981 = opts;
var map__25981__$1 = ((cljs.core.seq_QMARK_(map__25981))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25981):map__25981);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25981__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__25981,map__25981__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__25997 = x__$1;
if(G__25997){
var bit__14146__auto__ = null;
if(cljs.core.truth_((function (){var or__13465__auto__ = bit__14146__auto__;
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return G__25997.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__25997.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25997);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25997);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__14221__auto__ = ((function (map__25981,map__25981__$1,keywordize_keys,keyfn){
return (function iter__25998(s__25999){
return (new cljs.core.LazySeq(null,((function (map__25981,map__25981__$1,keywordize_keys,keyfn){
return (function (){
var s__25999__$1 = s__25999;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__25999__$1);
if(temp__4126__auto__){
var s__25999__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__25999__$2)){
var c__14219__auto__ = cljs.core.chunk_first(s__25999__$2);
var size__14220__auto__ = cljs.core.count(c__14219__auto__);
var b__26001 = cljs.core.chunk_buffer(size__14220__auto__);
if((function (){var i__26000 = (0);
while(true){
if((i__26000 < size__14220__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__14219__auto__,i__26000);
cljs.core.chunk_append(b__26001,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__26006 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__26006) : keyfn.call(null,G__26006));
})(),thisfn((x__$1[k]))], null));

var G__26009 = (i__26000 + (1));
i__26000 = G__26009;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__26001),iter__25998(cljs.core.chunk_rest(s__25999__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__26001),null);
}
} else {
var k = cljs.core.first(s__25999__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__26007 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__26007) : keyfn.call(null,G__26007));
})(),thisfn((x__$1[k]))], null),iter__25998(cljs.core.rest(s__25999__$2)));
}
} else {
return null;
}
break;
}
});})(map__25981,map__25981__$1,keywordize_keys,keyfn))
,null,null));
});})(map__25981,map__25981__$1,keywordize_keys,keyfn))
;
return iter__14221__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__25981,map__25981__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__26008 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__26010__i = 0, G__26010__a = new Array(arguments.length -  1);
while (G__26010__i < G__26010__a.length) {G__26010__a[G__26010__i] = arguments[G__26010__i + 1]; ++G__26010__i;}
  opts = new cljs.core.IndexedSeq(G__26010__a,0);
} 
return G__26008__delegate.call(this,x,opts);};
G__26008.cljs$lang$maxFixedArity = 1;
G__26008.cljs$lang$applyTo = (function (arglist__26011){
var x = cljs.core.first(arglist__26011);
var opts = cljs.core.rest(arglist__26011);
return G__26008__delegate(x,opts);
});
G__26008.cljs$core$IFn$_invoke$arity$variadic = G__26008__delegate;
return G__26008;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__26012 = null;
if (arguments.length > 1) {
var G__26013__i = 0, G__26013__a = new Array(arguments.length -  1);
while (G__26013__i < G__26013__a.length) {G__26013__a[G__26013__i] = arguments[G__26013__i + 1]; ++G__26013__i;}
G__26012 = new cljs.core.IndexedSeq(G__26013__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__26012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__26016 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26016) : cljs.core.atom.call(null,G__26016));
})();
return ((function (mem){
return (function() { 
var G__26018__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__26017 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26017) : cljs.core.deref.call(null,G__26017));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__26018 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__26019__i = 0, G__26019__a = new Array(arguments.length -  0);
while (G__26019__i < G__26019__a.length) {G__26019__a[G__26019__i] = arguments[G__26019__i + 0]; ++G__26019__i;}
  args = new cljs.core.IndexedSeq(G__26019__a,0);
} 
return G__26018__delegate.call(this,args);};
G__26018.cljs$lang$maxFixedArity = 0;
G__26018.cljs$lang$applyTo = (function (arglist__26020){
var args = cljs.core.seq(arglist__26020);
return G__26018__delegate(args);
});
G__26018.cljs$core$IFn$_invoke$arity$variadic = G__26018__delegate;
return G__26018;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__26022 = ret;
f = G__26022;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__26023__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__26023 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__26024__i = 0, G__26024__a = new Array(arguments.length -  1);
while (G__26024__i < G__26024__a.length) {G__26024__a[G__26024__i] = arguments[G__26024__i + 1]; ++G__26024__i;}
  args = new cljs.core.IndexedSeq(G__26024__a,0);
} 
return G__26023__delegate.call(this,f,args);};
G__26023.cljs$lang$maxFixedArity = 1;
G__26023.cljs$lang$applyTo = (function (arglist__26025){
var f = cljs.core.first(arglist__26025);
var args = cljs.core.rest(arglist__26025);
return G__26023__delegate(f,args);
});
G__26023.cljs$core$IFn$_invoke$arity$variadic = G__26023__delegate;
return G__26023;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__26026 = null;
if (arguments.length > 1) {
var G__26027__i = 0, G__26027__a = new Array(arguments.length -  1);
while (G__26027__i < G__26027__a.length) {G__26027__a[G__26027__i] = arguments[G__26027__i + 1]; ++G__26027__i;}
G__26026 = new cljs.core.IndexedSeq(G__26027__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__26026);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__26030 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__26030) : Math.floor.call(null,G__26030));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__26032 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__26032) : f.call(null,G__26032));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__26034 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__26034) : cljs.core.atom.call(null,G__26034));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__26035__i = 0, G__26035__a = new Array(arguments.length -  1);
while (G__26035__i < G__26035__a.length) {G__26035__a[G__26035__i] = arguments[G__26035__i + 1]; ++G__26035__i;}
  args = new cljs.core.IndexedSeq(G__26035__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__26036){
var f = cljs.core.first(arglist__26036);
var args = cljs.core.rest(arglist__26036);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__26101 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26101) : cljs.core.deref.call(null,G__26101));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__13465__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
var and__13453__auto__ = cljs.core.vector_QMARK_(parent);
if(and__13453__auto__){
var and__13453__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__13453__auto____$1){
var and__13453__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__13453__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__26126 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__26124 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__26124) : child.call(null,G__26124));
})(),(function (){var G__26125 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__26125) : parent.call(null,G__26125));
})());
var G__26127 = (i + (1));
ret = G__26126;
i = G__26127;
continue;
}
break;
}
} else {
return and__13453__auto____$2;
}
} else {
return and__13453__auto____$1;
}
} else {
return and__13453__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__26131 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26131) : cljs.core.deref.call(null,G__26131));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__26135 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26135) : cljs.core.deref.call(null,G__26135));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__26139 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26139) : cljs.core.deref.call(null,G__26139));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__26148 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__26148) : targets.call(null,G__26148));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__26149 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__26149) : sources.call(null,G__26149));
})()));
});})(tp,td,ta))
;
var or__13465__auto__ = ((cljs.core.contains_QMARK_((function (){var G__26153 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__26153) : tp.call(null,G__26153));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__26154 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__26154) : ta.call(null,G__26154));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__26155 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__26155) : ta.call(null,G__26155));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__26162 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26162) : parentMap.call(null,G__26162));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__26163 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26163) : parentMap.call(null,G__26163));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__26156_SHARP_){
return cljs.core.cons(cljs.core.first(p1__26156_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__26156_SHARP_),cljs.core.second(p1__26156_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__26164 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26164) : parentMap.call(null,G__26164));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__26157_SHARP_,p2__26158_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__26157_SHARP_,p2__26158_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__26167 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26167) : cljs.core.deref.call(null,G__26167));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__26168 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26168) : cljs.core.deref.call(null,G__26168));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__26184 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26184) : cljs.core.deref.call(null,G__26184));
})().call(null,x);
var or__13465__auto__ = (cljs.core.truth_((function (){var and__13453__auto__ = xprefs;
if(cljs.core.truth_(and__13453__auto__)){
var G__26186 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__26186) : xprefs.call(null,G__26186));
} else {
return and__13453__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__26187 = cljs.core.rest(ps);
ps = G__26187;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13465__auto____$1)){
return or__13465__auto____$1;
} else {
var or__13465__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__26188 = cljs.core.rest(ps);
ps = G__26188;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13465__auto____$2)){
return or__13465__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__13465__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__13465__auto__)){
return or__13465__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__26202){
var vec__26203 = p__26202;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26203,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26203,(1),null);
var e = vec__26203;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__26204 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26204) : cljs.core.deref.call(null,G__26204));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__13465__auto__ = (be == null);
if(or__13465__auto__){
return or__13465__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__26205 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26205) : cljs.core.deref.call(null,G__26205));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__26206 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26206) : cljs.core.deref.call(null,G__26206));
})(),(function (){var G__26207 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26207) : cljs.core.deref.call(null,G__26207));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj26209 = {};
return obj26209;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__13453__auto__ = mf;
if(and__13453__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__13453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__14109__auto__ = (((mf == null))?null:mf);
return (function (){var or__13465__auto__ = (cljs.core._reset[(function (){var G__26213 = x__14109__auto__;
return goog.typeOf(G__26213);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._reset["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__13453__auto__ = mf;
if(and__13453__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__13453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__14109__auto__ = (((mf == null))?null:mf);
return (function (){var or__13465__auto__ = (cljs.core._add_method[(function (){var G__26217 = x__14109__auto__;
return goog.typeOf(G__26217);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._add_method["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__13453__auto__ = mf;
if(and__13453__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__13453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__14109__auto__ = (((mf == null))?null:mf);
return (function (){var or__13465__auto__ = (cljs.core._remove_method[(function (){var G__26221 = x__14109__auto__;
return goog.typeOf(G__26221);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._remove_method["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__13453__auto__ = mf;
if(and__13453__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__13453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__14109__auto__ = (((mf == null))?null:mf);
return (function (){var or__13465__auto__ = (cljs.core._prefer_method[(function (){var G__26225 = x__14109__auto__;
return goog.typeOf(G__26225);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__13453__auto__ = mf;
if(and__13453__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__13453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__14109__auto__ = (((mf == null))?null:mf);
return (function (){var or__13465__auto__ = (cljs.core._get_method[(function (){var G__26229 = x__14109__auto__;
return goog.typeOf(G__26229);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._get_method["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__13453__auto__ = mf;
if(and__13453__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__13453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__14109__auto__ = (((mf == null))?null:mf);
return (function (){var or__13465__auto__ = (cljs.core._methods[(function (){var G__26233 = x__14109__auto__;
return goog.typeOf(G__26233);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._methods["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__13453__auto__ = mf;
if(and__13453__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__13453__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__14109__auto__ = (((mf == null))?null:mf);
return (function (){var or__13465__auto__ = (cljs.core._prefers[(function (){var G__26237 = x__14109__auto__;
return goog.typeOf(G__26237);
})()]);
if(or__13465__auto__){
return or__13465__auto__;
} else {
var or__13465__auto____$1 = (cljs.core._prefers["_"]);
if(or__13465__auto____$1){
return or__13465__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26239 = this$__$1;
return goog.getUid(G__26239);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__26240 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26240) : cljs.core.deref.call(null,G__26240));
})(),(function (){var G__26241 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26241) : cljs.core.deref.call(null,G__26241));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__26242 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26242) : cljs.core.deref.call(null,G__26242));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__26243 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26243) : cljs.core.deref.call(null,G__26243));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26244 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26244) : cljs.core.deref.call(null,G__26244));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26245 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26245) : cljs.core.deref.call(null,G__26245));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__27086 = null;
var G__27086__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__27086__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26246 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26246) : self__.dispatch_fn.call(null,G__26246));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26247 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26247) : target_fn.call(null,G__26247));
});
var G__27086__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26248 = a;
var G__26249 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26248,G__26249) : self__.dispatch_fn.call(null,G__26248,G__26249));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26250 = a;
var G__26251 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26250,G__26251) : target_fn.call(null,G__26250,G__26251));
});
var G__27086__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26252 = a;
var G__26253 = b;
var G__26254 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26252,G__26253,G__26254) : self__.dispatch_fn.call(null,G__26252,G__26253,G__26254));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26255 = a;
var G__26256 = b;
var G__26257 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26255,G__26256,G__26257) : target_fn.call(null,G__26255,G__26256,G__26257));
});
var G__27086__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26258 = a;
var G__26259 = b;
var G__26260 = c;
var G__26261 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26258,G__26259,G__26260,G__26261) : self__.dispatch_fn.call(null,G__26258,G__26259,G__26260,G__26261));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26262 = a;
var G__26263 = b;
var G__26264 = c;
var G__26265 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26262,G__26263,G__26264,G__26265) : target_fn.call(null,G__26262,G__26263,G__26264,G__26265));
});
var G__27086__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26266 = a;
var G__26267 = b;
var G__26268 = c;
var G__26269 = d;
var G__26270 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26266,G__26267,G__26268,G__26269,G__26270) : self__.dispatch_fn.call(null,G__26266,G__26267,G__26268,G__26269,G__26270));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26271 = a;
var G__26272 = b;
var G__26273 = c;
var G__26274 = d;
var G__26275 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26271,G__26272,G__26273,G__26274,G__26275) : target_fn.call(null,G__26271,G__26272,G__26273,G__26274,G__26275));
});
var G__27086__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26276 = a;
var G__26277 = b;
var G__26278 = c;
var G__26279 = d;
var G__26280 = e;
var G__26281 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26276,G__26277,G__26278,G__26279,G__26280,G__26281) : self__.dispatch_fn.call(null,G__26276,G__26277,G__26278,G__26279,G__26280,G__26281));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26282 = a;
var G__26283 = b;
var G__26284 = c;
var G__26285 = d;
var G__26286 = e;
var G__26287 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26282,G__26283,G__26284,G__26285,G__26286,G__26287) : target_fn.call(null,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287));
});
var G__27086__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26288 = a;
var G__26289 = b;
var G__26290 = c;
var G__26291 = d;
var G__26292 = e;
var G__26293 = f;
var G__26294 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294) : self__.dispatch_fn.call(null,G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26295 = a;
var G__26296 = b;
var G__26297 = c;
var G__26298 = d;
var G__26299 = e;
var G__26300 = f;
var G__26301 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301) : target_fn.call(null,G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301));
});
var G__27086__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26302 = a;
var G__26303 = b;
var G__26304 = c;
var G__26305 = d;
var G__26306 = e;
var G__26307 = f;
var G__26308 = g;
var G__26309 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26302,G__26303,G__26304,G__26305,G__26306,G__26307,G__26308,G__26309) : self__.dispatch_fn.call(null,G__26302,G__26303,G__26304,G__26305,G__26306,G__26307,G__26308,G__26309));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26310 = a;
var G__26311 = b;
var G__26312 = c;
var G__26313 = d;
var G__26314 = e;
var G__26315 = f;
var G__26316 = g;
var G__26317 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316,G__26317) : target_fn.call(null,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316,G__26317));
});
var G__27086__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26318 = a;
var G__26319 = b;
var G__26320 = c;
var G__26321 = d;
var G__26322 = e;
var G__26323 = f;
var G__26324 = g;
var G__26325 = h;
var G__26326 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26318,G__26319,G__26320,G__26321,G__26322,G__26323,G__26324,G__26325,G__26326) : self__.dispatch_fn.call(null,G__26318,G__26319,G__26320,G__26321,G__26322,G__26323,G__26324,G__26325,G__26326));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26327 = a;
var G__26328 = b;
var G__26329 = c;
var G__26330 = d;
var G__26331 = e;
var G__26332 = f;
var G__26333 = g;
var G__26334 = h;
var G__26335 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335) : target_fn.call(null,G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335));
});
var G__27086__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26336 = a;
var G__26337 = b;
var G__26338 = c;
var G__26339 = d;
var G__26340 = e;
var G__26341 = f;
var G__26342 = g;
var G__26343 = h;
var G__26344 = i;
var G__26345 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26336,G__26337,G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345) : self__.dispatch_fn.call(null,G__26336,G__26337,G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26346 = a;
var G__26347 = b;
var G__26348 = c;
var G__26349 = d;
var G__26350 = e;
var G__26351 = f;
var G__26352 = g;
var G__26353 = h;
var G__26354 = i;
var G__26355 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355) : target_fn.call(null,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355));
});
var G__27086__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26356 = a;
var G__26357 = b;
var G__26358 = c;
var G__26359 = d;
var G__26360 = e;
var G__26361 = f;
var G__26362 = g;
var G__26363 = h;
var G__26364 = i;
var G__26365 = j;
var G__26366 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26356,G__26357,G__26358,G__26359,G__26360,G__26361,G__26362,G__26363,G__26364,G__26365,G__26366) : self__.dispatch_fn.call(null,G__26356,G__26357,G__26358,G__26359,G__26360,G__26361,G__26362,G__26363,G__26364,G__26365,G__26366));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26367 = a;
var G__26368 = b;
var G__26369 = c;
var G__26370 = d;
var G__26371 = e;
var G__26372 = f;
var G__26373 = g;
var G__26374 = h;
var G__26375 = i;
var G__26376 = j;
var G__26377 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374,G__26375,G__26376,G__26377) : target_fn.call(null,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374,G__26375,G__26376,G__26377));
});
var G__27086__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26378 = a;
var G__26379 = b;
var G__26380 = c;
var G__26381 = d;
var G__26382 = e;
var G__26383 = f;
var G__26384 = g;
var G__26385 = h;
var G__26386 = i;
var G__26387 = j;
var G__26388 = k;
var G__26389 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389) : self__.dispatch_fn.call(null,G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26390 = a;
var G__26391 = b;
var G__26392 = c;
var G__26393 = d;
var G__26394 = e;
var G__26395 = f;
var G__26396 = g;
var G__26397 = h;
var G__26398 = i;
var G__26399 = j;
var G__26400 = k;
var G__26401 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26390,G__26391,G__26392,G__26393,G__26394,G__26395,G__26396,G__26397,G__26398,G__26399,G__26400,G__26401) : target_fn.call(null,G__26390,G__26391,G__26392,G__26393,G__26394,G__26395,G__26396,G__26397,G__26398,G__26399,G__26400,G__26401));
});
var G__27086__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26402 = a;
var G__26403 = b;
var G__26404 = c;
var G__26405 = d;
var G__26406 = e;
var G__26407 = f;
var G__26408 = g;
var G__26409 = h;
var G__26410 = i;
var G__26411 = j;
var G__26412 = k;
var G__26413 = l;
var G__26414 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26402,G__26403,G__26404,G__26405,G__26406,G__26407,G__26408,G__26409,G__26410,G__26411,G__26412,G__26413,G__26414) : self__.dispatch_fn.call(null,G__26402,G__26403,G__26404,G__26405,G__26406,G__26407,G__26408,G__26409,G__26410,G__26411,G__26412,G__26413,G__26414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26415 = a;
var G__26416 = b;
var G__26417 = c;
var G__26418 = d;
var G__26419 = e;
var G__26420 = f;
var G__26421 = g;
var G__26422 = h;
var G__26423 = i;
var G__26424 = j;
var G__26425 = k;
var G__26426 = l;
var G__26427 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26415,G__26416,G__26417,G__26418,G__26419,G__26420,G__26421,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427) : target_fn.call(null,G__26415,G__26416,G__26417,G__26418,G__26419,G__26420,G__26421,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427));
});
var G__27086__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26428 = a;
var G__26429 = b;
var G__26430 = c;
var G__26431 = d;
var G__26432 = e;
var G__26433 = f;
var G__26434 = g;
var G__26435 = h;
var G__26436 = i;
var G__26437 = j;
var G__26438 = k;
var G__26439 = l;
var G__26440 = m;
var G__26441 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26428,G__26429,G__26430,G__26431,G__26432,G__26433,G__26434,G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441) : self__.dispatch_fn.call(null,G__26428,G__26429,G__26430,G__26431,G__26432,G__26433,G__26434,G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26442 = a;
var G__26443 = b;
var G__26444 = c;
var G__26445 = d;
var G__26446 = e;
var G__26447 = f;
var G__26448 = g;
var G__26449 = h;
var G__26450 = i;
var G__26451 = j;
var G__26452 = k;
var G__26453 = l;
var G__26454 = m;
var G__26455 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26442,G__26443,G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451,G__26452,G__26453,G__26454,G__26455) : target_fn.call(null,G__26442,G__26443,G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451,G__26452,G__26453,G__26454,G__26455));
});
var G__27086__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26456 = a;
var G__26457 = b;
var G__26458 = c;
var G__26459 = d;
var G__26460 = e;
var G__26461 = f;
var G__26462 = g;
var G__26463 = h;
var G__26464 = i;
var G__26465 = j;
var G__26466 = k;
var G__26467 = l;
var G__26468 = m;
var G__26469 = n;
var G__26470 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26456,G__26457,G__26458,G__26459,G__26460,G__26461,G__26462,G__26463,G__26464,G__26465,G__26466,G__26467,G__26468,G__26469,G__26470) : self__.dispatch_fn.call(null,G__26456,G__26457,G__26458,G__26459,G__26460,G__26461,G__26462,G__26463,G__26464,G__26465,G__26466,G__26467,G__26468,G__26469,G__26470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26471 = a;
var G__26472 = b;
var G__26473 = c;
var G__26474 = d;
var G__26475 = e;
var G__26476 = f;
var G__26477 = g;
var G__26478 = h;
var G__26479 = i;
var G__26480 = j;
var G__26481 = k;
var G__26482 = l;
var G__26483 = m;
var G__26484 = n;
var G__26485 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26471,G__26472,G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479,G__26480,G__26481,G__26482,G__26483,G__26484,G__26485) : target_fn.call(null,G__26471,G__26472,G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479,G__26480,G__26481,G__26482,G__26483,G__26484,G__26485));
});
var G__27086__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26486 = a;
var G__26487 = b;
var G__26488 = c;
var G__26489 = d;
var G__26490 = e;
var G__26491 = f;
var G__26492 = g;
var G__26493 = h;
var G__26494 = i;
var G__26495 = j;
var G__26496 = k;
var G__26497 = l;
var G__26498 = m;
var G__26499 = n;
var G__26500 = o;
var G__26501 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26486,G__26487,G__26488,G__26489,G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500,G__26501) : self__.dispatch_fn.call(null,G__26486,G__26487,G__26488,G__26489,G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500,G__26501));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26502 = a;
var G__26503 = b;
var G__26504 = c;
var G__26505 = d;
var G__26506 = e;
var G__26507 = f;
var G__26508 = g;
var G__26509 = h;
var G__26510 = i;
var G__26511 = j;
var G__26512 = k;
var G__26513 = l;
var G__26514 = m;
var G__26515 = n;
var G__26516 = o;
var G__26517 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26502,G__26503,G__26504,G__26505,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511,G__26512,G__26513,G__26514,G__26515,G__26516,G__26517) : target_fn.call(null,G__26502,G__26503,G__26504,G__26505,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511,G__26512,G__26513,G__26514,G__26515,G__26516,G__26517));
});
var G__27086__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26518 = a;
var G__26519 = b;
var G__26520 = c;
var G__26521 = d;
var G__26522 = e;
var G__26523 = f;
var G__26524 = g;
var G__26525 = h;
var G__26526 = i;
var G__26527 = j;
var G__26528 = k;
var G__26529 = l;
var G__26530 = m;
var G__26531 = n;
var G__26532 = o;
var G__26533 = p;
var G__26534 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26518,G__26519,G__26520,G__26521,G__26522,G__26523,G__26524,G__26525,G__26526,G__26527,G__26528,G__26529,G__26530,G__26531,G__26532,G__26533,G__26534) : self__.dispatch_fn.call(null,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523,G__26524,G__26525,G__26526,G__26527,G__26528,G__26529,G__26530,G__26531,G__26532,G__26533,G__26534));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26535 = a;
var G__26536 = b;
var G__26537 = c;
var G__26538 = d;
var G__26539 = e;
var G__26540 = f;
var G__26541 = g;
var G__26542 = h;
var G__26543 = i;
var G__26544 = j;
var G__26545 = k;
var G__26546 = l;
var G__26547 = m;
var G__26548 = n;
var G__26549 = o;
var G__26550 = p;
var G__26551 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26535,G__26536,G__26537,G__26538,G__26539,G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550,G__26551) : target_fn.call(null,G__26535,G__26536,G__26537,G__26538,G__26539,G__26540,G__26541,G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550,G__26551));
});
var G__27086__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26552 = a;
var G__26553 = b;
var G__26554 = c;
var G__26555 = d;
var G__26556 = e;
var G__26557 = f;
var G__26558 = g;
var G__26559 = h;
var G__26560 = i;
var G__26561 = j;
var G__26562 = k;
var G__26563 = l;
var G__26564 = m;
var G__26565 = n;
var G__26566 = o;
var G__26567 = p;
var G__26568 = q;
var G__26569 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561,G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569) : self__.dispatch_fn.call(null,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561,G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26570 = a;
var G__26571 = b;
var G__26572 = c;
var G__26573 = d;
var G__26574 = e;
var G__26575 = f;
var G__26576 = g;
var G__26577 = h;
var G__26578 = i;
var G__26579 = j;
var G__26580 = k;
var G__26581 = l;
var G__26582 = m;
var G__26583 = n;
var G__26584 = o;
var G__26585 = p;
var G__26586 = q;
var G__26587 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26570,G__26571,G__26572,G__26573,G__26574,G__26575,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587) : target_fn.call(null,G__26570,G__26571,G__26572,G__26573,G__26574,G__26575,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587));
});
var G__27086__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26588 = a;
var G__26589 = b;
var G__26590 = c;
var G__26591 = d;
var G__26592 = e;
var G__26593 = f;
var G__26594 = g;
var G__26595 = h;
var G__26596 = i;
var G__26597 = j;
var G__26598 = k;
var G__26599 = l;
var G__26600 = m;
var G__26601 = n;
var G__26602 = o;
var G__26603 = p;
var G__26604 = q;
var G__26605 = r;
var G__26606 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26588,G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606) : self__.dispatch_fn.call(null,G__26588,G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26607 = a;
var G__26608 = b;
var G__26609 = c;
var G__26610 = d;
var G__26611 = e;
var G__26612 = f;
var G__26613 = g;
var G__26614 = h;
var G__26615 = i;
var G__26616 = j;
var G__26617 = k;
var G__26618 = l;
var G__26619 = m;
var G__26620 = n;
var G__26621 = o;
var G__26622 = p;
var G__26623 = q;
var G__26624 = r;
var G__26625 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619,G__26620,G__26621,G__26622,G__26623,G__26624,G__26625) : target_fn.call(null,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619,G__26620,G__26621,G__26622,G__26623,G__26624,G__26625));
});
var G__27086__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26626 = a;
var G__26627 = b;
var G__26628 = c;
var G__26629 = d;
var G__26630 = e;
var G__26631 = f;
var G__26632 = g;
var G__26633 = h;
var G__26634 = i;
var G__26635 = j;
var G__26636 = k;
var G__26637 = l;
var G__26638 = m;
var G__26639 = n;
var G__26640 = o;
var G__26641 = p;
var G__26642 = q;
var G__26643 = r;
var G__26644 = s;
var G__26645 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645) : self__.dispatch_fn.call(null,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26646 = a;
var G__26647 = b;
var G__26648 = c;
var G__26649 = d;
var G__26650 = e;
var G__26651 = f;
var G__26652 = g;
var G__26653 = h;
var G__26654 = i;
var G__26655 = j;
var G__26656 = k;
var G__26657 = l;
var G__26658 = m;
var G__26659 = n;
var G__26660 = o;
var G__26661 = p;
var G__26662 = q;
var G__26663 = r;
var G__26664 = s;
var G__26665 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26646,G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665) : target_fn.call(null,G__26646,G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665));
});
var G__27086__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__27086 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__27086__1.call(this,self__);
case 2:
return G__27086__2.call(this,self__,a);
case 3:
return G__27086__3.call(this,self__,a,b);
case 4:
return G__27086__4.call(this,self__,a,b,c);
case 5:
return G__27086__5.call(this,self__,a,b,c,d);
case 6:
return G__27086__6.call(this,self__,a,b,c,d,e);
case 7:
return G__27086__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__27086__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__27086__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__27086__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__27086__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__27086__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__27086__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__27086__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__27086__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__27086__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__27086__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__27086__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__27086__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__27086__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__27086__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__27086__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__27086.cljs$core$IFn$_invoke$arity$1 = G__27086__1;
G__27086.cljs$core$IFn$_invoke$arity$2 = G__27086__2;
G__27086.cljs$core$IFn$_invoke$arity$3 = G__27086__3;
G__27086.cljs$core$IFn$_invoke$arity$4 = G__27086__4;
G__27086.cljs$core$IFn$_invoke$arity$5 = G__27086__5;
G__27086.cljs$core$IFn$_invoke$arity$6 = G__27086__6;
G__27086.cljs$core$IFn$_invoke$arity$7 = G__27086__7;
G__27086.cljs$core$IFn$_invoke$arity$8 = G__27086__8;
G__27086.cljs$core$IFn$_invoke$arity$9 = G__27086__9;
G__27086.cljs$core$IFn$_invoke$arity$10 = G__27086__10;
G__27086.cljs$core$IFn$_invoke$arity$11 = G__27086__11;
G__27086.cljs$core$IFn$_invoke$arity$12 = G__27086__12;
G__27086.cljs$core$IFn$_invoke$arity$13 = G__27086__13;
G__27086.cljs$core$IFn$_invoke$arity$14 = G__27086__14;
G__27086.cljs$core$IFn$_invoke$arity$15 = G__27086__15;
G__27086.cljs$core$IFn$_invoke$arity$16 = G__27086__16;
G__27086.cljs$core$IFn$_invoke$arity$17 = G__27086__17;
G__27086.cljs$core$IFn$_invoke$arity$18 = G__27086__18;
G__27086.cljs$core$IFn$_invoke$arity$19 = G__27086__19;
G__27086.cljs$core$IFn$_invoke$arity$20 = G__27086__20;
G__27086.cljs$core$IFn$_invoke$arity$21 = G__27086__21;
G__27086.cljs$core$IFn$_invoke$arity$22 = G__27086__22;
return G__27086;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args26238){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26238)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26666 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26666) : self__.dispatch_fn.call(null,G__26666));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26667 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26667) : target_fn.call(null,G__26667));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26668 = a;
var G__26669 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26668,G__26669) : self__.dispatch_fn.call(null,G__26668,G__26669));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26670 = a;
var G__26671 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26670,G__26671) : target_fn.call(null,G__26670,G__26671));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26672 = a;
var G__26673 = b;
var G__26674 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26672,G__26673,G__26674) : self__.dispatch_fn.call(null,G__26672,G__26673,G__26674));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26675 = a;
var G__26676 = b;
var G__26677 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26675,G__26676,G__26677) : target_fn.call(null,G__26675,G__26676,G__26677));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26678 = a;
var G__26679 = b;
var G__26680 = c;
var G__26681 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26678,G__26679,G__26680,G__26681) : self__.dispatch_fn.call(null,G__26678,G__26679,G__26680,G__26681));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26682 = a;
var G__26683 = b;
var G__26684 = c;
var G__26685 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26682,G__26683,G__26684,G__26685) : target_fn.call(null,G__26682,G__26683,G__26684,G__26685));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26686 = a;
var G__26687 = b;
var G__26688 = c;
var G__26689 = d;
var G__26690 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26686,G__26687,G__26688,G__26689,G__26690) : self__.dispatch_fn.call(null,G__26686,G__26687,G__26688,G__26689,G__26690));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26691 = a;
var G__26692 = b;
var G__26693 = c;
var G__26694 = d;
var G__26695 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26691,G__26692,G__26693,G__26694,G__26695) : target_fn.call(null,G__26691,G__26692,G__26693,G__26694,G__26695));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26696 = a;
var G__26697 = b;
var G__26698 = c;
var G__26699 = d;
var G__26700 = e;
var G__26701 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26696,G__26697,G__26698,G__26699,G__26700,G__26701) : self__.dispatch_fn.call(null,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26702 = a;
var G__26703 = b;
var G__26704 = c;
var G__26705 = d;
var G__26706 = e;
var G__26707 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26702,G__26703,G__26704,G__26705,G__26706,G__26707) : target_fn.call(null,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26708 = a;
var G__26709 = b;
var G__26710 = c;
var G__26711 = d;
var G__26712 = e;
var G__26713 = f;
var G__26714 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714) : self__.dispatch_fn.call(null,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26715 = a;
var G__26716 = b;
var G__26717 = c;
var G__26718 = d;
var G__26719 = e;
var G__26720 = f;
var G__26721 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721) : target_fn.call(null,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26722 = a;
var G__26723 = b;
var G__26724 = c;
var G__26725 = d;
var G__26726 = e;
var G__26727 = f;
var G__26728 = g;
var G__26729 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729) : self__.dispatch_fn.call(null,G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26730 = a;
var G__26731 = b;
var G__26732 = c;
var G__26733 = d;
var G__26734 = e;
var G__26735 = f;
var G__26736 = g;
var G__26737 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737) : target_fn.call(null,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26738 = a;
var G__26739 = b;
var G__26740 = c;
var G__26741 = d;
var G__26742 = e;
var G__26743 = f;
var G__26744 = g;
var G__26745 = h;
var G__26746 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26738,G__26739,G__26740,G__26741,G__26742,G__26743,G__26744,G__26745,G__26746) : self__.dispatch_fn.call(null,G__26738,G__26739,G__26740,G__26741,G__26742,G__26743,G__26744,G__26745,G__26746));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26747 = a;
var G__26748 = b;
var G__26749 = c;
var G__26750 = d;
var G__26751 = e;
var G__26752 = f;
var G__26753 = g;
var G__26754 = h;
var G__26755 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26747,G__26748,G__26749,G__26750,G__26751,G__26752,G__26753,G__26754,G__26755) : target_fn.call(null,G__26747,G__26748,G__26749,G__26750,G__26751,G__26752,G__26753,G__26754,G__26755));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26756 = a;
var G__26757 = b;
var G__26758 = c;
var G__26759 = d;
var G__26760 = e;
var G__26761 = f;
var G__26762 = g;
var G__26763 = h;
var G__26764 = i;
var G__26765 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26756,G__26757,G__26758,G__26759,G__26760,G__26761,G__26762,G__26763,G__26764,G__26765) : self__.dispatch_fn.call(null,G__26756,G__26757,G__26758,G__26759,G__26760,G__26761,G__26762,G__26763,G__26764,G__26765));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26766 = a;
var G__26767 = b;
var G__26768 = c;
var G__26769 = d;
var G__26770 = e;
var G__26771 = f;
var G__26772 = g;
var G__26773 = h;
var G__26774 = i;
var G__26775 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775) : target_fn.call(null,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26776 = a;
var G__26777 = b;
var G__26778 = c;
var G__26779 = d;
var G__26780 = e;
var G__26781 = f;
var G__26782 = g;
var G__26783 = h;
var G__26784 = i;
var G__26785 = j;
var G__26786 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26776,G__26777,G__26778,G__26779,G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786) : self__.dispatch_fn.call(null,G__26776,G__26777,G__26778,G__26779,G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26787 = a;
var G__26788 = b;
var G__26789 = c;
var G__26790 = d;
var G__26791 = e;
var G__26792 = f;
var G__26793 = g;
var G__26794 = h;
var G__26795 = i;
var G__26796 = j;
var G__26797 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797) : target_fn.call(null,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26798 = a;
var G__26799 = b;
var G__26800 = c;
var G__26801 = d;
var G__26802 = e;
var G__26803 = f;
var G__26804 = g;
var G__26805 = h;
var G__26806 = i;
var G__26807 = j;
var G__26808 = k;
var G__26809 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808,G__26809) : self__.dispatch_fn.call(null,G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808,G__26809));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26810 = a;
var G__26811 = b;
var G__26812 = c;
var G__26813 = d;
var G__26814 = e;
var G__26815 = f;
var G__26816 = g;
var G__26817 = h;
var G__26818 = i;
var G__26819 = j;
var G__26820 = k;
var G__26821 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26810,G__26811,G__26812,G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821) : target_fn.call(null,G__26810,G__26811,G__26812,G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26822 = a;
var G__26823 = b;
var G__26824 = c;
var G__26825 = d;
var G__26826 = e;
var G__26827 = f;
var G__26828 = g;
var G__26829 = h;
var G__26830 = i;
var G__26831 = j;
var G__26832 = k;
var G__26833 = l;
var G__26834 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831,G__26832,G__26833,G__26834) : self__.dispatch_fn.call(null,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831,G__26832,G__26833,G__26834));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26835 = a;
var G__26836 = b;
var G__26837 = c;
var G__26838 = d;
var G__26839 = e;
var G__26840 = f;
var G__26841 = g;
var G__26842 = h;
var G__26843 = i;
var G__26844 = j;
var G__26845 = k;
var G__26846 = l;
var G__26847 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847) : target_fn.call(null,G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26848 = a;
var G__26849 = b;
var G__26850 = c;
var G__26851 = d;
var G__26852 = e;
var G__26853 = f;
var G__26854 = g;
var G__26855 = h;
var G__26856 = i;
var G__26857 = j;
var G__26858 = k;
var G__26859 = l;
var G__26860 = m;
var G__26861 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26848,G__26849,G__26850,G__26851,G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861) : self__.dispatch_fn.call(null,G__26848,G__26849,G__26850,G__26851,G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26862 = a;
var G__26863 = b;
var G__26864 = c;
var G__26865 = d;
var G__26866 = e;
var G__26867 = f;
var G__26868 = g;
var G__26869 = h;
var G__26870 = i;
var G__26871 = j;
var G__26872 = k;
var G__26873 = l;
var G__26874 = m;
var G__26875 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26862,G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871,G__26872,G__26873,G__26874,G__26875) : target_fn.call(null,G__26862,G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871,G__26872,G__26873,G__26874,G__26875));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26876 = a;
var G__26877 = b;
var G__26878 = c;
var G__26879 = d;
var G__26880 = e;
var G__26881 = f;
var G__26882 = g;
var G__26883 = h;
var G__26884 = i;
var G__26885 = j;
var G__26886 = k;
var G__26887 = l;
var G__26888 = m;
var G__26889 = n;
var G__26890 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26876,G__26877,G__26878,G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887,G__26888,G__26889,G__26890) : self__.dispatch_fn.call(null,G__26876,G__26877,G__26878,G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886,G__26887,G__26888,G__26889,G__26890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26891 = a;
var G__26892 = b;
var G__26893 = c;
var G__26894 = d;
var G__26895 = e;
var G__26896 = f;
var G__26897 = g;
var G__26898 = h;
var G__26899 = i;
var G__26900 = j;
var G__26901 = k;
var G__26902 = l;
var G__26903 = m;
var G__26904 = n;
var G__26905 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905) : target_fn.call(null,G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26906 = a;
var G__26907 = b;
var G__26908 = c;
var G__26909 = d;
var G__26910 = e;
var G__26911 = f;
var G__26912 = g;
var G__26913 = h;
var G__26914 = i;
var G__26915 = j;
var G__26916 = k;
var G__26917 = l;
var G__26918 = m;
var G__26919 = n;
var G__26920 = o;
var G__26921 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26906,G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921) : self__.dispatch_fn.call(null,G__26906,G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26922 = a;
var G__26923 = b;
var G__26924 = c;
var G__26925 = d;
var G__26926 = e;
var G__26927 = f;
var G__26928 = g;
var G__26929 = h;
var G__26930 = i;
var G__26931 = j;
var G__26932 = k;
var G__26933 = l;
var G__26934 = m;
var G__26935 = n;
var G__26936 = o;
var G__26937 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26922,G__26923,G__26924,G__26925,G__26926,G__26927,G__26928,G__26929,G__26930,G__26931,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937) : target_fn.call(null,G__26922,G__26923,G__26924,G__26925,G__26926,G__26927,G__26928,G__26929,G__26930,G__26931,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26938 = a;
var G__26939 = b;
var G__26940 = c;
var G__26941 = d;
var G__26942 = e;
var G__26943 = f;
var G__26944 = g;
var G__26945 = h;
var G__26946 = i;
var G__26947 = j;
var G__26948 = k;
var G__26949 = l;
var G__26950 = m;
var G__26951 = n;
var G__26952 = o;
var G__26953 = p;
var G__26954 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945,G__26946,G__26947,G__26948,G__26949,G__26950,G__26951,G__26952,G__26953,G__26954) : self__.dispatch_fn.call(null,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945,G__26946,G__26947,G__26948,G__26949,G__26950,G__26951,G__26952,G__26953,G__26954));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26955 = a;
var G__26956 = b;
var G__26957 = c;
var G__26958 = d;
var G__26959 = e;
var G__26960 = f;
var G__26961 = g;
var G__26962 = h;
var G__26963 = i;
var G__26964 = j;
var G__26965 = k;
var G__26966 = l;
var G__26967 = m;
var G__26968 = n;
var G__26969 = o;
var G__26970 = p;
var G__26971 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26955,G__26956,G__26957,G__26958,G__26959,G__26960,G__26961,G__26962,G__26963,G__26964,G__26965,G__26966,G__26967,G__26968,G__26969,G__26970,G__26971) : target_fn.call(null,G__26955,G__26956,G__26957,G__26958,G__26959,G__26960,G__26961,G__26962,G__26963,G__26964,G__26965,G__26966,G__26967,G__26968,G__26969,G__26970,G__26971));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26972 = a;
var G__26973 = b;
var G__26974 = c;
var G__26975 = d;
var G__26976 = e;
var G__26977 = f;
var G__26978 = g;
var G__26979 = h;
var G__26980 = i;
var G__26981 = j;
var G__26982 = k;
var G__26983 = l;
var G__26984 = m;
var G__26985 = n;
var G__26986 = o;
var G__26987 = p;
var G__26988 = q;
var G__26989 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26972,G__26973,G__26974,G__26975,G__26976,G__26977,G__26978,G__26979,G__26980,G__26981,G__26982,G__26983,G__26984,G__26985,G__26986,G__26987,G__26988,G__26989) : self__.dispatch_fn.call(null,G__26972,G__26973,G__26974,G__26975,G__26976,G__26977,G__26978,G__26979,G__26980,G__26981,G__26982,G__26983,G__26984,G__26985,G__26986,G__26987,G__26988,G__26989));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26990 = a;
var G__26991 = b;
var G__26992 = c;
var G__26993 = d;
var G__26994 = e;
var G__26995 = f;
var G__26996 = g;
var G__26997 = h;
var G__26998 = i;
var G__26999 = j;
var G__27000 = k;
var G__27001 = l;
var G__27002 = m;
var G__27003 = n;
var G__27004 = o;
var G__27005 = p;
var G__27006 = q;
var G__27007 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26990,G__26991,G__26992,G__26993,G__26994,G__26995,G__26996,G__26997,G__26998,G__26999,G__27000,G__27001,G__27002,G__27003,G__27004,G__27005,G__27006,G__27007) : target_fn.call(null,G__26990,G__26991,G__26992,G__26993,G__26994,G__26995,G__26996,G__26997,G__26998,G__26999,G__27000,G__27001,G__27002,G__27003,G__27004,G__27005,G__27006,G__27007));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27008 = a;
var G__27009 = b;
var G__27010 = c;
var G__27011 = d;
var G__27012 = e;
var G__27013 = f;
var G__27014 = g;
var G__27015 = h;
var G__27016 = i;
var G__27017 = j;
var G__27018 = k;
var G__27019 = l;
var G__27020 = m;
var G__27021 = n;
var G__27022 = o;
var G__27023 = p;
var G__27024 = q;
var G__27025 = r;
var G__27026 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__27008,G__27009,G__27010,G__27011,G__27012,G__27013,G__27014,G__27015,G__27016,G__27017,G__27018,G__27019,G__27020,G__27021,G__27022,G__27023,G__27024,G__27025,G__27026) : self__.dispatch_fn.call(null,G__27008,G__27009,G__27010,G__27011,G__27012,G__27013,G__27014,G__27015,G__27016,G__27017,G__27018,G__27019,G__27020,G__27021,G__27022,G__27023,G__27024,G__27025,G__27026));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27027 = a;
var G__27028 = b;
var G__27029 = c;
var G__27030 = d;
var G__27031 = e;
var G__27032 = f;
var G__27033 = g;
var G__27034 = h;
var G__27035 = i;
var G__27036 = j;
var G__27037 = k;
var G__27038 = l;
var G__27039 = m;
var G__27040 = n;
var G__27041 = o;
var G__27042 = p;
var G__27043 = q;
var G__27044 = r;
var G__27045 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__27027,G__27028,G__27029,G__27030,G__27031,G__27032,G__27033,G__27034,G__27035,G__27036,G__27037,G__27038,G__27039,G__27040,G__27041,G__27042,G__27043,G__27044,G__27045) : target_fn.call(null,G__27027,G__27028,G__27029,G__27030,G__27031,G__27032,G__27033,G__27034,G__27035,G__27036,G__27037,G__27038,G__27039,G__27040,G__27041,G__27042,G__27043,G__27044,G__27045));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__27046 = a;
var G__27047 = b;
var G__27048 = c;
var G__27049 = d;
var G__27050 = e;
var G__27051 = f;
var G__27052 = g;
var G__27053 = h;
var G__27054 = i;
var G__27055 = j;
var G__27056 = k;
var G__27057 = l;
var G__27058 = m;
var G__27059 = n;
var G__27060 = o;
var G__27061 = p;
var G__27062 = q;
var G__27063 = r;
var G__27064 = s;
var G__27065 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__27046,G__27047,G__27048,G__27049,G__27050,G__27051,G__27052,G__27053,G__27054,G__27055,G__27056,G__27057,G__27058,G__27059,G__27060,G__27061,G__27062,G__27063,G__27064,G__27065) : self__.dispatch_fn.call(null,G__27046,G__27047,G__27048,G__27049,G__27050,G__27051,G__27052,G__27053,G__27054,G__27055,G__27056,G__27057,G__27058,G__27059,G__27060,G__27061,G__27062,G__27063,G__27064,G__27065));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__27066 = a;
var G__27067 = b;
var G__27068 = c;
var G__27069 = d;
var G__27070 = e;
var G__27071 = f;
var G__27072 = g;
var G__27073 = h;
var G__27074 = i;
var G__27075 = j;
var G__27076 = k;
var G__27077 = l;
var G__27078 = m;
var G__27079 = n;
var G__27080 = o;
var G__27081 = p;
var G__27082 = q;
var G__27083 = r;
var G__27084 = s;
var G__27085 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__27066,G__27067,G__27068,G__27069,G__27070,G__27071,G__27072,G__27073,G__27074,G__27075,G__27076,G__27077,G__27078,G__27079,G__27080,G__27081,G__27082,G__27083,G__27084,G__27085) : target_fn.call(null,G__27066,G__27067,G__27068,G__27069,G__27070,G__27071,G__27072,G__27073,G__27074,G__27075,G__27076,G__27077,G__27078,G__27079,G__27080,G__27081,G__27082,G__27083,G__27084,G__27085));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__27087 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__27087);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__14052__auto__,writer__14053__auto__,opt__14054__auto__){
return cljs.core._write(writer__14053__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__27092 = msg;
return Error(G__27092);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__27097 = x;
var G__27098 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__27097,G__27098) : pred.call(null,G__27097,G__27098));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__27099 = y;
var G__27100 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__27099,G__27100) : pred.call(null,G__27099,G__27100));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map
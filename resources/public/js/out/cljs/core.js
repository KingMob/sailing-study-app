// Compiled by ClojureScript 0.0-2850 {:elide-asserts false, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__20832__delegate = function (args){
return console.log.apply(console,(function (){var G__20831 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__20831) : cljs.core.into_array.call(null,G__20831));
})());
};
var G__20832 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20833__i = 0, G__20833__a = new Array(arguments.length -  0);
while (G__20833__i < G__20833__a.length) {G__20833__a[G__20833__i] = arguments[G__20833__i + 0]; ++G__20833__i;}
  args = new cljs.core.IndexedSeq(G__20833__a,0);
} 
return G__20832__delegate.call(this,args);};
G__20832.cljs$lang$maxFixedArity = 0;
G__20832.cljs$lang$applyTo = (function (arglist__20834){
var args = cljs.core.seq(arglist__20834);
return G__20832__delegate(args);
});
G__20832.cljs$core$IFn$_invoke$arity$variadic = G__20832__delegate;
return G__20832;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__20836 = x;
return goog.isString(G__20836);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__20838 = x__$1;
return goog.typeOf(G__20838);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__13316__auto__ = ty;
if(cljs.core.truth_(and__13316__auto__)){
return ty.cljs$lang$type;
} else {
return and__13316__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__20840 = obj;
return goog.typeOf(G__20840);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__20842 = Symbol;
return goog.typeOf(G__20842);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__14215__auto___20844 = len;
var i_20845 = (0);
while(true){
if((i_20845 < n__14215__auto___20844)){
(new_arr[i_20845] = (arr[i_20845]));

var G__20846 = (i_20845 + (1));
i_20845 = G__20846;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__20847 = (i + (1));
i = G__20847;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__20856__delegate = function (array,i,idxs){
var G__20853 = aget;
var G__20854 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__20855 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20853,G__20854,G__20855) : cljs.core.apply.call(null,G__20853,G__20854,G__20855));
};
var G__20856 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__20857__i = 0, G__20857__a = new Array(arguments.length -  2);
while (G__20857__i < G__20857__a.length) {G__20857__a[G__20857__i] = arguments[G__20857__i + 2]; ++G__20857__i;}
  idxs = new cljs.core.IndexedSeq(G__20857__a,0);
} 
return G__20856__delegate.call(this,array,i,idxs);};
G__20856.cljs$lang$maxFixedArity = 2;
G__20856.cljs$lang$applyTo = (function (arglist__20858){
var array = cljs.core.first(arglist__20858);
arglist__20858 = cljs.core.next(arglist__20858);
var i = cljs.core.first(arglist__20858);
var idxs = cljs.core.rest(arglist__20858);
return G__20856__delegate(array,i,idxs);
});
G__20856.cljs$core$IFn$_invoke$arity$variadic = G__20856__delegate;
return G__20856;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__20859 = null;
if (arguments.length > 2) {
var G__20860__i = 0, G__20860__a = new Array(arguments.length -  2);
while (G__20860__i < G__20860__a.length) {G__20860__a[G__20860__i] = arguments[G__20860__i + 2]; ++G__20860__i;}
G__20859 = new cljs.core.IndexedSeq(G__20860__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__20859);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__20869__delegate = function (array,idx,idx2,idxv){
var G__20865 = aset;
var G__20866 = (array[idx]);
var G__20867 = idx2;
var G__20868 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__20865,G__20866,G__20867,G__20868) : cljs.core.apply.call(null,G__20865,G__20866,G__20867,G__20868));
};
var G__20869 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__20870__i = 0, G__20870__a = new Array(arguments.length -  3);
while (G__20870__i < G__20870__a.length) {G__20870__a[G__20870__i] = arguments[G__20870__i + 3]; ++G__20870__i;}
  idxv = new cljs.core.IndexedSeq(G__20870__a,0);
} 
return G__20869__delegate.call(this,array,idx,idx2,idxv);};
G__20869.cljs$lang$maxFixedArity = 3;
G__20869.cljs$lang$applyTo = (function (arglist__20871){
var array = cljs.core.first(arglist__20871);
arglist__20871 = cljs.core.next(arglist__20871);
var idx = cljs.core.first(arglist__20871);
arglist__20871 = cljs.core.next(arglist__20871);
var idx2 = cljs.core.first(arglist__20871);
var idxv = cljs.core.rest(arglist__20871);
return G__20869__delegate(array,idx,idx2,idxv);
});
G__20869.cljs$core$IFn$_invoke$arity$variadic = G__20869__delegate;
return G__20869;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__20872 = null;
if (arguments.length > 3) {
var G__20873__i = 0, G__20873__a = new Array(arguments.length -  3);
while (G__20873__i < G__20873__a.length) {G__20873__a[G__20873__i] = arguments[G__20873__i + 3]; ++G__20873__i;}
G__20872 = new cljs.core.IndexedSeq(G__20873__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__20872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__20879 = (function (a,x){
a.push(x);

return a;
});
var G__20880 = [];
var G__20881 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20879,G__20880,G__20881) : cljs.core.reduce.call(null,G__20879,G__20880,G__20881));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__20882__i = 0, G__20882__a = new Array(arguments.length -  2);
while (G__20882__i < G__20882__a.length) {G__20882__a[G__20882__i] = arguments[G__20882__i + 2]; ++G__20882__i;}
  args = new cljs.core.IndexedSeq(G__20882__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__20883){
var obj = cljs.core.first(arglist__20883);
arglist__20883 = cljs.core.next(arglist__20883);
var s = cljs.core.first(arglist__20883);
var args = cljs.core.rest(arglist__20883);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj20885 = {};
return obj20885;
})();


cljs.core.IFn = (function (){var obj20887 = {};
return obj20887;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20933 = x__13972__auto__;
return goog.typeOf(G__20933);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20935 = x__13972__auto__;
return goog.typeOf(G__20935);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20937 = x__13972__auto__;
return goog.typeOf(G__20937);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20939 = x__13972__auto__;
return goog.typeOf(G__20939);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20941 = x__13972__auto__;
return goog.typeOf(G__20941);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20943 = x__13972__auto__;
return goog.typeOf(G__20943);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20945 = x__13972__auto__;
return goog.typeOf(G__20945);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20947 = x__13972__auto__;
return goog.typeOf(G__20947);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20949 = x__13972__auto__;
return goog.typeOf(G__20949);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20951 = x__13972__auto__;
return goog.typeOf(G__20951);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20953 = x__13972__auto__;
return goog.typeOf(G__20953);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20955 = x__13972__auto__;
return goog.typeOf(G__20955);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20957 = x__13972__auto__;
return goog.typeOf(G__20957);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20959 = x__13972__auto__;
return goog.typeOf(G__20959);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20961 = x__13972__auto__;
return goog.typeOf(G__20961);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20963 = x__13972__auto__;
return goog.typeOf(G__20963);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20965 = x__13972__auto__;
return goog.typeOf(G__20965);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20967 = x__13972__auto__;
return goog.typeOf(G__20967);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20969 = x__13972__auto__;
return goog.typeOf(G__20969);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20971 = x__13972__auto__;
return goog.typeOf(G__20971);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20973 = x__13972__auto__;
return goog.typeOf(G__20973);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._invoke[(function (){var G__20975 = x__13972__auto__;
return goog.typeOf(G__20975);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._invoke["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj20977 = {};
return obj20977;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__13316__auto__ = value;
if(and__13316__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__13316__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13972__auto__ = (((value == null))?null:value);
return (function (){var or__13328__auto__ = (cljs.core._clone[(function (){var G__20981 = x__13972__auto__;
return goog.typeOf(G__20981);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._clone["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj20983 = {};
return obj20983;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._count[(function (){var G__20987 = x__13972__auto__;
return goog.typeOf(G__20987);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._count["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj20989 = {};
return obj20989;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._empty[(function (){var G__20993 = x__13972__auto__;
return goog.typeOf(G__20993);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._empty["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj20995 = {};
return obj20995;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._conj[(function (){var G__20999 = x__13972__auto__;
return goog.typeOf(G__20999);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._conj["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj21001 = {};
return obj21001;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._nth[(function (){var G__21007 = x__13972__auto__;
return goog.typeOf(G__21007);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._nth["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._nth[(function (){var G__21009 = x__13972__auto__;
return goog.typeOf(G__21009);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._nth["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj21011 = {};
return obj21011;
})();


cljs.core.ISeq = (function (){var obj21013 = {};
return obj21013;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._first[(function (){var G__21017 = x__13972__auto__;
return goog.typeOf(G__21017);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._first["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._rest[(function (){var G__21021 = x__13972__auto__;
return goog.typeOf(G__21021);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._rest["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj21023 = {};
return obj21023;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._next[(function (){var G__21027 = x__13972__auto__;
return goog.typeOf(G__21027);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._next["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj21029 = {};
return obj21029;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._lookup[(function (){var G__21035 = x__13972__auto__;
return goog.typeOf(G__21035);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._lookup["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._lookup[(function (){var G__21037 = x__13972__auto__;
return goog.typeOf(G__21037);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._lookup["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj21039 = {};
return obj21039;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__21043 = x__13972__auto__;
return goog.typeOf(G__21043);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._assoc[(function (){var G__21047 = x__13972__auto__;
return goog.typeOf(G__21047);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._assoc["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj21049 = {};
return obj21049;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._dissoc[(function (){var G__21053 = x__13972__auto__;
return goog.typeOf(G__21053);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._dissoc["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj21055 = {};
return obj21055;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._key[(function (){var G__21059 = x__13972__auto__;
return goog.typeOf(G__21059);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._key["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._val[(function (){var G__21063 = x__13972__auto__;
return goog.typeOf(G__21063);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._val["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj21065 = {};
return obj21065;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._disjoin[(function (){var G__21069 = x__13972__auto__;
return goog.typeOf(G__21069);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._disjoin["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj21071 = {};
return obj21071;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._peek[(function (){var G__21075 = x__13972__auto__;
return goog.typeOf(G__21075);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._peek["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._pop[(function (){var G__21079 = x__13972__auto__;
return goog.typeOf(G__21079);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._pop["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj21081 = {};
return obj21081;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._assoc_n[(function (){var G__21085 = x__13972__auto__;
return goog.typeOf(G__21085);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj21087 = {};
return obj21087;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._deref[(function (){var G__21091 = x__13972__auto__;
return goog.typeOf(G__21091);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._deref["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj21093 = {};
return obj21093;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._deref_with_timeout[(function (){var G__21097 = x__13972__auto__;
return goog.typeOf(G__21097);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj21099 = {};
return obj21099;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._meta[(function (){var G__21103 = x__13972__auto__;
return goog.typeOf(G__21103);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._meta["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj21105 = {};
return obj21105;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._with_meta[(function (){var G__21109 = x__13972__auto__;
return goog.typeOf(G__21109);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._with_meta["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj21111 = {};
return obj21111;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._reduce[(function (){var G__21117 = x__13972__auto__;
return goog.typeOf(G__21117);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._reduce["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._reduce[(function (){var G__21119 = x__13972__auto__;
return goog.typeOf(G__21119);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._reduce["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj21121 = {};
return obj21121;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._kv_reduce[(function (){var G__21125 = x__13972__auto__;
return goog.typeOf(G__21125);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj21127 = {};
return obj21127;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._equiv[(function (){var G__21131 = x__13972__auto__;
return goog.typeOf(G__21131);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._equiv["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj21133 = {};
return obj21133;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._hash[(function (){var G__21137 = x__13972__auto__;
return goog.typeOf(G__21137);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._hash["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj21139 = {};
return obj21139;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._seq[(function (){var G__21143 = x__13972__auto__;
return goog.typeOf(G__21143);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._seq["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj21145 = {};
return obj21145;
})();


cljs.core.IList = (function (){var obj21147 = {};
return obj21147;
})();


cljs.core.IRecord = (function (){var obj21149 = {};
return obj21149;
})();


cljs.core.IReversible = (function (){var obj21151 = {};
return obj21151;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._rseq[(function (){var G__21155 = x__13972__auto__;
return goog.typeOf(G__21155);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._rseq["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj21157 = {};
return obj21157;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._sorted_seq[(function (){var G__21161 = x__13972__auto__;
return goog.typeOf(G__21161);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._sorted_seq_from[(function (){var G__21165 = x__13972__auto__;
return goog.typeOf(G__21165);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._entry_key[(function (){var G__21169 = x__13972__auto__;
return goog.typeOf(G__21169);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._entry_key["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._comparator[(function (){var G__21173 = x__13972__auto__;
return goog.typeOf(G__21173);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._comparator["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj21175 = {};
return obj21175;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__13316__auto__ = writer;
if(and__13316__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__13316__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13972__auto__ = (((writer == null))?null:writer);
return (function (){var or__13328__auto__ = (cljs.core._write[(function (){var G__21179 = x__13972__auto__;
return goog.typeOf(G__21179);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._write["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__13316__auto__ = writer;
if(and__13316__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__13316__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13972__auto__ = (((writer == null))?null:writer);
return (function (){var or__13328__auto__ = (cljs.core._flush[(function (){var G__21183 = x__13972__auto__;
return goog.typeOf(G__21183);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._flush["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj21185 = {};
return obj21185;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._pr_writer[(function (){var G__21189 = x__13972__auto__;
return goog.typeOf(G__21189);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj21191 = {};
return obj21191;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__13316__auto__ = d;
if(and__13316__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__13316__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13972__auto__ = (((d == null))?null:d);
return (function (){var or__13328__auto__ = (cljs.core._realized_QMARK_[(function (){var G__21195 = x__13972__auto__;
return goog.typeOf(G__21195);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj21197 = {};
return obj21197;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._notify_watches[(function (){var G__21201 = x__13972__auto__;
return goog.typeOf(G__21201);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._add_watch[(function (){var G__21205 = x__13972__auto__;
return goog.typeOf(G__21205);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._add_watch["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__13316__auto__ = this$;
if(and__13316__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__13316__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13972__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13328__auto__ = (cljs.core._remove_watch[(function (){var G__21209 = x__13972__auto__;
return goog.typeOf(G__21209);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj21211 = {};
return obj21211;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._as_transient[(function (){var G__21215 = x__13972__auto__;
return goog.typeOf(G__21215);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._as_transient["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj21217 = {};
return obj21217;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__13316__auto__ = tcoll;
if(and__13316__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__13316__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13972__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13328__auto__ = (cljs.core._conj_BANG_[(function (){var G__21221 = x__13972__auto__;
return goog.typeOf(G__21221);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__13316__auto__ = tcoll;
if(and__13316__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__13316__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13972__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13328__auto__ = (cljs.core._persistent_BANG_[(function (){var G__21225 = x__13972__auto__;
return goog.typeOf(G__21225);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj21227 = {};
return obj21227;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__13316__auto__ = tcoll;
if(and__13316__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__13316__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13972__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13328__auto__ = (cljs.core._assoc_BANG_[(function (){var G__21231 = x__13972__auto__;
return goog.typeOf(G__21231);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj21233 = {};
return obj21233;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__13316__auto__ = tcoll;
if(and__13316__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__13316__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13972__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13328__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__21237 = x__13972__auto__;
return goog.typeOf(G__21237);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj21239 = {};
return obj21239;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__13316__auto__ = tcoll;
if(and__13316__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__13316__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13972__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13328__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__21243 = x__13972__auto__;
return goog.typeOf(G__21243);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__13316__auto__ = tcoll;
if(and__13316__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__13316__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13972__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13328__auto__ = (cljs.core._pop_BANG_[(function (){var G__21247 = x__13972__auto__;
return goog.typeOf(G__21247);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj21249 = {};
return obj21249;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__13316__auto__ = tcoll;
if(and__13316__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__13316__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13972__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13328__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__21253 = x__13972__auto__;
return goog.typeOf(G__21253);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj21255 = {};
return obj21255;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__13316__auto__ = x;
if(and__13316__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__13316__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13972__auto__ = (((x == null))?null:x);
return (function (){var or__13328__auto__ = (cljs.core._compare[(function (){var G__21259 = x__13972__auto__;
return goog.typeOf(G__21259);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._compare["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj21261 = {};
return obj21261;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._drop_first[(function (){var G__21265 = x__13972__auto__;
return goog.typeOf(G__21265);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._drop_first["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj21267 = {};
return obj21267;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._chunked_first[(function (){var G__21271 = x__13972__auto__;
return goog.typeOf(G__21271);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._chunked_rest[(function (){var G__21275 = x__13972__auto__;
return goog.typeOf(G__21275);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj21277 = {};
return obj21277;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._chunked_next[(function (){var G__21281 = x__13972__auto__;
return goog.typeOf(G__21281);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj21283 = {};
return obj21283;
})();

cljs.core._name = (function _name(x){
if((function (){var and__13316__auto__ = x;
if(and__13316__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__13316__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13972__auto__ = (((x == null))?null:x);
return (function (){var or__13328__auto__ = (cljs.core._name[(function (){var G__21287 = x__13972__auto__;
return goog.typeOf(G__21287);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._name["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__13316__auto__ = x;
if(and__13316__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__13316__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13972__auto__ = (((x == null))?null:x);
return (function (){var or__13328__auto__ = (cljs.core._namespace[(function (){var G__21291 = x__13972__auto__;
return goog.typeOf(G__21291);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._namespace["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj21293 = {};
return obj21293;
})();


cljs.core.IReset = (function (){var obj21295 = {};
return obj21295;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._reset_BANG_[(function (){var G__21299 = x__13972__auto__;
return goog.typeOf(G__21299);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj21301 = {};
return obj21301;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._swap_BANG_[(function (){var G__21311 = x__13972__auto__;
return goog.typeOf(G__21311);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._swap_BANG_[(function (){var G__21313 = x__13972__auto__;
return goog.typeOf(G__21313);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._swap_BANG_[(function (){var G__21315 = x__13972__auto__;
return goog.typeOf(G__21315);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._swap_BANG_[(function (){var G__21317 = x__13972__auto__;
return goog.typeOf(G__21317);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj21319 = {};
return obj21319;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__13316__auto__ = o;
if(and__13316__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__13316__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13972__auto__ = (((o == null))?null:o);
return (function (){var or__13328__auto__ = (cljs.core._vreset_BANG_[(function (){var G__21323 = x__13972__auto__;
return goog.typeOf(G__21323);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj21325 = {};
return obj21325;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__13316__auto__ = coll;
if(and__13316__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__13316__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13972__auto__ = (((coll == null))?null:coll);
return (function (){var or__13328__auto__ = (cljs.core._iterator[(function (){var G__21329 = x__13972__auto__;
return goog.typeOf(G__21329);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._iterator["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__21332 = (4294967295);
var G__21333 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21332,G__21333) : Math.imul.call(null,G__21332,G__21333));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__21336 = a;
var G__21337 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21336,G__21337) : Math.imul.call(null,G__21336,G__21337));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__21338 = (i + (2));
var G__21339 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__21338;
h1 = G__21339;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj21341 = {};
return obj21341;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__21342 = (i + (1));
var G__21343 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__21342;
hash = G__21343;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj21347 = {};
return obj21347;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__21350 = o;
if(G__21350){
var bit__14002__auto__ = (G__21350.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__14002__auto__) || (G__21350.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__21351 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21351) : Math.floor.call(null,G__21351));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13316__auto__ = cljs.core.not(a.ns);
if(and__13316__auto__){
return b.ns;
} else {
return and__13316__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21358 = a.ns;
var G__21359 = b.ns;
return goog.array.defaultCompare(G__21358,G__21359);
})();
if(((0) === nsc)){
var G__21360 = a.name;
var G__21361 = b.name;
return goog.array.defaultCompare(G__21360,G__21361);
} else {
return nsc;
}
}
} else {
var G__21362 = a.name;
var G__21363 = b.name;
return goog.array.defaultCompare(G__21362,G__21363);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13749__auto__ = self__._hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__21365 = null;
var G__21365__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__21365__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__21365 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21365__2.call(this,self__,coll);
case 3:
return G__21365__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21365.cljs$core$IFn$_invoke$arity$2 = G__21365__2;
G__21365.cljs$core$IFn$_invoke$arity$3 = G__21365__3;
return G__21365;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args21364){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21364)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__21413 = null;
var G__21413__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__21413__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__21413__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__21413__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__21413__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__21413__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__21413__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__21413__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__21413__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__21413__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__21413__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__21413__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__21413__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__21413__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__21413__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__21413__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__21413__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__21413__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__21413__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__21413__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__21413__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__21413__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21369 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21370 = a;
var G__21371 = b;
var G__21372 = c;
var G__21373 = d;
var G__21374 = e;
var G__21375 = f;
var G__21376 = g;
var G__21377 = h;
var G__21378 = i;
var G__21379 = j;
var G__21380 = k;
var G__21381 = l;
var G__21382 = m;
var G__21383 = n;
var G__21384 = o;
var G__21385 = p;
var G__21386 = q;
var G__21387 = r;
var G__21388 = s;
var G__21389 = t;
var G__21390 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21369,G__21370,G__21371,G__21372,G__21373,G__21374,G__21375,G__21376,G__21377,G__21378,G__21379,G__21380,G__21381,G__21382,G__21383,G__21384,G__21385,G__21386,G__21387,G__21388,G__21389,G__21390) : cljs.core.apply.call(null,G__21369,G__21370,G__21371,G__21372,G__21373,G__21374,G__21375,G__21376,G__21377,G__21378,G__21379,G__21380,G__21381,G__21382,G__21383,G__21384,G__21385,G__21386,G__21387,G__21388,G__21389,G__21390));
});
G__21413 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21413__1.call(this,self__);
case 2:
return G__21413__2.call(this,self__,a);
case 3:
return G__21413__3.call(this,self__,a,b);
case 4:
return G__21413__4.call(this,self__,a,b,c);
case 5:
return G__21413__5.call(this,self__,a,b,c,d);
case 6:
return G__21413__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21413__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21413__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21413__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21413__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21413__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21413__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21413__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21413__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21413__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21413__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21413__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21413__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21413__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21413__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21413__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21413__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21413.cljs$core$IFn$_invoke$arity$1 = G__21413__1;
G__21413.cljs$core$IFn$_invoke$arity$2 = G__21413__2;
G__21413.cljs$core$IFn$_invoke$arity$3 = G__21413__3;
G__21413.cljs$core$IFn$_invoke$arity$4 = G__21413__4;
G__21413.cljs$core$IFn$_invoke$arity$5 = G__21413__5;
G__21413.cljs$core$IFn$_invoke$arity$6 = G__21413__6;
G__21413.cljs$core$IFn$_invoke$arity$7 = G__21413__7;
G__21413.cljs$core$IFn$_invoke$arity$8 = G__21413__8;
G__21413.cljs$core$IFn$_invoke$arity$9 = G__21413__9;
G__21413.cljs$core$IFn$_invoke$arity$10 = G__21413__10;
G__21413.cljs$core$IFn$_invoke$arity$11 = G__21413__11;
G__21413.cljs$core$IFn$_invoke$arity$12 = G__21413__12;
G__21413.cljs$core$IFn$_invoke$arity$13 = G__21413__13;
G__21413.cljs$core$IFn$_invoke$arity$14 = G__21413__14;
G__21413.cljs$core$IFn$_invoke$arity$15 = G__21413__15;
G__21413.cljs$core$IFn$_invoke$arity$16 = G__21413__16;
G__21413.cljs$core$IFn$_invoke$arity$17 = G__21413__17;
G__21413.cljs$core$IFn$_invoke$arity$18 = G__21413__18;
G__21413.cljs$core$IFn$_invoke$arity$19 = G__21413__19;
G__21413.cljs$core$IFn$_invoke$arity$20 = G__21413__20;
G__21413.cljs$core$IFn$_invoke$arity$21 = G__21413__21;
G__21413.cljs$core$IFn$_invoke$arity$22 = G__21413__22;
return G__21413;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args21368){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21368)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21391 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21392 = a;
var G__21393 = b;
var G__21394 = c;
var G__21395 = d;
var G__21396 = e;
var G__21397 = f;
var G__21398 = g;
var G__21399 = h;
var G__21400 = i;
var G__21401 = j;
var G__21402 = k;
var G__21403 = l;
var G__21404 = m;
var G__21405 = n;
var G__21406 = o;
var G__21407 = p;
var G__21408 = q;
var G__21409 = r;
var G__21410 = s;
var G__21411 = t;
var G__21412 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21391,G__21392,G__21393,G__21394,G__21395,G__21396,G__21397,G__21398,G__21399,G__21400,G__21401,G__21402,G__21403,G__21404,G__21405,G__21406,G__21407,G__21408,G__21409,G__21410,G__21411,G__21412) : cljs.core.apply.call(null,G__21391,G__21392,G__21393,G__21394,G__21395,G__21396,G__21397,G__21398,G__21399,G__21400,G__21401,G__21402,G__21403,G__21404,G__21405,G__21406,G__21407,G__21408,G__21409,G__21410,G__21411,G__21412));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__21415 = x;
if(G__21415){
var bit__14009__auto__ = null;
if(cljs.core.truth_((function (){var or__13328__auto__ = bit__14009__auto__;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return G__21415.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__21415.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21415);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21415);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__21417 = value;
if(G__21417){
var bit__14009__auto__ = (G__21417.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__14009__auto__) || (G__21417.cljs$core$ICloneable$)){
return true;
} else {
if((!G__21417.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21417);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21417);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21419 = coll;
if(G__21419){
var bit__14002__auto__ = (G__21419.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__14002__auto__) || (G__21419.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21421 = coll;
if(G__21421){
var bit__14002__auto__ = (G__21421.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14002__auto__) || (G__21421.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__21423 = coll;
if(G__21423){
var bit__14002__auto__ = (G__21423.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14002__auto__) || (G__21423.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21425 = coll;
if(G__21425){
var bit__14002__auto__ = (G__21425.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14002__auto__) || (G__21425.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__21430__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21431 = y;
var G__21432 = cljs.core.first(more);
var G__21433 = cljs.core.next(more);
x = G__21431;
y = G__21432;
more = G__21433;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21430 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21434__i = 0, G__21434__a = new Array(arguments.length -  2);
while (G__21434__i < G__21434__a.length) {G__21434__a[G__21434__i] = arguments[G__21434__i + 2]; ++G__21434__i;}
  more = new cljs.core.IndexedSeq(G__21434__a,0);
} 
return G__21430__delegate.call(this,x,y,more);};
G__21430.cljs$lang$maxFixedArity = 2;
G__21430.cljs$lang$applyTo = (function (arglist__21435){
var x = cljs.core.first(arglist__21435);
arglist__21435 = cljs.core.next(arglist__21435);
var y = cljs.core.first(arglist__21435);
var more = cljs.core.rest(arglist__21435);
return G__21430__delegate(x,y,more);
});
G__21430.cljs$core$IFn$_invoke$arity$variadic = G__21430__delegate;
return G__21430;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__21436 = null;
if (arguments.length > 2) {
var G__21437__i = 0, G__21437__a = new Array(arguments.length -  2);
while (G__21437__i < G__21437__a.length) {G__21437__a[G__21437__i] = arguments[G__21437__i + 2]; ++G__21437__i;}
G__21436 = new cljs.core.IndexedSeq(G__21437__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__21438 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__21438) : cljs.core.es6_iterator_seq.call(null,G__21438));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21439 = (n + (1));
var G__21440 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21441 = cljs.core.next(coll__$1);
n = G__21439;
hash_code = G__21440;
coll__$1 = G__21441;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21442 = (n + (1));
var G__21443 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21444 = cljs.core.next(coll__$1);
n = G__21442;
hash_code = G__21443;
coll__$1 = G__21444;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__21445 = o;
return goog.getUid(G__21445);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__21447 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21447) : cljs.core.deref.call(null,G__21447));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21454 = val;
var G__21455 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21454,G__21455) : f.call(null,G__21454,G__21455));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21460 = nval;
var G__21461 = (n + (1));
val = G__21460;
n = G__21461;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21456 = val__$1;
var G__21457 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21456,G__21457) : f.call(null,G__21456,G__21457));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21462 = nval;
var G__21463 = (n + (1));
val__$1 = G__21462;
n = G__21463;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21458 = val__$1;
var G__21459 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21458,G__21459) : f.call(null,G__21458,G__21459));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21464 = nval;
var G__21465 = (n + (1));
val__$1 = G__21464;
n = G__21465;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21472 = val;
var G__21473 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21472,G__21473) : f.call(null,G__21472,G__21473));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21478 = nval;
var G__21479 = (n + (1));
val = G__21478;
n = G__21479;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21474 = val__$1;
var G__21475 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21474,G__21475) : f.call(null,G__21474,G__21475));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21480 = nval;
var G__21481 = (n + (1));
val__$1 = G__21480;
n = G__21481;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21476 = val__$1;
var G__21477 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21476,G__21477) : f.call(null,G__21476,G__21477));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21482 = nval;
var G__21483 = (n + (1));
val__$1 = G__21482;
n = G__21483;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__21485 = x;
if(G__21485){
var bit__14009__auto__ = (G__21485.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__14009__auto__) || (G__21485.cljs$core$ICounted$)){
return true;
} else {
if((!G__21485.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21485);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21485);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__21487 = x;
if(G__21487){
var bit__14009__auto__ = (G__21487.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14009__auto__) || (G__21487.cljs$core$IIndexed$)){
return true;
} else {
if((!G__21487.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21487);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21487);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21488 = coll__$1;
var G__21489 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21488,G__21489) : cljs.core.equiv_sequential.call(null,G__21488,G__21489));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21490 = o;
var G__21491 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21490,G__21491) : cljs.core.cons.call(null,G__21490,G__21491));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21494 = coll__$1;
var G__21495 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21494,G__21495) : cljs.core.equiv_sequential.call(null,G__21494,G__21495));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21496 = cljs.core.List.EMPTY;
var G__21497 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__21496,G__21497) : cljs.core.with_meta.call(null,G__21496,G__21497));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__21498 = f;
var G__21499 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__21498,G__21499) : cljs.core.seq_reduce.call(null,G__21498,G__21499));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__21500 = f;
var G__21501 = start;
var G__21502 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__21500,G__21501,G__21502) : cljs.core.seq_reduce.call(null,G__21500,G__21501,G__21502));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21503 = o;
var G__21504 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21503,G__21504) : cljs.core.cons.call(null,G__21503,G__21504));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__21505 = sn;
s = G__21505;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__21510__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__21511 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__21512 = cljs.core.first(xs);
var G__21513 = cljs.core.next(xs);
coll = G__21511;
x = G__21512;
xs = G__21513;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__21510 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__21514__i = 0, G__21514__a = new Array(arguments.length -  2);
while (G__21514__i < G__21514__a.length) {G__21514__a[G__21514__i] = arguments[G__21514__i + 2]; ++G__21514__i;}
  xs = new cljs.core.IndexedSeq(G__21514__a,0);
} 
return G__21510__delegate.call(this,coll,x,xs);};
G__21510.cljs$lang$maxFixedArity = 2;
G__21510.cljs$lang$applyTo = (function (arglist__21515){
var coll = cljs.core.first(arglist__21515);
arglist__21515 = cljs.core.next(arglist__21515);
var x = cljs.core.first(arglist__21515);
var xs = cljs.core.rest(arglist__21515);
return G__21510__delegate(coll,x,xs);
});
G__21510.cljs$core$IFn$_invoke$arity$variadic = G__21510__delegate;
return G__21510;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__21516 = null;
if (arguments.length > 2) {
var G__21517__i = 0, G__21517__a = new Array(arguments.length -  2);
while (G__21517__i < G__21517__a.length) {G__21517__a[G__21517__i] = arguments[G__21517__i + 2]; ++G__21517__i;}
G__21516 = new cljs.core.IndexedSeq(G__21517__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__21516);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__21518 = cljs.core.next(s);
var G__21519 = (acc + (1));
s = G__21518;
acc = G__21519;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__21521 = coll;
if(G__21521){
var bit__14002__auto__ = (G__21521.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__14002__auto__) || (G__21521.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__21522 = cljs.core.next(coll);
var G__21523 = (n - (1));
coll = G__21522;
n = G__21523;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__21524 = cljs.core.next(coll);
var G__21525 = (n - (1));
var G__21526 = not_found;
coll = G__21524;
n = G__21525;
not_found = G__21526;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__21531 = coll;
if(G__21531){
var bit__14002__auto__ = (G__21531.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14002__auto__) || (G__21531.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21532 = coll;
if(G__21532){
var bit__14009__auto__ = (G__21532.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14009__auto__) || (G__21532.cljs$core$ISeq$)){
return true;
} else {
if((!G__21532.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21532);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21532);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__21533 = coll;
if(G__21533){
var bit__14002__auto__ = (G__21533.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14002__auto__) || (G__21533.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21534 = coll;
if(G__21534){
var bit__14009__auto__ = (G__21534.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14009__auto__) || (G__21534.cljs$core$ISeq$)){
return true;
} else {
if((!G__21534.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21534);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21534);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__21535 = (n__$1 - (1));
var G__21536 = cljs.core.rest(xs);
n__$1 = G__21535;
xs = G__21536;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__21539 = o;
if(G__21539){
var bit__14002__auto__ = (G__21539.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14002__auto__) || (G__21539.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__21540 = o;
if(G__21540){
var bit__14002__auto__ = (G__21540.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14002__auto__) || (G__21540.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__21544__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__21545 = ret;
var G__21546 = cljs.core.first(kvs);
var G__21547 = cljs.core.second(kvs);
var G__21548 = cljs.core.nnext(kvs);
coll = G__21545;
k = G__21546;
v = G__21547;
kvs = G__21548;
continue;
} else {
return ret;
}
break;
}
};
var G__21544 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21549__i = 0, G__21549__a = new Array(arguments.length -  3);
while (G__21549__i < G__21549__a.length) {G__21549__a[G__21549__i] = arguments[G__21549__i + 3]; ++G__21549__i;}
  kvs = new cljs.core.IndexedSeq(G__21549__a,0);
} 
return G__21544__delegate.call(this,coll,k,v,kvs);};
G__21544.cljs$lang$maxFixedArity = 3;
G__21544.cljs$lang$applyTo = (function (arglist__21550){
var coll = cljs.core.first(arglist__21550);
arglist__21550 = cljs.core.next(arglist__21550);
var k = cljs.core.first(arglist__21550);
arglist__21550 = cljs.core.next(arglist__21550);
var v = cljs.core.first(arglist__21550);
var kvs = cljs.core.rest(arglist__21550);
return G__21544__delegate(coll,k,v,kvs);
});
G__21544.cljs$core$IFn$_invoke$arity$variadic = G__21544__delegate;
return G__21544;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__21551 = null;
if (arguments.length > 3) {
var G__21552__i = 0, G__21552__a = new Array(arguments.length -  3);
while (G__21552__i < G__21552__a.length) {G__21552__a[G__21552__i] = arguments[G__21552__i + 3]; ++G__21552__i;}
G__21551 = new cljs.core.IndexedSeq(G__21552__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__21551);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__21555__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21556 = ret;
var G__21557 = cljs.core.first(ks);
var G__21558 = cljs.core.next(ks);
coll = G__21556;
k = G__21557;
ks = G__21558;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21555 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21559__i = 0, G__21559__a = new Array(arguments.length -  2);
while (G__21559__i < G__21559__a.length) {G__21559__a[G__21559__i] = arguments[G__21559__i + 2]; ++G__21559__i;}
  ks = new cljs.core.IndexedSeq(G__21559__a,0);
} 
return G__21555__delegate.call(this,coll,k,ks);};
G__21555.cljs$lang$maxFixedArity = 2;
G__21555.cljs$lang$applyTo = (function (arglist__21560){
var coll = cljs.core.first(arglist__21560);
arglist__21560 = cljs.core.next(arglist__21560);
var k = cljs.core.first(arglist__21560);
var ks = cljs.core.rest(arglist__21560);
return G__21555__delegate(coll,k,ks);
});
G__21555.cljs$core$IFn$_invoke$arity$variadic = G__21555__delegate;
return G__21555;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__21561 = null;
if (arguments.length > 2) {
var G__21562__i = 0, G__21562__a = new Array(arguments.length -  2);
while (G__21562__i < G__21562__a.length) {G__21562__a[G__21562__i] = arguments[G__21562__i + 2]; ++G__21562__i;}
G__21561 = new cljs.core.IndexedSeq(G__21562__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21561);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__13328__auto__ = (function (){var G__21567 = f;
return goog.isFunction(G__21567);
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var G__21568 = f;
if(G__21568){
var bit__14009__auto__ = null;
if(cljs.core.truth_((function (){var or__13328__auto____$1 = bit__14009__auto__;
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
return G__21568.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__21568.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21568);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21568);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__22034 = null;
var G__22034__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__22034__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21570 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21570) : self__.afn.call(null,G__21570));
});
var G__22034__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21571 = a;
var G__21572 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21571,G__21572) : self__.afn.call(null,G__21571,G__21572));
});
var G__22034__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21573 = a;
var G__21574 = b;
var G__21575 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21573,G__21574,G__21575) : self__.afn.call(null,G__21573,G__21574,G__21575));
});
var G__22034__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21576 = a;
var G__21577 = b;
var G__21578 = c;
var G__21579 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21576,G__21577,G__21578,G__21579) : self__.afn.call(null,G__21576,G__21577,G__21578,G__21579));
});
var G__22034__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21580 = a;
var G__21581 = b;
var G__21582 = c;
var G__21583 = d;
var G__21584 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21580,G__21581,G__21582,G__21583,G__21584) : self__.afn.call(null,G__21580,G__21581,G__21582,G__21583,G__21584));
});
var G__22034__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21585 = a;
var G__21586 = b;
var G__21587 = c;
var G__21588 = d;
var G__21589 = e;
var G__21590 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21585,G__21586,G__21587,G__21588,G__21589,G__21590) : self__.afn.call(null,G__21585,G__21586,G__21587,G__21588,G__21589,G__21590));
});
var G__22034__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21591 = a;
var G__21592 = b;
var G__21593 = c;
var G__21594 = d;
var G__21595 = e;
var G__21596 = f;
var G__21597 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21591,G__21592,G__21593,G__21594,G__21595,G__21596,G__21597) : self__.afn.call(null,G__21591,G__21592,G__21593,G__21594,G__21595,G__21596,G__21597));
});
var G__22034__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21598 = a;
var G__21599 = b;
var G__21600 = c;
var G__21601 = d;
var G__21602 = e;
var G__21603 = f;
var G__21604 = g;
var G__21605 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21598,G__21599,G__21600,G__21601,G__21602,G__21603,G__21604,G__21605) : self__.afn.call(null,G__21598,G__21599,G__21600,G__21601,G__21602,G__21603,G__21604,G__21605));
});
var G__22034__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21606 = a;
var G__21607 = b;
var G__21608 = c;
var G__21609 = d;
var G__21610 = e;
var G__21611 = f;
var G__21612 = g;
var G__21613 = h;
var G__21614 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21606,G__21607,G__21608,G__21609,G__21610,G__21611,G__21612,G__21613,G__21614) : self__.afn.call(null,G__21606,G__21607,G__21608,G__21609,G__21610,G__21611,G__21612,G__21613,G__21614));
});
var G__22034__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21615 = a;
var G__21616 = b;
var G__21617 = c;
var G__21618 = d;
var G__21619 = e;
var G__21620 = f;
var G__21621 = g;
var G__21622 = h;
var G__21623 = i;
var G__21624 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21615,G__21616,G__21617,G__21618,G__21619,G__21620,G__21621,G__21622,G__21623,G__21624) : self__.afn.call(null,G__21615,G__21616,G__21617,G__21618,G__21619,G__21620,G__21621,G__21622,G__21623,G__21624));
});
var G__22034__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21625 = a;
var G__21626 = b;
var G__21627 = c;
var G__21628 = d;
var G__21629 = e;
var G__21630 = f;
var G__21631 = g;
var G__21632 = h;
var G__21633 = i;
var G__21634 = j;
var G__21635 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21625,G__21626,G__21627,G__21628,G__21629,G__21630,G__21631,G__21632,G__21633,G__21634,G__21635) : self__.afn.call(null,G__21625,G__21626,G__21627,G__21628,G__21629,G__21630,G__21631,G__21632,G__21633,G__21634,G__21635));
});
var G__22034__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21636 = a;
var G__21637 = b;
var G__21638 = c;
var G__21639 = d;
var G__21640 = e;
var G__21641 = f;
var G__21642 = g;
var G__21643 = h;
var G__21644 = i;
var G__21645 = j;
var G__21646 = k;
var G__21647 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21636,G__21637,G__21638,G__21639,G__21640,G__21641,G__21642,G__21643,G__21644,G__21645,G__21646,G__21647) : self__.afn.call(null,G__21636,G__21637,G__21638,G__21639,G__21640,G__21641,G__21642,G__21643,G__21644,G__21645,G__21646,G__21647));
});
var G__22034__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21648 = a;
var G__21649 = b;
var G__21650 = c;
var G__21651 = d;
var G__21652 = e;
var G__21653 = f;
var G__21654 = g;
var G__21655 = h;
var G__21656 = i;
var G__21657 = j;
var G__21658 = k;
var G__21659 = l;
var G__21660 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21648,G__21649,G__21650,G__21651,G__21652,G__21653,G__21654,G__21655,G__21656,G__21657,G__21658,G__21659,G__21660) : self__.afn.call(null,G__21648,G__21649,G__21650,G__21651,G__21652,G__21653,G__21654,G__21655,G__21656,G__21657,G__21658,G__21659,G__21660));
});
var G__22034__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21661 = a;
var G__21662 = b;
var G__21663 = c;
var G__21664 = d;
var G__21665 = e;
var G__21666 = f;
var G__21667 = g;
var G__21668 = h;
var G__21669 = i;
var G__21670 = j;
var G__21671 = k;
var G__21672 = l;
var G__21673 = m;
var G__21674 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21661,G__21662,G__21663,G__21664,G__21665,G__21666,G__21667,G__21668,G__21669,G__21670,G__21671,G__21672,G__21673,G__21674) : self__.afn.call(null,G__21661,G__21662,G__21663,G__21664,G__21665,G__21666,G__21667,G__21668,G__21669,G__21670,G__21671,G__21672,G__21673,G__21674));
});
var G__22034__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21675 = a;
var G__21676 = b;
var G__21677 = c;
var G__21678 = d;
var G__21679 = e;
var G__21680 = f;
var G__21681 = g;
var G__21682 = h;
var G__21683 = i;
var G__21684 = j;
var G__21685 = k;
var G__21686 = l;
var G__21687 = m;
var G__21688 = n;
var G__21689 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21675,G__21676,G__21677,G__21678,G__21679,G__21680,G__21681,G__21682,G__21683,G__21684,G__21685,G__21686,G__21687,G__21688,G__21689) : self__.afn.call(null,G__21675,G__21676,G__21677,G__21678,G__21679,G__21680,G__21681,G__21682,G__21683,G__21684,G__21685,G__21686,G__21687,G__21688,G__21689));
});
var G__22034__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21690 = a;
var G__21691 = b;
var G__21692 = c;
var G__21693 = d;
var G__21694 = e;
var G__21695 = f;
var G__21696 = g;
var G__21697 = h;
var G__21698 = i;
var G__21699 = j;
var G__21700 = k;
var G__21701 = l;
var G__21702 = m;
var G__21703 = n;
var G__21704 = o;
var G__21705 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21690,G__21691,G__21692,G__21693,G__21694,G__21695,G__21696,G__21697,G__21698,G__21699,G__21700,G__21701,G__21702,G__21703,G__21704,G__21705) : self__.afn.call(null,G__21690,G__21691,G__21692,G__21693,G__21694,G__21695,G__21696,G__21697,G__21698,G__21699,G__21700,G__21701,G__21702,G__21703,G__21704,G__21705));
});
var G__22034__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21706 = a;
var G__21707 = b;
var G__21708 = c;
var G__21709 = d;
var G__21710 = e;
var G__21711 = f;
var G__21712 = g;
var G__21713 = h;
var G__21714 = i;
var G__21715 = j;
var G__21716 = k;
var G__21717 = l;
var G__21718 = m;
var G__21719 = n;
var G__21720 = o;
var G__21721 = p;
var G__21722 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21706,G__21707,G__21708,G__21709,G__21710,G__21711,G__21712,G__21713,G__21714,G__21715,G__21716,G__21717,G__21718,G__21719,G__21720,G__21721,G__21722) : self__.afn.call(null,G__21706,G__21707,G__21708,G__21709,G__21710,G__21711,G__21712,G__21713,G__21714,G__21715,G__21716,G__21717,G__21718,G__21719,G__21720,G__21721,G__21722));
});
var G__22034__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21723 = a;
var G__21724 = b;
var G__21725 = c;
var G__21726 = d;
var G__21727 = e;
var G__21728 = f;
var G__21729 = g;
var G__21730 = h;
var G__21731 = i;
var G__21732 = j;
var G__21733 = k;
var G__21734 = l;
var G__21735 = m;
var G__21736 = n;
var G__21737 = o;
var G__21738 = p;
var G__21739 = q;
var G__21740 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21723,G__21724,G__21725,G__21726,G__21727,G__21728,G__21729,G__21730,G__21731,G__21732,G__21733,G__21734,G__21735,G__21736,G__21737,G__21738,G__21739,G__21740) : self__.afn.call(null,G__21723,G__21724,G__21725,G__21726,G__21727,G__21728,G__21729,G__21730,G__21731,G__21732,G__21733,G__21734,G__21735,G__21736,G__21737,G__21738,G__21739,G__21740));
});
var G__22034__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21741 = a;
var G__21742 = b;
var G__21743 = c;
var G__21744 = d;
var G__21745 = e;
var G__21746 = f;
var G__21747 = g;
var G__21748 = h;
var G__21749 = i;
var G__21750 = j;
var G__21751 = k;
var G__21752 = l;
var G__21753 = m;
var G__21754 = n;
var G__21755 = o;
var G__21756 = p;
var G__21757 = q;
var G__21758 = r;
var G__21759 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21741,G__21742,G__21743,G__21744,G__21745,G__21746,G__21747,G__21748,G__21749,G__21750,G__21751,G__21752,G__21753,G__21754,G__21755,G__21756,G__21757,G__21758,G__21759) : self__.afn.call(null,G__21741,G__21742,G__21743,G__21744,G__21745,G__21746,G__21747,G__21748,G__21749,G__21750,G__21751,G__21752,G__21753,G__21754,G__21755,G__21756,G__21757,G__21758,G__21759));
});
var G__22034__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21760 = a;
var G__21761 = b;
var G__21762 = c;
var G__21763 = d;
var G__21764 = e;
var G__21765 = f;
var G__21766 = g;
var G__21767 = h;
var G__21768 = i;
var G__21769 = j;
var G__21770 = k;
var G__21771 = l;
var G__21772 = m;
var G__21773 = n;
var G__21774 = o;
var G__21775 = p;
var G__21776 = q;
var G__21777 = r;
var G__21778 = s;
var G__21779 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21760,G__21761,G__21762,G__21763,G__21764,G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772,G__21773,G__21774,G__21775,G__21776,G__21777,G__21778,G__21779) : self__.afn.call(null,G__21760,G__21761,G__21762,G__21763,G__21764,G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772,G__21773,G__21774,G__21775,G__21776,G__21777,G__21778,G__21779));
});
var G__22034__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21780 = self__.afn;
var G__21781 = a;
var G__21782 = b;
var G__21783 = c;
var G__21784 = d;
var G__21785 = e;
var G__21786 = f;
var G__21787 = g;
var G__21788 = h;
var G__21789 = i;
var G__21790 = j;
var G__21791 = k;
var G__21792 = l;
var G__21793 = m;
var G__21794 = n;
var G__21795 = o;
var G__21796 = p;
var G__21797 = q;
var G__21798 = r;
var G__21799 = s;
var G__21800 = t;
var G__21801 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21780,G__21781,G__21782,G__21783,G__21784,G__21785,G__21786,G__21787,G__21788,G__21789,G__21790,G__21791,G__21792,G__21793,G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800,G__21801) : cljs.core.apply.call(null,G__21780,G__21781,G__21782,G__21783,G__21784,G__21785,G__21786,G__21787,G__21788,G__21789,G__21790,G__21791,G__21792,G__21793,G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800,G__21801));
});
G__22034 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__22034__1.call(this,self__);
case 2:
return G__22034__2.call(this,self__,a);
case 3:
return G__22034__3.call(this,self__,a,b);
case 4:
return G__22034__4.call(this,self__,a,b,c);
case 5:
return G__22034__5.call(this,self__,a,b,c,d);
case 6:
return G__22034__6.call(this,self__,a,b,c,d,e);
case 7:
return G__22034__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__22034__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__22034__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__22034__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__22034__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__22034__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__22034__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__22034__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__22034__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__22034__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__22034__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__22034__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__22034__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__22034__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__22034__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__22034__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22034.cljs$core$IFn$_invoke$arity$1 = G__22034__1;
G__22034.cljs$core$IFn$_invoke$arity$2 = G__22034__2;
G__22034.cljs$core$IFn$_invoke$arity$3 = G__22034__3;
G__22034.cljs$core$IFn$_invoke$arity$4 = G__22034__4;
G__22034.cljs$core$IFn$_invoke$arity$5 = G__22034__5;
G__22034.cljs$core$IFn$_invoke$arity$6 = G__22034__6;
G__22034.cljs$core$IFn$_invoke$arity$7 = G__22034__7;
G__22034.cljs$core$IFn$_invoke$arity$8 = G__22034__8;
G__22034.cljs$core$IFn$_invoke$arity$9 = G__22034__9;
G__22034.cljs$core$IFn$_invoke$arity$10 = G__22034__10;
G__22034.cljs$core$IFn$_invoke$arity$11 = G__22034__11;
G__22034.cljs$core$IFn$_invoke$arity$12 = G__22034__12;
G__22034.cljs$core$IFn$_invoke$arity$13 = G__22034__13;
G__22034.cljs$core$IFn$_invoke$arity$14 = G__22034__14;
G__22034.cljs$core$IFn$_invoke$arity$15 = G__22034__15;
G__22034.cljs$core$IFn$_invoke$arity$16 = G__22034__16;
G__22034.cljs$core$IFn$_invoke$arity$17 = G__22034__17;
G__22034.cljs$core$IFn$_invoke$arity$18 = G__22034__18;
G__22034.cljs$core$IFn$_invoke$arity$19 = G__22034__19;
G__22034.cljs$core$IFn$_invoke$arity$20 = G__22034__20;
G__22034.cljs$core$IFn$_invoke$arity$21 = G__22034__21;
G__22034.cljs$core$IFn$_invoke$arity$22 = G__22034__22;
return G__22034;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args21569){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21569)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__21802 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21802) : self__.afn.call(null,G__21802));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__21803 = a;
var G__21804 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21803,G__21804) : self__.afn.call(null,G__21803,G__21804));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__21805 = a;
var G__21806 = b;
var G__21807 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21805,G__21806,G__21807) : self__.afn.call(null,G__21805,G__21806,G__21807));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__21808 = a;
var G__21809 = b;
var G__21810 = c;
var G__21811 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21808,G__21809,G__21810,G__21811) : self__.afn.call(null,G__21808,G__21809,G__21810,G__21811));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__21812 = a;
var G__21813 = b;
var G__21814 = c;
var G__21815 = d;
var G__21816 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21812,G__21813,G__21814,G__21815,G__21816) : self__.afn.call(null,G__21812,G__21813,G__21814,G__21815,G__21816));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__21817 = a;
var G__21818 = b;
var G__21819 = c;
var G__21820 = d;
var G__21821 = e;
var G__21822 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21817,G__21818,G__21819,G__21820,G__21821,G__21822) : self__.afn.call(null,G__21817,G__21818,G__21819,G__21820,G__21821,G__21822));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__21823 = a;
var G__21824 = b;
var G__21825 = c;
var G__21826 = d;
var G__21827 = e;
var G__21828 = f;
var G__21829 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829) : self__.afn.call(null,G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__21830 = a;
var G__21831 = b;
var G__21832 = c;
var G__21833 = d;
var G__21834 = e;
var G__21835 = f;
var G__21836 = g;
var G__21837 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21830,G__21831,G__21832,G__21833,G__21834,G__21835,G__21836,G__21837) : self__.afn.call(null,G__21830,G__21831,G__21832,G__21833,G__21834,G__21835,G__21836,G__21837));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__21838 = a;
var G__21839 = b;
var G__21840 = c;
var G__21841 = d;
var G__21842 = e;
var G__21843 = f;
var G__21844 = g;
var G__21845 = h;
var G__21846 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845,G__21846) : self__.afn.call(null,G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845,G__21846));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__21847 = a;
var G__21848 = b;
var G__21849 = c;
var G__21850 = d;
var G__21851 = e;
var G__21852 = f;
var G__21853 = g;
var G__21854 = h;
var G__21855 = i;
var G__21856 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21847,G__21848,G__21849,G__21850,G__21851,G__21852,G__21853,G__21854,G__21855,G__21856) : self__.afn.call(null,G__21847,G__21848,G__21849,G__21850,G__21851,G__21852,G__21853,G__21854,G__21855,G__21856));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__21857 = a;
var G__21858 = b;
var G__21859 = c;
var G__21860 = d;
var G__21861 = e;
var G__21862 = f;
var G__21863 = g;
var G__21864 = h;
var G__21865 = i;
var G__21866 = j;
var G__21867 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21857,G__21858,G__21859,G__21860,G__21861,G__21862,G__21863,G__21864,G__21865,G__21866,G__21867) : self__.afn.call(null,G__21857,G__21858,G__21859,G__21860,G__21861,G__21862,G__21863,G__21864,G__21865,G__21866,G__21867));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__21868 = a;
var G__21869 = b;
var G__21870 = c;
var G__21871 = d;
var G__21872 = e;
var G__21873 = f;
var G__21874 = g;
var G__21875 = h;
var G__21876 = i;
var G__21877 = j;
var G__21878 = k;
var G__21879 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21868,G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879) : self__.afn.call(null,G__21868,G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__21880 = a;
var G__21881 = b;
var G__21882 = c;
var G__21883 = d;
var G__21884 = e;
var G__21885 = f;
var G__21886 = g;
var G__21887 = h;
var G__21888 = i;
var G__21889 = j;
var G__21890 = k;
var G__21891 = l;
var G__21892 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21880,G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891,G__21892) : self__.afn.call(null,G__21880,G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891,G__21892));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__21893 = a;
var G__21894 = b;
var G__21895 = c;
var G__21896 = d;
var G__21897 = e;
var G__21898 = f;
var G__21899 = g;
var G__21900 = h;
var G__21901 = i;
var G__21902 = j;
var G__21903 = k;
var G__21904 = l;
var G__21905 = m;
var G__21906 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899,G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906) : self__.afn.call(null,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898,G__21899,G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__21907 = a;
var G__21908 = b;
var G__21909 = c;
var G__21910 = d;
var G__21911 = e;
var G__21912 = f;
var G__21913 = g;
var G__21914 = h;
var G__21915 = i;
var G__21916 = j;
var G__21917 = k;
var G__21918 = l;
var G__21919 = m;
var G__21920 = n;
var G__21921 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21907,G__21908,G__21909,G__21910,G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917,G__21918,G__21919,G__21920,G__21921) : self__.afn.call(null,G__21907,G__21908,G__21909,G__21910,G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917,G__21918,G__21919,G__21920,G__21921));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__21922 = a;
var G__21923 = b;
var G__21924 = c;
var G__21925 = d;
var G__21926 = e;
var G__21927 = f;
var G__21928 = g;
var G__21929 = h;
var G__21930 = i;
var G__21931 = j;
var G__21932 = k;
var G__21933 = l;
var G__21934 = m;
var G__21935 = n;
var G__21936 = o;
var G__21937 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933,G__21934,G__21935,G__21936,G__21937) : self__.afn.call(null,G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933,G__21934,G__21935,G__21936,G__21937));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__21938 = a;
var G__21939 = b;
var G__21940 = c;
var G__21941 = d;
var G__21942 = e;
var G__21943 = f;
var G__21944 = g;
var G__21945 = h;
var G__21946 = i;
var G__21947 = j;
var G__21948 = k;
var G__21949 = l;
var G__21950 = m;
var G__21951 = n;
var G__21952 = o;
var G__21953 = p;
var G__21954 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21938,G__21939,G__21940,G__21941,G__21942,G__21943,G__21944,G__21945,G__21946,G__21947,G__21948,G__21949,G__21950,G__21951,G__21952,G__21953,G__21954) : self__.afn.call(null,G__21938,G__21939,G__21940,G__21941,G__21942,G__21943,G__21944,G__21945,G__21946,G__21947,G__21948,G__21949,G__21950,G__21951,G__21952,G__21953,G__21954));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__21955 = a;
var G__21956 = b;
var G__21957 = c;
var G__21958 = d;
var G__21959 = e;
var G__21960 = f;
var G__21961 = g;
var G__21962 = h;
var G__21963 = i;
var G__21964 = j;
var G__21965 = k;
var G__21966 = l;
var G__21967 = m;
var G__21968 = n;
var G__21969 = o;
var G__21970 = p;
var G__21971 = q;
var G__21972 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21955,G__21956,G__21957,G__21958,G__21959,G__21960,G__21961,G__21962,G__21963,G__21964,G__21965,G__21966,G__21967,G__21968,G__21969,G__21970,G__21971,G__21972) : self__.afn.call(null,G__21955,G__21956,G__21957,G__21958,G__21959,G__21960,G__21961,G__21962,G__21963,G__21964,G__21965,G__21966,G__21967,G__21968,G__21969,G__21970,G__21971,G__21972));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__21973 = a;
var G__21974 = b;
var G__21975 = c;
var G__21976 = d;
var G__21977 = e;
var G__21978 = f;
var G__21979 = g;
var G__21980 = h;
var G__21981 = i;
var G__21982 = j;
var G__21983 = k;
var G__21984 = l;
var G__21985 = m;
var G__21986 = n;
var G__21987 = o;
var G__21988 = p;
var G__21989 = q;
var G__21990 = r;
var G__21991 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21973,G__21974,G__21975,G__21976,G__21977,G__21978,G__21979,G__21980,G__21981,G__21982,G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990,G__21991) : self__.afn.call(null,G__21973,G__21974,G__21975,G__21976,G__21977,G__21978,G__21979,G__21980,G__21981,G__21982,G__21983,G__21984,G__21985,G__21986,G__21987,G__21988,G__21989,G__21990,G__21991));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__21992 = a;
var G__21993 = b;
var G__21994 = c;
var G__21995 = d;
var G__21996 = e;
var G__21997 = f;
var G__21998 = g;
var G__21999 = h;
var G__22000 = i;
var G__22001 = j;
var G__22002 = k;
var G__22003 = l;
var G__22004 = m;
var G__22005 = n;
var G__22006 = o;
var G__22007 = p;
var G__22008 = q;
var G__22009 = r;
var G__22010 = s;
var G__22011 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21992,G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007,G__22008,G__22009,G__22010,G__22011) : self__.afn.call(null,G__21992,G__21993,G__21994,G__21995,G__21996,G__21997,G__21998,G__21999,G__22000,G__22001,G__22002,G__22003,G__22004,G__22005,G__22006,G__22007,G__22008,G__22009,G__22010,G__22011));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__22012 = self__.afn;
var G__22013 = a;
var G__22014 = b;
var G__22015 = c;
var G__22016 = d;
var G__22017 = e;
var G__22018 = f;
var G__22019 = g;
var G__22020 = h;
var G__22021 = i;
var G__22022 = j;
var G__22023 = k;
var G__22024 = l;
var G__22025 = m;
var G__22026 = n;
var G__22027 = o;
var G__22028 = p;
var G__22029 = q;
var G__22030 = r;
var G__22031 = s;
var G__22032 = t;
var G__22033 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026,G__22027,G__22028,G__22029,G__22030,G__22031,G__22032,G__22033) : cljs.core.apply.call(null,G__22012,G__22013,G__22014,G__22015,G__22016,G__22017,G__22018,G__22019,G__22020,G__22021,G__22022,G__22023,G__22024,G__22025,G__22026,G__22027,G__22028,G__22029,G__22030,G__22031,G__22032,G__22033));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__22038 = o;
if(G__22038){
var bit__14009__auto__ = (G__22038.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__14009__auto__) || (G__22038.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__22038.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__22038);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__22038);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__13316__auto__ = !((o == null));
if(and__13316__auto__){
var G__22042 = o;
if(G__22042){
var bit__14009__auto__ = (G__22042.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14009__auto__) || (G__22042.cljs$core$IMeta$)){
return true;
} else {
if((!G__22042.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22042);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__22042);
}
} else {
return and__13316__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__22045__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__22046 = ret;
var G__22047 = cljs.core.first(ks);
var G__22048 = cljs.core.next(ks);
coll = G__22046;
k = G__22047;
ks = G__22048;
continue;
} else {
return ret;
}
}
break;
}
};
var G__22045 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22049__i = 0, G__22049__a = new Array(arguments.length -  2);
while (G__22049__i < G__22049__a.length) {G__22049__a[G__22049__i] = arguments[G__22049__i + 2]; ++G__22049__i;}
  ks = new cljs.core.IndexedSeq(G__22049__a,0);
} 
return G__22045__delegate.call(this,coll,k,ks);};
G__22045.cljs$lang$maxFixedArity = 2;
G__22045.cljs$lang$applyTo = (function (arglist__22050){
var coll = cljs.core.first(arglist__22050);
arglist__22050 = cljs.core.next(arglist__22050);
var k = cljs.core.first(arglist__22050);
var ks = cljs.core.rest(arglist__22050);
return G__22045__delegate(coll,k,ks);
});
G__22045.cljs$core$IFn$_invoke$arity$variadic = G__22045__delegate;
return G__22045;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__22051 = null;
if (arguments.length > 2) {
var G__22052__i = 0, G__22052__a = new Array(arguments.length -  2);
while (G__22052__i < G__22052__a.length) {G__22052__a[G__22052__i] = arguments[G__22052__i + 2]; ++G__22052__i;}
G__22051 = new cljs.core.IndexedSeq(G__22052__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__22051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22054 = x;
if(G__22054){
var bit__14009__auto__ = (G__22054.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__14009__auto__) || (G__22054.cljs$core$ICollection$)){
return true;
} else {
if((!G__22054.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__22054);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__22054);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22056 = x;
if(G__22056){
var bit__14009__auto__ = (G__22056.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__14009__auto__) || (G__22056.cljs$core$ISet$)){
return true;
} else {
if((!G__22056.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__22056);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__22056);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__22058 = x;
if(G__22058){
var bit__14009__auto__ = (G__22058.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__14009__auto__) || (G__22058.cljs$core$IAssociative$)){
return true;
} else {
if((!G__22058.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__22058);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__22058);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__22060 = x;
if(G__22060){
var bit__14009__auto__ = (G__22060.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__14009__auto__) || (G__22060.cljs$core$ISequential$)){
return true;
} else {
if((!G__22060.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__22060);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__22060);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__22062 = x;
if(G__22062){
var bit__14009__auto__ = (G__22062.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__14009__auto__) || (G__22062.cljs$core$ISorted$)){
return true;
} else {
if((!G__22062.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__22062);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__22062);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__22064 = x;
if(G__22064){
var bit__14009__auto__ = (G__22064.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14009__auto__) || (G__22064.cljs$core$IReduce$)){
return true;
} else {
if((!G__22064.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__22064);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__22064);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__22066 = x;
if(G__22066){
var bit__14009__auto__ = (G__22066.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__14009__auto__) || (G__22066.cljs$core$IMap$)){
return true;
} else {
if((!G__22066.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__22066);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__22066);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__22068 = x;
if(G__22068){
var bit__14009__auto__ = (G__22068.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__14009__auto__) || (G__22068.cljs$core$IVector$)){
return true;
} else {
if((!G__22068.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__22068);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__22068);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__22070 = x;
if(G__22070){
var bit__14002__auto__ = (G__22070.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__14002__auto__) || (G__22070.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj22076 = {};
return obj22076;
});
var js_obj__1 = (function() { 
var G__22079__delegate = function (keyvals){
var G__22077 = goog.object.create;
var G__22078 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__22077,G__22078) : cljs.core.apply.call(null,G__22077,G__22078));
};
var G__22079 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22080__i = 0, G__22080__a = new Array(arguments.length -  0);
while (G__22080__i < G__22080__a.length) {G__22080__a[G__22080__i] = arguments[G__22080__i + 0]; ++G__22080__i;}
  keyvals = new cljs.core.IndexedSeq(G__22080__a,0);
} 
return G__22079__delegate.call(this,keyvals);};
G__22079.cljs$lang$maxFixedArity = 0;
G__22079.cljs$lang$applyTo = (function (arglist__22081){
var keyvals = cljs.core.seq(arglist__22081);
return G__22079__delegate(keyvals);
});
G__22079.cljs$core$IFn$_invoke$arity$variadic = G__22079__delegate;
return G__22079;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__22082 = null;
if (arguments.length > 0) {
var G__22083__i = 0, G__22083__a = new Array(arguments.length -  0);
while (G__22083__i < G__22083__a.length) {G__22083__a[G__22083__i] = arguments[G__22083__i + 0]; ++G__22083__i;}
G__22082 = new cljs.core.IndexedSeq(G__22083__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__22082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__22086_22088 = obj;
var G__22087_22089 = ((function (G__22086_22088,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__22086_22088,keys))
;
goog.object.forEach(G__22086_22088,G__22087_22089);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22090 = (i__$1 + (1));
var G__22091 = (j__$1 + (1));
var G__22092 = (len__$1 - (1));
i__$1 = G__22090;
j__$1 = G__22091;
len__$1 = G__22092;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22093 = (i__$1 - (1));
var G__22094 = (j__$1 - (1));
var G__22095 = (len__$1 - (1));
i__$1 = G__22093;
j__$1 = G__22094;
len__$1 = G__22095;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj22097 = {};
return obj22097;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__22099 = s;
if(G__22099){
var bit__14009__auto__ = (G__22099.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14009__auto__) || (G__22099.cljs$core$ISeq$)){
return true;
} else {
if((!G__22099.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22099);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22099);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__22101 = s;
if(G__22101){
var bit__14009__auto__ = (G__22101.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__14009__auto__) || (G__22101.cljs$core$ISeqable$)){
return true;
} else {
if((!G__22101.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22101);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22101);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__13328__auto__ = cljs.core.fn_QMARK_(f);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var G__22105 = f;
if(G__22105){
var bit__14009__auto__ = (G__22105.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__14009__auto__) || (G__22105.cljs$core$IFn$)){
return true;
} else {
if((!G__22105.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22105);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22105);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__22118 = n;
return isNaN(G__22118);
})())) && (!((n === Infinity))) && (((function (){var G__22119 = n;
return parseFloat(G__22119);
})() === (function (){var G__22120 = n;
var G__22121 = (10);
return parseInt(G__22120,G__22121);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__22122__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__22123 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__22124 = etc;
s = G__22123;
xs = G__22124;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__22122 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22125__i = 0, G__22125__a = new Array(arguments.length -  2);
while (G__22125__i < G__22125__a.length) {G__22125__a[G__22125__i] = arguments[G__22125__i + 2]; ++G__22125__i;}
  more = new cljs.core.IndexedSeq(G__22125__a,0);
} 
return G__22122__delegate.call(this,x,y,more);};
G__22122.cljs$lang$maxFixedArity = 2;
G__22122.cljs$lang$applyTo = (function (arglist__22126){
var x = cljs.core.first(arglist__22126);
arglist__22126 = cljs.core.next(arglist__22126);
var y = cljs.core.first(arglist__22126);
var more = cljs.core.rest(arglist__22126);
return G__22122__delegate(x,y,more);
});
G__22122.cljs$core$IFn$_invoke$arity$variadic = G__22122__delegate;
return G__22122;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__22127 = null;
if (arguments.length > 2) {
var G__22128__i = 0, G__22128__a = new Array(arguments.length -  2);
while (G__22128__i < G__22128__a.length) {G__22128__a[G__22128__i] = arguments[G__22128__i + 2]; ++G__22128__i;}
G__22127 = new cljs.core.IndexedSeq(G__22128__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22127);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__22132 = x;
if(G__22132){
var bit__14002__auto__ = (G__22132.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__14002__auto__) || (G__22132.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__22133 = x;
var G__22134 = y;
return goog.array.defaultCompare(G__22133,G__22134);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__22139 = xs;
var G__22140 = ys;
var G__22141 = len;
var G__22142 = (n + (1));
xs = G__22139;
ys = G__22140;
len = G__22141;
n = G__22142;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__22147 = x;
var G__22148 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22147,G__22148) : f.call(null,G__22147,G__22148));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__22149 = y;
var G__22150 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22149,G__22150) : f.call(null,G__22149,G__22150));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__22156 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22156) : cljs.core.to_array.call(null,G__22156));
})();
var G__22157_22159 = a;
var G__22158_22160 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__22157_22159,G__22158_22160);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__22166 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22166) : keyfn.call(null,G__22166));
})(),(function (){var G__22167 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22167) : keyfn.call(null,G__22167));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__22173 = f;
var G__22174 = cljs.core.first(s);
var G__22175 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22173,G__22174,G__22175) : cljs.core.reduce.call(null,G__22173,G__22174,G__22175));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__22176 = val__$1;
var G__22177 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22176,G__22177) : f.call(null,G__22176,G__22177));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22178 = nval;
var G__22179 = cljs.core.next(coll__$1);
val__$1 = G__22178;
coll__$1 = G__22179;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__22183 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22183) : cljs.core.to_array.call(null,G__22183));
})();
var G__22184_22186 = a;
goog.array.shuffle(G__22184_22186);

var G__22185 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__22185) : cljs.core.vec.call(null,G__22185));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__22189 = coll;
if(G__22189){
var bit__14002__auto__ = (G__22189.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14002__auto__) || (G__22189.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__22190 = coll;
if(G__22190){
var bit__14002__auto__ = (G__22190.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14002__auto__) || (G__22190.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__22199 = null;
var G__22199__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__22199__1 = (function (x){
var G__22196 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__22196) : cf.call(null,G__22196));
});
var G__22199__2 = (function (x,y){
var G__22197 = x;
var G__22198 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22197,G__22198) : f.call(null,G__22197,G__22198));
});
G__22199 = function(x,y){
switch(arguments.length){
case 0:
return G__22199__0.call(this);
case 1:
return G__22199__1.call(this,x);
case 2:
return G__22199__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22199.cljs$core$IFn$_invoke$arity$0 = G__22199__0;
G__22199.cljs$core$IFn$_invoke$arity$1 = G__22199__1;
G__22199.cljs$core$IFn$_invoke$arity$2 = G__22199__2;
return G__22199;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__22206 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22206) : xform.call(null,G__22206));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__22207 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__22207) : f__$1.call(null,G__22207));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__22208__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__22208 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22209__i = 0, G__22209__a = new Array(arguments.length -  2);
while (G__22209__i < G__22209__a.length) {G__22209__a[G__22209__i] = arguments[G__22209__i + 2]; ++G__22209__i;}
  more = new cljs.core.IndexedSeq(G__22209__a,0);
} 
return G__22208__delegate.call(this,x,y,more);};
G__22208.cljs$lang$maxFixedArity = 2;
G__22208.cljs$lang$applyTo = (function (arglist__22210){
var x = cljs.core.first(arglist__22210);
arglist__22210 = cljs.core.next(arglist__22210);
var y = cljs.core.first(arglist__22210);
var more = cljs.core.rest(arglist__22210);
return G__22208__delegate(x,y,more);
});
G__22208.cljs$core$IFn$_invoke$arity$variadic = G__22208__delegate;
return G__22208;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__22211 = null;
if (arguments.length > 2) {
var G__22212__i = 0, G__22212__a = new Array(arguments.length -  2);
while (G__22212__i < G__22212__a.length) {G__22212__a[G__22212__i] = arguments[G__22212__i + 2]; ++G__22212__i;}
G__22211 = new cljs.core.IndexedSeq(G__22212__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22211);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__22213__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__22213 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22214__i = 0, G__22214__a = new Array(arguments.length -  2);
while (G__22214__i < G__22214__a.length) {G__22214__a[G__22214__i] = arguments[G__22214__i + 2]; ++G__22214__i;}
  more = new cljs.core.IndexedSeq(G__22214__a,0);
} 
return G__22213__delegate.call(this,x,y,more);};
G__22213.cljs$lang$maxFixedArity = 2;
G__22213.cljs$lang$applyTo = (function (arglist__22215){
var x = cljs.core.first(arglist__22215);
arglist__22215 = cljs.core.next(arglist__22215);
var y = cljs.core.first(arglist__22215);
var more = cljs.core.rest(arglist__22215);
return G__22213__delegate(x,y,more);
});
G__22213.cljs$core$IFn$_invoke$arity$variadic = G__22213__delegate;
return G__22213;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__22216 = null;
if (arguments.length > 2) {
var G__22217__i = 0, G__22217__a = new Array(arguments.length -  2);
while (G__22217__i < G__22217__a.length) {G__22217__a[G__22217__i] = arguments[G__22217__i + 2]; ++G__22217__i;}
G__22216 = new cljs.core.IndexedSeq(G__22217__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22216);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__22218__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__22218 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22219__i = 0, G__22219__a = new Array(arguments.length -  2);
while (G__22219__i < G__22219__a.length) {G__22219__a[G__22219__i] = arguments[G__22219__i + 2]; ++G__22219__i;}
  more = new cljs.core.IndexedSeq(G__22219__a,0);
} 
return G__22218__delegate.call(this,x,y,more);};
G__22218.cljs$lang$maxFixedArity = 2;
G__22218.cljs$lang$applyTo = (function (arglist__22220){
var x = cljs.core.first(arglist__22220);
arglist__22220 = cljs.core.next(arglist__22220);
var y = cljs.core.first(arglist__22220);
var more = cljs.core.rest(arglist__22220);
return G__22218__delegate(x,y,more);
});
G__22218.cljs$core$IFn$_invoke$arity$variadic = G__22218__delegate;
return G__22218;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__22221 = null;
if (arguments.length > 2) {
var G__22222__i = 0, G__22222__a = new Array(arguments.length -  2);
while (G__22222__i < G__22222__a.length) {G__22222__a[G__22222__i] = arguments[G__22222__i + 2]; ++G__22222__i;}
G__22221 = new cljs.core.IndexedSeq(G__22222__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__22227__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22227 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22228__i = 0, G__22228__a = new Array(arguments.length -  2);
while (G__22228__i < G__22228__a.length) {G__22228__a[G__22228__i] = arguments[G__22228__i + 2]; ++G__22228__i;}
  more = new cljs.core.IndexedSeq(G__22228__a,0);
} 
return G__22227__delegate.call(this,x,y,more);};
G__22227.cljs$lang$maxFixedArity = 2;
G__22227.cljs$lang$applyTo = (function (arglist__22229){
var x = cljs.core.first(arglist__22229);
arglist__22229 = cljs.core.next(arglist__22229);
var y = cljs.core.first(arglist__22229);
var more = cljs.core.rest(arglist__22229);
return G__22227__delegate(x,y,more);
});
G__22227.cljs$core$IFn$_invoke$arity$variadic = G__22227__delegate;
return G__22227;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__22230 = null;
if (arguments.length > 2) {
var G__22231__i = 0, G__22231__a = new Array(arguments.length -  2);
while (G__22231__i < G__22231__a.length) {G__22231__a[G__22231__i] = arguments[G__22231__i + 2]; ++G__22231__i;}
G__22230 = new cljs.core.IndexedSeq(G__22231__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22230);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__22232__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__22233 = y;
var G__22234 = cljs.core.first(more);
var G__22235 = cljs.core.next(more);
x = G__22233;
y = G__22234;
more = G__22235;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22232 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22236__i = 0, G__22236__a = new Array(arguments.length -  2);
while (G__22236__i < G__22236__a.length) {G__22236__a[G__22236__i] = arguments[G__22236__i + 2]; ++G__22236__i;}
  more = new cljs.core.IndexedSeq(G__22236__a,0);
} 
return G__22232__delegate.call(this,x,y,more);};
G__22232.cljs$lang$maxFixedArity = 2;
G__22232.cljs$lang$applyTo = (function (arglist__22237){
var x = cljs.core.first(arglist__22237);
arglist__22237 = cljs.core.next(arglist__22237);
var y = cljs.core.first(arglist__22237);
var more = cljs.core.rest(arglist__22237);
return G__22232__delegate(x,y,more);
});
G__22232.cljs$core$IFn$_invoke$arity$variadic = G__22232__delegate;
return G__22232;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__22238 = null;
if (arguments.length > 2) {
var G__22239__i = 0, G__22239__a = new Array(arguments.length -  2);
while (G__22239__i < G__22239__a.length) {G__22239__a[G__22239__i] = arguments[G__22239__i + 2]; ++G__22239__i;}
G__22238 = new cljs.core.IndexedSeq(G__22239__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22238);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__22240__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__22241 = y;
var G__22242 = cljs.core.first(more);
var G__22243 = cljs.core.next(more);
x = G__22241;
y = G__22242;
more = G__22243;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22240 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22244__i = 0, G__22244__a = new Array(arguments.length -  2);
while (G__22244__i < G__22244__a.length) {G__22244__a[G__22244__i] = arguments[G__22244__i + 2]; ++G__22244__i;}
  more = new cljs.core.IndexedSeq(G__22244__a,0);
} 
return G__22240__delegate.call(this,x,y,more);};
G__22240.cljs$lang$maxFixedArity = 2;
G__22240.cljs$lang$applyTo = (function (arglist__22245){
var x = cljs.core.first(arglist__22245);
arglist__22245 = cljs.core.next(arglist__22245);
var y = cljs.core.first(arglist__22245);
var more = cljs.core.rest(arglist__22245);
return G__22240__delegate(x,y,more);
});
G__22240.cljs$core$IFn$_invoke$arity$variadic = G__22240__delegate;
return G__22240;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__22246 = null;
if (arguments.length > 2) {
var G__22247__i = 0, G__22247__a = new Array(arguments.length -  2);
while (G__22247__i < G__22247__a.length) {G__22247__a[G__22247__i] = arguments[G__22247__i + 2]; ++G__22247__i;}
G__22246 = new cljs.core.IndexedSeq(G__22247__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__22248__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__22249 = y;
var G__22250 = cljs.core.first(more);
var G__22251 = cljs.core.next(more);
x = G__22249;
y = G__22250;
more = G__22251;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22248 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22252__i = 0, G__22252__a = new Array(arguments.length -  2);
while (G__22252__i < G__22252__a.length) {G__22252__a[G__22252__i] = arguments[G__22252__i + 2]; ++G__22252__i;}
  more = new cljs.core.IndexedSeq(G__22252__a,0);
} 
return G__22248__delegate.call(this,x,y,more);};
G__22248.cljs$lang$maxFixedArity = 2;
G__22248.cljs$lang$applyTo = (function (arglist__22253){
var x = cljs.core.first(arglist__22253);
arglist__22253 = cljs.core.next(arglist__22253);
var y = cljs.core.first(arglist__22253);
var more = cljs.core.rest(arglist__22253);
return G__22248__delegate(x,y,more);
});
G__22248.cljs$core$IFn$_invoke$arity$variadic = G__22248__delegate;
return G__22248;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__22254 = null;
if (arguments.length > 2) {
var G__22255__i = 0, G__22255__a = new Array(arguments.length -  2);
while (G__22255__i < G__22255__a.length) {G__22255__a[G__22255__i] = arguments[G__22255__i + 2]; ++G__22255__i;}
G__22254 = new cljs.core.IndexedSeq(G__22255__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22254);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__22256__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__22257 = y;
var G__22258 = cljs.core.first(more);
var G__22259 = cljs.core.next(more);
x = G__22257;
y = G__22258;
more = G__22259;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22256 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22260__i = 0, G__22260__a = new Array(arguments.length -  2);
while (G__22260__i < G__22260__a.length) {G__22260__a[G__22260__i] = arguments[G__22260__i + 2]; ++G__22260__i;}
  more = new cljs.core.IndexedSeq(G__22260__a,0);
} 
return G__22256__delegate.call(this,x,y,more);};
G__22256.cljs$lang$maxFixedArity = 2;
G__22256.cljs$lang$applyTo = (function (arglist__22261){
var x = cljs.core.first(arglist__22261);
arglist__22261 = cljs.core.next(arglist__22261);
var y = cljs.core.first(arglist__22261);
var more = cljs.core.rest(arglist__22261);
return G__22256__delegate(x,y,more);
});
G__22256.cljs$core$IFn$_invoke$arity$variadic = G__22256__delegate;
return G__22256;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__22262 = null;
if (arguments.length > 2) {
var G__22263__i = 0, G__22263__a = new Array(arguments.length -  2);
while (G__22263__i < G__22263__a.length) {G__22263__a[G__22263__i] = arguments[G__22263__i + 2]; ++G__22263__i;}
G__22262 = new cljs.core.IndexedSeq(G__22263__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__13645__auto__ = x;
var y__13646__auto__ = y;
return ((x__13645__auto__ > y__13646__auto__) ? x__13645__auto__ : y__13646__auto__);
});
var max__3 = (function() { 
var G__22264__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__13645__auto__ = x;
var y__13646__auto__ = y;
return ((x__13645__auto__ > y__13646__auto__) ? x__13645__auto__ : y__13646__auto__);
})(),more);
};
var G__22264 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22265__i = 0, G__22265__a = new Array(arguments.length -  2);
while (G__22265__i < G__22265__a.length) {G__22265__a[G__22265__i] = arguments[G__22265__i + 2]; ++G__22265__i;}
  more = new cljs.core.IndexedSeq(G__22265__a,0);
} 
return G__22264__delegate.call(this,x,y,more);};
G__22264.cljs$lang$maxFixedArity = 2;
G__22264.cljs$lang$applyTo = (function (arglist__22266){
var x = cljs.core.first(arglist__22266);
arglist__22266 = cljs.core.next(arglist__22266);
var y = cljs.core.first(arglist__22266);
var more = cljs.core.rest(arglist__22266);
return G__22264__delegate(x,y,more);
});
G__22264.cljs$core$IFn$_invoke$arity$variadic = G__22264__delegate;
return G__22264;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__22267 = null;
if (arguments.length > 2) {
var G__22268__i = 0, G__22268__a = new Array(arguments.length -  2);
while (G__22268__i < G__22268__a.length) {G__22268__a[G__22268__i] = arguments[G__22268__i + 2]; ++G__22268__i;}
G__22267 = new cljs.core.IndexedSeq(G__22268__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22267);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__13652__auto__ = x;
var y__13653__auto__ = y;
return ((x__13652__auto__ < y__13653__auto__) ? x__13652__auto__ : y__13653__auto__);
});
var min__3 = (function() { 
var G__22269__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__13652__auto__ = x;
var y__13653__auto__ = y;
return ((x__13652__auto__ < y__13653__auto__) ? x__13652__auto__ : y__13653__auto__);
})(),more);
};
var G__22269 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22270__i = 0, G__22270__a = new Array(arguments.length -  2);
while (G__22270__i < G__22270__a.length) {G__22270__a[G__22270__i] = arguments[G__22270__i + 2]; ++G__22270__i;}
  more = new cljs.core.IndexedSeq(G__22270__a,0);
} 
return G__22269__delegate.call(this,x,y,more);};
G__22269.cljs$lang$maxFixedArity = 2;
G__22269.cljs$lang$applyTo = (function (arglist__22271){
var x = cljs.core.first(arglist__22271);
arglist__22271 = cljs.core.next(arglist__22271);
var y = cljs.core.first(arglist__22271);
var more = cljs.core.rest(arglist__22271);
return G__22269__delegate(x,y,more);
});
G__22269.cljs$core$IFn$_invoke$arity$variadic = G__22269__delegate;
return G__22269;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__22272 = null;
if (arguments.length > 2) {
var G__22273__i = 0, G__22273__a = new Array(arguments.length -  2);
while (G__22273__i < G__22273__a.length) {G__22273__a[G__22273__i] = arguments[G__22273__i + 2]; ++G__22273__i;}
G__22272 = new cljs.core.IndexedSeq(G__22273__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22272);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__22274__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__22274 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22275__i = 0, G__22275__a = new Array(arguments.length -  2);
while (G__22275__i < G__22275__a.length) {G__22275__a[G__22275__i] = arguments[G__22275__i + 2]; ++G__22275__i;}
  more = new cljs.core.IndexedSeq(G__22275__a,0);
} 
return G__22274__delegate.call(this,x,y,more);};
G__22274.cljs$lang$maxFixedArity = 2;
G__22274.cljs$lang$applyTo = (function (arglist__22276){
var x = cljs.core.first(arglist__22276);
arglist__22276 = cljs.core.next(arglist__22276);
var y = cljs.core.first(arglist__22276);
var more = cljs.core.rest(arglist__22276);
return G__22274__delegate(x,y,more);
});
G__22274.cljs$core$IFn$_invoke$arity$variadic = G__22274__delegate;
return G__22274;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__22277 = null;
if (arguments.length > 2) {
var G__22278__i = 0, G__22278__a = new Array(arguments.length -  2);
while (G__22278__i < G__22278__a.length) {G__22278__a[G__22278__i] = arguments[G__22278__i + 2]; ++G__22278__i;}
G__22277 = new cljs.core.IndexedSeq(G__22278__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__22279__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__22279 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22280__i = 0, G__22280__a = new Array(arguments.length -  2);
while (G__22280__i < G__22280__a.length) {G__22280__a[G__22280__i] = arguments[G__22280__i + 2]; ++G__22280__i;}
  more = new cljs.core.IndexedSeq(G__22280__a,0);
} 
return G__22279__delegate.call(this,x,y,more);};
G__22279.cljs$lang$maxFixedArity = 2;
G__22279.cljs$lang$applyTo = (function (arglist__22281){
var x = cljs.core.first(arglist__22281);
arglist__22281 = cljs.core.next(arglist__22281);
var y = cljs.core.first(arglist__22281);
var more = cljs.core.rest(arglist__22281);
return G__22279__delegate(x,y,more);
});
G__22279.cljs$core$IFn$_invoke$arity$variadic = G__22279__delegate;
return G__22279;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__22282 = null;
if (arguments.length > 2) {
var G__22283__i = 0, G__22283__a = new Array(arguments.length -  2);
while (G__22283__i < G__22283__a.length) {G__22283__a[G__22283__i] = arguments[G__22283__i + 2]; ++G__22283__i;}
G__22282 = new cljs.core.IndexedSeq(G__22283__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__22288__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22288 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22289__i = 0, G__22289__a = new Array(arguments.length -  2);
while (G__22289__i < G__22289__a.length) {G__22289__a[G__22289__i] = arguments[G__22289__i + 2]; ++G__22289__i;}
  more = new cljs.core.IndexedSeq(G__22289__a,0);
} 
return G__22288__delegate.call(this,x,y,more);};
G__22288.cljs$lang$maxFixedArity = 2;
G__22288.cljs$lang$applyTo = (function (arglist__22290){
var x = cljs.core.first(arglist__22290);
arglist__22290 = cljs.core.next(arglist__22290);
var y = cljs.core.first(arglist__22290);
var more = cljs.core.rest(arglist__22290);
return G__22288__delegate(x,y,more);
});
G__22288.cljs$core$IFn$_invoke$arity$variadic = G__22288__delegate;
return G__22288;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__22291 = null;
if (arguments.length > 2) {
var G__22292__i = 0, G__22292__a = new Array(arguments.length -  2);
while (G__22292__i < G__22292__a.length) {G__22292__a[G__22292__i] = arguments[G__22292__i + 2]; ++G__22292__i;}
G__22291 = new cljs.core.IndexedSeq(G__22292__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__22293__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__22293 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22294__i = 0, G__22294__a = new Array(arguments.length -  2);
while (G__22294__i < G__22294__a.length) {G__22294__a[G__22294__i] = arguments[G__22294__i + 2]; ++G__22294__i;}
  more = new cljs.core.IndexedSeq(G__22294__a,0);
} 
return G__22293__delegate.call(this,x,y,more);};
G__22293.cljs$lang$maxFixedArity = 2;
G__22293.cljs$lang$applyTo = (function (arglist__22295){
var x = cljs.core.first(arglist__22295);
arglist__22295 = cljs.core.next(arglist__22295);
var y = cljs.core.first(arglist__22295);
var more = cljs.core.rest(arglist__22295);
return G__22293__delegate(x,y,more);
});
G__22293.cljs$core$IFn$_invoke$arity$variadic = G__22293__delegate;
return G__22293;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__22296 = null;
if (arguments.length > 2) {
var G__22297__i = 0, G__22297__a = new Array(arguments.length -  2);
while (G__22297__i < G__22297__a.length) {G__22297__a[G__22297__i] = arguments[G__22297__i + 2]; ++G__22297__i;}
G__22296 = new cljs.core.IndexedSeq(G__22297__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22296);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__22298__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__22298 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22299__i = 0, G__22299__a = new Array(arguments.length -  2);
while (G__22299__i < G__22299__a.length) {G__22299__a[G__22299__i] = arguments[G__22299__i + 2]; ++G__22299__i;}
  more = new cljs.core.IndexedSeq(G__22299__a,0);
} 
return G__22298__delegate.call(this,x,y,more);};
G__22298.cljs$lang$maxFixedArity = 2;
G__22298.cljs$lang$applyTo = (function (arglist__22300){
var x = cljs.core.first(arglist__22300);
arglist__22300 = cljs.core.next(arglist__22300);
var y = cljs.core.first(arglist__22300);
var more = cljs.core.rest(arglist__22300);
return G__22298__delegate(x,y,more);
});
G__22298.cljs$core$IFn$_invoke$arity$variadic = G__22298__delegate;
return G__22298;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__22301 = null;
if (arguments.length > 2) {
var G__22302__i = 0, G__22302__a = new Array(arguments.length -  2);
while (G__22302__i < G__22302__a.length) {G__22302__a[G__22302__i] = arguments[G__22302__i + 2]; ++G__22302__i;}
G__22301 = new cljs.core.IndexedSeq(G__22302__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22301);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__22305 = x;
var G__22306 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__22305,G__22306) : cljs.core.mod.call(null,G__22305,G__22306));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__22307__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__22307 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22308__i = 0, G__22308__a = new Array(arguments.length -  2);
while (G__22308__i < G__22308__a.length) {G__22308__a[G__22308__i] = arguments[G__22308__i + 2]; ++G__22308__i;}
  more = new cljs.core.IndexedSeq(G__22308__a,0);
} 
return G__22307__delegate.call(this,x,y,more);};
G__22307.cljs$lang$maxFixedArity = 2;
G__22307.cljs$lang$applyTo = (function (arglist__22309){
var x = cljs.core.first(arglist__22309);
arglist__22309 = cljs.core.next(arglist__22309);
var y = cljs.core.first(arglist__22309);
var more = cljs.core.rest(arglist__22309);
return G__22307__delegate(x,y,more);
});
G__22307.cljs$core$IFn$_invoke$arity$variadic = G__22307__delegate;
return G__22307;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__22310 = null;
if (arguments.length > 2) {
var G__22311__i = 0, G__22311__a = new Array(arguments.length -  2);
while (G__22311__i < G__22311__a.length) {G__22311__a[G__22311__i] = arguments[G__22311__i + 2]; ++G__22311__i;}
G__22310 = new cljs.core.IndexedSeq(G__22311__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22310);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__22312__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__22312 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22313__i = 0, G__22313__a = new Array(arguments.length -  2);
while (G__22313__i < G__22313__a.length) {G__22313__a[G__22313__i] = arguments[G__22313__i + 2]; ++G__22313__i;}
  more = new cljs.core.IndexedSeq(G__22313__a,0);
} 
return G__22312__delegate.call(this,x,y,more);};
G__22312.cljs$lang$maxFixedArity = 2;
G__22312.cljs$lang$applyTo = (function (arglist__22314){
var x = cljs.core.first(arglist__22314);
arglist__22314 = cljs.core.next(arglist__22314);
var y = cljs.core.first(arglist__22314);
var more = cljs.core.rest(arglist__22314);
return G__22312__delegate(x,y,more);
});
G__22312.cljs$core$IFn$_invoke$arity$variadic = G__22312__delegate;
return G__22312;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__22315 = null;
if (arguments.length > 2) {
var G__22316__i = 0, G__22316__a = new Array(arguments.length -  2);
while (G__22316__i < G__22316__a.length) {G__22316__a[G__22316__i] = arguments[G__22316__i + 2]; ++G__22316__i;}
G__22315 = new cljs.core.IndexedSeq(G__22316__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22315);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__22319 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22319) : Math.floor.call(null,G__22319));
} else {
var G__22320 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22320) : Math.ceil.call(null,G__22320));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__22321__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__22321 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22322__i = 0, G__22322__a = new Array(arguments.length -  2);
while (G__22322__i < G__22322__a.length) {G__22322__a[G__22322__i] = arguments[G__22322__i + 2]; ++G__22322__i;}
  more = new cljs.core.IndexedSeq(G__22322__a,0);
} 
return G__22321__delegate.call(this,x,y,more);};
G__22321.cljs$lang$maxFixedArity = 2;
G__22321.cljs$lang$applyTo = (function (arglist__22323){
var x = cljs.core.first(arglist__22323);
arglist__22323 = cljs.core.next(arglist__22323);
var y = cljs.core.first(arglist__22323);
var more = cljs.core.rest(arglist__22323);
return G__22321__delegate(x,y,more);
});
G__22321.cljs$core$IFn$_invoke$arity$variadic = G__22321__delegate;
return G__22321;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__22324 = null;
if (arguments.length > 2) {
var G__22325__i = 0, G__22325__a = new Array(arguments.length -  2);
while (G__22325__i < G__22325__a.length) {G__22325__a[G__22325__i] = arguments[G__22325__i + 2]; ++G__22325__i;}
G__22324 = new cljs.core.IndexedSeq(G__22325__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22324);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__22326__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__22326 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22327__i = 0, G__22327__a = new Array(arguments.length -  2);
while (G__22327__i < G__22327__a.length) {G__22327__a[G__22327__i] = arguments[G__22327__i + 2]; ++G__22327__i;}
  more = new cljs.core.IndexedSeq(G__22327__a,0);
} 
return G__22326__delegate.call(this,x,y,more);};
G__22326.cljs$lang$maxFixedArity = 2;
G__22326.cljs$lang$applyTo = (function (arglist__22328){
var x = cljs.core.first(arglist__22328);
arglist__22328 = cljs.core.next(arglist__22328);
var y = cljs.core.first(arglist__22328);
var more = cljs.core.rest(arglist__22328);
return G__22326__delegate(x,y,more);
});
G__22326.cljs$core$IFn$_invoke$arity$variadic = G__22326__delegate;
return G__22326;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__22329 = null;
if (arguments.length > 2) {
var G__22330__i = 0, G__22330__a = new Array(arguments.length -  2);
while (G__22330__i < G__22330__a.length) {G__22330__a[G__22330__i] = arguments[G__22330__i + 2]; ++G__22330__i;}
G__22329 = new cljs.core.IndexedSeq(G__22330__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__22331__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__22331 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22332__i = 0, G__22332__a = new Array(arguments.length -  2);
while (G__22332__i < G__22332__a.length) {G__22332__a[G__22332__i] = arguments[G__22332__i + 2]; ++G__22332__i;}
  more = new cljs.core.IndexedSeq(G__22332__a,0);
} 
return G__22331__delegate.call(this,x,y,more);};
G__22331.cljs$lang$maxFixedArity = 2;
G__22331.cljs$lang$applyTo = (function (arglist__22333){
var x = cljs.core.first(arglist__22333);
arglist__22333 = cljs.core.next(arglist__22333);
var y = cljs.core.first(arglist__22333);
var more = cljs.core.rest(arglist__22333);
return G__22331__delegate(x,y,more);
});
G__22331.cljs$core$IFn$_invoke$arity$variadic = G__22331__delegate;
return G__22331;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__22334 = null;
if (arguments.length > 2) {
var G__22335__i = 0, G__22335__a = new Array(arguments.length -  2);
while (G__22335__i < G__22335__a.length) {G__22335__a[G__22335__i] = arguments[G__22335__i + 2]; ++G__22335__i;}
G__22334 = new cljs.core.IndexedSeq(G__22335__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__22336__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__22336 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22337__i = 0, G__22337__a = new Array(arguments.length -  2);
while (G__22337__i < G__22337__a.length) {G__22337__a[G__22337__i] = arguments[G__22337__i + 2]; ++G__22337__i;}
  more = new cljs.core.IndexedSeq(G__22337__a,0);
} 
return G__22336__delegate.call(this,x,y,more);};
G__22336.cljs$lang$maxFixedArity = 2;
G__22336.cljs$lang$applyTo = (function (arglist__22338){
var x = cljs.core.first(arglist__22338);
arglist__22338 = cljs.core.next(arglist__22338);
var y = cljs.core.first(arglist__22338);
var more = cljs.core.rest(arglist__22338);
return G__22336__delegate(x,y,more);
});
G__22336.cljs$core$IFn$_invoke$arity$variadic = G__22336__delegate;
return G__22336;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__22339 = null;
if (arguments.length > 2) {
var G__22340__i = 0, G__22340__a = new Array(arguments.length -  2);
while (G__22340__i < G__22340__a.length) {G__22340__a[G__22340__i] = arguments[G__22340__i + 2]; ++G__22340__i;}
G__22339 = new cljs.core.IndexedSeq(G__22340__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22339);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__22345__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__22346 = y;
var G__22347 = cljs.core.first(more);
var G__22348 = cljs.core.next(more);
x = G__22346;
y = G__22347;
more = G__22348;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22345 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22349__i = 0, G__22349__a = new Array(arguments.length -  2);
while (G__22349__i < G__22349__a.length) {G__22349__a[G__22349__i] = arguments[G__22349__i + 2]; ++G__22349__i;}
  more = new cljs.core.IndexedSeq(G__22349__a,0);
} 
return G__22345__delegate.call(this,x,y,more);};
G__22345.cljs$lang$maxFixedArity = 2;
G__22345.cljs$lang$applyTo = (function (arglist__22350){
var x = cljs.core.first(arglist__22350);
arglist__22350 = cljs.core.next(arglist__22350);
var y = cljs.core.first(arglist__22350);
var more = cljs.core.rest(arglist__22350);
return G__22345__delegate(x,y,more);
});
G__22345.cljs$core$IFn$_invoke$arity$variadic = G__22345__delegate;
return G__22345;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__22351 = null;
if (arguments.length > 2) {
var G__22352__i = 0, G__22352__a = new Array(arguments.length -  2);
while (G__22352__i < G__22352__a.length) {G__22352__a[G__22352__i] = arguments[G__22352__i + 2]; ++G__22352__i;}
G__22351 = new cljs.core.IndexedSeq(G__22352__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__22353 = (n__$1 - (1));
var G__22354 = cljs.core.next(xs);
n__$1 = G__22353;
xs = G__22354;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__22358 = x;
return goog.string.buildString(G__22358);
}
});
var str__2 = (function() { 
var G__22359__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__22360 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__22361 = cljs.core.next(more);
sb = G__22360;
more = G__22361;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__22359 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__22362__i = 0, G__22362__a = new Array(arguments.length -  1);
while (G__22362__i < G__22362__a.length) {G__22362__a[G__22362__i] = arguments[G__22362__i + 1]; ++G__22362__i;}
  ys = new cljs.core.IndexedSeq(G__22362__a,0);
} 
return G__22359__delegate.call(this,x,ys);};
G__22359.cljs$lang$maxFixedArity = 1;
G__22359.cljs$lang$applyTo = (function (arglist__22363){
var x = cljs.core.first(arglist__22363);
var ys = cljs.core.rest(arglist__22363);
return G__22359__delegate(x,ys);
});
G__22359.cljs$core$IFn$_invoke$arity$variadic = G__22359__delegate;
return G__22359;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__22364 = null;
if (arguments.length > 1) {
var G__22365__i = 0, G__22365__a = new Array(arguments.length -  1);
while (G__22365__i < G__22365__a.length) {G__22365__a[G__22365__i] = arguments[G__22365__i + 1]; ++G__22365__i;}
G__22364 = new cljs.core.IndexedSeq(G__22365__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__22366 = cljs.core.next(xs);
var G__22367 = cljs.core.next(ys);
xs = G__22366;
ys = G__22367;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__22368 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__22369 = cljs.core.next(s);
res = G__22368;
s = G__22369;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__22374 = ((h + (cljs.core.hash((function (){var G__22372 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22372) : cljs.core.key.call(null,G__22372));
})()) ^ cljs.core.hash((function (){var G__22373 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22373) : cljs.core.val.call(null,G__22373));
})()))) % (4503599627370496));
var G__22375 = cljs.core.next(s);
h = G__22374;
s = G__22375;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__22376 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__22377 = cljs.core.next(s__$1);
h = G__22376;
s__$1 = G__22377;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__22388_22398 = cljs.core.seq(fn_map);
var chunk__22389_22399 = null;
var count__22390_22400 = (0);
var i__22391_22401 = (0);
while(true){
if((i__22391_22401 < count__22390_22400)){
var vec__22392_22402 = chunk__22389_22399.cljs$core$IIndexed$_nth$arity$2(null,i__22391_22401);
var key_name_22403 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22392_22402,(0),null);
var f_22404 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22392_22402,(1),null);
var str_name_22405 = (function (){var G__22393 = key_name_22403;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22393) : cljs.core.name.call(null,G__22393));
})();
(obj[str_name_22405] = f_22404);

var G__22406 = seq__22388_22398;
var G__22407 = chunk__22389_22399;
var G__22408 = count__22390_22400;
var G__22409 = (i__22391_22401 + (1));
seq__22388_22398 = G__22406;
chunk__22389_22399 = G__22407;
count__22390_22400 = G__22408;
i__22391_22401 = G__22409;
continue;
} else {
var temp__4126__auto___22410 = cljs.core.seq(seq__22388_22398);
if(temp__4126__auto___22410){
var seq__22388_22411__$1 = temp__4126__auto___22410;
if(cljs.core.chunked_seq_QMARK_(seq__22388_22411__$1)){
var c__14115__auto___22412 = (function (){var G__22394 = seq__22388_22411__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__22394) : cljs.core.chunk_first.call(null,G__22394));
})();
var G__22413 = (function (){var G__22395 = seq__22388_22411__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__22395) : cljs.core.chunk_rest.call(null,G__22395));
})();
var G__22414 = c__14115__auto___22412;
var G__22415 = cljs.core.count(c__14115__auto___22412);
var G__22416 = (0);
seq__22388_22398 = G__22413;
chunk__22389_22399 = G__22414;
count__22390_22400 = G__22415;
i__22391_22401 = G__22416;
continue;
} else {
var vec__22396_22417 = cljs.core.first(seq__22388_22411__$1);
var key_name_22418 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22396_22417,(0),null);
var f_22419 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22396_22417,(1),null);
var str_name_22420 = (function (){var G__22397 = key_name_22418;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22397) : cljs.core.name.call(null,G__22397));
})();
(obj[str_name_22420] = f_22419);

var G__22421 = cljs.core.next(seq__22388_22411__$1);
var G__22422 = null;
var G__22423 = (0);
var G__22424 = (0);
seq__22388_22398 = G__22421;
chunk__22389_22399 = G__22422;
count__22390_22400 = G__22423;
i__22391_22401 = G__22424;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__22426 = coll;
if(G__22426){
var bit__14009__auto__ = (G__22426.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__14009__auto__) || (G__22426.cljs$core$IReversible$)){
return true;
} else {
if((!G__22426.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22426);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22426);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__22427 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__22427;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__22428 = (i - (1));
var G__22429 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__22428;
r = G__22429;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__22430__i = 0, G__22430__a = new Array(arguments.length -  0);
while (G__22430__i < G__22430__a.length) {G__22430__a[G__22430__i] = arguments[G__22430__i + 0]; ++G__22430__i;}
  xs = new cljs.core.IndexedSeq(G__22430__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__22431){
var xs = cljs.core.seq(arglist__22431);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__13328__auto__ = (coll == null);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var G__22435 = coll;
if(G__22435){
var bit__14002__auto__ = (G__22435.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14002__auto__) || (G__22435.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__22437 = x;
if(G__22437){
var bit__14009__auto__ = (G__22437.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__14009__auto__) || (G__22437.cljs$core$IList$)){
return true;
} else {
if((!G__22437.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22437);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22437);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13316__auto__ = cljs.core.not(a.ns);
if(and__13316__auto__){
return b.ns;
} else {
return and__13316__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__22444 = a.ns;
var G__22445 = b.ns;
return goog.array.defaultCompare(G__22444,G__22445);
})();
if(((0) === nsc)){
var G__22446 = a.name;
var G__22447 = b.name;
return goog.array.defaultCompare(G__22446,G__22447);
} else {
return nsc;
}
}
} else {
var G__22448 = a.name;
var G__22449 = b.name;
return goog.array.defaultCompare(G__22448,G__22449);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13749__auto__ = self__._hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__22451 = null;
var G__22451__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__22451__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__22451 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__22451__2.call(this,self__,coll);
case 3:
return G__22451__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22451.cljs$core$IFn$_invoke$arity$2 = G__22451__2;
G__22451.cljs$core$IFn$_invoke$arity$3 = G__22451__3;
return G__22451;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args22450){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22450)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__22453 = x;
if(G__22453){
var bit__14002__auto__ = (G__22453.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__14002__auto__) || (G__22453.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__22455 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22455) : cljs.core.name.call(null,G__22455));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__22456 = ls.sval();
ls = G__22456;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__22458 = s;
if(G__22458){
var bit__14002__auto__ = (G__22458.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__14002__auto__) || (G__22458.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__22459 = cljs.core.next(s__$1);
s__$1 = G__22459;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_22460 = (0);
var xs_22461 = cljs.core.seq(coll);
while(true){
if(xs_22461){
(ret[i_22460] = cljs.core.to_array(cljs.core.first(xs_22461)));

var G__22462 = (i_22460 + (1));
var G__22463 = cljs.core.next(xs_22461);
i_22460 = G__22462;
xs_22461 = G__22463;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22466 = (i + (1));
var G__22467 = cljs.core.next(s__$1);
i = G__22466;
s__$1 = G__22467;
continue;
} else {
return a;
}
break;
}
} else {
var n__14215__auto___22468 = size;
var i_22469 = (0);
while(true){
if((i_22469 < n__14215__auto___22468)){
(a[i_22469] = init_val_or_seq);

var G__22470 = (i_22469 + (1));
i_22469 = G__22470;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22473 = (i + (1));
var G__22474 = cljs.core.next(s__$1);
i = G__22473;
s__$1 = G__22474;
continue;
} else {
return a;
}
break;
}
} else {
var n__14215__auto___22475 = size;
var i_22476 = (0);
while(true){
if((i_22476 < n__14215__auto___22475)){
(a[i_22476] = init_val_or_seq);

var G__22477 = (i_22476 + (1));
i_22476 = G__22477;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22480 = (i + (1));
var G__22481 = cljs.core.next(s__$1);
i = G__22480;
s__$1 = G__22481;
continue;
} else {
return a;
}
break;
}
} else {
var n__14215__auto___22482 = size;
var i_22483 = (0);
while(true){
if((i_22483 < n__14215__auto___22482)){
(a[i_22483] = init_val_or_seq);

var G__22484 = (i_22483 + (1));
i_22483 = G__22484;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22487 = (i + (1));
var G__22488 = cljs.core.next(s__$1);
i = G__22487;
s__$1 = G__22488;
continue;
} else {
return a;
}
break;
}
} else {
var n__14215__auto___22489 = size;
var i_22490 = (0);
while(true){
if((i_22490 < n__14215__auto___22489)){
(a[i_22490] = init_val_or_seq);

var G__22491 = (i_22490 + (1));
i_22490 = G__22491;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__22492 = cljs.core.next(s__$1);
var G__22493 = (i - (1));
var G__22494 = (sum + (1));
s__$1 = G__22492;
i = G__22493;
sum = G__22494;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__22514__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__22514 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22515__i = 0, G__22515__a = new Array(arguments.length -  2);
while (G__22515__i < G__22515__a.length) {G__22515__a[G__22515__i] = arguments[G__22515__i + 2]; ++G__22515__i;}
  zs = new cljs.core.IndexedSeq(G__22515__a,0);
} 
return G__22514__delegate.call(this,x,y,zs);};
G__22514.cljs$lang$maxFixedArity = 2;
G__22514.cljs$lang$applyTo = (function (arglist__22516){
var x = cljs.core.first(arglist__22516);
arglist__22516 = cljs.core.next(arglist__22516);
var y = cljs.core.first(arglist__22516);
var zs = cljs.core.rest(arglist__22516);
return G__22514__delegate(x,y,zs);
});
G__22514.cljs$core$IFn$_invoke$arity$variadic = G__22514__delegate;
return G__22514;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__22517 = null;
if (arguments.length > 2) {
var G__22518__i = 0, G__22518__a = new Array(arguments.length -  2);
while (G__22518__i < G__22518__a.length) {G__22518__a[G__22518__i] = arguments[G__22518__i + 2]; ++G__22518__i;}
G__22517 = new cljs.core.IndexedSeq(G__22518__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__22519__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__22519 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__22520__i = 0, G__22520__a = new Array(arguments.length -  4);
while (G__22520__i < G__22520__a.length) {G__22520__a[G__22520__i] = arguments[G__22520__i + 4]; ++G__22520__i;}
  more = new cljs.core.IndexedSeq(G__22520__a,0);
} 
return G__22519__delegate.call(this,a,b,c,d,more);};
G__22519.cljs$lang$maxFixedArity = 4;
G__22519.cljs$lang$applyTo = (function (arglist__22521){
var a = cljs.core.first(arglist__22521);
arglist__22521 = cljs.core.next(arglist__22521);
var b = cljs.core.first(arglist__22521);
arglist__22521 = cljs.core.next(arglist__22521);
var c = cljs.core.first(arglist__22521);
arglist__22521 = cljs.core.next(arglist__22521);
var d = cljs.core.first(arglist__22521);
var more = cljs.core.rest(arglist__22521);
return G__22519__delegate(a,b,c,d,more);
});
G__22519.cljs$core$IFn$_invoke$arity$variadic = G__22519__delegate;
return G__22519;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__22522 = null;
if (arguments.length > 4) {
var G__22523__i = 0, G__22523__a = new Array(arguments.length -  4);
while (G__22523__i < G__22523__a.length) {G__22523__a[G__22523__i] = arguments[G__22523__i + 4]; ++G__22523__i;}
G__22522 = new cljs.core.IndexedSeq(G__22523__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__22522);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__22524__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22525 = ntcoll;
var G__22526 = cljs.core.first(vals);
var G__22527 = cljs.core.next(vals);
tcoll = G__22525;
val = G__22526;
vals = G__22527;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22524 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22528__i = 0, G__22528__a = new Array(arguments.length -  2);
while (G__22528__i < G__22528__a.length) {G__22528__a[G__22528__i] = arguments[G__22528__i + 2]; ++G__22528__i;}
  vals = new cljs.core.IndexedSeq(G__22528__a,0);
} 
return G__22524__delegate.call(this,tcoll,val,vals);};
G__22524.cljs$lang$maxFixedArity = 2;
G__22524.cljs$lang$applyTo = (function (arglist__22529){
var tcoll = cljs.core.first(arglist__22529);
arglist__22529 = cljs.core.next(arglist__22529);
var val = cljs.core.first(arglist__22529);
var vals = cljs.core.rest(arglist__22529);
return G__22524__delegate(tcoll,val,vals);
});
G__22524.cljs$core$IFn$_invoke$arity$variadic = G__22524__delegate;
return G__22524;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__22530 = null;
if (arguments.length > 2) {
var G__22531__i = 0, G__22531__a = new Array(arguments.length -  2);
while (G__22531__i < G__22531__a.length) {G__22531__a[G__22531__i] = arguments[G__22531__i + 2]; ++G__22531__i;}
G__22530 = new cljs.core.IndexedSeq(G__22531__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__22532__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__22533 = ntcoll;
var G__22534 = cljs.core.first(kvs);
var G__22535 = cljs.core.second(kvs);
var G__22536 = cljs.core.nnext(kvs);
tcoll = G__22533;
key = G__22534;
val = G__22535;
kvs = G__22536;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22532 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__22537__i = 0, G__22537__a = new Array(arguments.length -  3);
while (G__22537__i < G__22537__a.length) {G__22537__a[G__22537__i] = arguments[G__22537__i + 3]; ++G__22537__i;}
  kvs = new cljs.core.IndexedSeq(G__22537__a,0);
} 
return G__22532__delegate.call(this,tcoll,key,val,kvs);};
G__22532.cljs$lang$maxFixedArity = 3;
G__22532.cljs$lang$applyTo = (function (arglist__22538){
var tcoll = cljs.core.first(arglist__22538);
arglist__22538 = cljs.core.next(arglist__22538);
var key = cljs.core.first(arglist__22538);
arglist__22538 = cljs.core.next(arglist__22538);
var val = cljs.core.first(arglist__22538);
var kvs = cljs.core.rest(arglist__22538);
return G__22532__delegate(tcoll,key,val,kvs);
});
G__22532.cljs$core$IFn$_invoke$arity$variadic = G__22532__delegate;
return G__22532;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__22539 = null;
if (arguments.length > 3) {
var G__22540__i = 0, G__22540__a = new Array(arguments.length -  3);
while (G__22540__i < G__22540__a.length) {G__22540__a[G__22540__i] = arguments[G__22540__i + 3]; ++G__22540__i;}
G__22539 = new cljs.core.IndexedSeq(G__22540__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__22539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__22541__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__22542 = ntcoll;
var G__22543 = cljs.core.first(ks);
var G__22544 = cljs.core.next(ks);
tcoll = G__22542;
key = G__22543;
ks = G__22544;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22541 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22545__i = 0, G__22545__a = new Array(arguments.length -  2);
while (G__22545__i < G__22545__a.length) {G__22545__a[G__22545__i] = arguments[G__22545__i + 2]; ++G__22545__i;}
  ks = new cljs.core.IndexedSeq(G__22545__a,0);
} 
return G__22541__delegate.call(this,tcoll,key,ks);};
G__22541.cljs$lang$maxFixedArity = 2;
G__22541.cljs$lang$applyTo = (function (arglist__22546){
var tcoll = cljs.core.first(arglist__22546);
arglist__22546 = cljs.core.next(arglist__22546);
var key = cljs.core.first(arglist__22546);
var ks = cljs.core.rest(arglist__22546);
return G__22541__delegate(tcoll,key,ks);
});
G__22541.cljs$core$IFn$_invoke$arity$variadic = G__22541__delegate;
return G__22541;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__22547 = null;
if (arguments.length > 2) {
var G__22548__i = 0, G__22548__a = new Array(arguments.length -  2);
while (G__22548__i < G__22548__a.length) {G__22548__a[G__22548__i] = arguments[G__22548__i + 2]; ++G__22548__i;}
G__22547 = new cljs.core.IndexedSeq(G__22548__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__22547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__22549__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22550 = ntcoll;
var G__22551 = cljs.core.first(vals);
var G__22552 = cljs.core.next(vals);
tcoll = G__22550;
val = G__22551;
vals = G__22552;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22549 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22553__i = 0, G__22553__a = new Array(arguments.length -  2);
while (G__22553__i < G__22553__a.length) {G__22553__a[G__22553__i] = arguments[G__22553__i + 2]; ++G__22553__i;}
  vals = new cljs.core.IndexedSeq(G__22553__a,0);
} 
return G__22549__delegate.call(this,tcoll,val,vals);};
G__22549.cljs$lang$maxFixedArity = 2;
G__22549.cljs$lang$applyTo = (function (arglist__22554){
var tcoll = cljs.core.first(arglist__22554);
arglist__22554 = cljs.core.next(arglist__22554);
var val = cljs.core.first(arglist__22554);
var vals = cljs.core.rest(arglist__22554);
return G__22549__delegate(tcoll,val,vals);
});
G__22549.cljs$core$IFn$_invoke$arity$variadic = G__22549__delegate;
return G__22549;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__22555 = null;
if (arguments.length > 2) {
var G__22556__i = 0, G__22556__a = new Array(arguments.length -  2);
while (G__22556__i < G__22556__a.length) {G__22556__a[G__22556__i] = arguments[G__22556__i + 2]; ++G__22556__i;}
G__22555 = new cljs.core.IndexedSeq(G__22556__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22555);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a14259 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a14259);
} else {
var G__22767 = a14259;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22767) : f.call(null,G__22767));
}
} else {
var b14260 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a14259,b14260);
} else {
var G__22768 = a14259;
var G__22769 = b14260;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22768,G__22769) : f.call(null,G__22768,G__22769));
}
} else {
var c14261 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a14259,b14260,c14261);
} else {
var G__22770 = a14259;
var G__22771 = b14260;
var G__22772 = c14261;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22770,G__22771,G__22772) : f.call(null,G__22770,G__22771,G__22772));
}
} else {
var d14262 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a14259,b14260,c14261,d14262);
} else {
var G__22773 = a14259;
var G__22774 = b14260;
var G__22775 = c14261;
var G__22776 = d14262;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22773,G__22774,G__22775,G__22776) : f.call(null,G__22773,G__22774,G__22775,G__22776));
}
} else {
var e14263 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a14259,b14260,c14261,d14262,e14263);
} else {
var G__22777 = a14259;
var G__22778 = b14260;
var G__22779 = c14261;
var G__22780 = d14262;
var G__22781 = e14263;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22777,G__22778,G__22779,G__22780,G__22781) : f.call(null,G__22777,G__22778,G__22779,G__22780,G__22781));
}
} else {
var f14264 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a14259,b14260,c14261,d14262,e14263,f14264);
} else {
var G__22782 = a14259;
var G__22783 = b14260;
var G__22784 = c14261;
var G__22785 = d14262;
var G__22786 = e14263;
var G__22787 = f14264;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22782,G__22783,G__22784,G__22785,G__22786,G__22787) : f.call(null,G__22782,G__22783,G__22784,G__22785,G__22786,G__22787));
}
} else {
var g14265 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a14259,b14260,c14261,d14262,e14263,f14264,g14265);
} else {
var G__22788 = a14259;
var G__22789 = b14260;
var G__22790 = c14261;
var G__22791 = d14262;
var G__22792 = e14263;
var G__22793 = f14264;
var G__22794 = g14265;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__22788,G__22789,G__22790,G__22791,G__22792,G__22793,G__22794) : f.call(null,G__22788,G__22789,G__22790,G__22791,G__22792,G__22793,G__22794));
}
} else {
var h14266 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266);
} else {
var G__22795 = a14259;
var G__22796 = b14260;
var G__22797 = c14261;
var G__22798 = d14262;
var G__22799 = e14263;
var G__22800 = f14264;
var G__22801 = g14265;
var G__22802 = h14266;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__22795,G__22796,G__22797,G__22798,G__22799,G__22800,G__22801,G__22802) : f.call(null,G__22795,G__22796,G__22797,G__22798,G__22799,G__22800,G__22801,G__22802));
}
} else {
var i14267 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267);
} else {
var G__22803 = a14259;
var G__22804 = b14260;
var G__22805 = c14261;
var G__22806 = d14262;
var G__22807 = e14263;
var G__22808 = f14264;
var G__22809 = g14265;
var G__22810 = h14266;
var G__22811 = i14267;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__22803,G__22804,G__22805,G__22806,G__22807,G__22808,G__22809,G__22810,G__22811) : f.call(null,G__22803,G__22804,G__22805,G__22806,G__22807,G__22808,G__22809,G__22810,G__22811));
}
} else {
var j14268 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268);
} else {
var G__22812 = a14259;
var G__22813 = b14260;
var G__22814 = c14261;
var G__22815 = d14262;
var G__22816 = e14263;
var G__22817 = f14264;
var G__22818 = g14265;
var G__22819 = h14266;
var G__22820 = i14267;
var G__22821 = j14268;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__22812,G__22813,G__22814,G__22815,G__22816,G__22817,G__22818,G__22819,G__22820,G__22821) : f.call(null,G__22812,G__22813,G__22814,G__22815,G__22816,G__22817,G__22818,G__22819,G__22820,G__22821));
}
} else {
var k14269 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269);
} else {
var G__22822 = a14259;
var G__22823 = b14260;
var G__22824 = c14261;
var G__22825 = d14262;
var G__22826 = e14263;
var G__22827 = f14264;
var G__22828 = g14265;
var G__22829 = h14266;
var G__22830 = i14267;
var G__22831 = j14268;
var G__22832 = k14269;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__22822,G__22823,G__22824,G__22825,G__22826,G__22827,G__22828,G__22829,G__22830,G__22831,G__22832) : f.call(null,G__22822,G__22823,G__22824,G__22825,G__22826,G__22827,G__22828,G__22829,G__22830,G__22831,G__22832));
}
} else {
var l14270 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270);
} else {
var G__22833 = a14259;
var G__22834 = b14260;
var G__22835 = c14261;
var G__22836 = d14262;
var G__22837 = e14263;
var G__22838 = f14264;
var G__22839 = g14265;
var G__22840 = h14266;
var G__22841 = i14267;
var G__22842 = j14268;
var G__22843 = k14269;
var G__22844 = l14270;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__22833,G__22834,G__22835,G__22836,G__22837,G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844) : f.call(null,G__22833,G__22834,G__22835,G__22836,G__22837,G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844));
}
} else {
var m14271 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271);
} else {
var G__22845 = a14259;
var G__22846 = b14260;
var G__22847 = c14261;
var G__22848 = d14262;
var G__22849 = e14263;
var G__22850 = f14264;
var G__22851 = g14265;
var G__22852 = h14266;
var G__22853 = i14267;
var G__22854 = j14268;
var G__22855 = k14269;
var G__22856 = l14270;
var G__22857 = m14271;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__22845,G__22846,G__22847,G__22848,G__22849,G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856,G__22857) : f.call(null,G__22845,G__22846,G__22847,G__22848,G__22849,G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856,G__22857));
}
} else {
var n14272 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271,n14272);
} else {
var G__22858 = a14259;
var G__22859 = b14260;
var G__22860 = c14261;
var G__22861 = d14262;
var G__22862 = e14263;
var G__22863 = f14264;
var G__22864 = g14265;
var G__22865 = h14266;
var G__22866 = i14267;
var G__22867 = j14268;
var G__22868 = k14269;
var G__22869 = l14270;
var G__22870 = m14271;
var G__22871 = n14272;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__22858,G__22859,G__22860,G__22861,G__22862,G__22863,G__22864,G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871) : f.call(null,G__22858,G__22859,G__22860,G__22861,G__22862,G__22863,G__22864,G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871));
}
} else {
var o14273 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271,n14272,o14273);
} else {
var G__22872 = a14259;
var G__22873 = b14260;
var G__22874 = c14261;
var G__22875 = d14262;
var G__22876 = e14263;
var G__22877 = f14264;
var G__22878 = g14265;
var G__22879 = h14266;
var G__22880 = i14267;
var G__22881 = j14268;
var G__22882 = k14269;
var G__22883 = l14270;
var G__22884 = m14271;
var G__22885 = n14272;
var G__22886 = o14273;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__22872,G__22873,G__22874,G__22875,G__22876,G__22877,G__22878,G__22879,G__22880,G__22881,G__22882,G__22883,G__22884,G__22885,G__22886) : f.call(null,G__22872,G__22873,G__22874,G__22875,G__22876,G__22877,G__22878,G__22879,G__22880,G__22881,G__22882,G__22883,G__22884,G__22885,G__22886));
}
} else {
var p14274 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271,n14272,o14273,p14274);
} else {
var G__22887 = a14259;
var G__22888 = b14260;
var G__22889 = c14261;
var G__22890 = d14262;
var G__22891 = e14263;
var G__22892 = f14264;
var G__22893 = g14265;
var G__22894 = h14266;
var G__22895 = i14267;
var G__22896 = j14268;
var G__22897 = k14269;
var G__22898 = l14270;
var G__22899 = m14271;
var G__22900 = n14272;
var G__22901 = o14273;
var G__22902 = p14274;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894,G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902) : f.call(null,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894,G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902));
}
} else {
var q14275 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271,n14272,o14273,p14274,q14275);
} else {
var G__22903 = a14259;
var G__22904 = b14260;
var G__22905 = c14261;
var G__22906 = d14262;
var G__22907 = e14263;
var G__22908 = f14264;
var G__22909 = g14265;
var G__22910 = h14266;
var G__22911 = i14267;
var G__22912 = j14268;
var G__22913 = k14269;
var G__22914 = l14270;
var G__22915 = m14271;
var G__22916 = n14272;
var G__22917 = o14273;
var G__22918 = p14274;
var G__22919 = q14275;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__22903,G__22904,G__22905,G__22906,G__22907,G__22908,G__22909,G__22910,G__22911,G__22912,G__22913,G__22914,G__22915,G__22916,G__22917,G__22918,G__22919) : f.call(null,G__22903,G__22904,G__22905,G__22906,G__22907,G__22908,G__22909,G__22910,G__22911,G__22912,G__22913,G__22914,G__22915,G__22916,G__22917,G__22918,G__22919));
}
} else {
var r14276 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271,n14272,o14273,p14274,q14275,r14276);
} else {
var G__22920 = a14259;
var G__22921 = b14260;
var G__22922 = c14261;
var G__22923 = d14262;
var G__22924 = e14263;
var G__22925 = f14264;
var G__22926 = g14265;
var G__22927 = h14266;
var G__22928 = i14267;
var G__22929 = j14268;
var G__22930 = k14269;
var G__22931 = l14270;
var G__22932 = m14271;
var G__22933 = n14272;
var G__22934 = o14273;
var G__22935 = p14274;
var G__22936 = q14275;
var G__22937 = r14276;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932,G__22933,G__22934,G__22935,G__22936,G__22937) : f.call(null,G__22920,G__22921,G__22922,G__22923,G__22924,G__22925,G__22926,G__22927,G__22928,G__22929,G__22930,G__22931,G__22932,G__22933,G__22934,G__22935,G__22936,G__22937));
}
} else {
var s14277 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271,n14272,o14273,p14274,q14275,r14276,s14277);
} else {
var G__22938 = a14259;
var G__22939 = b14260;
var G__22940 = c14261;
var G__22941 = d14262;
var G__22942 = e14263;
var G__22943 = f14264;
var G__22944 = g14265;
var G__22945 = h14266;
var G__22946 = i14267;
var G__22947 = j14268;
var G__22948 = k14269;
var G__22949 = l14270;
var G__22950 = m14271;
var G__22951 = n14272;
var G__22952 = o14273;
var G__22953 = p14274;
var G__22954 = q14275;
var G__22955 = r14276;
var G__22956 = s14277;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__22938,G__22939,G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949,G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956) : f.call(null,G__22938,G__22939,G__22940,G__22941,G__22942,G__22943,G__22944,G__22945,G__22946,G__22947,G__22948,G__22949,G__22950,G__22951,G__22952,G__22953,G__22954,G__22955,G__22956));
}
} else {
var t14278 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a14259,b14260,c14261,d14262,e14263,f14264,g14265,h14266,i14267,j14268,k14269,l14270,m14271,n14272,o14273,p14274,q14275,r14276,s14277,t14278);
} else {
var G__22957 = a14259;
var G__22958 = b14260;
var G__22959 = c14261;
var G__22960 = d14262;
var G__22961 = e14263;
var G__22962 = f14264;
var G__22963 = g14265;
var G__22964 = h14266;
var G__22965 = i14267;
var G__22966 = j14268;
var G__22967 = k14269;
var G__22968 = l14270;
var G__22969 = m14271;
var G__22970 = n14272;
var G__22971 = o14273;
var G__22972 = p14274;
var G__22973 = q14275;
var G__22974 = r14276;
var G__22975 = s14277;
var G__22976 = t14278;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964,G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976) : f.call(null,G__22957,G__22958,G__22959,G__22960,G__22961,G__22962,G__22963,G__22964,G__22965,G__22966,G__22967,G__22968,G__22969,G__22970,G__22971,G__22972,G__22973,G__22974,G__22975,G__22976));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__22977__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__22977 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__22978__i = 0, G__22978__a = new Array(arguments.length -  5);
while (G__22978__i < G__22978__a.length) {G__22978__a[G__22978__i] = arguments[G__22978__i + 5]; ++G__22978__i;}
  args = new cljs.core.IndexedSeq(G__22978__a,0);
} 
return G__22977__delegate.call(this,f,a,b,c,d,args);};
G__22977.cljs$lang$maxFixedArity = 5;
G__22977.cljs$lang$applyTo = (function (arglist__22979){
var f = cljs.core.first(arglist__22979);
arglist__22979 = cljs.core.next(arglist__22979);
var a = cljs.core.first(arglist__22979);
arglist__22979 = cljs.core.next(arglist__22979);
var b = cljs.core.first(arglist__22979);
arglist__22979 = cljs.core.next(arglist__22979);
var c = cljs.core.first(arglist__22979);
arglist__22979 = cljs.core.next(arglist__22979);
var d = cljs.core.first(arglist__22979);
var args = cljs.core.rest(arglist__22979);
return G__22977__delegate(f,a,b,c,d,args);
});
G__22977.cljs$core$IFn$_invoke$arity$variadic = G__22977__delegate;
return G__22977;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__22980 = null;
if (arguments.length > 5) {
var G__22981__i = 0, G__22981__a = new Array(arguments.length -  5);
while (G__22981__i < G__22981__a.length) {G__22981__a[G__22981__i] = arguments[G__22981__i + 5]; ++G__22981__i;}
G__22980 = new cljs.core.IndexedSeq(G__22981__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__22980);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__22997 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22997) : f.call(null,G__22997));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__22998 = cljs.core.meta(obj);
var G__22999 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22998,G__22999) : f.call(null,G__22998,G__22999));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__23000 = cljs.core.meta(obj);
var G__23001 = a;
var G__23002 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23000,G__23001,G__23002) : f.call(null,G__23000,G__23001,G__23002));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__23003 = cljs.core.meta(obj);
var G__23004 = a;
var G__23005 = b;
var G__23006 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23003,G__23004,G__23005,G__23006) : f.call(null,G__23003,G__23004,G__23005,G__23006));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__23007 = cljs.core.meta(obj);
var G__23008 = a;
var G__23009 = b;
var G__23010 = c;
var G__23011 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23007,G__23008,G__23009,G__23010,G__23011) : f.call(null,G__23007,G__23008,G__23009,G__23010,G__23011));
})());
});
var vary_meta__7 = (function() { 
var G__23012__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__23012 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__23013__i = 0, G__23013__a = new Array(arguments.length -  6);
while (G__23013__i < G__23013__a.length) {G__23013__a[G__23013__i] = arguments[G__23013__i + 6]; ++G__23013__i;}
  args = new cljs.core.IndexedSeq(G__23013__a,0);
} 
return G__23012__delegate.call(this,obj,f,a,b,c,d,args);};
G__23012.cljs$lang$maxFixedArity = 6;
G__23012.cljs$lang$applyTo = (function (arglist__23014){
var obj = cljs.core.first(arglist__23014);
arglist__23014 = cljs.core.next(arglist__23014);
var f = cljs.core.first(arglist__23014);
arglist__23014 = cljs.core.next(arglist__23014);
var a = cljs.core.first(arglist__23014);
arglist__23014 = cljs.core.next(arglist__23014);
var b = cljs.core.first(arglist__23014);
arglist__23014 = cljs.core.next(arglist__23014);
var c = cljs.core.first(arglist__23014);
arglist__23014 = cljs.core.next(arglist__23014);
var d = cljs.core.first(arglist__23014);
var args = cljs.core.rest(arglist__23014);
return G__23012__delegate(obj,f,a,b,c,d,args);
});
G__23012.cljs$core$IFn$_invoke$arity$variadic = G__23012__delegate;
return G__23012;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__23015 = null;
if (arguments.length > 6) {
var G__23016__i = 0, G__23016__a = new Array(arguments.length -  6);
while (G__23016__i < G__23016__a.length) {G__23016__a[G__23016__i] = arguments[G__23016__i + 6]; ++G__23016__i;}
G__23015 = new cljs.core.IndexedSeq(G__23016__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__23015);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__23017__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__23017 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__23018__i = 0, G__23018__a = new Array(arguments.length -  2);
while (G__23018__i < G__23018__a.length) {G__23018__a[G__23018__i] = arguments[G__23018__i + 2]; ++G__23018__i;}
  more = new cljs.core.IndexedSeq(G__23018__a,0);
} 
return G__23017__delegate.call(this,x,y,more);};
G__23017.cljs$lang$maxFixedArity = 2;
G__23017.cljs$lang$applyTo = (function (arglist__23019){
var x = cljs.core.first(arglist__23019);
arglist__23019 = cljs.core.next(arglist__23019);
var y = cljs.core.first(arglist__23019);
var more = cljs.core.rest(arglist__23019);
return G__23017__delegate(x,y,more);
});
G__23017.cljs$core$IFn$_invoke$arity$variadic = G__23017__delegate;
return G__23017;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__23020 = null;
if (arguments.length > 2) {
var G__23021__i = 0, G__23021__a = new Array(arguments.length -  2);
while (G__23021__i < G__23021__a.length) {G__23021__a[G__23021__i] = arguments[G__23021__i + 2]; ++G__23021__i;}
G__23020 = new cljs.core.IndexedSeq(G__23021__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23020);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t23025 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t23025 = (function (nil_iter,meta23026){
this.nil_iter = nil_iter;
this.meta23026 = meta23026;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t23025.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t23025.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t23025.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t23025.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_23027){
var self__ = this;
var _23027__$1 = this;
return self__.meta23026;
});

cljs.core.t23025.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_23027,meta23026__$1){
var self__ = this;
var _23027__$1 = this;
return (new cljs.core.t23025(self__.nil_iter,meta23026__$1));
});

cljs.core.t23025.cljs$lang$type = true;

cljs.core.t23025.cljs$lang$ctorStr = "cljs.core/t23025";

cljs.core.t23025.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/t23025");
});

cljs.core.__GT_t23025 = (function __GT_t23025(nil_iter__$1,meta23026){
return (new cljs.core.t23025(nil_iter__$1,meta23026));
});

}

return (new cljs.core.t23025(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13316__auto__ = !((lt.stepper == null));
if(and__13316__auto__){
return self__.iter.hasNext();
} else {
return and__13316__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__23028 = lt;
var G__23029 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__23028,G__23029) : self__.xform.call(null,G__23028,G__23029));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__23030 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__23030) : self__.xform.call(null,G__23030));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__23032 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__23032) : xform.call(null,G__23032));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__23034 = cljs.core.next(iters__$1);
iters__$1 = G__23034;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__14215__auto___23035 = self__.iters.length;
var i_23036 = (0);
while(true){
if((i_23036 < n__14215__auto___23035)){
(self__.nexts[i_23036] = (self__.iters[i_23036]).next());

var G__23037 = (i_23036 + (1));
i_23036 = G__23037;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13316__auto__ = !((lt.stepper == null));
if(and__13316__auto__){
return this$.hasNext();
} else {
return and__13316__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__23033 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__23033) : self__.xform.call(null,G__23033));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__23042 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__23042) : xform.call(null,G__23042));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__23043_23047 = cljs.core.seq(colls);
var chunk__23044_23048 = null;
var count__23045_23049 = (0);
var i__23046_23050 = (0);
while(true){
if((i__23046_23050 < count__23045_23049)){
var coll_23051 = chunk__23044_23048.cljs$core$IIndexed$_nth$arity$2(null,i__23046_23050);
iters.push(cljs.core.iter(coll_23051));

var G__23052 = seq__23043_23047;
var G__23053 = chunk__23044_23048;
var G__23054 = count__23045_23049;
var G__23055 = (i__23046_23050 + (1));
seq__23043_23047 = G__23052;
chunk__23044_23048 = G__23053;
count__23045_23049 = G__23054;
i__23046_23050 = G__23055;
continue;
} else {
var temp__4126__auto___23056 = cljs.core.seq(seq__23043_23047);
if(temp__4126__auto___23056){
var seq__23043_23057__$1 = temp__4126__auto___23056;
if(cljs.core.chunked_seq_QMARK_(seq__23043_23057__$1)){
var c__14115__auto___23058 = cljs.core.chunk_first(seq__23043_23057__$1);
var G__23059 = cljs.core.chunk_rest(seq__23043_23057__$1);
var G__23060 = c__14115__auto___23058;
var G__23061 = cljs.core.count(c__14115__auto___23058);
var G__23062 = (0);
seq__23043_23047 = G__23059;
chunk__23044_23048 = G__23060;
count__23045_23049 = G__23061;
i__23046_23050 = G__23062;
continue;
} else {
var coll_23063 = cljs.core.first(seq__23043_23057__$1);
iters.push(cljs.core.iter(coll_23063));

var G__23064 = cljs.core.next(seq__23043_23057__$1);
var G__23065 = null;
var G__23066 = (0);
var G__23067 = (0);
seq__23043_23047 = G__23064;
chunk__23044_23048 = G__23065;
count__23045_23049 = G__23066;
i__23046_23050 = G__23067;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__13328__auto__ = cljs.core.seq(coll);
if(or__13328__auto__){
return or__13328__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__23068__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__23068 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__23069__i = 0, G__23069__a = new Array(arguments.length -  2);
while (G__23069__i < G__23069__a.length) {G__23069__a[G__23069__i] = arguments[G__23069__i + 2]; ++G__23069__i;}
  colls = new cljs.core.IndexedSeq(G__23069__a,0);
} 
return G__23068__delegate.call(this,xform,coll,colls);};
G__23068.cljs$lang$maxFixedArity = 2;
G__23068.cljs$lang$applyTo = (function (arglist__23070){
var xform = cljs.core.first(arglist__23070);
arglist__23070 = cljs.core.next(arglist__23070);
var coll = cljs.core.first(arglist__23070);
var colls = cljs.core.rest(arglist__23070);
return G__23068__delegate(xform,coll,colls);
});
G__23068.cljs$core$IFn$_invoke$arity$variadic = G__23068__delegate;
return G__23068;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__23071 = null;
if (arguments.length > 2) {
var G__23072__i = 0, G__23072__a = new Array(arguments.length -  2);
while (G__23072__i < G__23072__a.length) {G__23072__a[G__23072__i] = arguments[G__23072__i + 2]; ++G__23072__i;}
G__23071 = new cljs.core.IndexedSeq(G__23072__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__23071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__23074 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23074) : pred.call(null,G__23074));
})())){
var G__23075 = pred;
var G__23076 = cljs.core.next(coll);
pred = G__23075;
coll = G__23076;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__13328__auto__ = (function (){var G__23080 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23080) : pred.call(null,G__23080));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var G__23081 = pred;
var G__23082 = cljs.core.next(coll);
pred = G__23081;
coll = G__23082;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__23089 = null;
var G__23089__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__23089__1 = (function (x){
return cljs.core.not((function (){var G__23086 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23086) : f.call(null,G__23086));
})());
});
var G__23089__2 = (function (x,y){
return cljs.core.not((function (){var G__23087 = x;
var G__23088 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23087,G__23088) : f.call(null,G__23087,G__23088));
})());
});
var G__23089__3 = (function() { 
var G__23090__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__23090 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__23091__i = 0, G__23091__a = new Array(arguments.length -  2);
while (G__23091__i < G__23091__a.length) {G__23091__a[G__23091__i] = arguments[G__23091__i + 2]; ++G__23091__i;}
  zs = new cljs.core.IndexedSeq(G__23091__a,0);
} 
return G__23090__delegate.call(this,x,y,zs);};
G__23090.cljs$lang$maxFixedArity = 2;
G__23090.cljs$lang$applyTo = (function (arglist__23092){
var x = cljs.core.first(arglist__23092);
arglist__23092 = cljs.core.next(arglist__23092);
var y = cljs.core.first(arglist__23092);
var zs = cljs.core.rest(arglist__23092);
return G__23090__delegate(x,y,zs);
});
G__23090.cljs$core$IFn$_invoke$arity$variadic = G__23090__delegate;
return G__23090;
})()
;
G__23089 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__23089__0.call(this);
case 1:
return G__23089__1.call(this,x);
case 2:
return G__23089__2.call(this,x,y);
default:
var G__23093 = null;
if (arguments.length > 2) {
var G__23094__i = 0, G__23094__a = new Array(arguments.length -  2);
while (G__23094__i < G__23094__a.length) {G__23094__a[G__23094__i] = arguments[G__23094__i + 2]; ++G__23094__i;}
G__23093 = new cljs.core.IndexedSeq(G__23094__a,0);
}
return G__23089__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23093);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23089.cljs$lang$maxFixedArity = 2;
G__23089.cljs$lang$applyTo = G__23089__3.cljs$lang$applyTo;
G__23089.cljs$core$IFn$_invoke$arity$0 = G__23089__0;
G__23089.cljs$core$IFn$_invoke$arity$1 = G__23089__1;
G__23089.cljs$core$IFn$_invoke$arity$2 = G__23089__2;
G__23089.cljs$core$IFn$_invoke$arity$variadic = G__23089__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23089;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__23095__delegate = function (args){
return x;
};
var G__23095 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23096__i = 0, G__23096__a = new Array(arguments.length -  0);
while (G__23096__i < G__23096__a.length) {G__23096__a[G__23096__i] = arguments[G__23096__i + 0]; ++G__23096__i;}
  args = new cljs.core.IndexedSeq(G__23096__a,0);
} 
return G__23095__delegate.call(this,args);};
G__23095.cljs$lang$maxFixedArity = 0;
G__23095.cljs$lang$applyTo = (function (arglist__23097){
var args = cljs.core.seq(arglist__23097);
return G__23095__delegate(args);
});
G__23095.cljs$core$IFn$_invoke$arity$variadic = G__23095__delegate;
return G__23095;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__23152 = null;
var G__23152__0 = (function (){
var G__23125 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23125) : f.call(null,G__23125));
});
var G__23152__1 = (function (x){
var G__23126 = (function (){var G__23127 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23127) : g.call(null,G__23127));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23126) : f.call(null,G__23126));
});
var G__23152__2 = (function (x,y){
var G__23128 = (function (){var G__23129 = x;
var G__23130 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23129,G__23130) : g.call(null,G__23129,G__23130));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23128) : f.call(null,G__23128));
});
var G__23152__3 = (function (x,y,z){
var G__23131 = (function (){var G__23132 = x;
var G__23133 = y;
var G__23134 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23132,G__23133,G__23134) : g.call(null,G__23132,G__23133,G__23134));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23131) : f.call(null,G__23131));
});
var G__23152__4 = (function() { 
var G__23153__delegate = function (x,y,z,args){
var G__23135 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23135) : f.call(null,G__23135));
};
var G__23153 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23154__i = 0, G__23154__a = new Array(arguments.length -  3);
while (G__23154__i < G__23154__a.length) {G__23154__a[G__23154__i] = arguments[G__23154__i + 3]; ++G__23154__i;}
  args = new cljs.core.IndexedSeq(G__23154__a,0);
} 
return G__23153__delegate.call(this,x,y,z,args);};
G__23153.cljs$lang$maxFixedArity = 3;
G__23153.cljs$lang$applyTo = (function (arglist__23155){
var x = cljs.core.first(arglist__23155);
arglist__23155 = cljs.core.next(arglist__23155);
var y = cljs.core.first(arglist__23155);
arglist__23155 = cljs.core.next(arglist__23155);
var z = cljs.core.first(arglist__23155);
var args = cljs.core.rest(arglist__23155);
return G__23153__delegate(x,y,z,args);
});
G__23153.cljs$core$IFn$_invoke$arity$variadic = G__23153__delegate;
return G__23153;
})()
;
G__23152 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23152__0.call(this);
case 1:
return G__23152__1.call(this,x);
case 2:
return G__23152__2.call(this,x,y);
case 3:
return G__23152__3.call(this,x,y,z);
default:
var G__23156 = null;
if (arguments.length > 3) {
var G__23157__i = 0, G__23157__a = new Array(arguments.length -  3);
while (G__23157__i < G__23157__a.length) {G__23157__a[G__23157__i] = arguments[G__23157__i + 3]; ++G__23157__i;}
G__23156 = new cljs.core.IndexedSeq(G__23157__a,0);
}
return G__23152__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23152.cljs$lang$maxFixedArity = 3;
G__23152.cljs$lang$applyTo = G__23152__4.cljs$lang$applyTo;
G__23152.cljs$core$IFn$_invoke$arity$0 = G__23152__0;
G__23152.cljs$core$IFn$_invoke$arity$1 = G__23152__1;
G__23152.cljs$core$IFn$_invoke$arity$2 = G__23152__2;
G__23152.cljs$core$IFn$_invoke$arity$3 = G__23152__3;
G__23152.cljs$core$IFn$_invoke$arity$variadic = G__23152__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23152;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__23158 = null;
var G__23158__0 = (function (){
var G__23136 = (function (){var G__23137 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23137) : g.call(null,G__23137));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23136) : f.call(null,G__23136));
});
var G__23158__1 = (function (x){
var G__23138 = (function (){var G__23139 = (function (){var G__23140 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23140) : h.call(null,G__23140));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23139) : g.call(null,G__23139));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23138) : f.call(null,G__23138));
});
var G__23158__2 = (function (x,y){
var G__23141 = (function (){var G__23142 = (function (){var G__23143 = x;
var G__23144 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23143,G__23144) : h.call(null,G__23143,G__23144));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23142) : g.call(null,G__23142));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23141) : f.call(null,G__23141));
});
var G__23158__3 = (function (x,y,z){
var G__23145 = (function (){var G__23146 = (function (){var G__23147 = x;
var G__23148 = y;
var G__23149 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23147,G__23148,G__23149) : h.call(null,G__23147,G__23148,G__23149));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23146) : g.call(null,G__23146));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23145) : f.call(null,G__23145));
});
var G__23158__4 = (function() { 
var G__23159__delegate = function (x,y,z,args){
var G__23150 = (function (){var G__23151 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23151) : g.call(null,G__23151));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23150) : f.call(null,G__23150));
};
var G__23159 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23160__i = 0, G__23160__a = new Array(arguments.length -  3);
while (G__23160__i < G__23160__a.length) {G__23160__a[G__23160__i] = arguments[G__23160__i + 3]; ++G__23160__i;}
  args = new cljs.core.IndexedSeq(G__23160__a,0);
} 
return G__23159__delegate.call(this,x,y,z,args);};
G__23159.cljs$lang$maxFixedArity = 3;
G__23159.cljs$lang$applyTo = (function (arglist__23161){
var x = cljs.core.first(arglist__23161);
arglist__23161 = cljs.core.next(arglist__23161);
var y = cljs.core.first(arglist__23161);
arglist__23161 = cljs.core.next(arglist__23161);
var z = cljs.core.first(arglist__23161);
var args = cljs.core.rest(arglist__23161);
return G__23159__delegate(x,y,z,args);
});
G__23159.cljs$core$IFn$_invoke$arity$variadic = G__23159__delegate;
return G__23159;
})()
;
G__23158 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23158__0.call(this);
case 1:
return G__23158__1.call(this,x);
case 2:
return G__23158__2.call(this,x,y);
case 3:
return G__23158__3.call(this,x,y,z);
default:
var G__23162 = null;
if (arguments.length > 3) {
var G__23163__i = 0, G__23163__a = new Array(arguments.length -  3);
while (G__23163__i < G__23163__a.length) {G__23163__a[G__23163__i] = arguments[G__23163__i + 3]; ++G__23163__i;}
G__23162 = new cljs.core.IndexedSeq(G__23163__a,0);
}
return G__23158__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23162);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23158.cljs$lang$maxFixedArity = 3;
G__23158.cljs$lang$applyTo = G__23158__4.cljs$lang$applyTo;
G__23158.cljs$core$IFn$_invoke$arity$0 = G__23158__0;
G__23158.cljs$core$IFn$_invoke$arity$1 = G__23158__1;
G__23158.cljs$core$IFn$_invoke$arity$2 = G__23158__2;
G__23158.cljs$core$IFn$_invoke$arity$3 = G__23158__3;
G__23158.cljs$core$IFn$_invoke$arity$variadic = G__23158__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23158;
})()
});
var comp__4 = (function() { 
var G__23164__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__23165__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__23166 = cljs.core.first(fs__$2).call(null,ret);
var G__23167 = cljs.core.next(fs__$2);
ret = G__23166;
fs__$2 = G__23167;
continue;
} else {
return ret;
}
break;
}
};
var G__23165 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23168__i = 0, G__23168__a = new Array(arguments.length -  0);
while (G__23168__i < G__23168__a.length) {G__23168__a[G__23168__i] = arguments[G__23168__i + 0]; ++G__23168__i;}
  args = new cljs.core.IndexedSeq(G__23168__a,0);
} 
return G__23165__delegate.call(this,args);};
G__23165.cljs$lang$maxFixedArity = 0;
G__23165.cljs$lang$applyTo = (function (arglist__23169){
var args = cljs.core.seq(arglist__23169);
return G__23165__delegate(args);
});
G__23165.cljs$core$IFn$_invoke$arity$variadic = G__23165__delegate;
return G__23165;
})()
;
;})(fs__$1))
};
var G__23164 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23170__i = 0, G__23170__a = new Array(arguments.length -  3);
while (G__23170__i < G__23170__a.length) {G__23170__a[G__23170__i] = arguments[G__23170__i + 3]; ++G__23170__i;}
  fs = new cljs.core.IndexedSeq(G__23170__a,0);
} 
return G__23164__delegate.call(this,f1,f2,f3,fs);};
G__23164.cljs$lang$maxFixedArity = 3;
G__23164.cljs$lang$applyTo = (function (arglist__23171){
var f1 = cljs.core.first(arglist__23171);
arglist__23171 = cljs.core.next(arglist__23171);
var f2 = cljs.core.first(arglist__23171);
arglist__23171 = cljs.core.next(arglist__23171);
var f3 = cljs.core.first(arglist__23171);
var fs = cljs.core.rest(arglist__23171);
return G__23164__delegate(f1,f2,f3,fs);
});
G__23164.cljs$core$IFn$_invoke$arity$variadic = G__23164__delegate;
return G__23164;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__23172 = null;
if (arguments.length > 3) {
var G__23173__i = 0, G__23173__a = new Array(arguments.length -  3);
while (G__23173__i < G__23173__a.length) {G__23173__a[G__23173__i] = arguments[G__23173__i + 3]; ++G__23173__i;}
G__23172 = new cljs.core.IndexedSeq(G__23173__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__23172);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__23258 = null;
var G__23258__0 = (function (){
var G__23216 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23216) : f.call(null,G__23216));
});
var G__23258__1 = (function (x){
var G__23217 = arg1;
var G__23218 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23217,G__23218) : f.call(null,G__23217,G__23218));
});
var G__23258__2 = (function (x,y){
var G__23219 = arg1;
var G__23220 = x;
var G__23221 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23219,G__23220,G__23221) : f.call(null,G__23219,G__23220,G__23221));
});
var G__23258__3 = (function (x,y,z){
var G__23222 = arg1;
var G__23223 = x;
var G__23224 = y;
var G__23225 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23222,G__23223,G__23224,G__23225) : f.call(null,G__23222,G__23223,G__23224,G__23225));
});
var G__23258__4 = (function() { 
var G__23259__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__23259 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23260__i = 0, G__23260__a = new Array(arguments.length -  3);
while (G__23260__i < G__23260__a.length) {G__23260__a[G__23260__i] = arguments[G__23260__i + 3]; ++G__23260__i;}
  args = new cljs.core.IndexedSeq(G__23260__a,0);
} 
return G__23259__delegate.call(this,x,y,z,args);};
G__23259.cljs$lang$maxFixedArity = 3;
G__23259.cljs$lang$applyTo = (function (arglist__23261){
var x = cljs.core.first(arglist__23261);
arglist__23261 = cljs.core.next(arglist__23261);
var y = cljs.core.first(arglist__23261);
arglist__23261 = cljs.core.next(arglist__23261);
var z = cljs.core.first(arglist__23261);
var args = cljs.core.rest(arglist__23261);
return G__23259__delegate(x,y,z,args);
});
G__23259.cljs$core$IFn$_invoke$arity$variadic = G__23259__delegate;
return G__23259;
})()
;
G__23258 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23258__0.call(this);
case 1:
return G__23258__1.call(this,x);
case 2:
return G__23258__2.call(this,x,y);
case 3:
return G__23258__3.call(this,x,y,z);
default:
var G__23262 = null;
if (arguments.length > 3) {
var G__23263__i = 0, G__23263__a = new Array(arguments.length -  3);
while (G__23263__i < G__23263__a.length) {G__23263__a[G__23263__i] = arguments[G__23263__i + 3]; ++G__23263__i;}
G__23262 = new cljs.core.IndexedSeq(G__23263__a,0);
}
return G__23258__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23258.cljs$lang$maxFixedArity = 3;
G__23258.cljs$lang$applyTo = G__23258__4.cljs$lang$applyTo;
G__23258.cljs$core$IFn$_invoke$arity$0 = G__23258__0;
G__23258.cljs$core$IFn$_invoke$arity$1 = G__23258__1;
G__23258.cljs$core$IFn$_invoke$arity$2 = G__23258__2;
G__23258.cljs$core$IFn$_invoke$arity$3 = G__23258__3;
G__23258.cljs$core$IFn$_invoke$arity$variadic = G__23258__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23258;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__23264 = null;
var G__23264__0 = (function (){
var G__23226 = arg1;
var G__23227 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23226,G__23227) : f.call(null,G__23226,G__23227));
});
var G__23264__1 = (function (x){
var G__23228 = arg1;
var G__23229 = arg2;
var G__23230 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23228,G__23229,G__23230) : f.call(null,G__23228,G__23229,G__23230));
});
var G__23264__2 = (function (x,y){
var G__23231 = arg1;
var G__23232 = arg2;
var G__23233 = x;
var G__23234 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23231,G__23232,G__23233,G__23234) : f.call(null,G__23231,G__23232,G__23233,G__23234));
});
var G__23264__3 = (function (x,y,z){
var G__23235 = arg1;
var G__23236 = arg2;
var G__23237 = x;
var G__23238 = y;
var G__23239 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23235,G__23236,G__23237,G__23238,G__23239) : f.call(null,G__23235,G__23236,G__23237,G__23238,G__23239));
});
var G__23264__4 = (function() { 
var G__23265__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__23265 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23266__i = 0, G__23266__a = new Array(arguments.length -  3);
while (G__23266__i < G__23266__a.length) {G__23266__a[G__23266__i] = arguments[G__23266__i + 3]; ++G__23266__i;}
  args = new cljs.core.IndexedSeq(G__23266__a,0);
} 
return G__23265__delegate.call(this,x,y,z,args);};
G__23265.cljs$lang$maxFixedArity = 3;
G__23265.cljs$lang$applyTo = (function (arglist__23267){
var x = cljs.core.first(arglist__23267);
arglist__23267 = cljs.core.next(arglist__23267);
var y = cljs.core.first(arglist__23267);
arglist__23267 = cljs.core.next(arglist__23267);
var z = cljs.core.first(arglist__23267);
var args = cljs.core.rest(arglist__23267);
return G__23265__delegate(x,y,z,args);
});
G__23265.cljs$core$IFn$_invoke$arity$variadic = G__23265__delegate;
return G__23265;
})()
;
G__23264 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23264__0.call(this);
case 1:
return G__23264__1.call(this,x);
case 2:
return G__23264__2.call(this,x,y);
case 3:
return G__23264__3.call(this,x,y,z);
default:
var G__23268 = null;
if (arguments.length > 3) {
var G__23269__i = 0, G__23269__a = new Array(arguments.length -  3);
while (G__23269__i < G__23269__a.length) {G__23269__a[G__23269__i] = arguments[G__23269__i + 3]; ++G__23269__i;}
G__23268 = new cljs.core.IndexedSeq(G__23269__a,0);
}
return G__23264__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23268);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23264.cljs$lang$maxFixedArity = 3;
G__23264.cljs$lang$applyTo = G__23264__4.cljs$lang$applyTo;
G__23264.cljs$core$IFn$_invoke$arity$0 = G__23264__0;
G__23264.cljs$core$IFn$_invoke$arity$1 = G__23264__1;
G__23264.cljs$core$IFn$_invoke$arity$2 = G__23264__2;
G__23264.cljs$core$IFn$_invoke$arity$3 = G__23264__3;
G__23264.cljs$core$IFn$_invoke$arity$variadic = G__23264__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23264;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__23270 = null;
var G__23270__0 = (function (){
var G__23240 = arg1;
var G__23241 = arg2;
var G__23242 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23240,G__23241,G__23242) : f.call(null,G__23240,G__23241,G__23242));
});
var G__23270__1 = (function (x){
var G__23243 = arg1;
var G__23244 = arg2;
var G__23245 = arg3;
var G__23246 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23243,G__23244,G__23245,G__23246) : f.call(null,G__23243,G__23244,G__23245,G__23246));
});
var G__23270__2 = (function (x,y){
var G__23247 = arg1;
var G__23248 = arg2;
var G__23249 = arg3;
var G__23250 = x;
var G__23251 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23247,G__23248,G__23249,G__23250,G__23251) : f.call(null,G__23247,G__23248,G__23249,G__23250,G__23251));
});
var G__23270__3 = (function (x,y,z){
var G__23252 = arg1;
var G__23253 = arg2;
var G__23254 = arg3;
var G__23255 = x;
var G__23256 = y;
var G__23257 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__23252,G__23253,G__23254,G__23255,G__23256,G__23257) : f.call(null,G__23252,G__23253,G__23254,G__23255,G__23256,G__23257));
});
var G__23270__4 = (function() { 
var G__23271__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__23271 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23272__i = 0, G__23272__a = new Array(arguments.length -  3);
while (G__23272__i < G__23272__a.length) {G__23272__a[G__23272__i] = arguments[G__23272__i + 3]; ++G__23272__i;}
  args = new cljs.core.IndexedSeq(G__23272__a,0);
} 
return G__23271__delegate.call(this,x,y,z,args);};
G__23271.cljs$lang$maxFixedArity = 3;
G__23271.cljs$lang$applyTo = (function (arglist__23273){
var x = cljs.core.first(arglist__23273);
arglist__23273 = cljs.core.next(arglist__23273);
var y = cljs.core.first(arglist__23273);
arglist__23273 = cljs.core.next(arglist__23273);
var z = cljs.core.first(arglist__23273);
var args = cljs.core.rest(arglist__23273);
return G__23271__delegate(x,y,z,args);
});
G__23271.cljs$core$IFn$_invoke$arity$variadic = G__23271__delegate;
return G__23271;
})()
;
G__23270 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23270__0.call(this);
case 1:
return G__23270__1.call(this,x);
case 2:
return G__23270__2.call(this,x,y);
case 3:
return G__23270__3.call(this,x,y,z);
default:
var G__23274 = null;
if (arguments.length > 3) {
var G__23275__i = 0, G__23275__a = new Array(arguments.length -  3);
while (G__23275__i < G__23275__a.length) {G__23275__a[G__23275__i] = arguments[G__23275__i + 3]; ++G__23275__i;}
G__23274 = new cljs.core.IndexedSeq(G__23275__a,0);
}
return G__23270__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23270.cljs$lang$maxFixedArity = 3;
G__23270.cljs$lang$applyTo = G__23270__4.cljs$lang$applyTo;
G__23270.cljs$core$IFn$_invoke$arity$0 = G__23270__0;
G__23270.cljs$core$IFn$_invoke$arity$1 = G__23270__1;
G__23270.cljs$core$IFn$_invoke$arity$2 = G__23270__2;
G__23270.cljs$core$IFn$_invoke$arity$3 = G__23270__3;
G__23270.cljs$core$IFn$_invoke$arity$variadic = G__23270__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23270;
})()
});
var partial__5 = (function() { 
var G__23276__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__23277__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__23277 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23278__i = 0, G__23278__a = new Array(arguments.length -  0);
while (G__23278__i < G__23278__a.length) {G__23278__a[G__23278__i] = arguments[G__23278__i + 0]; ++G__23278__i;}
  args = new cljs.core.IndexedSeq(G__23278__a,0);
} 
return G__23277__delegate.call(this,args);};
G__23277.cljs$lang$maxFixedArity = 0;
G__23277.cljs$lang$applyTo = (function (arglist__23279){
var args = cljs.core.seq(arglist__23279);
return G__23277__delegate(args);
});
G__23277.cljs$core$IFn$_invoke$arity$variadic = G__23277__delegate;
return G__23277;
})()
;
};
var G__23276 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__23280__i = 0, G__23280__a = new Array(arguments.length -  4);
while (G__23280__i < G__23280__a.length) {G__23280__a[G__23280__i] = arguments[G__23280__i + 4]; ++G__23280__i;}
  more = new cljs.core.IndexedSeq(G__23280__a,0);
} 
return G__23276__delegate.call(this,f,arg1,arg2,arg3,more);};
G__23276.cljs$lang$maxFixedArity = 4;
G__23276.cljs$lang$applyTo = (function (arglist__23281){
var f = cljs.core.first(arglist__23281);
arglist__23281 = cljs.core.next(arglist__23281);
var arg1 = cljs.core.first(arglist__23281);
arglist__23281 = cljs.core.next(arglist__23281);
var arg2 = cljs.core.first(arglist__23281);
arglist__23281 = cljs.core.next(arglist__23281);
var arg3 = cljs.core.first(arglist__23281);
var more = cljs.core.rest(arglist__23281);
return G__23276__delegate(f,arg1,arg2,arg3,more);
});
G__23276.cljs$core$IFn$_invoke$arity$variadic = G__23276__delegate;
return G__23276;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__23282 = null;
if (arguments.length > 4) {
var G__23283__i = 0, G__23283__a = new Array(arguments.length -  4);
while (G__23283__i < G__23283__a.length) {G__23283__a[G__23283__i] = arguments[G__23283__i + 4]; ++G__23283__i;}
G__23282 = new cljs.core.IndexedSeq(G__23283__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__23282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__23316 = null;
var G__23316__1 = (function (a){
var G__23300 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23300) : f.call(null,G__23300));
});
var G__23316__2 = (function (a,b){
var G__23301 = (((a == null))?x:a);
var G__23302 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23301,G__23302) : f.call(null,G__23301,G__23302));
});
var G__23316__3 = (function (a,b,c){
var G__23303 = (((a == null))?x:a);
var G__23304 = b;
var G__23305 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23303,G__23304,G__23305) : f.call(null,G__23303,G__23304,G__23305));
});
var G__23316__4 = (function() { 
var G__23317__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__23317 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23318__i = 0, G__23318__a = new Array(arguments.length -  3);
while (G__23318__i < G__23318__a.length) {G__23318__a[G__23318__i] = arguments[G__23318__i + 3]; ++G__23318__i;}
  ds = new cljs.core.IndexedSeq(G__23318__a,0);
} 
return G__23317__delegate.call(this,a,b,c,ds);};
G__23317.cljs$lang$maxFixedArity = 3;
G__23317.cljs$lang$applyTo = (function (arglist__23319){
var a = cljs.core.first(arglist__23319);
arglist__23319 = cljs.core.next(arglist__23319);
var b = cljs.core.first(arglist__23319);
arglist__23319 = cljs.core.next(arglist__23319);
var c = cljs.core.first(arglist__23319);
var ds = cljs.core.rest(arglist__23319);
return G__23317__delegate(a,b,c,ds);
});
G__23317.cljs$core$IFn$_invoke$arity$variadic = G__23317__delegate;
return G__23317;
})()
;
G__23316 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__23316__1.call(this,a);
case 2:
return G__23316__2.call(this,a,b);
case 3:
return G__23316__3.call(this,a,b,c);
default:
var G__23320 = null;
if (arguments.length > 3) {
var G__23321__i = 0, G__23321__a = new Array(arguments.length -  3);
while (G__23321__i < G__23321__a.length) {G__23321__a[G__23321__i] = arguments[G__23321__i + 3]; ++G__23321__i;}
G__23320 = new cljs.core.IndexedSeq(G__23321__a,0);
}
return G__23316__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23320);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23316.cljs$lang$maxFixedArity = 3;
G__23316.cljs$lang$applyTo = G__23316__4.cljs$lang$applyTo;
G__23316.cljs$core$IFn$_invoke$arity$1 = G__23316__1;
G__23316.cljs$core$IFn$_invoke$arity$2 = G__23316__2;
G__23316.cljs$core$IFn$_invoke$arity$3 = G__23316__3;
G__23316.cljs$core$IFn$_invoke$arity$variadic = G__23316__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23316;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__23322 = null;
var G__23322__2 = (function (a,b){
var G__23306 = (((a == null))?x:a);
var G__23307 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23306,G__23307) : f.call(null,G__23306,G__23307));
});
var G__23322__3 = (function (a,b,c){
var G__23308 = (((a == null))?x:a);
var G__23309 = (((b == null))?y:b);
var G__23310 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23308,G__23309,G__23310) : f.call(null,G__23308,G__23309,G__23310));
});
var G__23322__4 = (function() { 
var G__23323__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__23323 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23324__i = 0, G__23324__a = new Array(arguments.length -  3);
while (G__23324__i < G__23324__a.length) {G__23324__a[G__23324__i] = arguments[G__23324__i + 3]; ++G__23324__i;}
  ds = new cljs.core.IndexedSeq(G__23324__a,0);
} 
return G__23323__delegate.call(this,a,b,c,ds);};
G__23323.cljs$lang$maxFixedArity = 3;
G__23323.cljs$lang$applyTo = (function (arglist__23325){
var a = cljs.core.first(arglist__23325);
arglist__23325 = cljs.core.next(arglist__23325);
var b = cljs.core.first(arglist__23325);
arglist__23325 = cljs.core.next(arglist__23325);
var c = cljs.core.first(arglist__23325);
var ds = cljs.core.rest(arglist__23325);
return G__23323__delegate(a,b,c,ds);
});
G__23323.cljs$core$IFn$_invoke$arity$variadic = G__23323__delegate;
return G__23323;
})()
;
G__23322 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23322__2.call(this,a,b);
case 3:
return G__23322__3.call(this,a,b,c);
default:
var G__23326 = null;
if (arguments.length > 3) {
var G__23327__i = 0, G__23327__a = new Array(arguments.length -  3);
while (G__23327__i < G__23327__a.length) {G__23327__a[G__23327__i] = arguments[G__23327__i + 3]; ++G__23327__i;}
G__23326 = new cljs.core.IndexedSeq(G__23327__a,0);
}
return G__23322__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23326);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23322.cljs$lang$maxFixedArity = 3;
G__23322.cljs$lang$applyTo = G__23322__4.cljs$lang$applyTo;
G__23322.cljs$core$IFn$_invoke$arity$2 = G__23322__2;
G__23322.cljs$core$IFn$_invoke$arity$3 = G__23322__3;
G__23322.cljs$core$IFn$_invoke$arity$variadic = G__23322__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23322;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__23328 = null;
var G__23328__2 = (function (a,b){
var G__23311 = (((a == null))?x:a);
var G__23312 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23311,G__23312) : f.call(null,G__23311,G__23312));
});
var G__23328__3 = (function (a,b,c){
var G__23313 = (((a == null))?x:a);
var G__23314 = (((b == null))?y:b);
var G__23315 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23313,G__23314,G__23315) : f.call(null,G__23313,G__23314,G__23315));
});
var G__23328__4 = (function() { 
var G__23329__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__23329 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23330__i = 0, G__23330__a = new Array(arguments.length -  3);
while (G__23330__i < G__23330__a.length) {G__23330__a[G__23330__i] = arguments[G__23330__i + 3]; ++G__23330__i;}
  ds = new cljs.core.IndexedSeq(G__23330__a,0);
} 
return G__23329__delegate.call(this,a,b,c,ds);};
G__23329.cljs$lang$maxFixedArity = 3;
G__23329.cljs$lang$applyTo = (function (arglist__23331){
var a = cljs.core.first(arglist__23331);
arglist__23331 = cljs.core.next(arglist__23331);
var b = cljs.core.first(arglist__23331);
arglist__23331 = cljs.core.next(arglist__23331);
var c = cljs.core.first(arglist__23331);
var ds = cljs.core.rest(arglist__23331);
return G__23329__delegate(a,b,c,ds);
});
G__23329.cljs$core$IFn$_invoke$arity$variadic = G__23329__delegate;
return G__23329;
})()
;
G__23328 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23328__2.call(this,a,b);
case 3:
return G__23328__3.call(this,a,b,c);
default:
var G__23332 = null;
if (arguments.length > 3) {
var G__23333__i = 0, G__23333__a = new Array(arguments.length -  3);
while (G__23333__i < G__23333__a.length) {G__23333__a[G__23333__i] = arguments[G__23333__i + 3]; ++G__23333__i;}
G__23332 = new cljs.core.IndexedSeq(G__23333__a,0);
}
return G__23328__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23328.cljs$lang$maxFixedArity = 3;
G__23328.cljs$lang$applyTo = G__23328__4.cljs$lang$applyTo;
G__23328.cljs$core$IFn$_invoke$arity$2 = G__23328__2;
G__23328.cljs$core$IFn$_invoke$arity$3 = G__23328__3;
G__23328.cljs$core$IFn$_invoke$arity$variadic = G__23328__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23328;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__23364 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__23364) : cljs.core.volatile_BANG_.call(null,G__23364));
})();
return ((function (i){
return (function() {
var G__23394 = null;
var G__23394__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23394__1 = (function (result){
var G__23365 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23365) : rf.call(null,G__23365));
});
var G__23394__2 = (function (result,input){
var G__23366 = result;
var G__23367 = (function (){var G__23368 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__23369 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23368,G__23369) : f.call(null,G__23368,G__23369));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23366,G__23367) : rf.call(null,G__23366,G__23367));
});
G__23394 = function(result,input){
switch(arguments.length){
case 0:
return G__23394__0.call(this);
case 1:
return G__23394__1.call(this,result);
case 2:
return G__23394__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23394.cljs$core$IFn$_invoke$arity$0 = G__23394__0;
G__23394.cljs$core$IFn$_invoke$arity$1 = G__23394__1;
G__23394.cljs$core$IFn$_invoke$arity$2 = G__23394__2;
return G__23394;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14215__auto___23395 = size;
var i_23396 = (0);
while(true){
if((i_23396 < n__14215__auto___23395)){
cljs.core.chunk_append(b,(function (){var G__23390 = (idx + i_23396);
var G__23391 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23396);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23390,G__23391) : f.call(null,G__23390,G__23391));
})());

var G__23397 = (i_23396 + (1));
i_23396 = G__23397;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23392 = idx;
var G__23393 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23392,G__23393) : f.call(null,G__23392,G__23393));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__23416 = null;
var G__23416__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23416__1 = (function (result){
var G__23410 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23410) : rf.call(null,G__23410));
});
var G__23416__2 = (function (result,input){
var v = (function (){var G__23411 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23411) : f.call(null,G__23411));
})();
if((v == null)){
return result;
} else {
var G__23412 = result;
var G__23413 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23412,G__23413) : rf.call(null,G__23412,G__23413));
}
});
G__23416 = function(result,input){
switch(arguments.length){
case 0:
return G__23416__0.call(this);
case 1:
return G__23416__1.call(this,result);
case 2:
return G__23416__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23416.cljs$core$IFn$_invoke$arity$0 = G__23416__0;
G__23416.cljs$core$IFn$_invoke$arity$1 = G__23416__1;
G__23416.cljs$core$IFn$_invoke$arity$2 = G__23416__2;
return G__23416;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14215__auto___23417 = size;
var i_23418 = (0);
while(true){
if((i_23418 < n__14215__auto___23417)){
var x_23419 = (function (){var G__23414 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23418);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23414) : f.call(null,G__23414));
})();
if((x_23419 == null)){
} else {
cljs.core.chunk_append(b,x_23419);
}

var G__23420 = (i_23418 + (1));
i_23418 = G__23420;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23415 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23415) : f.call(null,G__23415));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23421 = this$__$1;
return goog.getUid(G__23421);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__23422 = cljs.core.seq(self__.watches);
var chunk__23423 = null;
var count__23424 = (0);
var i__23425 = (0);
while(true){
if((i__23425 < count__23424)){
var vec__23426 = chunk__23423.cljs$core$IIndexed$_nth$arity$2(null,i__23425);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23426,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23426,(1),null);
var G__23427_23436 = key;
var G__23428_23437 = this$__$1;
var G__23429_23438 = oldval;
var G__23430_23439 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23427_23436,G__23428_23437,G__23429_23438,G__23430_23439) : f.call(null,G__23427_23436,G__23428_23437,G__23429_23438,G__23430_23439));

var G__23440 = seq__23422;
var G__23441 = chunk__23423;
var G__23442 = count__23424;
var G__23443 = (i__23425 + (1));
seq__23422 = G__23440;
chunk__23423 = G__23441;
count__23424 = G__23442;
i__23425 = G__23443;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23422);
if(temp__4126__auto__){
var seq__23422__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23422__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__23422__$1);
var G__23444 = cljs.core.chunk_rest(seq__23422__$1);
var G__23445 = c__14115__auto__;
var G__23446 = cljs.core.count(c__14115__auto__);
var G__23447 = (0);
seq__23422 = G__23444;
chunk__23423 = G__23445;
count__23424 = G__23446;
i__23425 = G__23447;
continue;
} else {
var vec__23431 = cljs.core.first(seq__23422__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23431,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23431,(1),null);
var G__23432_23448 = key;
var G__23433_23449 = this$__$1;
var G__23434_23450 = oldval;
var G__23435_23451 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23432_23448,G__23433_23449,G__23434_23450,G__23435_23451) : f.call(null,G__23432_23448,G__23433_23449,G__23434_23450,G__23435_23451));

var G__23452 = cljs.core.next(seq__23422__$1);
var G__23453 = null;
var G__23454 = (0);
var G__23455 = (0);
seq__23422 = G__23452;
chunk__23423 = G__23453;
count__23424 = G__23454;
i__23425 = G__23455;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__23459__delegate = function (x,p__23456){
var map__23458 = p__23456;
var map__23458__$1 = ((cljs.core.seq_QMARK_(map__23458))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23458):map__23458);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23458__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23458__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__23459 = function (x,var_args){
var p__23456 = null;
if (arguments.length > 1) {
var G__23460__i = 0, G__23460__a = new Array(arguments.length -  1);
while (G__23460__i < G__23460__a.length) {G__23460__a[G__23460__i] = arguments[G__23460__i + 1]; ++G__23460__i;}
  p__23456 = new cljs.core.IndexedSeq(G__23460__a,0);
} 
return G__23459__delegate.call(this,x,p__23456);};
G__23459.cljs$lang$maxFixedArity = 1;
G__23459.cljs$lang$applyTo = (function (arglist__23461){
var x = cljs.core.first(arglist__23461);
var p__23456 = cljs.core.rest(arglist__23461);
return G__23459__delegate(x,p__23456);
});
G__23459.cljs$core$IFn$_invoke$arity$variadic = G__23459__delegate;
return G__23459;
})()
;
atom = function(x,var_args){
var p__23456 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__23462 = null;
if (arguments.length > 1) {
var G__23463__i = 0, G__23463__a = new Array(arguments.length -  1);
while (G__23463__i < G__23463__a.length) {G__23463__a[G__23463__i] = arguments[G__23463__i + 1]; ++G__23463__i;}
G__23462 = new cljs.core.IndexedSeq(G__23463__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__23466 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__23466) : validate.call(null,G__23466));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__23467 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23467) : cljs.core.pr_str.call(null,G__23467));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23474 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23474) : f.call(null,G__23474));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23475 = a.state;
var G__23476 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23475,G__23476) : f.call(null,G__23475,G__23476));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23477 = a.state;
var G__23478 = x;
var G__23479 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23477,G__23478,G__23479) : f.call(null,G__23477,G__23478,G__23479));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__23480__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__23480 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__23481__i = 0, G__23481__a = new Array(arguments.length -  4);
while (G__23481__i < G__23481__a.length) {G__23481__a[G__23481__i] = arguments[G__23481__i + 4]; ++G__23481__i;}
  more = new cljs.core.IndexedSeq(G__23481__a,0);
} 
return G__23480__delegate.call(this,a,f,x,y,more);};
G__23480.cljs$lang$maxFixedArity = 4;
G__23480.cljs$lang$applyTo = (function (arglist__23482){
var a = cljs.core.first(arglist__23482);
arglist__23482 = cljs.core.next(arglist__23482);
var f = cljs.core.first(arglist__23482);
arglist__23482 = cljs.core.next(arglist__23482);
var x = cljs.core.first(arglist__23482);
arglist__23482 = cljs.core.next(arglist__23482);
var y = cljs.core.first(arglist__23482);
var more = cljs.core.rest(arglist__23482);
return G__23480__delegate(a,f,x,y,more);
});
G__23480.cljs$core$IFn$_invoke$arity$variadic = G__23480__delegate;
return G__23480;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__23483 = null;
if (arguments.length > 4) {
var G__23484__i = 0, G__23484__a = new Array(arguments.length -  4);
while (G__23484__i < G__23484__a.length) {G__23484__a[G__23484__i] = arguments[G__23484__i + 4]; ++G__23484__i;}
G__23483 = new cljs.core.IndexedSeq(G__23484__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__23483);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23551 = null;
var G__23551__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23551__1 = (function (result){
var G__23518 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23518) : rf.call(null,G__23518));
});
var G__23551__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__23519 = i;
var G__23520 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23519,G__23520) : f.call(null,G__23519,G__23520));
})();
if((v == null)){
return result;
} else {
var G__23521 = result;
var G__23522 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23521,G__23522) : rf.call(null,G__23521,G__23522));
}
});
G__23551 = function(result,input){
switch(arguments.length){
case 0:
return G__23551__0.call(this);
case 1:
return G__23551__1.call(this,result);
case 2:
return G__23551__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23551.cljs$core$IFn$_invoke$arity$0 = G__23551__0;
G__23551.cljs$core$IFn$_invoke$arity$1 = G__23551__1;
G__23551.cljs$core$IFn$_invoke$arity$2 = G__23551__2;
return G__23551;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14215__auto___23552 = size;
var i_23553 = (0);
while(true){
if((i_23553 < n__14215__auto___23552)){
var x_23554 = (function (){var G__23547 = (idx + i_23553);
var G__23548 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23553);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23547,G__23548) : f.call(null,G__23547,G__23548));
})();
if((x_23554 == null)){
} else {
cljs.core.chunk_append(b,x_23554);
}

var G__23555 = (i_23553 + (1));
i_23553 = G__23555;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23549 = idx;
var G__23550 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23549,G__23550) : f.call(null,G__23549,G__23550));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__23769 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23769) : p.call(null,G__23769));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23771 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23771) : p.call(null,G__23771));
})();
if(cljs.core.truth_(and__13316__auto__)){
var G__23772 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23772) : p.call(null,G__23772));
} else {
return and__13316__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23774 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23774) : p.call(null,G__23774));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23776 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23776) : p.call(null,G__23776));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var G__23777 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23777) : p.call(null,G__23777));
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__23946__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__23946 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23947__i = 0, G__23947__a = new Array(arguments.length -  3);
while (G__23947__i < G__23947__a.length) {G__23947__a[G__23947__i] = arguments[G__23947__i + 3]; ++G__23947__i;}
  args = new cljs.core.IndexedSeq(G__23947__a,0);
} 
return G__23946__delegate.call(this,x,y,z,args);};
G__23946.cljs$lang$maxFixedArity = 3;
G__23946.cljs$lang$applyTo = (function (arglist__23948){
var x = cljs.core.first(arglist__23948);
arglist__23948 = cljs.core.next(arglist__23948);
var y = cljs.core.first(arglist__23948);
arglist__23948 = cljs.core.next(arglist__23948);
var z = cljs.core.first(arglist__23948);
var args = cljs.core.rest(arglist__23948);
return G__23946__delegate(x,y,z,args);
});
G__23946.cljs$core$IFn$_invoke$arity$variadic = G__23946__delegate;
return G__23946;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__23949 = null;
if (arguments.length > 3) {
var G__23950__i = 0, G__23950__a = new Array(arguments.length -  3);
while (G__23950__i < G__23950__a.length) {G__23950__a[G__23950__i] = arguments[G__23950__i + 3]; ++G__23950__i;}
G__23949 = new cljs.core.IndexedSeq(G__23950__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23949);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23809 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23809) : p1.call(null,G__23809));
})();
if(cljs.core.truth_(and__13316__auto__)){
var G__23810 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23810) : p2.call(null,G__23810));
} else {
return and__13316__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23812 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23812) : p1.call(null,G__23812));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23814 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23814) : p1.call(null,G__23814));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var and__13316__auto____$2 = (function (){var G__23816 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23816) : p2.call(null,G__23816));
})();
if(cljs.core.truth_(and__13316__auto____$2)){
var G__23817 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23817) : p2.call(null,G__23817));
} else {
return and__13316__auto____$2;
}
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23819 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23819) : p1.call(null,G__23819));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23821 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23821) : p1.call(null,G__23821));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var and__13316__auto____$2 = (function (){var G__23823 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23823) : p1.call(null,G__23823));
})();
if(cljs.core.truth_(and__13316__auto____$2)){
var and__13316__auto____$3 = (function (){var G__23825 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23825) : p2.call(null,G__23825));
})();
if(cljs.core.truth_(and__13316__auto____$3)){
var and__13316__auto____$4 = (function (){var G__23827 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23827) : p2.call(null,G__23827));
})();
if(cljs.core.truth_(and__13316__auto____$4)){
var G__23828 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23828) : p2.call(null,G__23828));
} else {
return and__13316__auto____$4;
}
} else {
return and__13316__auto____$3;
}
} else {
return and__13316__auto____$2;
}
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__23951__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23556_SHARP_){
var and__13316__auto__ = (function (){var G__23833 = p1__23556_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23833) : p1.call(null,G__23833));
})();
if(cljs.core.truth_(and__13316__auto__)){
var G__23834 = p1__23556_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23834) : p2.call(null,G__23834));
} else {
return and__13316__auto__;
}
}),args)));
};
var G__23951 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23952__i = 0, G__23952__a = new Array(arguments.length -  3);
while (G__23952__i < G__23952__a.length) {G__23952__a[G__23952__i] = arguments[G__23952__i + 3]; ++G__23952__i;}
  args = new cljs.core.IndexedSeq(G__23952__a,0);
} 
return G__23951__delegate.call(this,x,y,z,args);};
G__23951.cljs$lang$maxFixedArity = 3;
G__23951.cljs$lang$applyTo = (function (arglist__23953){
var x = cljs.core.first(arglist__23953);
arglist__23953 = cljs.core.next(arglist__23953);
var y = cljs.core.first(arglist__23953);
arglist__23953 = cljs.core.next(arglist__23953);
var z = cljs.core.first(arglist__23953);
var args = cljs.core.rest(arglist__23953);
return G__23951__delegate(x,y,z,args);
});
G__23951.cljs$core$IFn$_invoke$arity$variadic = G__23951__delegate;
return G__23951;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__23954 = null;
if (arguments.length > 3) {
var G__23955__i = 0, G__23955__a = new Array(arguments.length -  3);
while (G__23955__i < G__23955__a.length) {G__23955__a[G__23955__i] = arguments[G__23955__i + 3]; ++G__23955__i;}
G__23954 = new cljs.core.IndexedSeq(G__23955__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23880 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23880) : p1.call(null,G__23880));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23882 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23882) : p2.call(null,G__23882));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var G__23883 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23883) : p3.call(null,G__23883));
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23885 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23885) : p1.call(null,G__23885));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23887 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23887) : p2.call(null,G__23887));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var and__13316__auto____$2 = (function (){var G__23889 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23889) : p3.call(null,G__23889));
})();
if(cljs.core.truth_(and__13316__auto____$2)){
var and__13316__auto____$3 = (function (){var G__23891 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23891) : p1.call(null,G__23891));
})();
if(cljs.core.truth_(and__13316__auto____$3)){
var and__13316__auto____$4 = (function (){var G__23893 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23893) : p2.call(null,G__23893));
})();
if(cljs.core.truth_(and__13316__auto____$4)){
var G__23894 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23894) : p3.call(null,G__23894));
} else {
return and__13316__auto____$4;
}
} else {
return and__13316__auto____$3;
}
} else {
return and__13316__auto____$2;
}
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13316__auto__ = (function (){var G__23896 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23896) : p1.call(null,G__23896));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23898 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23898) : p2.call(null,G__23898));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var and__13316__auto____$2 = (function (){var G__23900 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23900) : p3.call(null,G__23900));
})();
if(cljs.core.truth_(and__13316__auto____$2)){
var and__13316__auto____$3 = (function (){var G__23902 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23902) : p1.call(null,G__23902));
})();
if(cljs.core.truth_(and__13316__auto____$3)){
var and__13316__auto____$4 = (function (){var G__23904 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23904) : p2.call(null,G__23904));
})();
if(cljs.core.truth_(and__13316__auto____$4)){
var and__13316__auto____$5 = (function (){var G__23906 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23906) : p3.call(null,G__23906));
})();
if(cljs.core.truth_(and__13316__auto____$5)){
var and__13316__auto____$6 = (function (){var G__23908 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23908) : p1.call(null,G__23908));
})();
if(cljs.core.truth_(and__13316__auto____$6)){
var and__13316__auto____$7 = (function (){var G__23910 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23910) : p2.call(null,G__23910));
})();
if(cljs.core.truth_(and__13316__auto____$7)){
var G__23911 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23911) : p3.call(null,G__23911));
} else {
return and__13316__auto____$7;
}
} else {
return and__13316__auto____$6;
}
} else {
return and__13316__auto____$5;
}
} else {
return and__13316__auto____$4;
}
} else {
return and__13316__auto____$3;
}
} else {
return and__13316__auto____$2;
}
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__23956__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23557_SHARP_){
var and__13316__auto__ = (function (){var G__23918 = p1__23557_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23918) : p1.call(null,G__23918));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23920 = p1__23557_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23920) : p2.call(null,G__23920));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var G__23921 = p1__23557_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23921) : p3.call(null,G__23921));
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
}),args)));
};
var G__23956 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23957__i = 0, G__23957__a = new Array(arguments.length -  3);
while (G__23957__i < G__23957__a.length) {G__23957__a[G__23957__i] = arguments[G__23957__i + 3]; ++G__23957__i;}
  args = new cljs.core.IndexedSeq(G__23957__a,0);
} 
return G__23956__delegate.call(this,x,y,z,args);};
G__23956.cljs$lang$maxFixedArity = 3;
G__23956.cljs$lang$applyTo = (function (arglist__23958){
var x = cljs.core.first(arglist__23958);
arglist__23958 = cljs.core.next(arglist__23958);
var y = cljs.core.first(arglist__23958);
arglist__23958 = cljs.core.next(arglist__23958);
var z = cljs.core.first(arglist__23958);
var args = cljs.core.rest(arglist__23958);
return G__23956__delegate(x,y,z,args);
});
G__23956.cljs$core$IFn$_invoke$arity$variadic = G__23956__delegate;
return G__23956;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__23959 = null;
if (arguments.length > 3) {
var G__23960__i = 0, G__23960__a = new Array(arguments.length -  3);
while (G__23960__i < G__23960__a.length) {G__23960__a[G__23960__i] = arguments[G__23960__i + 3]; ++G__23960__i;}
G__23959 = new cljs.core.IndexedSeq(G__23960__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__23961__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23558_SHARP_){
var G__23937 = x;
return (p1__23558_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23558_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23937) : p1__23558_SHARP_.call(null,G__23937));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23559_SHARP_){
var and__13316__auto__ = (function (){var G__23939 = x;
return (p1__23559_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23559_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23939) : p1__23559_SHARP_.call(null,G__23939));
})();
if(cljs.core.truth_(and__13316__auto__)){
var G__23940 = y;
return (p1__23559_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23559_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23940) : p1__23559_SHARP_.call(null,G__23940));
} else {
return and__13316__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23560_SHARP_){
var and__13316__auto__ = (function (){var G__23942 = x;
return (p1__23560_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23560_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23942) : p1__23560_SHARP_.call(null,G__23942));
})();
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__23944 = y;
return (p1__23560_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23560_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23944) : p1__23560_SHARP_.call(null,G__23944));
})();
if(cljs.core.truth_(and__13316__auto____$1)){
var G__23945 = z;
return (p1__23560_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23560_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23945) : p1__23560_SHARP_.call(null,G__23945));
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__23962__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23561_SHARP_){
return cljs.core.every_QMARK_(p1__23561_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__23962 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23963__i = 0, G__23963__a = new Array(arguments.length -  3);
while (G__23963__i < G__23963__a.length) {G__23963__a[G__23963__i] = arguments[G__23963__i + 3]; ++G__23963__i;}
  args = new cljs.core.IndexedSeq(G__23963__a,0);
} 
return G__23962__delegate.call(this,x,y,z,args);};
G__23962.cljs$lang$maxFixedArity = 3;
G__23962.cljs$lang$applyTo = (function (arglist__23964){
var x = cljs.core.first(arglist__23964);
arglist__23964 = cljs.core.next(arglist__23964);
var y = cljs.core.first(arglist__23964);
arglist__23964 = cljs.core.next(arglist__23964);
var z = cljs.core.first(arglist__23964);
var args = cljs.core.rest(arglist__23964);
return G__23962__delegate(x,y,z,args);
});
G__23962.cljs$core$IFn$_invoke$arity$variadic = G__23962__delegate;
return G__23962;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__23965 = null;
if (arguments.length > 3) {
var G__23966__i = 0, G__23966__a = new Array(arguments.length -  3);
while (G__23966__i < G__23966__a.length) {G__23966__a[G__23966__i] = arguments[G__23966__i + 3]; ++G__23966__i;}
G__23965 = new cljs.core.IndexedSeq(G__23966__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23965);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__23961 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23967__i = 0, G__23967__a = new Array(arguments.length -  3);
while (G__23967__i < G__23967__a.length) {G__23967__a[G__23967__i] = arguments[G__23967__i + 3]; ++G__23967__i;}
  ps = new cljs.core.IndexedSeq(G__23967__a,0);
} 
return G__23961__delegate.call(this,p1,p2,p3,ps);};
G__23961.cljs$lang$maxFixedArity = 3;
G__23961.cljs$lang$applyTo = (function (arglist__23968){
var p1 = cljs.core.first(arglist__23968);
arglist__23968 = cljs.core.next(arglist__23968);
var p2 = cljs.core.first(arglist__23968);
arglist__23968 = cljs.core.next(arglist__23968);
var p3 = cljs.core.first(arglist__23968);
var ps = cljs.core.rest(arglist__23968);
return G__23961__delegate(p1,p2,p3,ps);
});
G__23961.cljs$core$IFn$_invoke$arity$variadic = G__23961__delegate;
return G__23961;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__23969 = null;
if (arguments.length > 3) {
var G__23970__i = 0, G__23970__a = new Array(arguments.length -  3);
while (G__23970__i < G__23970__a.length) {G__23970__a[G__23970__i] = arguments[G__23970__i + 3]; ++G__23970__i;}
G__23969 = new cljs.core.IndexedSeq(G__23970__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23969);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__24176 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24176) : p.call(null,G__24176));
});
var sp1__2 = (function (x,y){
var or__13328__auto__ = (function (){var G__24178 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24178) : p.call(null,G__24178));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var G__24179 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24179) : p.call(null,G__24179));
}
});
var sp1__3 = (function (x,y,z){
var or__13328__auto__ = (function (){var G__24181 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24181) : p.call(null,G__24181));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var G__24183 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24183) : p.call(null,G__24183));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var G__24184 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24184) : p.call(null,G__24184));
}
}
});
var sp1__4 = (function() { 
var G__24345__delegate = function (x,y,z,args){
var or__13328__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__24345 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24346__i = 0, G__24346__a = new Array(arguments.length -  3);
while (G__24346__i < G__24346__a.length) {G__24346__a[G__24346__i] = arguments[G__24346__i + 3]; ++G__24346__i;}
  args = new cljs.core.IndexedSeq(G__24346__a,0);
} 
return G__24345__delegate.call(this,x,y,z,args);};
G__24345.cljs$lang$maxFixedArity = 3;
G__24345.cljs$lang$applyTo = (function (arglist__24347){
var x = cljs.core.first(arglist__24347);
arglist__24347 = cljs.core.next(arglist__24347);
var y = cljs.core.first(arglist__24347);
arglist__24347 = cljs.core.next(arglist__24347);
var z = cljs.core.first(arglist__24347);
var args = cljs.core.rest(arglist__24347);
return G__24345__delegate(x,y,z,args);
});
G__24345.cljs$core$IFn$_invoke$arity$variadic = G__24345__delegate;
return G__24345;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__24348 = null;
if (arguments.length > 3) {
var G__24349__i = 0, G__24349__a = new Array(arguments.length -  3);
while (G__24349__i < G__24349__a.length) {G__24349__a[G__24349__i] = arguments[G__24349__i + 3]; ++G__24349__i;}
G__24348 = new cljs.core.IndexedSeq(G__24349__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__13328__auto__ = (function (){var G__24216 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24216) : p1.call(null,G__24216));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var G__24217 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24217) : p2.call(null,G__24217));
}
});
var sp2__2 = (function (x,y){
var or__13328__auto__ = (function (){var G__24219 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24219) : p1.call(null,G__24219));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var G__24221 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24221) : p1.call(null,G__24221));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var or__13328__auto____$2 = (function (){var G__24223 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24223) : p2.call(null,G__24223));
})();
if(cljs.core.truth_(or__13328__auto____$2)){
return or__13328__auto____$2;
} else {
var G__24224 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24224) : p2.call(null,G__24224));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__13328__auto__ = (function (){var G__24226 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24226) : p1.call(null,G__24226));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var G__24228 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24228) : p1.call(null,G__24228));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var or__13328__auto____$2 = (function (){var G__24230 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24230) : p1.call(null,G__24230));
})();
if(cljs.core.truth_(or__13328__auto____$2)){
return or__13328__auto____$2;
} else {
var or__13328__auto____$3 = (function (){var G__24232 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24232) : p2.call(null,G__24232));
})();
if(cljs.core.truth_(or__13328__auto____$3)){
return or__13328__auto____$3;
} else {
var or__13328__auto____$4 = (function (){var G__24234 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24234) : p2.call(null,G__24234));
})();
if(cljs.core.truth_(or__13328__auto____$4)){
return or__13328__auto____$4;
} else {
var G__24235 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24235) : p2.call(null,G__24235));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__24350__delegate = function (x,y,z,args){
var or__13328__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.some(((function (or__13328__auto__){
return (function (p1__23971_SHARP_){
var or__13328__auto____$1 = (function (){var G__24237 = p1__23971_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24237) : p1.call(null,G__24237));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var G__24238 = p1__23971_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24238) : p2.call(null,G__24238));
}
});})(or__13328__auto__))
,args);
}
};
var G__24350 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24351__i = 0, G__24351__a = new Array(arguments.length -  3);
while (G__24351__i < G__24351__a.length) {G__24351__a[G__24351__i] = arguments[G__24351__i + 3]; ++G__24351__i;}
  args = new cljs.core.IndexedSeq(G__24351__a,0);
} 
return G__24350__delegate.call(this,x,y,z,args);};
G__24350.cljs$lang$maxFixedArity = 3;
G__24350.cljs$lang$applyTo = (function (arglist__24352){
var x = cljs.core.first(arglist__24352);
arglist__24352 = cljs.core.next(arglist__24352);
var y = cljs.core.first(arglist__24352);
arglist__24352 = cljs.core.next(arglist__24352);
var z = cljs.core.first(arglist__24352);
var args = cljs.core.rest(arglist__24352);
return G__24350__delegate(x,y,z,args);
});
G__24350.cljs$core$IFn$_invoke$arity$variadic = G__24350__delegate;
return G__24350;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__24353 = null;
if (arguments.length > 3) {
var G__24354__i = 0, G__24354__a = new Array(arguments.length -  3);
while (G__24354__i < G__24354__a.length) {G__24354__a[G__24354__i] = arguments[G__24354__i + 3]; ++G__24354__i;}
G__24353 = new cljs.core.IndexedSeq(G__24354__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__13328__auto__ = (function (){var G__24284 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24284) : p1.call(null,G__24284));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var G__24286 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24286) : p2.call(null,G__24286));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var G__24287 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24287) : p3.call(null,G__24287));
}
}
});
var sp3__2 = (function (x,y){
var or__13328__auto__ = (function (){var G__24289 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24289) : p1.call(null,G__24289));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var G__24291 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24291) : p2.call(null,G__24291));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var or__13328__auto____$2 = (function (){var G__24293 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24293) : p3.call(null,G__24293));
})();
if(cljs.core.truth_(or__13328__auto____$2)){
return or__13328__auto____$2;
} else {
var or__13328__auto____$3 = (function (){var G__24295 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24295) : p1.call(null,G__24295));
})();
if(cljs.core.truth_(or__13328__auto____$3)){
return or__13328__auto____$3;
} else {
var or__13328__auto____$4 = (function (){var G__24297 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24297) : p2.call(null,G__24297));
})();
if(cljs.core.truth_(or__13328__auto____$4)){
return or__13328__auto____$4;
} else {
var G__24298 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24298) : p3.call(null,G__24298));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__13328__auto__ = (function (){var G__24300 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24300) : p1.call(null,G__24300));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var G__24302 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24302) : p2.call(null,G__24302));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var or__13328__auto____$2 = (function (){var G__24304 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24304) : p3.call(null,G__24304));
})();
if(cljs.core.truth_(or__13328__auto____$2)){
return or__13328__auto____$2;
} else {
var or__13328__auto____$3 = (function (){var G__24306 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24306) : p1.call(null,G__24306));
})();
if(cljs.core.truth_(or__13328__auto____$3)){
return or__13328__auto____$3;
} else {
var or__13328__auto____$4 = (function (){var G__24308 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24308) : p2.call(null,G__24308));
})();
if(cljs.core.truth_(or__13328__auto____$4)){
return or__13328__auto____$4;
} else {
var or__13328__auto____$5 = (function (){var G__24310 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24310) : p3.call(null,G__24310));
})();
if(cljs.core.truth_(or__13328__auto____$5)){
return or__13328__auto____$5;
} else {
var or__13328__auto____$6 = (function (){var G__24312 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24312) : p1.call(null,G__24312));
})();
if(cljs.core.truth_(or__13328__auto____$6)){
return or__13328__auto____$6;
} else {
var or__13328__auto____$7 = (function (){var G__24314 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24314) : p2.call(null,G__24314));
})();
if(cljs.core.truth_(or__13328__auto____$7)){
return or__13328__auto____$7;
} else {
var G__24315 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24315) : p3.call(null,G__24315));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__24355__delegate = function (x,y,z,args){
var or__13328__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.some(((function (or__13328__auto__){
return (function (p1__23972_SHARP_){
var or__13328__auto____$1 = (function (){var G__24317 = p1__23972_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24317) : p1.call(null,G__24317));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var or__13328__auto____$2 = (function (){var G__24319 = p1__23972_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24319) : p2.call(null,G__24319));
})();
if(cljs.core.truth_(or__13328__auto____$2)){
return or__13328__auto____$2;
} else {
var G__24320 = p1__23972_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24320) : p3.call(null,G__24320));
}
}
});})(or__13328__auto__))
,args);
}
};
var G__24355 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24356__i = 0, G__24356__a = new Array(arguments.length -  3);
while (G__24356__i < G__24356__a.length) {G__24356__a[G__24356__i] = arguments[G__24356__i + 3]; ++G__24356__i;}
  args = new cljs.core.IndexedSeq(G__24356__a,0);
} 
return G__24355__delegate.call(this,x,y,z,args);};
G__24355.cljs$lang$maxFixedArity = 3;
G__24355.cljs$lang$applyTo = (function (arglist__24357){
var x = cljs.core.first(arglist__24357);
arglist__24357 = cljs.core.next(arglist__24357);
var y = cljs.core.first(arglist__24357);
arglist__24357 = cljs.core.next(arglist__24357);
var z = cljs.core.first(arglist__24357);
var args = cljs.core.rest(arglist__24357);
return G__24355__delegate(x,y,z,args);
});
G__24355.cljs$core$IFn$_invoke$arity$variadic = G__24355__delegate;
return G__24355;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__24358 = null;
if (arguments.length > 3) {
var G__24359__i = 0, G__24359__a = new Array(arguments.length -  3);
while (G__24359__i < G__24359__a.length) {G__24359__a[G__24359__i] = arguments[G__24359__i + 3]; ++G__24359__i;}
G__24358 = new cljs.core.IndexedSeq(G__24359__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__24360__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__23973_SHARP_){
var G__24336 = x;
return (p1__23973_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23973_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24336) : p1__23973_SHARP_.call(null,G__24336));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__23974_SHARP_){
var or__13328__auto__ = (function (){var G__24338 = x;
return (p1__23974_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23974_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24338) : p1__23974_SHARP_.call(null,G__24338));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var G__24339 = y;
return (p1__23974_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23974_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24339) : p1__23974_SHARP_.call(null,G__24339));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__23975_SHARP_){
var or__13328__auto__ = (function (){var G__24341 = x;
return (p1__23975_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23975_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24341) : p1__23975_SHARP_.call(null,G__24341));
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var G__24343 = y;
return (p1__23975_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23975_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24343) : p1__23975_SHARP_.call(null,G__24343));
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var G__24344 = z;
return (p1__23975_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23975_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24344) : p1__23975_SHARP_.call(null,G__24344));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__24361__delegate = function (x,y,z,args){
var or__13328__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.some(((function (or__13328__auto__,ps__$1){
return (function (p1__23976_SHARP_){
return cljs.core.some(p1__23976_SHARP_,args);
});})(or__13328__auto__,ps__$1))
,ps__$1);
}
};
var G__24361 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24362__i = 0, G__24362__a = new Array(arguments.length -  3);
while (G__24362__i < G__24362__a.length) {G__24362__a[G__24362__i] = arguments[G__24362__i + 3]; ++G__24362__i;}
  args = new cljs.core.IndexedSeq(G__24362__a,0);
} 
return G__24361__delegate.call(this,x,y,z,args);};
G__24361.cljs$lang$maxFixedArity = 3;
G__24361.cljs$lang$applyTo = (function (arglist__24363){
var x = cljs.core.first(arglist__24363);
arglist__24363 = cljs.core.next(arglist__24363);
var y = cljs.core.first(arglist__24363);
arglist__24363 = cljs.core.next(arglist__24363);
var z = cljs.core.first(arglist__24363);
var args = cljs.core.rest(arglist__24363);
return G__24361__delegate(x,y,z,args);
});
G__24361.cljs$core$IFn$_invoke$arity$variadic = G__24361__delegate;
return G__24361;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__24364 = null;
if (arguments.length > 3) {
var G__24365__i = 0, G__24365__a = new Array(arguments.length -  3);
while (G__24365__i < G__24365__a.length) {G__24365__a[G__24365__i] = arguments[G__24365__i + 3]; ++G__24365__i;}
G__24364 = new cljs.core.IndexedSeq(G__24365__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__24360 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__24366__i = 0, G__24366__a = new Array(arguments.length -  3);
while (G__24366__i < G__24366__a.length) {G__24366__a[G__24366__i] = arguments[G__24366__i + 3]; ++G__24366__i;}
  ps = new cljs.core.IndexedSeq(G__24366__a,0);
} 
return G__24360__delegate.call(this,p1,p2,p3,ps);};
G__24360.cljs$lang$maxFixedArity = 3;
G__24360.cljs$lang$applyTo = (function (arglist__24367){
var p1 = cljs.core.first(arglist__24367);
arglist__24367 = cljs.core.next(arglist__24367);
var p2 = cljs.core.first(arglist__24367);
arglist__24367 = cljs.core.next(arglist__24367);
var p3 = cljs.core.first(arglist__24367);
var ps = cljs.core.rest(arglist__24367);
return G__24360__delegate(p1,p2,p3,ps);
});
G__24360.cljs$core$IFn$_invoke$arity$variadic = G__24360__delegate;
return G__24360;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__24368 = null;
if (arguments.length > 3) {
var G__24369__i = 0, G__24369__a = new Array(arguments.length -  3);
while (G__24369__i < G__24369__a.length) {G__24369__a[G__24369__i] = arguments[G__24369__i + 3]; ++G__24369__i;}
G__24368 = new cljs.core.IndexedSeq(G__24369__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__24368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__24424 = null;
var G__24424__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24424__1 = (function (result){
var G__24410 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24410) : rf.call(null,G__24410));
});
var G__24424__2 = (function (result,input){
var G__24411 = result;
var G__24412 = (function (){var G__24413 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24413) : f.call(null,G__24413));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24411,G__24412) : rf.call(null,G__24411,G__24412));
});
var G__24424__3 = (function() { 
var G__24425__delegate = function (result,input,inputs){
var G__24414 = result;
var G__24415 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24414,G__24415) : rf.call(null,G__24414,G__24415));
};
var G__24425 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__24426__i = 0, G__24426__a = new Array(arguments.length -  2);
while (G__24426__i < G__24426__a.length) {G__24426__a[G__24426__i] = arguments[G__24426__i + 2]; ++G__24426__i;}
  inputs = new cljs.core.IndexedSeq(G__24426__a,0);
} 
return G__24425__delegate.call(this,result,input,inputs);};
G__24425.cljs$lang$maxFixedArity = 2;
G__24425.cljs$lang$applyTo = (function (arglist__24427){
var result = cljs.core.first(arglist__24427);
arglist__24427 = cljs.core.next(arglist__24427);
var input = cljs.core.first(arglist__24427);
var inputs = cljs.core.rest(arglist__24427);
return G__24425__delegate(result,input,inputs);
});
G__24425.cljs$core$IFn$_invoke$arity$variadic = G__24425__delegate;
return G__24425;
})()
;
G__24424 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__24424__0.call(this);
case 1:
return G__24424__1.call(this,result);
case 2:
return G__24424__2.call(this,result,input);
default:
var G__24428 = null;
if (arguments.length > 2) {
var G__24429__i = 0, G__24429__a = new Array(arguments.length -  2);
while (G__24429__i < G__24429__a.length) {G__24429__a[G__24429__i] = arguments[G__24429__i + 2]; ++G__24429__i;}
G__24428 = new cljs.core.IndexedSeq(G__24429__a,0);
}
return G__24424__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__24428);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24424.cljs$lang$maxFixedArity = 2;
G__24424.cljs$lang$applyTo = G__24424__3.cljs$lang$applyTo;
G__24424.cljs$core$IFn$_invoke$arity$0 = G__24424__0;
G__24424.cljs$core$IFn$_invoke$arity$1 = G__24424__1;
G__24424.cljs$core$IFn$_invoke$arity$2 = G__24424__2;
G__24424.cljs$core$IFn$_invoke$arity$variadic = G__24424__3.cljs$core$IFn$_invoke$arity$variadic;
return G__24424;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14215__auto___24430 = size;
var i_24431 = (0);
while(true){
if((i_24431 < n__14215__auto___24430)){
cljs.core.chunk_append(b,(function (){var G__24416 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24431);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24416) : f.call(null,G__24416));
})());

var G__24432 = (i_24431 + (1));
i_24431 = G__24432;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__24417 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24417) : f.call(null,G__24417));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__24418 = cljs.core.first(s1);
var G__24419 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24418,G__24419) : f.call(null,G__24418,G__24419));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__24420 = cljs.core.first(s1);
var G__24421 = cljs.core.first(s2);
var G__24422 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24420,G__24421,G__24422) : f.call(null,G__24420,G__24421,G__24422));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__24433__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__24370_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__24370_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__24433 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24434__i = 0, G__24434__a = new Array(arguments.length -  4);
while (G__24434__i < G__24434__a.length) {G__24434__a[G__24434__i] = arguments[G__24434__i + 4]; ++G__24434__i;}
  colls = new cljs.core.IndexedSeq(G__24434__a,0);
} 
return G__24433__delegate.call(this,f,c1,c2,c3,colls);};
G__24433.cljs$lang$maxFixedArity = 4;
G__24433.cljs$lang$applyTo = (function (arglist__24435){
var f = cljs.core.first(arglist__24435);
arglist__24435 = cljs.core.next(arglist__24435);
var c1 = cljs.core.first(arglist__24435);
arglist__24435 = cljs.core.next(arglist__24435);
var c2 = cljs.core.first(arglist__24435);
arglist__24435 = cljs.core.next(arglist__24435);
var c3 = cljs.core.first(arglist__24435);
var colls = cljs.core.rest(arglist__24435);
return G__24433__delegate(f,c1,c2,c3,colls);
});
G__24433.cljs$core$IFn$_invoke$arity$variadic = G__24433__delegate;
return G__24433;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__24436 = null;
if (arguments.length > 4) {
var G__24437__i = 0, G__24437__a = new Array(arguments.length -  4);
while (G__24437__i < G__24437__a.length) {G__24437__a[G__24437__i] = arguments[G__24437__i + 4]; ++G__24437__i;}
G__24436 = new cljs.core.IndexedSeq(G__24437__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24446 = null;
var G__24446__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24446__1 = (function (result){
var G__24443 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24443) : rf.call(null,G__24443));
});
var G__24446__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__24444 = result;
var G__24445 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24444,G__24445) : rf.call(null,G__24444,G__24445));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__24446 = function(result,input){
switch(arguments.length){
case 0:
return G__24446__0.call(this);
case 1:
return G__24446__1.call(this,result);
case 2:
return G__24446__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24446.cljs$core$IFn$_invoke$arity$0 = G__24446__0;
G__24446.cljs$core$IFn$_invoke$arity$1 = G__24446__1;
G__24446.cljs$core$IFn$_invoke$arity$2 = G__24446__2;
return G__24446;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24453 = null;
var G__24453__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24453__1 = (function (result){
var G__24450 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24450) : rf.call(null,G__24450));
});
var G__24453__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__24451 = result;
var G__24452 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24451,G__24452) : rf.call(null,G__24451,G__24452));
}
});
G__24453 = function(result,input){
switch(arguments.length){
case 0:
return G__24453__0.call(this);
case 1:
return G__24453__1.call(this,result);
case 2:
return G__24453__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24453.cljs$core$IFn$_invoke$arity$0 = G__24453__0;
G__24453.cljs$core$IFn$_invoke$arity$1 = G__24453__1;
G__24453.cljs$core$IFn$_invoke$arity$2 = G__24453__2;
return G__24453;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__24454 = (n__$1 - (1));
var G__24455 = cljs.core.rest(s);
n__$1 = G__24454;
coll__$1 = G__24455;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__24458 = cljs.core.next(s);
var G__24459 = cljs.core.next(lead);
s = G__24458;
lead = G__24459;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__24472 = null;
var G__24472__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24472__1 = (function (result){
var G__24466 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24466) : rf.call(null,G__24466));
});
var G__24472__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__13316__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__13316__auto__)){
var G__24467 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24467) : pred.call(null,G__24467));
} else {
return and__13316__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__24468 = result;
var G__24469 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24468,G__24469) : rf.call(null,G__24468,G__24469));
}
});
G__24472 = function(result,input){
switch(arguments.length){
case 0:
return G__24472__0.call(this);
case 1:
return G__24472__1.call(this,result);
case 2:
return G__24472__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24472.cljs$core$IFn$_invoke$arity$0 = G__24472__0;
G__24472.cljs$core$IFn$_invoke$arity$1 = G__24472__1;
G__24472.cljs$core$IFn$_invoke$arity$2 = G__24472__2;
return G__24472;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__13316__auto__ = s;
if(and__13316__auto__){
var G__24471 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__24471) : pred__$1.call(null,G__24471));
} else {
return and__13316__auto__;
}
})())){
var G__24473 = pred__$1;
var G__24474 = cljs.core.rest(s);
pred__$1 = G__24473;
coll__$1 = G__24474;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__24483 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24483) : f.call(null,G__24483));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__24486__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__24486 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__24487__i = 0, G__24487__a = new Array(arguments.length -  2);
while (G__24487__i < G__24487__a.length) {G__24487__a[G__24487__i] = arguments[G__24487__i + 2]; ++G__24487__i;}
  colls = new cljs.core.IndexedSeq(G__24487__a,0);
} 
return G__24486__delegate.call(this,c1,c2,colls);};
G__24486.cljs$lang$maxFixedArity = 2;
G__24486.cljs$lang$applyTo = (function (arglist__24488){
var c1 = cljs.core.first(arglist__24488);
arglist__24488 = cljs.core.next(arglist__24488);
var c2 = cljs.core.first(arglist__24488);
var colls = cljs.core.rest(arglist__24488);
return G__24486__delegate(c1,c2,colls);
});
G__24486.cljs$core$IFn$_invoke$arity$variadic = G__24486__delegate;
return G__24486;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__24489 = null;
if (arguments.length > 2) {
var G__24490__i = 0, G__24490__a = new Array(arguments.length -  2);
while (G__24490__i < G__24490__a.length) {G__24490__a[G__24490__i] = arguments[G__24490__i + 2]; ++G__24490__i;}
G__24489 = new cljs.core.IndexedSeq(G__24490__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__24489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__24505 = null;
var G__24505__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24505__1 = (function (result){
var G__24498 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24498) : rf.call(null,G__24498));
});
var G__24505__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__24499 = result;
var G__24500 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24499,G__24500) : rf.call(null,G__24499,G__24500));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__24501 = sepr;
var G__24502 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24501,G__24502) : rf.call(null,G__24501,G__24502));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__24503 = result;
var G__24504 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24503,G__24504) : rf.call(null,G__24503,G__24504));
}
});
G__24505 = function(result,input){
switch(arguments.length){
case 0:
return G__24505__0.call(this);
case 1:
return G__24505__1.call(this,result);
case 2:
return G__24505__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24505.cljs$core$IFn$_invoke$arity$0 = G__24505__0;
G__24505.cljs$core$IFn$_invoke$arity$1 = G__24505__1;
G__24505.cljs$core$IFn$_invoke$arity$2 = G__24505__2;
return G__24505;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__24514__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__24514 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__24515__i = 0, G__24515__a = new Array(arguments.length -  1);
while (G__24515__i < G__24515__a.length) {G__24515__a[G__24515__i] = arguments[G__24515__i + 1]; ++G__24515__i;}
  colls = new cljs.core.IndexedSeq(G__24515__a,0);
} 
return G__24514__delegate.call(this,f,colls);};
G__24514.cljs$lang$maxFixedArity = 1;
G__24514.cljs$lang$applyTo = (function (arglist__24516){
var f = cljs.core.first(arglist__24516);
var colls = cljs.core.rest(arglist__24516);
return G__24514__delegate(f,colls);
});
G__24514.cljs$core$IFn$_invoke$arity$variadic = G__24514__delegate;
return G__24514;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__24517 = null;
if (arguments.length > 1) {
var G__24518__i = 0, G__24518__a = new Array(arguments.length -  1);
while (G__24518__i < G__24518__a.length) {G__24518__a[G__24518__i] = arguments[G__24518__i + 1]; ++G__24518__i;}
G__24517 = new cljs.core.IndexedSeq(G__24518__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__24517);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__24537 = null;
var G__24537__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24537__1 = (function (result){
var G__24531 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24531) : rf.call(null,G__24531));
});
var G__24537__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24532 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24532) : pred.call(null,G__24532));
})())){
var G__24533 = result;
var G__24534 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24533,G__24534) : rf.call(null,G__24533,G__24534));
} else {
return result;
}
});
G__24537 = function(result,input){
switch(arguments.length){
case 0:
return G__24537__0.call(this);
case 1:
return G__24537__1.call(this,result);
case 2:
return G__24537__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24537.cljs$core$IFn$_invoke$arity$0 = G__24537__0;
G__24537.cljs$core$IFn$_invoke$arity$1 = G__24537__1;
G__24537.cljs$core$IFn$_invoke$arity$2 = G__24537__2;
return G__24537;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14215__auto___24538 = size;
var i_24539 = (0);
while(true){
if((i_24539 < n__14215__auto___24538)){
if(cljs.core.truth_((function (){var G__24535 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24539);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24535) : pred.call(null,G__24535));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24539));
} else {
}

var G__24540 = (i_24539 + (1));
i_24539 = G__24540;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__24536 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24536) : pred.call(null,G__24536));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__24547 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__24547) : branch_QMARK_.call(null,G__24547));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__24548 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__24548) : children.call(null,G__24548));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__24549_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__24549_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__24552 = to;
if(G__24552){
var bit__14002__auto__ = (G__24552.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__14002__auto__) || (G__24552.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__24553 = to;
if(G__24553){
var bit__14002__auto__ = (G__24553.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__14002__auto__) || (G__24553.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__24555 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24555) : f.call(null,G__24555));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__24556__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__24556 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24557__i = 0, G__24557__a = new Array(arguments.length -  4);
while (G__24557__i < G__24557__a.length) {G__24557__a[G__24557__i] = arguments[G__24557__i + 4]; ++G__24557__i;}
  colls = new cljs.core.IndexedSeq(G__24557__a,0);
} 
return G__24556__delegate.call(this,f,c1,c2,c3,colls);};
G__24556.cljs$lang$maxFixedArity = 4;
G__24556.cljs$lang$applyTo = (function (arglist__24558){
var f = cljs.core.first(arglist__24558);
arglist__24558 = cljs.core.next(arglist__24558);
var c1 = cljs.core.first(arglist__24558);
arglist__24558 = cljs.core.next(arglist__24558);
var c2 = cljs.core.first(arglist__24558);
arglist__24558 = cljs.core.next(arglist__24558);
var c3 = cljs.core.first(arglist__24558);
var colls = cljs.core.rest(arglist__24558);
return G__24556__delegate(f,c1,c2,c3,colls);
});
G__24556.cljs$core$IFn$_invoke$arity$variadic = G__24556__delegate;
return G__24556;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__24559 = null;
if (arguments.length > 4) {
var G__24560__i = 0, G__24560__a = new Array(arguments.length -  4);
while (G__24560__i < G__24560__a.length) {G__24560__a[G__24560__i] = arguments[G__24560__i + 4]; ++G__24560__i;}
G__24559 = new cljs.core.IndexedSeq(G__24560__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24559);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__24562 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24562) : pred.call(null,G__24562));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__24577 = m__$1;
if(G__24577){
var bit__14009__auto__ = (G__24577.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14009__auto__) || (G__24577.cljs$core$ILookup$)){
return true;
} else {
if((!G__24577.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24577);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24577);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__24578 = sentinel;
var G__24579 = m__$2;
var G__24580 = cljs.core.next(ks__$1);
sentinel = G__24578;
m__$1 = G__24579;
ks__$1 = G__24580;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__24581,v){
var vec__24586 = p__24581;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24586,(0),null);
var ks = cljs.core.nthnext(vec__24586,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__24587,f){
var vec__24625 = p__24587;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24625,(0),null);
var ks = cljs.core.nthnext(vec__24625,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24626 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24626) : f.call(null,G__24626));
})());
}
});
var update_in__4 = (function (m,p__24588,f,a){
var vec__24627 = p__24588;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24627,(0),null);
var ks = cljs.core.nthnext(vec__24627,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24628 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24629 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24628,G__24629) : f.call(null,G__24628,G__24629));
})());
}
});
var update_in__5 = (function (m,p__24589,f,a,b){
var vec__24630 = p__24589;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24630,(0),null);
var ks = cljs.core.nthnext(vec__24630,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24631 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24632 = a;
var G__24633 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24631,G__24632,G__24633) : f.call(null,G__24631,G__24632,G__24633));
})());
}
});
var update_in__6 = (function (m,p__24590,f,a,b,c){
var vec__24634 = p__24590;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24634,(0),null);
var ks = cljs.core.nthnext(vec__24634,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24635 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24636 = a;
var G__24637 = b;
var G__24638 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24635,G__24636,G__24637,G__24638) : f.call(null,G__24635,G__24636,G__24637,G__24638));
})());
}
});
var update_in__7 = (function() { 
var G__24640__delegate = function (m,p__24591,f,a,b,c,args){
var vec__24639 = p__24591;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24639,(0),null);
var ks = cljs.core.nthnext(vec__24639,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__24640 = function (m,p__24591,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__24641__i = 0, G__24641__a = new Array(arguments.length -  6);
while (G__24641__i < G__24641__a.length) {G__24641__a[G__24641__i] = arguments[G__24641__i + 6]; ++G__24641__i;}
  args = new cljs.core.IndexedSeq(G__24641__a,0);
} 
return G__24640__delegate.call(this,m,p__24591,f,a,b,c,args);};
G__24640.cljs$lang$maxFixedArity = 6;
G__24640.cljs$lang$applyTo = (function (arglist__24642){
var m = cljs.core.first(arglist__24642);
arglist__24642 = cljs.core.next(arglist__24642);
var p__24591 = cljs.core.first(arglist__24642);
arglist__24642 = cljs.core.next(arglist__24642);
var f = cljs.core.first(arglist__24642);
arglist__24642 = cljs.core.next(arglist__24642);
var a = cljs.core.first(arglist__24642);
arglist__24642 = cljs.core.next(arglist__24642);
var b = cljs.core.first(arglist__24642);
arglist__24642 = cljs.core.next(arglist__24642);
var c = cljs.core.first(arglist__24642);
var args = cljs.core.rest(arglist__24642);
return G__24640__delegate(m,p__24591,f,a,b,c,args);
});
G__24640.cljs$core$IFn$_invoke$arity$variadic = G__24640__delegate;
return G__24640;
})()
;
update_in = function(m,p__24591,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__24591,f);
case 4:
return update_in__4.call(this,m,p__24591,f,a);
case 5:
return update_in__5.call(this,m,p__24591,f,a,b);
case 6:
return update_in__6.call(this,m,p__24591,f,a,b,c);
default:
var G__24643 = null;
if (arguments.length > 6) {
var G__24644__i = 0, G__24644__a = new Array(arguments.length -  6);
while (G__24644__i < G__24644__a.length) {G__24644__a[G__24644__i] = arguments[G__24644__i + 6]; ++G__24644__i;}
G__24643 = new cljs.core.IndexedSeq(G__24644__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__24591,f,a,b,c, G__24643);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24655 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24655) : f.call(null,G__24655));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24656 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24657 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24656,G__24657) : f.call(null,G__24656,G__24657));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24658 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24659 = x;
var G__24660 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24658,G__24659,G__24660) : f.call(null,G__24658,G__24659,G__24660));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24661 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24662 = x;
var G__24663 = y;
var G__24664 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24661,G__24662,G__24663,G__24664) : f.call(null,G__24661,G__24662,G__24663,G__24664));
})());
});
var update__7 = (function() { 
var G__24665__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__24665 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__24666__i = 0, G__24666__a = new Array(arguments.length -  6);
while (G__24666__i < G__24666__a.length) {G__24666__a[G__24666__i] = arguments[G__24666__i + 6]; ++G__24666__i;}
  more = new cljs.core.IndexedSeq(G__24666__a,0);
} 
return G__24665__delegate.call(this,m,k,f,x,y,z,more);};
G__24665.cljs$lang$maxFixedArity = 6;
G__24665.cljs$lang$applyTo = (function (arglist__24667){
var m = cljs.core.first(arglist__24667);
arglist__24667 = cljs.core.next(arglist__24667);
var k = cljs.core.first(arglist__24667);
arglist__24667 = cljs.core.next(arglist__24667);
var f = cljs.core.first(arglist__24667);
arglist__24667 = cljs.core.next(arglist__24667);
var x = cljs.core.first(arglist__24667);
arglist__24667 = cljs.core.next(arglist__24667);
var y = cljs.core.first(arglist__24667);
arglist__24667 = cljs.core.next(arglist__24667);
var z = cljs.core.first(arglist__24667);
var more = cljs.core.rest(arglist__24667);
return G__24665__delegate(m,k,f,x,y,z,more);
});
G__24665.cljs$core$IFn$_invoke$arity$variadic = G__24665__delegate;
return G__24665;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__24668 = null;
if (arguments.length > 6) {
var G__24669__i = 0, G__24669__a = new Array(arguments.length -  6);
while (G__24669__i < G__24669__a.length) {G__24669__a[G__24669__i] = arguments[G__24669__i + 6]; ++G__24669__i;}
G__24668 = new cljs.core.IndexedSeq(G__24669__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__24668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__24670 = (ll - (5));
var G__24671 = r;
ll = G__24670;
ret = G__24671;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24676 = cljs.core.pv_aget(node,(0));
var G__24677 = (level - (5));
node = G__24676;
level = G__24677;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24678 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__24679 = (level - (5));
node = G__24678;
level = G__24679;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24689 = init__$2;
var G__24690 = (j + i);
var G__24691 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24689,G__24690,G__24691) : f.call(null,G__24689,G__24690,G__24691));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24702 = (j + (1));
var G__24703 = init__$3;
j = G__24702;
init__$2 = G__24703;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24692 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24692) : cljs.core.deref.call(null,G__24692));
} else {
var G__24704 = (i + len);
var G__24705 = init__$2;
i = G__24704;
init__$1 = G__24705;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__24693 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__24693) : cljs.core.tv_editable_root.call(null,G__24693));
})(),(function (){var G__24694 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__24694) : cljs.core.tv_editable_tail.call(null,G__24694));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24695 = init__$2;
var G__24696 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24695,G__24696) : f.call(null,G__24695,G__24696));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24706 = (j + (1));
var G__24707 = init__$3;
j = G__24706;
init__$2 = G__24707;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24697 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24697) : cljs.core.deref.call(null,G__24697));
} else {
var G__24708 = (i + len);
var G__24709 = init__$2;
i = G__24708;
init__$1 = G__24709;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__24698 = coll__$1;
var G__24699 = cljs.core.first_array_for_longvec(coll__$1);
var G__24700 = (0);
var G__24701 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24698,G__24699,G__24700,G__24701) : cljs.core.chunked_seq.call(null,G__24698,G__24699,G__24700,G__24701));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__14215__auto___24710 = len;
var i_24711 = (0);
while(true){
if((i_24711 < n__14215__auto___24710)){
(new_tail[i_24711] = (self__.tail[i_24711]));

var G__24712 = (i_24711 + (1));
i_24711 = G__24712;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__24713 = null;
var G__24713__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24713__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24713 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24713__2.call(this,self__,k);
case 3:
return G__24713__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24713.cljs$core$IFn$_invoke$arity$2 = G__24713__2;
G__24713.cljs$core$IFn$_invoke$arity$3 = G__24713__3;
return G__24713;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args24688){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24688)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__24714 = (i + (1));
var G__24715 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__24714;
out = G__24715;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24716__i = 0, G__24716__a = new Array(arguments.length -  0);
while (G__24716__i < G__24716__a.length) {G__24716__a[G__24716__i] = arguments[G__24716__i + 0]; ++G__24716__i;}
  args = new cljs.core.IndexedSeq(G__24716__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__24717){
var args = cljs.core.seq(arglist__24717);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24718 = self__.vec;
var G__24719 = self__.node;
var G__24720 = self__.i;
var G__24721 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24718,G__24719,G__24720,G__24721) : cljs.core.chunked_seq.call(null,G__24718,G__24719,G__24720,G__24721));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__24722 = self__.vec;
var G__24723 = (self__.i + self__.off);
var G__24724 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24722,G__24723,G__24724) : cljs.core.subvec.call(null,G__24722,G__24723,G__24724));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__24725 = self__.vec;
var G__24726 = (self__.i + self__.off);
var G__24727 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24725,G__24726,G__24727) : cljs.core.subvec.call(null,G__24725,G__24726,G__24727));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24728 = self__.vec;
var G__24729 = self__.node;
var G__24730 = self__.i;
var G__24731 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24728,G__24729,G__24730,G__24731) : cljs.core.chunked_seq.call(null,G__24728,G__24729,G__24730,G__24731));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24732 = self__.vec;
var G__24733 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24734 = end;
var G__24735 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24732,G__24733,G__24734,G__24735) : cljs.core.chunked_seq.call(null,G__24732,G__24733,G__24734,G__24735));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__24736 = self__.vec;
var G__24737 = self__.node;
var G__24738 = self__.i;
var G__24739 = self__.off;
var G__24740 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__24736,G__24737,G__24738,G__24739,G__24740) : cljs.core.chunked_seq.call(null,G__24736,G__24737,G__24738,G__24739,G__24740));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24741 = self__.vec;
var G__24742 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24743 = end;
var G__24744 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24741,G__24742,G__24743,G__24744) : cljs.core.chunked_seq.call(null,G__24741,G__24742,G__24743,G__24744));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__24746 = self__.meta;
var G__24747 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__24748 = self__.start;
var G__24749 = (function (){var x__13645__auto__ = self__.end;
var y__13646__auto__ = (v_pos + (1));
return ((x__13645__auto__ > y__13646__auto__) ? x__13645__auto__ : y__13646__auto__);
})();
var G__24750 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24746,G__24747,G__24748,G__24749,G__24750) : cljs.core.build_subvec.call(null,G__24746,G__24747,G__24748,G__24749,G__24750));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__24751 = self__.meta;
var G__24752 = self__.v;
var G__24753 = self__.start;
var G__24754 = (self__.end - (1));
var G__24755 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24751,G__24752,G__24753,G__24754,G__24755) : cljs.core.build_subvec.call(null,G__24751,G__24752,G__24753,G__24754,G__24755));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__24757 = meta__$1;
var G__24758 = self__.v;
var G__24759 = self__.start;
var G__24760 = self__.end;
var G__24761 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24757,G__24758,G__24759,G__24760,G__24761) : cljs.core.build_subvec.call(null,G__24757,G__24758,G__24759,G__24760,G__24761));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24762 = self__.meta;
var G__24763 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__24764 = self__.start;
var G__24765 = (self__.end + (1));
var G__24766 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24762,G__24763,G__24764,G__24765,G__24766) : cljs.core.build_subvec.call(null,G__24762,G__24763,G__24764,G__24765,G__24766));
});

cljs.core.Subvec.prototype.call = (function() {
var G__24767 = null;
var G__24767__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24767__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24767 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24767__2.call(this,self__,k);
case 3:
return G__24767__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24767.cljs$core$IFn$_invoke$arity$2 = G__24767__2;
G__24767.cljs$core$IFn$_invoke$arity$3 = G__24767__3;
return G__24767;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args24745){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24745)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__24768 = meta;
var G__24769 = v.v;
var G__24770 = (v.start + start);
var G__24771 = (v.start + end);
var G__24772 = __hash;
meta = G__24768;
v = G__24769;
start = G__24770;
end = G__24771;
__hash = G__24772;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj24779 = {};
return obj24779;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__24787 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__24788 = (level - (5));
node = G__24787;
level = G__24788;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__24792 = null;
var G__24792__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24792__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24792 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24792__2.call(this,self__,k);
case 3:
return G__24792__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24792.cljs$core$IFn$_invoke$arity$2 = G__24792__2;
G__24792.cljs$core$IFn$_invoke$arity$3 = G__24792__3;
return G__24792;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args24789){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24789)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__13328__auto__ = self__.front;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13328__auto__ = self__.rear;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__24793 = (i + incr);
i = G__24793;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__24794 = (i + (1));
var G__24795 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__24794;
out = G__24795;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj24799 = {};
return obj24799;
})();
var l = ks.length;
var i_24800 = (0);
while(true){
if((i_24800 < l)){
var k_24801 = (ks[i_24800]);
(new_obj[k_24801] = (obj[k_24801]));

var G__24802 = (i_24800 + (1));
i_24800 = G__24802;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13316__auto__ = (function (){var G__24806 = k;
return goog.isString(G__24806);
})();
if(cljs.core.truth_(and__13316__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13316__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__24807 = init__$1;
var G__24808 = k;
var G__24809 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24807,G__24808,G__24809) : f.call(null,G__24807,G__24808,G__24809));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24810 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24810) : cljs.core.deref.call(null,G__24810));
} else {
var G__24816 = cljs.core.rest(keys__$1);
var G__24817 = init__$2;
keys__$1 = G__24816;
init__$1 = G__24817;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13316__auto__ = (function (){var G__24812 = k;
return goog.isString(G__24812);
})();
if(cljs.core.truth_(and__13316__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13316__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__24813 = k;
return goog.isString(G__24813);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13316__auto__ = (function (){var G__24815 = k;
return goog.isString(G__24815);
})();
if(cljs.core.truth_(and__13316__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13316__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__24803_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__24803_SHARP_,(self__.strobj[p1__24803_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__24818 = null;
var G__24818__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24818__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24818 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24818__2.call(this,self__,k);
case 3:
return G__24818__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24818.cljs$core$IFn$_invoke$arity$2 = G__24818__2;
G__24818.cljs$core$IFn$_invoke$arity$3 = G__24818__3;
return G__24818;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args24804){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24804)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj24820 = {};
return obj24820;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__24821 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24821,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24821,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__24822 = (i + (2));
i = G__24822;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__24823 = (i + (2));
i = G__24823;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__24824 = (i + (2));
i = G__24824;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__24825 = (i + (2));
i = G__24825;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__24826 = (i + (2));
i = G__24826;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__13328__auto__ = (function (){var G__24830 = k;
return goog.isString(G__24830);
})();
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_24831 = (0);
while(true){
if((i_24831 < l)){
(narr[i_24831] = (arr[i_24831]));

var G__24832 = (i_24831 + (1));
i_24831 = G__24832;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24834 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24834) : cljs.core.keys.call(null,G__24834));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24835 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24835) : cljs.core.vals.call(null,G__24835));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24836 = cljs.core.seq(coll);
var chunk__24837 = null;
var count__24838 = (0);
var i__24839 = (0);
while(true){
if((i__24839 < count__24838)){
var vec__24840 = chunk__24837.cljs$core$IIndexed$_nth$arity$2(null,i__24839);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24840,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24840,(1),null);
var G__24841_24854 = v;
var G__24842_24855 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24841_24854,G__24842_24855) : f.call(null,G__24841_24854,G__24842_24855));

var G__24856 = seq__24836;
var G__24857 = chunk__24837;
var G__24858 = count__24838;
var G__24859 = (i__24839 + (1));
seq__24836 = G__24856;
chunk__24837 = G__24857;
count__24838 = G__24858;
i__24839 = G__24859;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24836);
if(temp__4126__auto__){
var seq__24836__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24836__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__24836__$1);
var G__24860 = cljs.core.chunk_rest(seq__24836__$1);
var G__24861 = c__14115__auto__;
var G__24862 = cljs.core.count(c__14115__auto__);
var G__24863 = (0);
seq__24836 = G__24860;
chunk__24837 = G__24861;
count__24838 = G__24862;
i__24839 = G__24863;
continue;
} else {
var vec__24843 = cljs.core.first(seq__24836__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24843,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24843,(1),null);
var G__24844_24864 = v;
var G__24845_24865 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24844_24864,G__24845_24865) : f.call(null,G__24844_24864,G__24845_24865));

var G__24866 = cljs.core.next(seq__24836__$1);
var G__24867 = null;
var G__24868 = (0);
var G__24869 = (0);
seq__24836 = G__24866;
chunk__24837 = G__24867;
count__24838 = G__24868;
i__24839 = G__24869;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__24846 = init__$1;
var G__24847 = (self__.arr[i]);
var G__24848 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24846,G__24847,G__24848) : f.call(null,G__24846,G__24847,G__24848));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24849 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24849) : cljs.core.deref.call(null,G__24849));
} else {
var G__24870 = (i + (2));
var G__24871 = init__$2;
i = G__24870;
init__$1 = G__24871;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__24850 = other;
if(G__24850){
var bit__14002__auto__ = (G__24850.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__14002__auto__) || (G__24850.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__24872 = (i + (2));
i = G__24872;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj24852 = {};
return obj24852;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__24873 = (s + (2));
var G__24874 = d;
s = G__24873;
d = G__24874;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__24875 = (s + (2));
var G__24876 = (d + (2));
s = G__24875;
d = G__24876;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__24853 = cljs.core.aclone(self__.arr);
(G__24853[(idx + (1))] = v);

return G__24853;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24877 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24878 = cljs.core.next(es);
ret = G__24877;
es = G__24878;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__24879 = null;
var G__24879__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24879__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24879 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24879__2.call(this,self__,k);
case 3:
return G__24879__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24879.cljs$core$IFn$_invoke$arity$2 = G__24879__2;
G__24879.cljs$core$IFn$_invoke$arity$3 = G__24879__3;
return G__24879;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args24833){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24833)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24880 = (i + (2));
var G__24881 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24880;
ret = G__24881;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__24882_24890 = self__.arr;
G__24882_24890.pop();

G__24882_24890.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__24883 = self__.len;
var G__24884 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__24883,G__24884) : cljs.core.array__GT_transient_hash_map.call(null,G__24883,G__24884));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__24885 = o;
if(G__24885){
var bit__14009__auto__ = (G__24885.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14009__auto__) || (G__24885.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24885.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24885);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24885);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__24886 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24886) : cljs.core.key.call(null,G__24886));
})(),(function (){var G__24887 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24887) : cljs.core.val.call(null,G__24887));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__24891 = cljs.core.next(es);
var G__24892 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__24888 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24888) : cljs.core.key.call(null,G__24888));
})(),(function (){var G__24889 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24889) : cljs.core.val.call(null,G__24889));
})());
es = G__24891;
tcoll__$2 = G__24892;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__24893 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__24894 = (i + (2));
out = G__24893;
i = G__24894;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__24897 = cljs.core.aclone(arr);
(G__24897[i] = a);

return G__24897;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__24898 = cljs.core.aclone(arr);
(G__24898[i] = a);

(G__24898[j] = b);

return G__24898;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__24903 = init__$1;
var G__24904 = k;
var G__24905 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24903,G__24904,G__24905) : f.call(null,G__24903,G__24904,G__24905));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24906 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24906) : cljs.core.deref.call(null,G__24906));
} else {
var G__24907 = (i + (2));
var G__24908 = init__$2;
i = G__24907;
init__$1 = G__24908;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24909 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24909) : cljs.core.create_inode_seq.call(null,G__24909));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24923 = (0);
var j_24924 = (0);
while(true){
if((i_24923 < (32))){
if((((self__.bitmap >>> i_24923) & (1)) === (0))){
var G__24925 = (i_24923 + (1));
var G__24926 = j_24924;
i_24923 = G__24925;
j_24924 = G__24926;
continue;
} else {
(nodes[i_24923] = ((!(((self__.arr[j_24924]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_24924])),(self__.arr[j_24924]),(self__.arr[(j_24924 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24924 + (1))])));

var G__24927 = (i_24923 + (1));
var G__24928 = (j_24924 + (2));
i_24923 = G__24927;
j_24924 = G__24928;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24910 = edit__$1;
var G__24911 = (shift + (5));
var G__24912 = key_or_nil;
var G__24913 = val_or_node;
var G__24914 = hash;
var G__24915 = key;
var G__24916 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916) : cljs.core.create_node.call(null,G__24910,G__24911,G__24912,G__24913,G__24914,G__24915,G__24916));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24929 = (0);
var j_24930 = (0);
while(true){
if((i_24929 < (32))){
if((((self__.bitmap >>> i_24929) & (1)) === (0))){
var G__24931 = (i_24929 + (1));
var G__24932 = j_24930;
i_24929 = G__24931;
j_24930 = G__24932;
continue;
} else {
(nodes[i_24929] = ((!(((self__.arr[j_24930]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_24930])),(self__.arr[j_24930]),(self__.arr[(j_24930 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24930 + (1))])));

var G__24933 = (i_24929 + (1));
var G__24934 = (j_24930 + (2));
i_24929 = G__24933;
j_24930 = G__24934;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24917 = (shift + (5));
var G__24918 = key_or_nil;
var G__24919 = val_or_node;
var G__24920 = hash;
var G__24921 = key;
var G__24922 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__24917,G__24918,G__24919,G__24920,G__24921,G__24922) : cljs.core.create_node.call(null,G__24917,G__24918,G__24919,G__24920,G__24921,G__24922));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__24935 = (i + (1));
var G__24936 = (j + (2));
var G__24937 = (bitmap | ((1) << i));
i = G__24935;
j = G__24936;
bitmap = G__24937;
continue;
} else {
var G__24938 = (i + (1));
var G__24939 = j;
var G__24940 = bitmap;
i = G__24938;
j = G__24939;
bitmap = G__24940;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24941 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__24941) : cljs.core.create_array_node_seq.call(null,G__24941));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24942 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24942) : cljs.core.deref.call(null,G__24942));
} else {
var G__24943 = (i + (1));
var G__24944 = init__$2;
i = G__24943;
init__$1 = G__24944;
continue;
}
} else {
var G__24945 = (i + (1));
var G__24946 = init__$1;
i = G__24945;
init__$1 = G__24946;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__24947 = (i + (2));
i = G__24947;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24948 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24948) : cljs.core.create_inode_seq.call(null,G__24948));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__24949 = self__.nodes;
var G__24950 = (self__.i + (2));
var G__24951 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24949,G__24950,G__24951) : cljs.core.create_inode_seq.call(null,G__24949,G__24950,G__24951));
} else {
var G__24952 = self__.nodes;
var G__24953 = self__.i;
var G__24954 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24952,G__24953,G__24954) : cljs.core.create_inode_seq.call(null,G__24952,G__24953,G__24954));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__24958 = (j + (2));
j = G__24958;
continue;
}
} else {
var G__24959 = (j + (2));
j = G__24959;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24960 = null;
var G__24961 = self__.nodes;
var G__24962 = self__.i;
var G__24963 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__24960,G__24961,G__24962,G__24963) : cljs.core.create_array_node_seq.call(null,G__24960,G__24961,G__24962,G__24963));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__24968 = (j + (1));
j = G__24968;
continue;
}
} else {
var G__24969 = (j + (1));
j = G__24969;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24971 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24971) : cljs.core.keys.call(null,G__24971));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24972 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24972) : cljs.core.vals.call(null,G__24972));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24973 = cljs.core.seq(coll);
var chunk__24974 = null;
var count__24975 = (0);
var i__24976 = (0);
while(true){
if((i__24976 < count__24975)){
var vec__24977 = chunk__24974.cljs$core$IIndexed$_nth$arity$2(null,i__24976);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24977,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24977,(1),null);
var G__24978_24989 = v;
var G__24979_24990 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24978_24989,G__24979_24990) : f.call(null,G__24978_24989,G__24979_24990));

var G__24991 = seq__24973;
var G__24992 = chunk__24974;
var G__24993 = count__24975;
var G__24994 = (i__24976 + (1));
seq__24973 = G__24991;
chunk__24974 = G__24992;
count__24975 = G__24993;
i__24976 = G__24994;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24973);
if(temp__4126__auto__){
var seq__24973__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24973__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__24973__$1);
var G__24995 = cljs.core.chunk_rest(seq__24973__$1);
var G__24996 = c__14115__auto__;
var G__24997 = cljs.core.count(c__14115__auto__);
var G__24998 = (0);
seq__24973 = G__24995;
chunk__24974 = G__24996;
count__24975 = G__24997;
i__24976 = G__24998;
continue;
} else {
var vec__24980 = cljs.core.first(seq__24973__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24980,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24980,(1),null);
var G__24981_24999 = v;
var G__24982_25000 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24981_24999,G__24982_25000) : f.call(null,G__24981_24999,G__24982_25000));

var G__25001 = cljs.core.next(seq__24973__$1);
var G__25002 = null;
var G__25003 = (0);
var G__25004 = (0);
seq__24973 = G__25001;
chunk__24974 = G__25002;
count__24975 = G__25003;
i__24976 = G__25004;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__24983 = init;
var G__24984 = null;
var G__24985 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24983,G__24984,G__24985) : f.call(null,G__24983,G__24984,G__24985));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24986 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24986) : cljs.core.deref.call(null,G__24986));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj24988 = {};
return obj24988;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25005 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25006 = cljs.core.next(es);
ret = G__25005;
es = G__25006;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__25007 = null;
var G__25007__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25007__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25007 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25007__2.call(this,self__,k);
case 3:
return G__25007__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25007.cljs$core$IFn$_invoke$arity$2 = G__25007__2;
G__25007.cljs$core$IFn$_invoke$arity$3 = G__25007__3;
return G__25007;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args24970){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24970)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__25008 = (i + (2));
var G__25009 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__25008;
ret = G__25009;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__25010 = (i + (1));
var G__25011 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__25010;
out = G__25011;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__25012 = o;
if(G__25012){
var bit__14009__auto__ = (G__25012.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14009__auto__) || (G__25012.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__25012.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25012);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__25012);
}
})()){
return tcoll.assoc_BANG_((function (){var G__25013 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25013) : cljs.core.key.call(null,G__25013));
})(),(function (){var G__25014 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25014) : cljs.core.val.call(null,G__25014));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__25017 = cljs.core.next(es);
var G__25018 = tcoll__$1.assoc_BANG_((function (){var G__25015 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25015) : cljs.core.key.call(null,G__25015));
})(),(function (){var G__25016 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__25016) : cljs.core.val.call(null,G__25016));
})());
es = G__25017;
tcoll__$1 = G__25018;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__25019 = ((ascending_QMARK_)?t.left:t.right);
var G__25020 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__25019;
stack__$1 = G__25020;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__25033 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25033) : cljs.core.deref.call(null,G__25033));
} else {
var init__$2 = (function (){var G__25034 = init__$1;
var G__25035 = node.key;
var G__25036 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25034,G__25035,G__25036) : f.call(null,G__25034,G__25035,G__25036));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__25037 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25037) : cljs.core.deref.call(null,G__25037));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__25038 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25038) : cljs.core.deref.call(null,G__25038));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__25040 = null;
var G__25040__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25040__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25040 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25040__2.call(this,self__,k);
case 3:
return G__25040__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25040.cljs$core$IFn$_invoke$arity$2 = G__25040__2;
G__25040.cljs$core$IFn$_invoke$arity$3 = G__25040__3;
return G__25040;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args25039){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25039)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__25042 = null;
var G__25042__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25042__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25042 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25042__2.call(this,self__,k);
case 3:
return G__25042__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25042.cljs$core$IFn$_invoke$arity$2 = G__25042__2;
G__25042.cljs$core$IFn$_invoke$arity$3 = G__25042__3;
return G__25042;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args25041){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25041)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__25055 = k;
var G__25056 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25055,G__25056) : comp.call(null,G__25055,G__25056));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__25075 = k;
var G__25076 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25075,G__25076) : comp.call(null,G__25075,G__25076));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__25087 = k;
var G__25088 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25087,G__25088) : comp.call(null,G__25087,G__25088));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25090 = cljs.core.seq(coll);
var chunk__25091 = null;
var count__25092 = (0);
var i__25093 = (0);
while(true){
if((i__25093 < count__25092)){
var vec__25094 = chunk__25091.cljs$core$IIndexed$_nth$arity$2(null,i__25093);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25094,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25094,(1),null);
var G__25095_25107 = v;
var G__25096_25108 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25095_25107,G__25096_25108) : f.call(null,G__25095_25107,G__25096_25108));

var G__25109 = seq__25090;
var G__25110 = chunk__25091;
var G__25111 = count__25092;
var G__25112 = (i__25093 + (1));
seq__25090 = G__25109;
chunk__25091 = G__25110;
count__25092 = G__25111;
i__25093 = G__25112;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25090);
if(temp__4126__auto__){
var seq__25090__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25090__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__25090__$1);
var G__25113 = cljs.core.chunk_rest(seq__25090__$1);
var G__25114 = c__14115__auto__;
var G__25115 = cljs.core.count(c__14115__auto__);
var G__25116 = (0);
seq__25090 = G__25113;
chunk__25091 = G__25114;
count__25092 = G__25115;
i__25093 = G__25116;
continue;
} else {
var vec__25097 = cljs.core.first(seq__25090__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25097,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25097,(1),null);
var G__25098_25117 = v;
var G__25099_25118 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25098_25117,G__25099_25118) : f.call(null,G__25098_25117,G__25099_25118));

var G__25119 = cljs.core.next(seq__25090__$1);
var G__25120 = null;
var G__25121 = (0);
var G__25122 = (0);
seq__25090 = G__25119;
chunk__25091 = G__25120;
count__25092 = G__25121;
i__25093 = G__25122;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25100 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__25100) : cljs.core.keys.call(null,G__25100));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25101 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__25101) : cljs.core.vals.call(null,G__25101));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25102 = k;
var G__25103 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25102,G__25103) : self__.comp.call(null,G__25102,G__25103));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__25123 = t.left;
t = G__25123;
continue;
} else {
var G__25124 = t.right;
t = G__25124;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25125 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25126 = cljs.core.next(es);
ret = G__25125;
es = G__25126;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__25127 = null;
var G__25127__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25127__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25127 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25127__2.call(this,self__,k);
case 3:
return G__25127__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25127.cljs$core$IFn$_invoke$arity$2 = G__25127__2;
G__25127.cljs$core$IFn$_invoke$arity$3 = G__25127__3;
return G__25127;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args25089){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25089)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25104 = k;
var G__25105 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25104,G__25105) : self__.comp.call(null,G__25104,G__25105));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__25128 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25129 = t.left;
stack = G__25128;
t = G__25129;
continue;
} else {
var G__25130 = stack;
var G__25131 = t.right;
stack = G__25130;
t = G__25131;
continue;
}
} else {
if((c > (0))){
var G__25132 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25133 = t.right;
stack = G__25132;
t = G__25133;
continue;
} else {
var G__25134 = stack;
var G__25135 = t.left;
stack = G__25134;
t = G__25135;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__25106 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25106) : cljs.core.key.call(null,G__25106));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__25136 = cljs.core.nnext(in$);
var G__25137 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25136;
out = G__25137;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25138__i = 0, G__25138__a = new Array(arguments.length -  0);
while (G__25138__i < G__25138__a.length) {G__25138__a[G__25138__i] = arguments[G__25138__i + 0]; ++G__25138__i;}
  keyvals = new cljs.core.IndexedSeq(G__25138__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__25139){
var keyvals = cljs.core.seq(arglist__25139);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25140__i = 0, G__25140__a = new Array(arguments.length -  0);
while (G__25140__i < G__25140__a.length) {G__25140__a[G__25140__i] = arguments[G__25140__i + 0]; ++G__25140__i;}
  keyvals = new cljs.core.IndexedSeq(G__25140__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__25141){
var keyvals = cljs.core.seq(arglist__25141);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj25145 = {};
return obj25145;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__25146 = cljs.core.nnext(kvs);
kvs = G__25146;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25147__i = 0, G__25147__a = new Array(arguments.length -  0);
while (G__25147__i < G__25147__a.length) {G__25147__a[G__25147__i] = arguments[G__25147__i + 0]; ++G__25147__i;}
  keyvals = new cljs.core.IndexedSeq(G__25147__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__25148){
var keyvals = cljs.core.seq(arglist__25148);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__25149 = cljs.core.nnext(in$);
var G__25150 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25149;
out = G__25150;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25151__i = 0, G__25151__a = new Array(arguments.length -  0);
while (G__25151__i < G__25151__a.length) {G__25151__a[G__25151__i] = arguments[G__25151__i + 0]; ++G__25151__i;}
  keyvals = new cljs.core.IndexedSeq(G__25151__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__25152){
var keyvals = cljs.core.seq(arglist__25152);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__25153 = cljs.core.nnext(in$);
var G__25154 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25153;
out = G__25154;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__25155__i = 0, G__25155__a = new Array(arguments.length -  1);
while (G__25155__i < G__25155__a.length) {G__25155__a[G__25155__i] = arguments[G__25155__i + 1]; ++G__25155__i;}
  keyvals = new cljs.core.IndexedSeq(G__25155__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__25156){
var comparator = cljs.core.first(arglist__25156);
var keyvals = cljs.core.rest(arglist__25156);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25157 = self__.mseq;
if(G__25157){
var bit__14009__auto__ = (G__25157.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14009__auto__) || (G__25157.cljs$core$INext$)){
return true;
} else {
if((!G__25157.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25157);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25157);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25158 = self__.mseq;
if(G__25158){
var bit__14009__auto__ = (G__25158.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14009__auto__) || (G__25158.cljs$core$INext$)){
return true;
} else {
if((!G__25158.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25158);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25158);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25159 = self__.mseq;
if(G__25159){
var bit__14009__auto__ = (G__25159.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14009__auto__) || (G__25159.cljs$core$INext$)){
return true;
} else {
if((!G__25159.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25159);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25159);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25160 = self__.mseq;
if(G__25160){
var bit__14009__auto__ = (G__25160.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14009__auto__) || (G__25160.cljs$core$INext$)){
return true;
} else {
if((!G__25160.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25160);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25160);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__25161_SHARP_,p2__25162_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13328__auto__ = p1__25161_SHARP_;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__25162_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__25163__i = 0, G__25163__a = new Array(arguments.length -  0);
while (G__25163__i < G__25163__a.length) {G__25163__a[G__25163__i] = arguments[G__25163__i + 0]; ++G__25163__i;}
  maps = new cljs.core.IndexedSeq(G__25163__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__25164){
var maps = cljs.core.seq(arglist__25164);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25167 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25168 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25167,G__25168) : f.call(null,G__25167,G__25168));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__13328__auto__ = m1;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__25169__i = 0, G__25169__a = new Array(arguments.length -  1);
while (G__25169__i < G__25169__a.length) {G__25169__a[G__25169__i] = arguments[G__25169__i + 1]; ++G__25169__i;}
  maps = new cljs.core.IndexedSeq(G__25169__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__25170){
var f = cljs.core.first(arglist__25170);
var maps = cljs.core.rest(arglist__25170);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__25171 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__25172 = cljs.core.next(keys);
ret = G__25171;
keys = G__25172;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25175 = cljs.core.seq(coll);
var chunk__25176 = null;
var count__25177 = (0);
var i__25178 = (0);
while(true){
if((i__25178 < count__25177)){
var vec__25179 = chunk__25176.cljs$core$IIndexed$_nth$arity$2(null,i__25178);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25179,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25179,(1),null);
var G__25180_25185 = v;
var G__25181_25186 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25180_25185,G__25181_25186) : f.call(null,G__25180_25185,G__25181_25186));

var G__25187 = seq__25175;
var G__25188 = chunk__25176;
var G__25189 = count__25177;
var G__25190 = (i__25178 + (1));
seq__25175 = G__25187;
chunk__25176 = G__25188;
count__25177 = G__25189;
i__25178 = G__25190;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25175);
if(temp__4126__auto__){
var seq__25175__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25175__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__25175__$1);
var G__25191 = cljs.core.chunk_rest(seq__25175__$1);
var G__25192 = c__14115__auto__;
var G__25193 = cljs.core.count(c__14115__auto__);
var G__25194 = (0);
seq__25175 = G__25191;
chunk__25176 = G__25192;
count__25177 = G__25193;
i__25178 = G__25194;
continue;
} else {
var vec__25182 = cljs.core.first(seq__25175__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25182,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25182,(1),null);
var G__25183_25195 = v;
var G__25184_25196 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25183_25195,G__25184_25196) : f.call(null,G__25183_25195,G__25184_25196));

var G__25197 = cljs.core.next(seq__25175__$1);
var G__25198 = null;
var G__25199 = (0);
var G__25200 = (0);
seq__25175 = G__25197;
chunk__25176 = G__25198;
count__25177 = G__25199;
i__25178 = G__25200;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25173_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25173_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__25201 = null;
var G__25201__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25201__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25201 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25201__2.call(this,self__,k);
case 3:
return G__25201__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25201.cljs$core$IFn$_invoke$arity$2 = G__25201__2;
G__25201.cljs$core$IFn$_invoke$arity$3 = G__25201__3;
return G__25201;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args25174){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25174)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__25202 = (i + (1));
var G__25203 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__25202;
out = G__25203;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__25204 = (i + (1));
var G__25205 = cljs.core._conj_BANG_(out,(items[i]));
i = G__25204;
out = G__25205;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__25207 = null;
var G__25207__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__25207__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__25207 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25207__2.call(this,self__,k);
case 3:
return G__25207__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25207.cljs$core$IFn$_invoke$arity$2 = G__25207__2;
G__25207.cljs$core$IFn$_invoke$arity$3 = G__25207__3;
return G__25207;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args25206){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25206)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25210 = cljs.core.seq(coll);
var chunk__25211 = null;
var count__25212 = (0);
var i__25213 = (0);
while(true){
if((i__25213 < count__25212)){
var vec__25214 = chunk__25211.cljs$core$IIndexed$_nth$arity$2(null,i__25213);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25214,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25214,(1),null);
var G__25215_25220 = v;
var G__25216_25221 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25215_25220,G__25216_25221) : f.call(null,G__25215_25220,G__25216_25221));

var G__25222 = seq__25210;
var G__25223 = chunk__25211;
var G__25224 = count__25212;
var G__25225 = (i__25213 + (1));
seq__25210 = G__25222;
chunk__25211 = G__25223;
count__25212 = G__25224;
i__25213 = G__25225;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25210);
if(temp__4126__auto__){
var seq__25210__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25210__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__25210__$1);
var G__25226 = cljs.core.chunk_rest(seq__25210__$1);
var G__25227 = c__14115__auto__;
var G__25228 = cljs.core.count(c__14115__auto__);
var G__25229 = (0);
seq__25210 = G__25226;
chunk__25211 = G__25227;
count__25212 = G__25228;
i__25213 = G__25229;
continue;
} else {
var vec__25217 = cljs.core.first(seq__25210__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25217,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25217,(1),null);
var G__25218_25230 = v;
var G__25219_25231 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25218_25230,G__25219_25231) : f.call(null,G__25218_25230,G__25219_25231));

var G__25232 = cljs.core.next(seq__25210__$1);
var G__25233 = null;
var G__25234 = (0);
var G__25235 = (0);
seq__25210 = G__25232;
chunk__25211 = G__25233;
count__25212 = G__25234;
i__25213 = G__25235;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25208_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25208_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__25236 = null;
var G__25236__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25236__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25236 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25236__2.call(this,self__,k);
case 3:
return G__25236__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25236.cljs$core$IFn$_invoke$arity$2 = G__25236__2;
G__25236.cljs$core$IFn$_invoke$arity$3 = G__25236__3;
return G__25236;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args25209){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25209)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__14209__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__14209__auto__.length)){
var G__25237 = (i + (1));
var G__25238 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__25237;
res = G__25238;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__25239 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__25240 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__25239;
out = G__25240;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__25241__delegate = function (keys){
return cljs.core.set(keys);
};
var G__25241 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25242__i = 0, G__25242__a = new Array(arguments.length -  0);
while (G__25242__i < G__25242__a.length) {G__25242__a[G__25242__i] = arguments[G__25242__i + 0]; ++G__25242__i;}
  keys = new cljs.core.IndexedSeq(G__25242__a,0);
} 
return G__25241__delegate.call(this,keys);};
G__25241.cljs$lang$maxFixedArity = 0;
G__25241.cljs$lang$applyTo = (function (arglist__25243){
var keys = cljs.core.seq(arglist__25243);
return G__25241__delegate(keys);
});
G__25241.cljs$core$IFn$_invoke$arity$variadic = G__25241__delegate;
return G__25241;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__25244 = null;
if (arguments.length > 0) {
var G__25245__i = 0, G__25245__a = new Array(arguments.length -  0);
while (G__25245__i < G__25245__a.length) {G__25245__a[G__25245__i] = arguments[G__25245__i + 0]; ++G__25245__i;}
G__25244 = new cljs.core.IndexedSeq(G__25245__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__25244);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25246__i = 0, G__25246__a = new Array(arguments.length -  0);
while (G__25246__i < G__25246__a.length) {G__25246__a[G__25246__i] = arguments[G__25246__i + 0]; ++G__25246__i;}
  keys = new cljs.core.IndexedSeq(G__25246__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__25247){
var keys = cljs.core.seq(arglist__25247);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__25248__i = 0, G__25248__a = new Array(arguments.length -  1);
while (G__25248__i < G__25248__a.length) {G__25248__a[G__25248__i] = arguments[G__25248__i + 1]; ++G__25248__i;}
  keys = new cljs.core.IndexedSeq(G__25248__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__25249){
var comparator = cljs.core.first(arglist__25249);
var keys = cljs.core.rest(arglist__25249);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__25250_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25250_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__25250_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__25251_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25251_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__25251_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__25272 = null;
var G__25272__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25272__1 = (function (result){
var G__25262 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25262) : rf.call(null,G__25262));
});
var G__25272__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__25263 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25263) : cljs.core.deref.call(null,G__25263));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__25264 = result;
var G__25265 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25264,G__25265) : rf.call(null,G__25264,G__25265));
}
});
G__25272 = function(result,input){
switch(arguments.length){
case 0:
return G__25272__0.call(this);
case 1:
return G__25272__1.call(this,result);
case 2:
return G__25272__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25272.cljs$core$IFn$_invoke$arity$0 = G__25272__0;
G__25272.cljs$core$IFn$_invoke$arity$1 = G__25272__1;
G__25272.cljs$core$IFn$_invoke$arity$2 = G__25272__2;
return G__25272;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__25270,seen__$1){
while(true){
var vec__25271 = p__25270;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25271,(0),null);
var xs__$1 = vec__25271;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__25273 = cljs.core.rest(s);
var G__25274 = seen__$1;
p__25270 = G__25273;
seen__$1 = G__25274;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__25275 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__25276 = cljs.core.next(s__$1);
ret = G__25275;
s__$1 = G__25276;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__25278 = x;
if(G__25278){
var bit__14002__auto__ = (G__25278.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__14002__auto__) || (G__25278.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__25279 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__25280 = cljs.core.next(ks);
var G__25281 = cljs.core.next(vs);
map = G__25279;
ks = G__25280;
vs = G__25281;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__25292 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25292) : k.call(null,G__25292));
})() > (function (){var G__25293 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25293) : k.call(null,G__25293));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__25294__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25282_SHARP_,p2__25283_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__25282_SHARP_,p2__25283_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25294 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25295__i = 0, G__25295__a = new Array(arguments.length -  3);
while (G__25295__i < G__25295__a.length) {G__25295__a[G__25295__i] = arguments[G__25295__i + 3]; ++G__25295__i;}
  more = new cljs.core.IndexedSeq(G__25295__a,0);
} 
return G__25294__delegate.call(this,k,x,y,more);};
G__25294.cljs$lang$maxFixedArity = 3;
G__25294.cljs$lang$applyTo = (function (arglist__25296){
var k = cljs.core.first(arglist__25296);
arglist__25296 = cljs.core.next(arglist__25296);
var x = cljs.core.first(arglist__25296);
arglist__25296 = cljs.core.next(arglist__25296);
var y = cljs.core.first(arglist__25296);
var more = cljs.core.rest(arglist__25296);
return G__25294__delegate(k,x,y,more);
});
G__25294.cljs$core$IFn$_invoke$arity$variadic = G__25294__delegate;
return G__25294;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__25297 = null;
if (arguments.length > 3) {
var G__25298__i = 0, G__25298__a = new Array(arguments.length -  3);
while (G__25298__i < G__25298__a.length) {G__25298__a[G__25298__i] = arguments[G__25298__i + 3]; ++G__25298__i;}
G__25297 = new cljs.core.IndexedSeq(G__25298__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__25309 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25309) : k.call(null,G__25309));
})() < (function (){var G__25310 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25310) : k.call(null,G__25310));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__25311__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25299_SHARP_,p2__25300_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__25299_SHARP_,p2__25300_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25311 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25312__i = 0, G__25312__a = new Array(arguments.length -  3);
while (G__25312__i < G__25312__a.length) {G__25312__a[G__25312__i] = arguments[G__25312__i + 3]; ++G__25312__i;}
  more = new cljs.core.IndexedSeq(G__25312__a,0);
} 
return G__25311__delegate.call(this,k,x,y,more);};
G__25311.cljs$lang$maxFixedArity = 3;
G__25311.cljs$lang$applyTo = (function (arglist__25313){
var k = cljs.core.first(arglist__25313);
arglist__25313 = cljs.core.next(arglist__25313);
var x = cljs.core.first(arglist__25313);
arglist__25313 = cljs.core.next(arglist__25313);
var y = cljs.core.first(arglist__25313);
var more = cljs.core.rest(arglist__25313);
return G__25311__delegate(k,x,y,more);
});
G__25311.cljs$core$IFn$_invoke$arity$variadic = G__25311__delegate;
return G__25311;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__25314 = null;
if (arguments.length > 3) {
var G__25315__i = 0, G__25315__a = new Array(arguments.length -  3);
while (G__25315__i < G__25315__a.length) {G__25315__a[G__25315__i] = arguments[G__25315__i + 3]; ++G__25315__i;}
G__25314 = new cljs.core.IndexedSeq(G__25315__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25314);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__25332 = null;
var G__25332__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25332__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25327 = result;
var G__25328 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25327,G__25328) : rf.call(null,G__25327,G__25328));
})());
})());
var G__25329 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25329) : rf.call(null,G__25329));
});
var G__25332__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__25330 = result;
var G__25331 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25330,G__25331) : rf.call(null,G__25330,G__25331));
} else {
return result;
}
});
G__25332 = function(result,input){
switch(arguments.length){
case 0:
return G__25332__0.call(this);
case 1:
return G__25332__1.call(this,result);
case 2:
return G__25332__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25332.cljs$core$IFn$_invoke$arity$0 = G__25332__0;
G__25332.cljs$core$IFn$_invoke$arity$1 = G__25332__1;
G__25332.cljs$core$IFn$_invoke$arity$2 = G__25332__2;
return G__25332;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__25345 = null;
var G__25345__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25345__1 = (function (result){
var G__25340 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25340) : rf.call(null,G__25340));
});
var G__25345__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__25341 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25341) : pred.call(null,G__25341));
})())){
var G__25342 = result;
var G__25343 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25342,G__25343) : rf.call(null,G__25342,G__25343));
} else {
return cljs.core.reduced(result);
}
});
G__25345 = function(result,input){
switch(arguments.length){
case 0:
return G__25345__0.call(this);
case 1:
return G__25345__1.call(this,result);
case 2:
return G__25345__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25345.cljs$core$IFn$_invoke$arity$0 = G__25345__0;
G__25345.cljs$core$IFn$_invoke$arity$1 = G__25345__1;
G__25345.cljs$core$IFn$_invoke$arity$2 = G__25345__2;
return G__25345;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__25344 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25344) : pred.call(null,G__25344));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__25350 = (function (){var G__25352 = cljs.core._entry_key(sc,e);
var G__25353 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25352,G__25353) : comp.call(null,G__25352,G__25353));
})();
var G__25351 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__25350,G__25351) : test.call(null,G__25350,G__25351));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25357 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25357,(0),null);
var s = vec__25357;
if(cljs.core.truth_((function (){var G__25358 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25358) : include.call(null,G__25358));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25359 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25359,(0),null);
var s = vec__25359;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25363 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25363,(0),null);
var s = vec__25363;
if(cljs.core.truth_((function (){var G__25364 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25364) : include.call(null,G__25364));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25365 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25365,(0),null);
var s = vec__25365;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__25366 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25366) : Math.ceil.call(null,G__25366));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13749__auto__ = self__.__hash;
if(!((h__13749__auto__ == null))){
return h__13749__auto__;
} else {
var h__13749__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13749__auto____$1;

return h__13749__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__25367 = ret;
var G__25368 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25367,G__25368) : f.call(null,G__25367,G__25368));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__25369 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25369) : cljs.core.deref.call(null,G__25369));
} else {
var G__25370 = (i + self__.step);
var G__25371 = ret__$1;
i = G__25370;
ret = G__25371;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25389 = null;
var G__25389__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25389__1 = (function (result){
var G__25386 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25386) : rf.call(null,G__25386));
});
var G__25389__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__25387 = result;
var G__25388 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25387,G__25388) : rf.call(null,G__25387,G__25388));
} else {
return result;
}
});
G__25389 = function(result,input){
switch(arguments.length){
case 0:
return G__25389__0.call(this);
case 1:
return G__25389__1.call(this,result);
case 2:
return G__25389__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25389.cljs$core$IFn$_invoke$arity$0 = G__25389__0;
G__25389.cljs$core$IFn$_invoke$arity$1 = G__25389__1;
G__25389.cljs$core$IFn$_invoke$arity$2 = G__25389__2;
return G__25389;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__25411 = null;
var G__25411__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25411__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25402 = result;
var G__25403 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25402,G__25403) : rf.call(null,G__25402,G__25403));
})());
})());
var G__25404 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25404) : rf.call(null,G__25404));
});
var G__25411__2 = (function (result,input){
var pval = (function (){var G__25405 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25405) : cljs.core.deref.call(null,G__25405));
})();
var val = (function (){var G__25406 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25406) : f.call(null,G__25406));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__25407 = result;
var G__25408 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25407,G__25408) : rf.call(null,G__25407,G__25408));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__25411 = function(result,input){
switch(arguments.length){
case 0:
return G__25411__0.call(this);
case 1:
return G__25411__1.call(this,result);
case 2:
return G__25411__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25411.cljs$core$IFn$_invoke$arity$0 = G__25411__0;
G__25411.cljs$core$IFn$_invoke$arity$1 = G__25411__1;
G__25411.cljs$core$IFn$_invoke$arity$2 = G__25411__2;
return G__25411;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__25409 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25409) : f.call(null,G__25409));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__25390_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__25410 = p1__25390_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25410) : f.call(null,G__25410));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__25420 = init;
var G__25421 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25420,G__25421) : f.call(null,G__25420,G__25421));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__25516 = null;
var G__25516__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__25516__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25474 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25474) : f.call(null,G__25474));
})()],null));
});
var G__25516__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25475 = x;
var G__25476 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25475,G__25476) : f.call(null,G__25475,G__25476));
})()],null));
});
var G__25516__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25477 = x;
var G__25478 = y;
var G__25479 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25477,G__25478,G__25479) : f.call(null,G__25477,G__25478,G__25479));
})()],null));
});
var G__25516__4 = (function() { 
var G__25517__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__25517 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25518__i = 0, G__25518__a = new Array(arguments.length -  3);
while (G__25518__i < G__25518__a.length) {G__25518__a[G__25518__i] = arguments[G__25518__i + 3]; ++G__25518__i;}
  args = new cljs.core.IndexedSeq(G__25518__a,0);
} 
return G__25517__delegate.call(this,x,y,z,args);};
G__25517.cljs$lang$maxFixedArity = 3;
G__25517.cljs$lang$applyTo = (function (arglist__25519){
var x = cljs.core.first(arglist__25519);
arglist__25519 = cljs.core.next(arglist__25519);
var y = cljs.core.first(arglist__25519);
arglist__25519 = cljs.core.next(arglist__25519);
var z = cljs.core.first(arglist__25519);
var args = cljs.core.rest(arglist__25519);
return G__25517__delegate(x,y,z,args);
});
G__25517.cljs$core$IFn$_invoke$arity$variadic = G__25517__delegate;
return G__25517;
})()
;
G__25516 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25516__0.call(this);
case 1:
return G__25516__1.call(this,x);
case 2:
return G__25516__2.call(this,x,y);
case 3:
return G__25516__3.call(this,x,y,z);
default:
var G__25520 = null;
if (arguments.length > 3) {
var G__25521__i = 0, G__25521__a = new Array(arguments.length -  3);
while (G__25521__i < G__25521__a.length) {G__25521__a[G__25521__i] = arguments[G__25521__i + 3]; ++G__25521__i;}
G__25520 = new cljs.core.IndexedSeq(G__25521__a,0);
}
return G__25516__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25520);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25516.cljs$lang$maxFixedArity = 3;
G__25516.cljs$lang$applyTo = G__25516__4.cljs$lang$applyTo;
G__25516.cljs$core$IFn$_invoke$arity$0 = G__25516__0;
G__25516.cljs$core$IFn$_invoke$arity$1 = G__25516__1;
G__25516.cljs$core$IFn$_invoke$arity$2 = G__25516__2;
G__25516.cljs$core$IFn$_invoke$arity$3 = G__25516__3;
G__25516.cljs$core$IFn$_invoke$arity$variadic = G__25516__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25516;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__25522 = null;
var G__25522__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__25522__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25480 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25480) : f.call(null,G__25480));
})(),(function (){var G__25481 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25481) : g.call(null,G__25481));
})()],null));
});
var G__25522__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25482 = x;
var G__25483 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25482,G__25483) : f.call(null,G__25482,G__25483));
})(),(function (){var G__25484 = x;
var G__25485 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25484,G__25485) : g.call(null,G__25484,G__25485));
})()],null));
});
var G__25522__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25486 = x;
var G__25487 = y;
var G__25488 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25486,G__25487,G__25488) : f.call(null,G__25486,G__25487,G__25488));
})(),(function (){var G__25489 = x;
var G__25490 = y;
var G__25491 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25489,G__25490,G__25491) : g.call(null,G__25489,G__25490,G__25491));
})()],null));
});
var G__25522__4 = (function() { 
var G__25523__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__25523 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25524__i = 0, G__25524__a = new Array(arguments.length -  3);
while (G__25524__i < G__25524__a.length) {G__25524__a[G__25524__i] = arguments[G__25524__i + 3]; ++G__25524__i;}
  args = new cljs.core.IndexedSeq(G__25524__a,0);
} 
return G__25523__delegate.call(this,x,y,z,args);};
G__25523.cljs$lang$maxFixedArity = 3;
G__25523.cljs$lang$applyTo = (function (arglist__25525){
var x = cljs.core.first(arglist__25525);
arglist__25525 = cljs.core.next(arglist__25525);
var y = cljs.core.first(arglist__25525);
arglist__25525 = cljs.core.next(arglist__25525);
var z = cljs.core.first(arglist__25525);
var args = cljs.core.rest(arglist__25525);
return G__25523__delegate(x,y,z,args);
});
G__25523.cljs$core$IFn$_invoke$arity$variadic = G__25523__delegate;
return G__25523;
})()
;
G__25522 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25522__0.call(this);
case 1:
return G__25522__1.call(this,x);
case 2:
return G__25522__2.call(this,x,y);
case 3:
return G__25522__3.call(this,x,y,z);
default:
var G__25526 = null;
if (arguments.length > 3) {
var G__25527__i = 0, G__25527__a = new Array(arguments.length -  3);
while (G__25527__i < G__25527__a.length) {G__25527__a[G__25527__i] = arguments[G__25527__i + 3]; ++G__25527__i;}
G__25526 = new cljs.core.IndexedSeq(G__25527__a,0);
}
return G__25522__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25526);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25522.cljs$lang$maxFixedArity = 3;
G__25522.cljs$lang$applyTo = G__25522__4.cljs$lang$applyTo;
G__25522.cljs$core$IFn$_invoke$arity$0 = G__25522__0;
G__25522.cljs$core$IFn$_invoke$arity$1 = G__25522__1;
G__25522.cljs$core$IFn$_invoke$arity$2 = G__25522__2;
G__25522.cljs$core$IFn$_invoke$arity$3 = G__25522__3;
G__25522.cljs$core$IFn$_invoke$arity$variadic = G__25522__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25522;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__25528 = null;
var G__25528__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__25528__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25492 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25492) : f.call(null,G__25492));
})(),(function (){var G__25493 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25493) : g.call(null,G__25493));
})(),(function (){var G__25494 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25494) : h.call(null,G__25494));
})()],null));
});
var G__25528__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25495 = x;
var G__25496 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25495,G__25496) : f.call(null,G__25495,G__25496));
})(),(function (){var G__25497 = x;
var G__25498 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25497,G__25498) : g.call(null,G__25497,G__25498));
})(),(function (){var G__25499 = x;
var G__25500 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25499,G__25500) : h.call(null,G__25499,G__25500));
})()],null));
});
var G__25528__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25501 = x;
var G__25502 = y;
var G__25503 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25501,G__25502,G__25503) : f.call(null,G__25501,G__25502,G__25503));
})(),(function (){var G__25504 = x;
var G__25505 = y;
var G__25506 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25504,G__25505,G__25506) : g.call(null,G__25504,G__25505,G__25506));
})(),(function (){var G__25507 = x;
var G__25508 = y;
var G__25509 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25507,G__25508,G__25509) : h.call(null,G__25507,G__25508,G__25509));
})()],null));
});
var G__25528__4 = (function() { 
var G__25529__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__25529 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25530__i = 0, G__25530__a = new Array(arguments.length -  3);
while (G__25530__i < G__25530__a.length) {G__25530__a[G__25530__i] = arguments[G__25530__i + 3]; ++G__25530__i;}
  args = new cljs.core.IndexedSeq(G__25530__a,0);
} 
return G__25529__delegate.call(this,x,y,z,args);};
G__25529.cljs$lang$maxFixedArity = 3;
G__25529.cljs$lang$applyTo = (function (arglist__25531){
var x = cljs.core.first(arglist__25531);
arglist__25531 = cljs.core.next(arglist__25531);
var y = cljs.core.first(arglist__25531);
arglist__25531 = cljs.core.next(arglist__25531);
var z = cljs.core.first(arglist__25531);
var args = cljs.core.rest(arglist__25531);
return G__25529__delegate(x,y,z,args);
});
G__25529.cljs$core$IFn$_invoke$arity$variadic = G__25529__delegate;
return G__25529;
})()
;
G__25528 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25528__0.call(this);
case 1:
return G__25528__1.call(this,x);
case 2:
return G__25528__2.call(this,x,y);
case 3:
return G__25528__3.call(this,x,y,z);
default:
var G__25532 = null;
if (arguments.length > 3) {
var G__25533__i = 0, G__25533__a = new Array(arguments.length -  3);
while (G__25533__i < G__25533__a.length) {G__25533__a[G__25533__i] = arguments[G__25533__i + 3]; ++G__25533__i;}
G__25532 = new cljs.core.IndexedSeq(G__25533__a,0);
}
return G__25528__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25528.cljs$lang$maxFixedArity = 3;
G__25528.cljs$lang$applyTo = G__25528__4.cljs$lang$applyTo;
G__25528.cljs$core$IFn$_invoke$arity$0 = G__25528__0;
G__25528.cljs$core$IFn$_invoke$arity$1 = G__25528__1;
G__25528.cljs$core$IFn$_invoke$arity$2 = G__25528__2;
G__25528.cljs$core$IFn$_invoke$arity$3 = G__25528__3;
G__25528.cljs$core$IFn$_invoke$arity$variadic = G__25528__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25528;
})()
});
var juxt__4 = (function() { 
var G__25534__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__25535 = null;
var G__25535__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25422_SHARP_,p2__25423_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25422_SHARP_,(function (){return (p2__25423_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__25423_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__25423_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25535__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25424_SHARP_,p2__25425_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25424_SHARP_,(function (){var G__25510 = x;
return (p2__25425_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__25425_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25510) : p2__25425_SHARP_.call(null,G__25510));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25535__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25426_SHARP_,p2__25427_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25426_SHARP_,(function (){var G__25511 = x;
var G__25512 = y;
return (p2__25427_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__25427_SHARP_.cljs$core$IFn$_invoke$arity$2(G__25511,G__25512) : p2__25427_SHARP_.call(null,G__25511,G__25512));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25535__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25428_SHARP_,p2__25429_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25428_SHARP_,(function (){var G__25513 = x;
var G__25514 = y;
var G__25515 = z;
return (p2__25429_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__25429_SHARP_.cljs$core$IFn$_invoke$arity$3(G__25513,G__25514,G__25515) : p2__25429_SHARP_.call(null,G__25513,G__25514,G__25515));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25535__4 = (function() { 
var G__25536__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25430_SHARP_,p2__25431_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25430_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__25431_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__25536 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25537__i = 0, G__25537__a = new Array(arguments.length -  3);
while (G__25537__i < G__25537__a.length) {G__25537__a[G__25537__i] = arguments[G__25537__i + 3]; ++G__25537__i;}
  args = new cljs.core.IndexedSeq(G__25537__a,0);
} 
return G__25536__delegate.call(this,x,y,z,args);};
G__25536.cljs$lang$maxFixedArity = 3;
G__25536.cljs$lang$applyTo = (function (arglist__25538){
var x = cljs.core.first(arglist__25538);
arglist__25538 = cljs.core.next(arglist__25538);
var y = cljs.core.first(arglist__25538);
arglist__25538 = cljs.core.next(arglist__25538);
var z = cljs.core.first(arglist__25538);
var args = cljs.core.rest(arglist__25538);
return G__25536__delegate(x,y,z,args);
});
G__25536.cljs$core$IFn$_invoke$arity$variadic = G__25536__delegate;
return G__25536;
})()
;
G__25535 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25535__0.call(this);
case 1:
return G__25535__1.call(this,x);
case 2:
return G__25535__2.call(this,x,y);
case 3:
return G__25535__3.call(this,x,y,z);
default:
var G__25539 = null;
if (arguments.length > 3) {
var G__25540__i = 0, G__25540__a = new Array(arguments.length -  3);
while (G__25540__i < G__25540__a.length) {G__25540__a[G__25540__i] = arguments[G__25540__i + 3]; ++G__25540__i;}
G__25539 = new cljs.core.IndexedSeq(G__25540__a,0);
}
return G__25535__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25535.cljs$lang$maxFixedArity = 3;
G__25535.cljs$lang$applyTo = G__25535__4.cljs$lang$applyTo;
G__25535.cljs$core$IFn$_invoke$arity$0 = G__25535__0;
G__25535.cljs$core$IFn$_invoke$arity$1 = G__25535__1;
G__25535.cljs$core$IFn$_invoke$arity$2 = G__25535__2;
G__25535.cljs$core$IFn$_invoke$arity$3 = G__25535__3;
G__25535.cljs$core$IFn$_invoke$arity$variadic = G__25535__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25535;
})()
;})(fs__$1))
};
var G__25534 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25541__i = 0, G__25541__a = new Array(arguments.length -  3);
while (G__25541__i < G__25541__a.length) {G__25541__a[G__25541__i] = arguments[G__25541__i + 3]; ++G__25541__i;}
  fs = new cljs.core.IndexedSeq(G__25541__a,0);
} 
return G__25534__delegate.call(this,f,g,h,fs);};
G__25534.cljs$lang$maxFixedArity = 3;
G__25534.cljs$lang$applyTo = (function (arglist__25542){
var f = cljs.core.first(arglist__25542);
arglist__25542 = cljs.core.next(arglist__25542);
var g = cljs.core.first(arglist__25542);
arglist__25542 = cljs.core.next(arglist__25542);
var h = cljs.core.first(arglist__25542);
var fs = cljs.core.rest(arglist__25542);
return G__25534__delegate(f,g,h,fs);
});
G__25534.cljs$core$IFn$_invoke$arity$variadic = G__25534__delegate;
return G__25534;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__25543 = null;
if (arguments.length > 3) {
var G__25544__i = 0, G__25544__a = new Array(arguments.length -  3);
while (G__25544__i < G__25544__a.length) {G__25544__a[G__25544__i] = arguments[G__25544__i + 3]; ++G__25544__i;}
G__25543 = new cljs.core.IndexedSeq(G__25544__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__25543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__25545 = cljs.core.next(coll);
coll = G__25545;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__25546 = (n - (1));
var G__25547 = cljs.core.next(coll);
n = G__25546;
coll = G__25547;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__25551 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25551,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25551,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25551,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_25559 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__13328__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__25560_25566 = cljs.core.first(coll);
var G__25561_25567 = writer;
var G__25562_25568 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25560_25566,G__25561_25567,G__25562_25568) : print_one.call(null,G__25560_25566,G__25561_25567,G__25562_25568));
} else {
}

var coll_25569__$1 = cljs.core.next(coll);
var n_25570 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_25569__$1) && (((n_25570 == null)) || (!((n_25570 === (0)))))){
cljs.core._write(writer,sep);

var G__25563_25571 = cljs.core.first(coll_25569__$1);
var G__25564_25572 = writer;
var G__25565_25573 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25563_25571,G__25564_25572,G__25565_25573) : print_one.call(null,G__25563_25571,G__25564_25572,G__25565_25573));

var G__25574 = cljs.core.next(coll_25569__$1);
var G__25575 = (n_25570 - (1));
coll_25569__$1 = G__25574;
n_25570 = G__25575;
continue;
} else {
if((cljs.core.seq(coll_25569__$1)) && ((n_25570 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__13328__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_25559;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__25580 = cljs.core.seq(ss);
var chunk__25581 = null;
var count__25582 = (0);
var i__25583 = (0);
while(true){
if((i__25583 < count__25582)){
var s = chunk__25581.cljs$core$IIndexed$_nth$arity$2(null,i__25583);
cljs.core._write(writer,s);

var G__25584 = seq__25580;
var G__25585 = chunk__25581;
var G__25586 = count__25582;
var G__25587 = (i__25583 + (1));
seq__25580 = G__25584;
chunk__25581 = G__25585;
count__25582 = G__25586;
i__25583 = G__25587;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25580);
if(temp__4126__auto__){
var seq__25580__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25580__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__25580__$1);
var G__25588 = cljs.core.chunk_rest(seq__25580__$1);
var G__25589 = c__14115__auto__;
var G__25590 = cljs.core.count(c__14115__auto__);
var G__25591 = (0);
seq__25580 = G__25588;
chunk__25581 = G__25589;
count__25582 = G__25590;
i__25583 = G__25591;
continue;
} else {
var s = cljs.core.first(seq__25580__$1);
cljs.core._write(writer,s);

var G__25592 = cljs.core.next(seq__25580__$1);
var G__25593 = null;
var G__25594 = (0);
var G__25595 = (0);
seq__25580 = G__25592;
chunk__25581 = G__25593;
count__25582 = G__25594;
i__25583 = G__25595;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__25596__i = 0, G__25596__a = new Array(arguments.length -  1);
while (G__25596__i < G__25596__a.length) {G__25596__a[G__25596__i] = arguments[G__25596__i + 1]; ++G__25596__i;}
  ss = new cljs.core.IndexedSeq(G__25596__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__25597){
var writer = cljs.core.first(arglist__25597);
var ss = cljs.core.rest(arglist__25597);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj25599 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj25599;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__25602 = "[\\\\\"\b\f\n\r\t]";
var G__25603 = "g";
return RegExp(G__25602,G__25603);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__13316__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__13316__auto__)){
var and__13316__auto____$1 = (function (){var G__25617 = obj;
if(G__25617){
var bit__14009__auto__ = (G__25617.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14009__auto__) || (G__25617.cljs$core$IMeta$)){
return true;
} else {
if((!G__25617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25617);
}
})();
if(and__13316__auto____$1){
return cljs.core.meta(obj);
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__25618_25628 = cljs.core.meta(obj);
var G__25619_25629 = writer;
var G__25620_25630 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__25618_25628,G__25619_25629,G__25620_25630) : cljs.core.pr_writer.call(null,G__25618_25628,G__25619_25629,G__25620_25630));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__25621 = obj;
if(G__25621){
var bit__14002__auto__ = (G__25621.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__14002__auto__) || (G__25621.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__25622 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__25623 = cljs.core.pr_writer;
var G__25624 = writer;
var G__25625 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__25622,G__25623,G__25624,G__25625) : cljs.core.print_map.call(null,G__25622,G__25623,G__25624,G__25625));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__25626 = obj;
return goog.isString(G__25626);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__25631 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__25631;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__25627 = obj;
if(G__25627){
var bit__14009__auto__ = (G__25627.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__14009__auto__) || (G__25627.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__25627.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25627);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25627);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__25635 = obj;
var G__25636 = writer;
var G__25637 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__25635,G__25636,G__25637) : alt_impl.call(null,G__25635,G__25636,G__25637));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__25642 = cljs.core.seq(cljs.core.next(objs));
var chunk__25643 = null;
var count__25644 = (0);
var i__25645 = (0);
while(true){
if((i__25645 < count__25644)){
var obj = chunk__25643.cljs$core$IIndexed$_nth$arity$2(null,i__25645);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25646 = seq__25642;
var G__25647 = chunk__25643;
var G__25648 = count__25644;
var G__25649 = (i__25645 + (1));
seq__25642 = G__25646;
chunk__25643 = G__25647;
count__25644 = G__25648;
i__25645 = G__25649;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25642);
if(temp__4126__auto__){
var seq__25642__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25642__$1)){
var c__14115__auto__ = cljs.core.chunk_first(seq__25642__$1);
var G__25650 = cljs.core.chunk_rest(seq__25642__$1);
var G__25651 = c__14115__auto__;
var G__25652 = cljs.core.count(c__14115__auto__);
var G__25653 = (0);
seq__25642 = G__25650;
chunk__25643 = G__25651;
count__25644 = G__25652;
i__25645 = G__25653;
continue;
} else {
var obj = cljs.core.first(seq__25642__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25654 = cljs.core.next(seq__25642__$1);
var G__25655 = null;
var G__25656 = (0);
var G__25657 = (0);
seq__25642 = G__25654;
chunk__25643 = G__25655;
count__25644 = G__25656;
i__25645 = G__25657;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25658__i = 0, G__25658__a = new Array(arguments.length -  0);
while (G__25658__i < G__25658__a.length) {G__25658__a[G__25658__i] = arguments[G__25658__i + 0]; ++G__25658__i;}
  objs = new cljs.core.IndexedSeq(G__25658__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__25659){
var objs = cljs.core.seq(arglist__25659);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25660__i = 0, G__25660__a = new Array(arguments.length -  0);
while (G__25660__i < G__25660__a.length) {G__25660__a[G__25660__i] = arguments[G__25660__i + 0]; ++G__25660__i;}
  objs = new cljs.core.IndexedSeq(G__25660__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__25661){
var objs = cljs.core.seq(arglist__25661);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25662__i = 0, G__25662__a = new Array(arguments.length -  0);
while (G__25662__i < G__25662__a.length) {G__25662__a[G__25662__i] = arguments[G__25662__i + 0]; ++G__25662__i;}
  objs = new cljs.core.IndexedSeq(G__25662__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__25663){
var objs = cljs.core.seq(arglist__25663);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25664__i = 0, G__25664__a = new Array(arguments.length -  0);
while (G__25664__i < G__25664__a.length) {G__25664__a[G__25664__i] = arguments[G__25664__i + 0]; ++G__25664__i;}
  objs = new cljs.core.IndexedSeq(G__25664__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__25665){
var objs = cljs.core.seq(arglist__25665);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25666__i = 0, G__25666__a = new Array(arguments.length -  0);
while (G__25666__i < G__25666__a.length) {G__25666__a[G__25666__i] = arguments[G__25666__i + 0]; ++G__25666__i;}
  objs = new cljs.core.IndexedSeq(G__25666__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__25667){
var objs = cljs.core.seq(arglist__25667);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25668__i = 0, G__25668__a = new Array(arguments.length -  0);
while (G__25668__i < G__25668__a.length) {G__25668__a[G__25668__i] = arguments[G__25668__i + 0]; ++G__25668__i;}
  objs = new cljs.core.IndexedSeq(G__25668__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__25669){
var objs = cljs.core.seq(arglist__25669);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25670__i = 0, G__25670__a = new Array(arguments.length -  0);
while (G__25670__i < G__25670__a.length) {G__25670__a[G__25670__i] = arguments[G__25670__i + 0]; ++G__25670__i;}
  objs = new cljs.core.IndexedSeq(G__25670__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__25671){
var objs = cljs.core.seq(arglist__25671);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25672__i = 0, G__25672__a = new Array(arguments.length -  0);
while (G__25672__i < G__25672__a.length) {G__25672__a[G__25672__i] = arguments[G__25672__i + 0]; ++G__25672__i;}
  objs = new cljs.core.IndexedSeq(G__25672__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__25673){
var objs = cljs.core.seq(arglist__25673);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__25680_25686 = cljs.core.key(e);
var G__25681_25687 = w;
var G__25682_25688 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25680_25686,G__25681_25687,G__25682_25688) : print_one.call(null,G__25680_25686,G__25681_25687,G__25682_25688));

cljs.core._write(w," ");

var G__25683 = cljs.core.val(e);
var G__25684 = w;
var G__25685 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25683,G__25684,G__25685) : print_one.call(null,G__25683,G__25684,G__25685));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__25689__i = 0, G__25689__a = new Array(arguments.length -  2);
while (G__25689__i < G__25689__a.length) {G__25689__a[G__25689__i] = arguments[G__25689__i + 2]; ++G__25689__i;}
  args = new cljs.core.IndexedSeq(G__25689__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__25690){
var iref = cljs.core.first(arglist__25690);
arglist__25690 = cljs.core.next(arglist__25690);
var f = cljs.core.first(arglist__25690);
var args = cljs.core.rest(arglist__25690);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__25693 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25693) : cljs.core.atom.call(null,G__25693));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__25695 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25695) : cljs.core.deref.call(null,G__25695));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__25696_SHARP_,p2__25697_SHARP_){
var ret = (function (){var G__25700 = p1__25696_SHARP_;
var G__25701 = p2__25697_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25700,G__25701) : rf.call(null,G__25700,G__25701));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__25704 = null;
var G__25704__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25704__1 = (function (result){
var G__25703 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25703) : rf.call(null,G__25703));
});
var G__25704__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__25704 = function(result,input){
switch(arguments.length){
case 0:
return G__25704__0.call(this);
case 1:
return G__25704__1.call(this,result);
case 2:
return G__25704__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25704.cljs$core$IFn$_invoke$arity$0 = G__25704__0;
G__25704.cljs$core$IFn$_invoke$arity$1 = G__25704__1;
G__25704.cljs$core$IFn$_invoke$arity$2 = G__25704__2;
return G__25704;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__25713 = null;
var G__25713__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25713__1 = (function (result){
var G__25709 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25709) : rf.call(null,G__25709));
});
var G__25713__2 = (function (result,input){
var prior = (function (){var G__25710 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25710) : cljs.core.deref.call(null,G__25710));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__25711 = result;
var G__25712 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25711,G__25712) : rf.call(null,G__25711,G__25712));
}
});
G__25713 = function(result,input){
switch(arguments.length){
case 0:
return G__25713__0.call(this);
case 1:
return G__25713__1.call(this,result);
case 2:
return G__25713__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25713.cljs$core$IFn$_invoke$arity$0 = G__25713__0;
G__25713.cljs$core$IFn$_invoke$arity$1 = G__25713__1;
G__25713.cljs$core$IFn$_invoke$arity$2 = G__25713__2;
return G__25713;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14306__auto__ = this;
return cljs.core.es6_iterator(this__14306__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25715_SHARP_,p2__25714_SHARP_){
var G__25717 = p2__25714_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__25717) : proc.call(null,G__25717));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj25719 = {};
return obj25719;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__13316__auto__ = x;
if(and__13316__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__13316__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13972__auto__ = (((x == null))?null:x);
return (function (){var or__13328__auto__ = (cljs.core._clj__GT_js[(function (){var G__25723 = x__13972__auto__;
return goog.typeOf(G__25723);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__13316__auto__ = x;
if(and__13316__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__13316__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13972__auto__ = (((x == null))?null:x);
return (function (){var or__13328__auto__ = (cljs.core._key__GT_js[(function (){var G__25727 = x__13972__auto__;
return goog.typeOf(G__25727);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__25730 = k;
if(G__25730){
var bit__14009__auto__ = null;
if(cljs.core.truth_((function (){var or__13328__auto__ = bit__14009__auto__;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return G__25730.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25730.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25730);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25730);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__25731 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__25731) : cljs.core.clj__GT_js.call(null,G__25731));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__25747 = x;
if(G__25747){
var bit__14009__auto__ = null;
if(cljs.core.truth_((function (){var or__13328__auto__ = bit__14009__auto__;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return G__25747.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25747.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25747);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25747);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj25749 = {};
return obj25749;
})();
var seq__25750_25760 = cljs.core.seq(x);
var chunk__25751_25761 = null;
var count__25752_25762 = (0);
var i__25753_25763 = (0);
while(true){
if((i__25753_25763 < count__25752_25762)){
var vec__25754_25764 = chunk__25751_25761.cljs$core$IIndexed$_nth$arity$2(null,i__25753_25763);
var k_25765 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25754_25764,(0),null);
var v_25766 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25754_25764,(1),null);
(m[cljs.core.key__GT_js(k_25765)] = clj__GT_js(v_25766));

var G__25767 = seq__25750_25760;
var G__25768 = chunk__25751_25761;
var G__25769 = count__25752_25762;
var G__25770 = (i__25753_25763 + (1));
seq__25750_25760 = G__25767;
chunk__25751_25761 = G__25768;
count__25752_25762 = G__25769;
i__25753_25763 = G__25770;
continue;
} else {
var temp__4126__auto___25771 = cljs.core.seq(seq__25750_25760);
if(temp__4126__auto___25771){
var seq__25750_25772__$1 = temp__4126__auto___25771;
if(cljs.core.chunked_seq_QMARK_(seq__25750_25772__$1)){
var c__14115__auto___25773 = cljs.core.chunk_first(seq__25750_25772__$1);
var G__25774 = cljs.core.chunk_rest(seq__25750_25772__$1);
var G__25775 = c__14115__auto___25773;
var G__25776 = cljs.core.count(c__14115__auto___25773);
var G__25777 = (0);
seq__25750_25760 = G__25774;
chunk__25751_25761 = G__25775;
count__25752_25762 = G__25776;
i__25753_25763 = G__25777;
continue;
} else {
var vec__25755_25778 = cljs.core.first(seq__25750_25772__$1);
var k_25779 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25755_25778,(0),null);
var v_25780 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25755_25778,(1),null);
(m[cljs.core.key__GT_js(k_25779)] = clj__GT_js(v_25780));

var G__25781 = cljs.core.next(seq__25750_25772__$1);
var G__25782 = null;
var G__25783 = (0);
var G__25784 = (0);
seq__25750_25760 = G__25781;
chunk__25751_25761 = G__25782;
count__25752_25762 = G__25783;
i__25753_25763 = G__25784;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__25756_25785 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__25757_25786 = null;
var count__25758_25787 = (0);
var i__25759_25788 = (0);
while(true){
if((i__25759_25788 < count__25758_25787)){
var x_25789__$1 = chunk__25757_25786.cljs$core$IIndexed$_nth$arity$2(null,i__25759_25788);
arr.push(x_25789__$1);

var G__25790 = seq__25756_25785;
var G__25791 = chunk__25757_25786;
var G__25792 = count__25758_25787;
var G__25793 = (i__25759_25788 + (1));
seq__25756_25785 = G__25790;
chunk__25757_25786 = G__25791;
count__25758_25787 = G__25792;
i__25759_25788 = G__25793;
continue;
} else {
var temp__4126__auto___25794 = cljs.core.seq(seq__25756_25785);
if(temp__4126__auto___25794){
var seq__25756_25795__$1 = temp__4126__auto___25794;
if(cljs.core.chunked_seq_QMARK_(seq__25756_25795__$1)){
var c__14115__auto___25796 = cljs.core.chunk_first(seq__25756_25795__$1);
var G__25797 = cljs.core.chunk_rest(seq__25756_25795__$1);
var G__25798 = c__14115__auto___25796;
var G__25799 = cljs.core.count(c__14115__auto___25796);
var G__25800 = (0);
seq__25756_25785 = G__25797;
chunk__25757_25786 = G__25798;
count__25758_25787 = G__25799;
i__25759_25788 = G__25800;
continue;
} else {
var x_25801__$1 = cljs.core.first(seq__25756_25795__$1);
arr.push(x_25801__$1);

var G__25802 = cljs.core.next(seq__25756_25795__$1);
var G__25803 = null;
var G__25804 = (0);
var G__25805 = (0);
seq__25756_25785 = G__25802;
chunk__25757_25786 = G__25803;
count__25758_25787 = G__25804;
i__25759_25788 = G__25805;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj25807 = {};
return obj25807;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__13316__auto__ = x;
if(and__13316__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__13316__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13972__auto__ = (((x == null))?null:x);
return (function (){var or__13328__auto__ = (cljs.core._js__GT_clj[(function (){var G__25811 = x__13972__auto__;
return goog.typeOf(G__25811);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__25868__delegate = function (x,opts){
var map__25841 = opts;
var map__25841__$1 = ((cljs.core.seq_QMARK_(map__25841))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25841):map__25841);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25841__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__25841,map__25841__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__25857 = x__$1;
if(G__25857){
var bit__14009__auto__ = null;
if(cljs.core.truth_((function (){var or__13328__auto__ = bit__14009__auto__;
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return G__25857.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__25857.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25857);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25857);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__14084__auto__ = ((function (map__25841,map__25841__$1,keywordize_keys,keyfn){
return (function iter__25858(s__25859){
return (new cljs.core.LazySeq(null,((function (map__25841,map__25841__$1,keywordize_keys,keyfn){
return (function (){
var s__25859__$1 = s__25859;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__25859__$1);
if(temp__4126__auto__){
var s__25859__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__25859__$2)){
var c__14082__auto__ = cljs.core.chunk_first(s__25859__$2);
var size__14083__auto__ = cljs.core.count(c__14082__auto__);
var b__25861 = cljs.core.chunk_buffer(size__14083__auto__);
if((function (){var i__25860 = (0);
while(true){
if((i__25860 < size__14083__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__14082__auto__,i__25860);
cljs.core.chunk_append(b__25861,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25866 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25866) : keyfn.call(null,G__25866));
})(),thisfn((x__$1[k]))], null));

var G__25869 = (i__25860 + (1));
i__25860 = G__25869;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__25861),iter__25858(cljs.core.chunk_rest(s__25859__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__25861),null);
}
} else {
var k = cljs.core.first(s__25859__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25867 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25867) : keyfn.call(null,G__25867));
})(),thisfn((x__$1[k]))], null),iter__25858(cljs.core.rest(s__25859__$2)));
}
} else {
return null;
}
break;
}
});})(map__25841,map__25841__$1,keywordize_keys,keyfn))
,null,null));
});})(map__25841,map__25841__$1,keywordize_keys,keyfn))
;
return iter__14084__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__25841,map__25841__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__25868 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__25870__i = 0, G__25870__a = new Array(arguments.length -  1);
while (G__25870__i < G__25870__a.length) {G__25870__a[G__25870__i] = arguments[G__25870__i + 1]; ++G__25870__i;}
  opts = new cljs.core.IndexedSeq(G__25870__a,0);
} 
return G__25868__delegate.call(this,x,opts);};
G__25868.cljs$lang$maxFixedArity = 1;
G__25868.cljs$lang$applyTo = (function (arglist__25871){
var x = cljs.core.first(arglist__25871);
var opts = cljs.core.rest(arglist__25871);
return G__25868__delegate(x,opts);
});
G__25868.cljs$core$IFn$_invoke$arity$variadic = G__25868__delegate;
return G__25868;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__25872 = null;
if (arguments.length > 1) {
var G__25873__i = 0, G__25873__a = new Array(arguments.length -  1);
while (G__25873__i < G__25873__a.length) {G__25873__a[G__25873__i] = arguments[G__25873__i + 1]; ++G__25873__i;}
G__25872 = new cljs.core.IndexedSeq(G__25873__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__25876 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25876) : cljs.core.atom.call(null,G__25876));
})();
return ((function (mem){
return (function() { 
var G__25878__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__25877 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25877) : cljs.core.deref.call(null,G__25877));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__25878 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25879__i = 0, G__25879__a = new Array(arguments.length -  0);
while (G__25879__i < G__25879__a.length) {G__25879__a[G__25879__i] = arguments[G__25879__i + 0]; ++G__25879__i;}
  args = new cljs.core.IndexedSeq(G__25879__a,0);
} 
return G__25878__delegate.call(this,args);};
G__25878.cljs$lang$maxFixedArity = 0;
G__25878.cljs$lang$applyTo = (function (arglist__25880){
var args = cljs.core.seq(arglist__25880);
return G__25878__delegate(args);
});
G__25878.cljs$core$IFn$_invoke$arity$variadic = G__25878__delegate;
return G__25878;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__25882 = ret;
f = G__25882;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__25883__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__25883 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25884__i = 0, G__25884__a = new Array(arguments.length -  1);
while (G__25884__i < G__25884__a.length) {G__25884__a[G__25884__i] = arguments[G__25884__i + 1]; ++G__25884__i;}
  args = new cljs.core.IndexedSeq(G__25884__a,0);
} 
return G__25883__delegate.call(this,f,args);};
G__25883.cljs$lang$maxFixedArity = 1;
G__25883.cljs$lang$applyTo = (function (arglist__25885){
var f = cljs.core.first(arglist__25885);
var args = cljs.core.rest(arglist__25885);
return G__25883__delegate(f,args);
});
G__25883.cljs$core$IFn$_invoke$arity$variadic = G__25883__delegate;
return G__25883;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__25886 = null;
if (arguments.length > 1) {
var G__25887__i = 0, G__25887__a = new Array(arguments.length -  1);
while (G__25887__i < G__25887__a.length) {G__25887__a[G__25887__i] = arguments[G__25887__i + 1]; ++G__25887__i;}
G__25886 = new cljs.core.IndexedSeq(G__25887__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__25886);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__25890 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25890) : Math.floor.call(null,G__25890));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__25892 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25892) : f.call(null,G__25892));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__25894 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25894) : cljs.core.atom.call(null,G__25894));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25895__i = 0, G__25895__a = new Array(arguments.length -  1);
while (G__25895__i < G__25895__a.length) {G__25895__a[G__25895__i] = arguments[G__25895__i + 1]; ++G__25895__i;}
  args = new cljs.core.IndexedSeq(G__25895__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__25896){
var f = cljs.core.first(arglist__25896);
var args = cljs.core.rest(arglist__25896);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25961 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25961) : cljs.core.deref.call(null,G__25961));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__13328__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
var and__13316__auto__ = cljs.core.vector_QMARK_(parent);
if(and__13316__auto__){
var and__13316__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__13316__auto____$1){
var and__13316__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__13316__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__25986 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__25984 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__25984) : child.call(null,G__25984));
})(),(function (){var G__25985 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__25985) : parent.call(null,G__25985));
})());
var G__25987 = (i + (1));
ret = G__25986;
i = G__25987;
continue;
}
break;
}
} else {
return and__13316__auto____$2;
}
} else {
return and__13316__auto____$1;
}
} else {
return and__13316__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__25991 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25991) : cljs.core.deref.call(null,G__25991));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__25995 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25995) : cljs.core.deref.call(null,G__25995));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__25999 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25999) : cljs.core.deref.call(null,G__25999));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__26008 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__26008) : targets.call(null,G__26008));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__26009 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__26009) : sources.call(null,G__26009));
})()));
});})(tp,td,ta))
;
var or__13328__auto__ = ((cljs.core.contains_QMARK_((function (){var G__26013 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__26013) : tp.call(null,G__26013));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__26014 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__26014) : ta.call(null,G__26014));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__26015 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__26015) : ta.call(null,G__26015));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__26022 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26022) : parentMap.call(null,G__26022));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__26023 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26023) : parentMap.call(null,G__26023));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__26016_SHARP_){
return cljs.core.cons(cljs.core.first(p1__26016_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__26016_SHARP_),cljs.core.second(p1__26016_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__26024 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__26024) : parentMap.call(null,G__26024));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__26017_SHARP_,p2__26018_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__26017_SHARP_,p2__26018_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__26027 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26027) : cljs.core.deref.call(null,G__26027));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__26028 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26028) : cljs.core.deref.call(null,G__26028));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__26044 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26044) : cljs.core.deref.call(null,G__26044));
})().call(null,x);
var or__13328__auto__ = (cljs.core.truth_((function (){var and__13316__auto__ = xprefs;
if(cljs.core.truth_(and__13316__auto__)){
var G__26046 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__26046) : xprefs.call(null,G__26046));
} else {
return and__13316__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__26047 = cljs.core.rest(ps);
ps = G__26047;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13328__auto____$1)){
return or__13328__auto____$1;
} else {
var or__13328__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__26048 = cljs.core.rest(ps);
ps = G__26048;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13328__auto____$2)){
return or__13328__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__13328__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__13328__auto__)){
return or__13328__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__26062){
var vec__26063 = p__26062;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26063,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__26063,(1),null);
var e = vec__26063;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__26064 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26064) : cljs.core.deref.call(null,G__26064));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__13328__auto__ = (be == null);
if(or__13328__auto__){
return or__13328__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__26065 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26065) : cljs.core.deref.call(null,G__26065));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__26066 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26066) : cljs.core.deref.call(null,G__26066));
})(),(function (){var G__26067 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26067) : cljs.core.deref.call(null,G__26067));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj26069 = {};
return obj26069;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__13316__auto__ = mf;
if(and__13316__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__13316__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13972__auto__ = (((mf == null))?null:mf);
return (function (){var or__13328__auto__ = (cljs.core._reset[(function (){var G__26073 = x__13972__auto__;
return goog.typeOf(G__26073);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._reset["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__13316__auto__ = mf;
if(and__13316__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__13316__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13972__auto__ = (((mf == null))?null:mf);
return (function (){var or__13328__auto__ = (cljs.core._add_method[(function (){var G__26077 = x__13972__auto__;
return goog.typeOf(G__26077);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._add_method["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__13316__auto__ = mf;
if(and__13316__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__13316__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13972__auto__ = (((mf == null))?null:mf);
return (function (){var or__13328__auto__ = (cljs.core._remove_method[(function (){var G__26081 = x__13972__auto__;
return goog.typeOf(G__26081);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._remove_method["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__13316__auto__ = mf;
if(and__13316__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__13316__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13972__auto__ = (((mf == null))?null:mf);
return (function (){var or__13328__auto__ = (cljs.core._prefer_method[(function (){var G__26085 = x__13972__auto__;
return goog.typeOf(G__26085);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__13316__auto__ = mf;
if(and__13316__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__13316__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13972__auto__ = (((mf == null))?null:mf);
return (function (){var or__13328__auto__ = (cljs.core._get_method[(function (){var G__26089 = x__13972__auto__;
return goog.typeOf(G__26089);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._get_method["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__13316__auto__ = mf;
if(and__13316__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__13316__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13972__auto__ = (((mf == null))?null:mf);
return (function (){var or__13328__auto__ = (cljs.core._methods[(function (){var G__26093 = x__13972__auto__;
return goog.typeOf(G__26093);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._methods["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__13316__auto__ = mf;
if(and__13316__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__13316__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13972__auto__ = (((mf == null))?null:mf);
return (function (){var or__13328__auto__ = (cljs.core._prefers[(function (){var G__26097 = x__13972__auto__;
return goog.typeOf(G__26097);
})()]);
if(or__13328__auto__){
return or__13328__auto__;
} else {
var or__13328__auto____$1 = (cljs.core._prefers["_"]);
if(or__13328__auto____$1){
return or__13328__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26099 = this$__$1;
return goog.getUid(G__26099);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__26100 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26100) : cljs.core.deref.call(null,G__26100));
})(),(function (){var G__26101 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26101) : cljs.core.deref.call(null,G__26101));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__26102 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26102) : cljs.core.deref.call(null,G__26102));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__26103 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26103) : cljs.core.deref.call(null,G__26103));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26104 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26104) : cljs.core.deref.call(null,G__26104));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26105 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26105) : cljs.core.deref.call(null,G__26105));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__26946 = null;
var G__26946__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__26946__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26106 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26106) : self__.dispatch_fn.call(null,G__26106));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26107 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26107) : target_fn.call(null,G__26107));
});
var G__26946__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26108 = a;
var G__26109 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26108,G__26109) : self__.dispatch_fn.call(null,G__26108,G__26109));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26110 = a;
var G__26111 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26110,G__26111) : target_fn.call(null,G__26110,G__26111));
});
var G__26946__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26112 = a;
var G__26113 = b;
var G__26114 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26112,G__26113,G__26114) : self__.dispatch_fn.call(null,G__26112,G__26113,G__26114));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26115 = a;
var G__26116 = b;
var G__26117 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26115,G__26116,G__26117) : target_fn.call(null,G__26115,G__26116,G__26117));
});
var G__26946__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26118 = a;
var G__26119 = b;
var G__26120 = c;
var G__26121 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26118,G__26119,G__26120,G__26121) : self__.dispatch_fn.call(null,G__26118,G__26119,G__26120,G__26121));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26122 = a;
var G__26123 = b;
var G__26124 = c;
var G__26125 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26122,G__26123,G__26124,G__26125) : target_fn.call(null,G__26122,G__26123,G__26124,G__26125));
});
var G__26946__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26126 = a;
var G__26127 = b;
var G__26128 = c;
var G__26129 = d;
var G__26130 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26126,G__26127,G__26128,G__26129,G__26130) : self__.dispatch_fn.call(null,G__26126,G__26127,G__26128,G__26129,G__26130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26131 = a;
var G__26132 = b;
var G__26133 = c;
var G__26134 = d;
var G__26135 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26131,G__26132,G__26133,G__26134,G__26135) : target_fn.call(null,G__26131,G__26132,G__26133,G__26134,G__26135));
});
var G__26946__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26136 = a;
var G__26137 = b;
var G__26138 = c;
var G__26139 = d;
var G__26140 = e;
var G__26141 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26136,G__26137,G__26138,G__26139,G__26140,G__26141) : self__.dispatch_fn.call(null,G__26136,G__26137,G__26138,G__26139,G__26140,G__26141));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26142 = a;
var G__26143 = b;
var G__26144 = c;
var G__26145 = d;
var G__26146 = e;
var G__26147 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26142,G__26143,G__26144,G__26145,G__26146,G__26147) : target_fn.call(null,G__26142,G__26143,G__26144,G__26145,G__26146,G__26147));
});
var G__26946__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26148 = a;
var G__26149 = b;
var G__26150 = c;
var G__26151 = d;
var G__26152 = e;
var G__26153 = f;
var G__26154 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26148,G__26149,G__26150,G__26151,G__26152,G__26153,G__26154) : self__.dispatch_fn.call(null,G__26148,G__26149,G__26150,G__26151,G__26152,G__26153,G__26154));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26155 = a;
var G__26156 = b;
var G__26157 = c;
var G__26158 = d;
var G__26159 = e;
var G__26160 = f;
var G__26161 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26155,G__26156,G__26157,G__26158,G__26159,G__26160,G__26161) : target_fn.call(null,G__26155,G__26156,G__26157,G__26158,G__26159,G__26160,G__26161));
});
var G__26946__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26162 = a;
var G__26163 = b;
var G__26164 = c;
var G__26165 = d;
var G__26166 = e;
var G__26167 = f;
var G__26168 = g;
var G__26169 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26162,G__26163,G__26164,G__26165,G__26166,G__26167,G__26168,G__26169) : self__.dispatch_fn.call(null,G__26162,G__26163,G__26164,G__26165,G__26166,G__26167,G__26168,G__26169));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26170 = a;
var G__26171 = b;
var G__26172 = c;
var G__26173 = d;
var G__26174 = e;
var G__26175 = f;
var G__26176 = g;
var G__26177 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26170,G__26171,G__26172,G__26173,G__26174,G__26175,G__26176,G__26177) : target_fn.call(null,G__26170,G__26171,G__26172,G__26173,G__26174,G__26175,G__26176,G__26177));
});
var G__26946__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26178 = a;
var G__26179 = b;
var G__26180 = c;
var G__26181 = d;
var G__26182 = e;
var G__26183 = f;
var G__26184 = g;
var G__26185 = h;
var G__26186 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26178,G__26179,G__26180,G__26181,G__26182,G__26183,G__26184,G__26185,G__26186) : self__.dispatch_fn.call(null,G__26178,G__26179,G__26180,G__26181,G__26182,G__26183,G__26184,G__26185,G__26186));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26187 = a;
var G__26188 = b;
var G__26189 = c;
var G__26190 = d;
var G__26191 = e;
var G__26192 = f;
var G__26193 = g;
var G__26194 = h;
var G__26195 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26187,G__26188,G__26189,G__26190,G__26191,G__26192,G__26193,G__26194,G__26195) : target_fn.call(null,G__26187,G__26188,G__26189,G__26190,G__26191,G__26192,G__26193,G__26194,G__26195));
});
var G__26946__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26196 = a;
var G__26197 = b;
var G__26198 = c;
var G__26199 = d;
var G__26200 = e;
var G__26201 = f;
var G__26202 = g;
var G__26203 = h;
var G__26204 = i;
var G__26205 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26196,G__26197,G__26198,G__26199,G__26200,G__26201,G__26202,G__26203,G__26204,G__26205) : self__.dispatch_fn.call(null,G__26196,G__26197,G__26198,G__26199,G__26200,G__26201,G__26202,G__26203,G__26204,G__26205));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26206 = a;
var G__26207 = b;
var G__26208 = c;
var G__26209 = d;
var G__26210 = e;
var G__26211 = f;
var G__26212 = g;
var G__26213 = h;
var G__26214 = i;
var G__26215 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26206,G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213,G__26214,G__26215) : target_fn.call(null,G__26206,G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213,G__26214,G__26215));
});
var G__26946__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26216 = a;
var G__26217 = b;
var G__26218 = c;
var G__26219 = d;
var G__26220 = e;
var G__26221 = f;
var G__26222 = g;
var G__26223 = h;
var G__26224 = i;
var G__26225 = j;
var G__26226 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225,G__26226) : self__.dispatch_fn.call(null,G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225,G__26226));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26227 = a;
var G__26228 = b;
var G__26229 = c;
var G__26230 = d;
var G__26231 = e;
var G__26232 = f;
var G__26233 = g;
var G__26234 = h;
var G__26235 = i;
var G__26236 = j;
var G__26237 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26227,G__26228,G__26229,G__26230,G__26231,G__26232,G__26233,G__26234,G__26235,G__26236,G__26237) : target_fn.call(null,G__26227,G__26228,G__26229,G__26230,G__26231,G__26232,G__26233,G__26234,G__26235,G__26236,G__26237));
});
var G__26946__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26238 = a;
var G__26239 = b;
var G__26240 = c;
var G__26241 = d;
var G__26242 = e;
var G__26243 = f;
var G__26244 = g;
var G__26245 = h;
var G__26246 = i;
var G__26247 = j;
var G__26248 = k;
var G__26249 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26238,G__26239,G__26240,G__26241,G__26242,G__26243,G__26244,G__26245,G__26246,G__26247,G__26248,G__26249) : self__.dispatch_fn.call(null,G__26238,G__26239,G__26240,G__26241,G__26242,G__26243,G__26244,G__26245,G__26246,G__26247,G__26248,G__26249));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26250 = a;
var G__26251 = b;
var G__26252 = c;
var G__26253 = d;
var G__26254 = e;
var G__26255 = f;
var G__26256 = g;
var G__26257 = h;
var G__26258 = i;
var G__26259 = j;
var G__26260 = k;
var G__26261 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256,G__26257,G__26258,G__26259,G__26260,G__26261) : target_fn.call(null,G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256,G__26257,G__26258,G__26259,G__26260,G__26261));
});
var G__26946__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26262 = a;
var G__26263 = b;
var G__26264 = c;
var G__26265 = d;
var G__26266 = e;
var G__26267 = f;
var G__26268 = g;
var G__26269 = h;
var G__26270 = i;
var G__26271 = j;
var G__26272 = k;
var G__26273 = l;
var G__26274 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26262,G__26263,G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271,G__26272,G__26273,G__26274) : self__.dispatch_fn.call(null,G__26262,G__26263,G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271,G__26272,G__26273,G__26274));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26275 = a;
var G__26276 = b;
var G__26277 = c;
var G__26278 = d;
var G__26279 = e;
var G__26280 = f;
var G__26281 = g;
var G__26282 = h;
var G__26283 = i;
var G__26284 = j;
var G__26285 = k;
var G__26286 = l;
var G__26287 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26275,G__26276,G__26277,G__26278,G__26279,G__26280,G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287) : target_fn.call(null,G__26275,G__26276,G__26277,G__26278,G__26279,G__26280,G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287));
});
var G__26946__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26288 = a;
var G__26289 = b;
var G__26290 = c;
var G__26291 = d;
var G__26292 = e;
var G__26293 = f;
var G__26294 = g;
var G__26295 = h;
var G__26296 = i;
var G__26297 = j;
var G__26298 = k;
var G__26299 = l;
var G__26300 = m;
var G__26301 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301) : self__.dispatch_fn.call(null,G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26302 = a;
var G__26303 = b;
var G__26304 = c;
var G__26305 = d;
var G__26306 = e;
var G__26307 = f;
var G__26308 = g;
var G__26309 = h;
var G__26310 = i;
var G__26311 = j;
var G__26312 = k;
var G__26313 = l;
var G__26314 = m;
var G__26315 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26302,G__26303,G__26304,G__26305,G__26306,G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315) : target_fn.call(null,G__26302,G__26303,G__26304,G__26305,G__26306,G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315));
});
var G__26946__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26316 = a;
var G__26317 = b;
var G__26318 = c;
var G__26319 = d;
var G__26320 = e;
var G__26321 = f;
var G__26322 = g;
var G__26323 = h;
var G__26324 = i;
var G__26325 = j;
var G__26326 = k;
var G__26327 = l;
var G__26328 = m;
var G__26329 = n;
var G__26330 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26316,G__26317,G__26318,G__26319,G__26320,G__26321,G__26322,G__26323,G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330) : self__.dispatch_fn.call(null,G__26316,G__26317,G__26318,G__26319,G__26320,G__26321,G__26322,G__26323,G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26331 = a;
var G__26332 = b;
var G__26333 = c;
var G__26334 = d;
var G__26335 = e;
var G__26336 = f;
var G__26337 = g;
var G__26338 = h;
var G__26339 = i;
var G__26340 = j;
var G__26341 = k;
var G__26342 = l;
var G__26343 = m;
var G__26344 = n;
var G__26345 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26331,G__26332,G__26333,G__26334,G__26335,G__26336,G__26337,G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345) : target_fn.call(null,G__26331,G__26332,G__26333,G__26334,G__26335,G__26336,G__26337,G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345));
});
var G__26946__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26346 = a;
var G__26347 = b;
var G__26348 = c;
var G__26349 = d;
var G__26350 = e;
var G__26351 = f;
var G__26352 = g;
var G__26353 = h;
var G__26354 = i;
var G__26355 = j;
var G__26356 = k;
var G__26357 = l;
var G__26358 = m;
var G__26359 = n;
var G__26360 = o;
var G__26361 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355,G__26356,G__26357,G__26358,G__26359,G__26360,G__26361) : self__.dispatch_fn.call(null,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355,G__26356,G__26357,G__26358,G__26359,G__26360,G__26361));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26362 = a;
var G__26363 = b;
var G__26364 = c;
var G__26365 = d;
var G__26366 = e;
var G__26367 = f;
var G__26368 = g;
var G__26369 = h;
var G__26370 = i;
var G__26371 = j;
var G__26372 = k;
var G__26373 = l;
var G__26374 = m;
var G__26375 = n;
var G__26376 = o;
var G__26377 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374,G__26375,G__26376,G__26377) : target_fn.call(null,G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373,G__26374,G__26375,G__26376,G__26377));
});
var G__26946__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26378 = a;
var G__26379 = b;
var G__26380 = c;
var G__26381 = d;
var G__26382 = e;
var G__26383 = f;
var G__26384 = g;
var G__26385 = h;
var G__26386 = i;
var G__26387 = j;
var G__26388 = k;
var G__26389 = l;
var G__26390 = m;
var G__26391 = n;
var G__26392 = o;
var G__26393 = p;
var G__26394 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389,G__26390,G__26391,G__26392,G__26393,G__26394) : self__.dispatch_fn.call(null,G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389,G__26390,G__26391,G__26392,G__26393,G__26394));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26395 = a;
var G__26396 = b;
var G__26397 = c;
var G__26398 = d;
var G__26399 = e;
var G__26400 = f;
var G__26401 = g;
var G__26402 = h;
var G__26403 = i;
var G__26404 = j;
var G__26405 = k;
var G__26406 = l;
var G__26407 = m;
var G__26408 = n;
var G__26409 = o;
var G__26410 = p;
var G__26411 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26395,G__26396,G__26397,G__26398,G__26399,G__26400,G__26401,G__26402,G__26403,G__26404,G__26405,G__26406,G__26407,G__26408,G__26409,G__26410,G__26411) : target_fn.call(null,G__26395,G__26396,G__26397,G__26398,G__26399,G__26400,G__26401,G__26402,G__26403,G__26404,G__26405,G__26406,G__26407,G__26408,G__26409,G__26410,G__26411));
});
var G__26946__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26412 = a;
var G__26413 = b;
var G__26414 = c;
var G__26415 = d;
var G__26416 = e;
var G__26417 = f;
var G__26418 = g;
var G__26419 = h;
var G__26420 = i;
var G__26421 = j;
var G__26422 = k;
var G__26423 = l;
var G__26424 = m;
var G__26425 = n;
var G__26426 = o;
var G__26427 = p;
var G__26428 = q;
var G__26429 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26412,G__26413,G__26414,G__26415,G__26416,G__26417,G__26418,G__26419,G__26420,G__26421,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427,G__26428,G__26429) : self__.dispatch_fn.call(null,G__26412,G__26413,G__26414,G__26415,G__26416,G__26417,G__26418,G__26419,G__26420,G__26421,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427,G__26428,G__26429));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26430 = a;
var G__26431 = b;
var G__26432 = c;
var G__26433 = d;
var G__26434 = e;
var G__26435 = f;
var G__26436 = g;
var G__26437 = h;
var G__26438 = i;
var G__26439 = j;
var G__26440 = k;
var G__26441 = l;
var G__26442 = m;
var G__26443 = n;
var G__26444 = o;
var G__26445 = p;
var G__26446 = q;
var G__26447 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26430,G__26431,G__26432,G__26433,G__26434,G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442,G__26443,G__26444,G__26445,G__26446,G__26447) : target_fn.call(null,G__26430,G__26431,G__26432,G__26433,G__26434,G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442,G__26443,G__26444,G__26445,G__26446,G__26447));
});
var G__26946__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26448 = a;
var G__26449 = b;
var G__26450 = c;
var G__26451 = d;
var G__26452 = e;
var G__26453 = f;
var G__26454 = g;
var G__26455 = h;
var G__26456 = i;
var G__26457 = j;
var G__26458 = k;
var G__26459 = l;
var G__26460 = m;
var G__26461 = n;
var G__26462 = o;
var G__26463 = p;
var G__26464 = q;
var G__26465 = r;
var G__26466 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26448,G__26449,G__26450,G__26451,G__26452,G__26453,G__26454,G__26455,G__26456,G__26457,G__26458,G__26459,G__26460,G__26461,G__26462,G__26463,G__26464,G__26465,G__26466) : self__.dispatch_fn.call(null,G__26448,G__26449,G__26450,G__26451,G__26452,G__26453,G__26454,G__26455,G__26456,G__26457,G__26458,G__26459,G__26460,G__26461,G__26462,G__26463,G__26464,G__26465,G__26466));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26467 = a;
var G__26468 = b;
var G__26469 = c;
var G__26470 = d;
var G__26471 = e;
var G__26472 = f;
var G__26473 = g;
var G__26474 = h;
var G__26475 = i;
var G__26476 = j;
var G__26477 = k;
var G__26478 = l;
var G__26479 = m;
var G__26480 = n;
var G__26481 = o;
var G__26482 = p;
var G__26483 = q;
var G__26484 = r;
var G__26485 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26467,G__26468,G__26469,G__26470,G__26471,G__26472,G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479,G__26480,G__26481,G__26482,G__26483,G__26484,G__26485) : target_fn.call(null,G__26467,G__26468,G__26469,G__26470,G__26471,G__26472,G__26473,G__26474,G__26475,G__26476,G__26477,G__26478,G__26479,G__26480,G__26481,G__26482,G__26483,G__26484,G__26485));
});
var G__26946__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26486 = a;
var G__26487 = b;
var G__26488 = c;
var G__26489 = d;
var G__26490 = e;
var G__26491 = f;
var G__26492 = g;
var G__26493 = h;
var G__26494 = i;
var G__26495 = j;
var G__26496 = k;
var G__26497 = l;
var G__26498 = m;
var G__26499 = n;
var G__26500 = o;
var G__26501 = p;
var G__26502 = q;
var G__26503 = r;
var G__26504 = s;
var G__26505 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26486,G__26487,G__26488,G__26489,G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500,G__26501,G__26502,G__26503,G__26504,G__26505) : self__.dispatch_fn.call(null,G__26486,G__26487,G__26488,G__26489,G__26490,G__26491,G__26492,G__26493,G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500,G__26501,G__26502,G__26503,G__26504,G__26505));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26506 = a;
var G__26507 = b;
var G__26508 = c;
var G__26509 = d;
var G__26510 = e;
var G__26511 = f;
var G__26512 = g;
var G__26513 = h;
var G__26514 = i;
var G__26515 = j;
var G__26516 = k;
var G__26517 = l;
var G__26518 = m;
var G__26519 = n;
var G__26520 = o;
var G__26521 = p;
var G__26522 = q;
var G__26523 = r;
var G__26524 = s;
var G__26525 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26506,G__26507,G__26508,G__26509,G__26510,G__26511,G__26512,G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523,G__26524,G__26525) : target_fn.call(null,G__26506,G__26507,G__26508,G__26509,G__26510,G__26511,G__26512,G__26513,G__26514,G__26515,G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523,G__26524,G__26525));
});
var G__26946__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__26946 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__26946__1.call(this,self__);
case 2:
return G__26946__2.call(this,self__,a);
case 3:
return G__26946__3.call(this,self__,a,b);
case 4:
return G__26946__4.call(this,self__,a,b,c);
case 5:
return G__26946__5.call(this,self__,a,b,c,d);
case 6:
return G__26946__6.call(this,self__,a,b,c,d,e);
case 7:
return G__26946__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__26946__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__26946__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__26946__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__26946__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__26946__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__26946__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__26946__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__26946__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__26946__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__26946__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__26946__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__26946__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__26946__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__26946__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__26946__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26946.cljs$core$IFn$_invoke$arity$1 = G__26946__1;
G__26946.cljs$core$IFn$_invoke$arity$2 = G__26946__2;
G__26946.cljs$core$IFn$_invoke$arity$3 = G__26946__3;
G__26946.cljs$core$IFn$_invoke$arity$4 = G__26946__4;
G__26946.cljs$core$IFn$_invoke$arity$5 = G__26946__5;
G__26946.cljs$core$IFn$_invoke$arity$6 = G__26946__6;
G__26946.cljs$core$IFn$_invoke$arity$7 = G__26946__7;
G__26946.cljs$core$IFn$_invoke$arity$8 = G__26946__8;
G__26946.cljs$core$IFn$_invoke$arity$9 = G__26946__9;
G__26946.cljs$core$IFn$_invoke$arity$10 = G__26946__10;
G__26946.cljs$core$IFn$_invoke$arity$11 = G__26946__11;
G__26946.cljs$core$IFn$_invoke$arity$12 = G__26946__12;
G__26946.cljs$core$IFn$_invoke$arity$13 = G__26946__13;
G__26946.cljs$core$IFn$_invoke$arity$14 = G__26946__14;
G__26946.cljs$core$IFn$_invoke$arity$15 = G__26946__15;
G__26946.cljs$core$IFn$_invoke$arity$16 = G__26946__16;
G__26946.cljs$core$IFn$_invoke$arity$17 = G__26946__17;
G__26946.cljs$core$IFn$_invoke$arity$18 = G__26946__18;
G__26946.cljs$core$IFn$_invoke$arity$19 = G__26946__19;
G__26946.cljs$core$IFn$_invoke$arity$20 = G__26946__20;
G__26946.cljs$core$IFn$_invoke$arity$21 = G__26946__21;
G__26946.cljs$core$IFn$_invoke$arity$22 = G__26946__22;
return G__26946;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args26098){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26098)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26526 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26526) : self__.dispatch_fn.call(null,G__26526));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26527 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26527) : target_fn.call(null,G__26527));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26528 = a;
var G__26529 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26528,G__26529) : self__.dispatch_fn.call(null,G__26528,G__26529));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26530 = a;
var G__26531 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26530,G__26531) : target_fn.call(null,G__26530,G__26531));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26532 = a;
var G__26533 = b;
var G__26534 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26532,G__26533,G__26534) : self__.dispatch_fn.call(null,G__26532,G__26533,G__26534));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26535 = a;
var G__26536 = b;
var G__26537 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26535,G__26536,G__26537) : target_fn.call(null,G__26535,G__26536,G__26537));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26538 = a;
var G__26539 = b;
var G__26540 = c;
var G__26541 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26538,G__26539,G__26540,G__26541) : self__.dispatch_fn.call(null,G__26538,G__26539,G__26540,G__26541));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26542 = a;
var G__26543 = b;
var G__26544 = c;
var G__26545 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26542,G__26543,G__26544,G__26545) : target_fn.call(null,G__26542,G__26543,G__26544,G__26545));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26546 = a;
var G__26547 = b;
var G__26548 = c;
var G__26549 = d;
var G__26550 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26546,G__26547,G__26548,G__26549,G__26550) : self__.dispatch_fn.call(null,G__26546,G__26547,G__26548,G__26549,G__26550));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26551 = a;
var G__26552 = b;
var G__26553 = c;
var G__26554 = d;
var G__26555 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26551,G__26552,G__26553,G__26554,G__26555) : target_fn.call(null,G__26551,G__26552,G__26553,G__26554,G__26555));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26556 = a;
var G__26557 = b;
var G__26558 = c;
var G__26559 = d;
var G__26560 = e;
var G__26561 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26556,G__26557,G__26558,G__26559,G__26560,G__26561) : self__.dispatch_fn.call(null,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26562 = a;
var G__26563 = b;
var G__26564 = c;
var G__26565 = d;
var G__26566 = e;
var G__26567 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26562,G__26563,G__26564,G__26565,G__26566,G__26567) : target_fn.call(null,G__26562,G__26563,G__26564,G__26565,G__26566,G__26567));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26568 = a;
var G__26569 = b;
var G__26570 = c;
var G__26571 = d;
var G__26572 = e;
var G__26573 = f;
var G__26574 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574) : self__.dispatch_fn.call(null,G__26568,G__26569,G__26570,G__26571,G__26572,G__26573,G__26574));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26575 = a;
var G__26576 = b;
var G__26577 = c;
var G__26578 = d;
var G__26579 = e;
var G__26580 = f;
var G__26581 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26575,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581) : target_fn.call(null,G__26575,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26582 = a;
var G__26583 = b;
var G__26584 = c;
var G__26585 = d;
var G__26586 = e;
var G__26587 = f;
var G__26588 = g;
var G__26589 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589) : self__.dispatch_fn.call(null,G__26582,G__26583,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26590 = a;
var G__26591 = b;
var G__26592 = c;
var G__26593 = d;
var G__26594 = e;
var G__26595 = f;
var G__26596 = g;
var G__26597 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597) : target_fn.call(null,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595,G__26596,G__26597));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26598 = a;
var G__26599 = b;
var G__26600 = c;
var G__26601 = d;
var G__26602 = e;
var G__26603 = f;
var G__26604 = g;
var G__26605 = h;
var G__26606 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606) : self__.dispatch_fn.call(null,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26607 = a;
var G__26608 = b;
var G__26609 = c;
var G__26610 = d;
var G__26611 = e;
var G__26612 = f;
var G__26613 = g;
var G__26614 = h;
var G__26615 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615) : target_fn.call(null,G__26607,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26616 = a;
var G__26617 = b;
var G__26618 = c;
var G__26619 = d;
var G__26620 = e;
var G__26621 = f;
var G__26622 = g;
var G__26623 = h;
var G__26624 = i;
var G__26625 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26616,G__26617,G__26618,G__26619,G__26620,G__26621,G__26622,G__26623,G__26624,G__26625) : self__.dispatch_fn.call(null,G__26616,G__26617,G__26618,G__26619,G__26620,G__26621,G__26622,G__26623,G__26624,G__26625));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26626 = a;
var G__26627 = b;
var G__26628 = c;
var G__26629 = d;
var G__26630 = e;
var G__26631 = f;
var G__26632 = g;
var G__26633 = h;
var G__26634 = i;
var G__26635 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635) : target_fn.call(null,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633,G__26634,G__26635));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26636 = a;
var G__26637 = b;
var G__26638 = c;
var G__26639 = d;
var G__26640 = e;
var G__26641 = f;
var G__26642 = g;
var G__26643 = h;
var G__26644 = i;
var G__26645 = j;
var G__26646 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646) : self__.dispatch_fn.call(null,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26647 = a;
var G__26648 = b;
var G__26649 = c;
var G__26650 = d;
var G__26651 = e;
var G__26652 = f;
var G__26653 = g;
var G__26654 = h;
var G__26655 = i;
var G__26656 = j;
var G__26657 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657) : target_fn.call(null,G__26647,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26658 = a;
var G__26659 = b;
var G__26660 = c;
var G__26661 = d;
var G__26662 = e;
var G__26663 = f;
var G__26664 = g;
var G__26665 = h;
var G__26666 = i;
var G__26667 = j;
var G__26668 = k;
var G__26669 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668,G__26669) : self__.dispatch_fn.call(null,G__26658,G__26659,G__26660,G__26661,G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668,G__26669));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26670 = a;
var G__26671 = b;
var G__26672 = c;
var G__26673 = d;
var G__26674 = e;
var G__26675 = f;
var G__26676 = g;
var G__26677 = h;
var G__26678 = i;
var G__26679 = j;
var G__26680 = k;
var G__26681 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681) : target_fn.call(null,G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676,G__26677,G__26678,G__26679,G__26680,G__26681));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26682 = a;
var G__26683 = b;
var G__26684 = c;
var G__26685 = d;
var G__26686 = e;
var G__26687 = f;
var G__26688 = g;
var G__26689 = h;
var G__26690 = i;
var G__26691 = j;
var G__26692 = k;
var G__26693 = l;
var G__26694 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694) : self__.dispatch_fn.call(null,G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691,G__26692,G__26693,G__26694));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26695 = a;
var G__26696 = b;
var G__26697 = c;
var G__26698 = d;
var G__26699 = e;
var G__26700 = f;
var G__26701 = g;
var G__26702 = h;
var G__26703 = i;
var G__26704 = j;
var G__26705 = k;
var G__26706 = l;
var G__26707 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707) : target_fn.call(null,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26708 = a;
var G__26709 = b;
var G__26710 = c;
var G__26711 = d;
var G__26712 = e;
var G__26713 = f;
var G__26714 = g;
var G__26715 = h;
var G__26716 = i;
var G__26717 = j;
var G__26718 = k;
var G__26719 = l;
var G__26720 = m;
var G__26721 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721) : self__.dispatch_fn.call(null,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26722 = a;
var G__26723 = b;
var G__26724 = c;
var G__26725 = d;
var G__26726 = e;
var G__26727 = f;
var G__26728 = g;
var G__26729 = h;
var G__26730 = i;
var G__26731 = j;
var G__26732 = k;
var G__26733 = l;
var G__26734 = m;
var G__26735 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735) : target_fn.call(null,G__26722,G__26723,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26736 = a;
var G__26737 = b;
var G__26738 = c;
var G__26739 = d;
var G__26740 = e;
var G__26741 = f;
var G__26742 = g;
var G__26743 = h;
var G__26744 = i;
var G__26745 = j;
var G__26746 = k;
var G__26747 = l;
var G__26748 = m;
var G__26749 = n;
var G__26750 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26736,G__26737,G__26738,G__26739,G__26740,G__26741,G__26742,G__26743,G__26744,G__26745,G__26746,G__26747,G__26748,G__26749,G__26750) : self__.dispatch_fn.call(null,G__26736,G__26737,G__26738,G__26739,G__26740,G__26741,G__26742,G__26743,G__26744,G__26745,G__26746,G__26747,G__26748,G__26749,G__26750));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26751 = a;
var G__26752 = b;
var G__26753 = c;
var G__26754 = d;
var G__26755 = e;
var G__26756 = f;
var G__26757 = g;
var G__26758 = h;
var G__26759 = i;
var G__26760 = j;
var G__26761 = k;
var G__26762 = l;
var G__26763 = m;
var G__26764 = n;
var G__26765 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26751,G__26752,G__26753,G__26754,G__26755,G__26756,G__26757,G__26758,G__26759,G__26760,G__26761,G__26762,G__26763,G__26764,G__26765) : target_fn.call(null,G__26751,G__26752,G__26753,G__26754,G__26755,G__26756,G__26757,G__26758,G__26759,G__26760,G__26761,G__26762,G__26763,G__26764,G__26765));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26766 = a;
var G__26767 = b;
var G__26768 = c;
var G__26769 = d;
var G__26770 = e;
var G__26771 = f;
var G__26772 = g;
var G__26773 = h;
var G__26774 = i;
var G__26775 = j;
var G__26776 = k;
var G__26777 = l;
var G__26778 = m;
var G__26779 = n;
var G__26780 = o;
var G__26781 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778,G__26779,G__26780,G__26781) : self__.dispatch_fn.call(null,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775,G__26776,G__26777,G__26778,G__26779,G__26780,G__26781));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26782 = a;
var G__26783 = b;
var G__26784 = c;
var G__26785 = d;
var G__26786 = e;
var G__26787 = f;
var G__26788 = g;
var G__26789 = h;
var G__26790 = i;
var G__26791 = j;
var G__26792 = k;
var G__26793 = l;
var G__26794 = m;
var G__26795 = n;
var G__26796 = o;
var G__26797 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26782,G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797) : target_fn.call(null,G__26782,G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793,G__26794,G__26795,G__26796,G__26797));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26798 = a;
var G__26799 = b;
var G__26800 = c;
var G__26801 = d;
var G__26802 = e;
var G__26803 = f;
var G__26804 = g;
var G__26805 = h;
var G__26806 = i;
var G__26807 = j;
var G__26808 = k;
var G__26809 = l;
var G__26810 = m;
var G__26811 = n;
var G__26812 = o;
var G__26813 = p;
var G__26814 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808,G__26809,G__26810,G__26811,G__26812,G__26813,G__26814) : self__.dispatch_fn.call(null,G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808,G__26809,G__26810,G__26811,G__26812,G__26813,G__26814));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26815 = a;
var G__26816 = b;
var G__26817 = c;
var G__26818 = d;
var G__26819 = e;
var G__26820 = f;
var G__26821 = g;
var G__26822 = h;
var G__26823 = i;
var G__26824 = j;
var G__26825 = k;
var G__26826 = l;
var G__26827 = m;
var G__26828 = n;
var G__26829 = o;
var G__26830 = p;
var G__26831 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831) : target_fn.call(null,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26832 = a;
var G__26833 = b;
var G__26834 = c;
var G__26835 = d;
var G__26836 = e;
var G__26837 = f;
var G__26838 = g;
var G__26839 = h;
var G__26840 = i;
var G__26841 = j;
var G__26842 = k;
var G__26843 = l;
var G__26844 = m;
var G__26845 = n;
var G__26846 = o;
var G__26847 = p;
var G__26848 = q;
var G__26849 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26832,G__26833,G__26834,G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848,G__26849) : self__.dispatch_fn.call(null,G__26832,G__26833,G__26834,G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848,G__26849));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26850 = a;
var G__26851 = b;
var G__26852 = c;
var G__26853 = d;
var G__26854 = e;
var G__26855 = f;
var G__26856 = g;
var G__26857 = h;
var G__26858 = i;
var G__26859 = j;
var G__26860 = k;
var G__26861 = l;
var G__26862 = m;
var G__26863 = n;
var G__26864 = o;
var G__26865 = p;
var G__26866 = q;
var G__26867 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26850,G__26851,G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863,G__26864,G__26865,G__26866,G__26867) : target_fn.call(null,G__26850,G__26851,G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863,G__26864,G__26865,G__26866,G__26867));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26868 = a;
var G__26869 = b;
var G__26870 = c;
var G__26871 = d;
var G__26872 = e;
var G__26873 = f;
var G__26874 = g;
var G__26875 = h;
var G__26876 = i;
var G__26877 = j;
var G__26878 = k;
var G__26879 = l;
var G__26880 = m;
var G__26881 = n;
var G__26882 = o;
var G__26883 = p;
var G__26884 = q;
var G__26885 = r;
var G__26886 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26868,G__26869,G__26870,G__26871,G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878,G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886) : self__.dispatch_fn.call(null,G__26868,G__26869,G__26870,G__26871,G__26872,G__26873,G__26874,G__26875,G__26876,G__26877,G__26878,G__26879,G__26880,G__26881,G__26882,G__26883,G__26884,G__26885,G__26886));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26887 = a;
var G__26888 = b;
var G__26889 = c;
var G__26890 = d;
var G__26891 = e;
var G__26892 = f;
var G__26893 = g;
var G__26894 = h;
var G__26895 = i;
var G__26896 = j;
var G__26897 = k;
var G__26898 = l;
var G__26899 = m;
var G__26900 = n;
var G__26901 = o;
var G__26902 = p;
var G__26903 = q;
var G__26904 = r;
var G__26905 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26887,G__26888,G__26889,G__26890,G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905) : target_fn.call(null,G__26887,G__26888,G__26889,G__26890,G__26891,G__26892,G__26893,G__26894,G__26895,G__26896,G__26897,G__26898,G__26899,G__26900,G__26901,G__26902,G__26903,G__26904,G__26905));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26906 = a;
var G__26907 = b;
var G__26908 = c;
var G__26909 = d;
var G__26910 = e;
var G__26911 = f;
var G__26912 = g;
var G__26913 = h;
var G__26914 = i;
var G__26915 = j;
var G__26916 = k;
var G__26917 = l;
var G__26918 = m;
var G__26919 = n;
var G__26920 = o;
var G__26921 = p;
var G__26922 = q;
var G__26923 = r;
var G__26924 = s;
var G__26925 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26906,G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921,G__26922,G__26923,G__26924,G__26925) : self__.dispatch_fn.call(null,G__26906,G__26907,G__26908,G__26909,G__26910,G__26911,G__26912,G__26913,G__26914,G__26915,G__26916,G__26917,G__26918,G__26919,G__26920,G__26921,G__26922,G__26923,G__26924,G__26925));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26926 = a;
var G__26927 = b;
var G__26928 = c;
var G__26929 = d;
var G__26930 = e;
var G__26931 = f;
var G__26932 = g;
var G__26933 = h;
var G__26934 = i;
var G__26935 = j;
var G__26936 = k;
var G__26937 = l;
var G__26938 = m;
var G__26939 = n;
var G__26940 = o;
var G__26941 = p;
var G__26942 = q;
var G__26943 = r;
var G__26944 = s;
var G__26945 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26926,G__26927,G__26928,G__26929,G__26930,G__26931,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945) : target_fn.call(null,G__26926,G__26927,G__26928,G__26929,G__26930,G__26931,G__26932,G__26933,G__26934,G__26935,G__26936,G__26937,G__26938,G__26939,G__26940,G__26941,G__26942,G__26943,G__26944,G__26945));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26947 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__26947);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13915__auto__,writer__13916__auto__,opt__13917__auto__){
return cljs.core._write(writer__13916__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__26952 = msg;
return Error(G__26952);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__26957 = x;
var G__26958 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26957,G__26958) : pred.call(null,G__26957,G__26958));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__26959 = y;
var G__26960 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26959,G__26960) : pred.call(null,G__26959,G__26960));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map
// Compiled by ClojureScript 0.0-2843 {:elide-asserts false, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2843";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__20758__delegate = function (args){
return console.log.apply(console,(function (){var G__20757 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__20757) : cljs.core.into_array.call(null,G__20757));
})());
};
var G__20758 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20759__i = 0, G__20759__a = new Array(arguments.length -  0);
while (G__20759__i < G__20759__a.length) {G__20759__a[G__20759__i] = arguments[G__20759__i + 0]; ++G__20759__i;}
  args = new cljs.core.IndexedSeq(G__20759__a,0);
} 
return G__20758__delegate.call(this,args);};
G__20758.cljs$lang$maxFixedArity = 0;
G__20758.cljs$lang$applyTo = (function (arglist__20760){
var args = cljs.core.seq(arglist__20760);
return G__20758__delegate(args);
});
G__20758.cljs$core$IFn$_invoke$arity$variadic = G__20758__delegate;
return G__20758;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__20762 = x;
return goog.isString(G__20762);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__20764 = x__$1;
return goog.typeOf(G__20764);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__13311__auto__ = ty;
if(cljs.core.truth_(and__13311__auto__)){
return ty.cljs$lang$type;
} else {
return and__13311__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__20766 = obj;
return goog.typeOf(G__20766);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__20768 = Symbol;
return goog.typeOf(G__20768);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__14210__auto___20770 = len;
var i_20771 = (0);
while(true){
if((i_20771 < n__14210__auto___20770)){
(new_arr[i_20771] = (arr[i_20771]));

var G__20772 = (i_20771 + (1));
i_20771 = G__20772;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__20773 = (i + (1));
i = G__20773;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__20782__delegate = function (array,i,idxs){
var G__20779 = aget;
var G__20780 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__20781 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20779,G__20780,G__20781) : cljs.core.apply.call(null,G__20779,G__20780,G__20781));
};
var G__20782 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__20783__i = 0, G__20783__a = new Array(arguments.length -  2);
while (G__20783__i < G__20783__a.length) {G__20783__a[G__20783__i] = arguments[G__20783__i + 2]; ++G__20783__i;}
  idxs = new cljs.core.IndexedSeq(G__20783__a,0);
} 
return G__20782__delegate.call(this,array,i,idxs);};
G__20782.cljs$lang$maxFixedArity = 2;
G__20782.cljs$lang$applyTo = (function (arglist__20784){
var array = cljs.core.first(arglist__20784);
arglist__20784 = cljs.core.next(arglist__20784);
var i = cljs.core.first(arglist__20784);
var idxs = cljs.core.rest(arglist__20784);
return G__20782__delegate(array,i,idxs);
});
G__20782.cljs$core$IFn$_invoke$arity$variadic = G__20782__delegate;
return G__20782;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__20785 = null;
if (arguments.length > 2) {
var G__20786__i = 0, G__20786__a = new Array(arguments.length -  2);
while (G__20786__i < G__20786__a.length) {G__20786__a[G__20786__i] = arguments[G__20786__i + 2]; ++G__20786__i;}
G__20785 = new cljs.core.IndexedSeq(G__20786__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__20785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__20795__delegate = function (array,idx,idx2,idxv){
var G__20791 = aset;
var G__20792 = (array[idx]);
var G__20793 = idx2;
var G__20794 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__20791,G__20792,G__20793,G__20794) : cljs.core.apply.call(null,G__20791,G__20792,G__20793,G__20794));
};
var G__20795 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__20796__i = 0, G__20796__a = new Array(arguments.length -  3);
while (G__20796__i < G__20796__a.length) {G__20796__a[G__20796__i] = arguments[G__20796__i + 3]; ++G__20796__i;}
  idxv = new cljs.core.IndexedSeq(G__20796__a,0);
} 
return G__20795__delegate.call(this,array,idx,idx2,idxv);};
G__20795.cljs$lang$maxFixedArity = 3;
G__20795.cljs$lang$applyTo = (function (arglist__20797){
var array = cljs.core.first(arglist__20797);
arglist__20797 = cljs.core.next(arglist__20797);
var idx = cljs.core.first(arglist__20797);
arglist__20797 = cljs.core.next(arglist__20797);
var idx2 = cljs.core.first(arglist__20797);
var idxv = cljs.core.rest(arglist__20797);
return G__20795__delegate(array,idx,idx2,idxv);
});
G__20795.cljs$core$IFn$_invoke$arity$variadic = G__20795__delegate;
return G__20795;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__20798 = null;
if (arguments.length > 3) {
var G__20799__i = 0, G__20799__a = new Array(arguments.length -  3);
while (G__20799__i < G__20799__a.length) {G__20799__a[G__20799__i] = arguments[G__20799__i + 3]; ++G__20799__i;}
G__20798 = new cljs.core.IndexedSeq(G__20799__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__20798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__20805 = (function (a,x){
a.push(x);

return a;
});
var G__20806 = [];
var G__20807 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20805,G__20806,G__20807) : cljs.core.reduce.call(null,G__20805,G__20806,G__20807));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__20808__i = 0, G__20808__a = new Array(arguments.length -  2);
while (G__20808__i < G__20808__a.length) {G__20808__a[G__20808__i] = arguments[G__20808__i + 2]; ++G__20808__i;}
  args = new cljs.core.IndexedSeq(G__20808__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__20809){
var obj = cljs.core.first(arglist__20809);
arglist__20809 = cljs.core.next(arglist__20809);
var s = cljs.core.first(arglist__20809);
var args = cljs.core.rest(arglist__20809);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj20811 = {};
return obj20811;
})();


cljs.core.IFn = (function (){var obj20813 = {};
return obj20813;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20859 = x__13967__auto__;
return goog.typeOf(G__20859);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20861 = x__13967__auto__;
return goog.typeOf(G__20861);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20863 = x__13967__auto__;
return goog.typeOf(G__20863);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20865 = x__13967__auto__;
return goog.typeOf(G__20865);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20867 = x__13967__auto__;
return goog.typeOf(G__20867);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20869 = x__13967__auto__;
return goog.typeOf(G__20869);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20871 = x__13967__auto__;
return goog.typeOf(G__20871);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20873 = x__13967__auto__;
return goog.typeOf(G__20873);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20875 = x__13967__auto__;
return goog.typeOf(G__20875);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20877 = x__13967__auto__;
return goog.typeOf(G__20877);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20879 = x__13967__auto__;
return goog.typeOf(G__20879);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20881 = x__13967__auto__;
return goog.typeOf(G__20881);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20883 = x__13967__auto__;
return goog.typeOf(G__20883);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20885 = x__13967__auto__;
return goog.typeOf(G__20885);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20887 = x__13967__auto__;
return goog.typeOf(G__20887);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20889 = x__13967__auto__;
return goog.typeOf(G__20889);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20891 = x__13967__auto__;
return goog.typeOf(G__20891);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20893 = x__13967__auto__;
return goog.typeOf(G__20893);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20895 = x__13967__auto__;
return goog.typeOf(G__20895);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20897 = x__13967__auto__;
return goog.typeOf(G__20897);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20899 = x__13967__auto__;
return goog.typeOf(G__20899);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._invoke[(function (){var G__20901 = x__13967__auto__;
return goog.typeOf(G__20901);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._invoke["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj20903 = {};
return obj20903;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__13311__auto__ = value;
if(and__13311__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__13311__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__13967__auto__ = (((value == null))?null:value);
return (function (){var or__13323__auto__ = (cljs.core._clone[(function (){var G__20907 = x__13967__auto__;
return goog.typeOf(G__20907);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._clone["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj20909 = {};
return obj20909;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._count[(function (){var G__20913 = x__13967__auto__;
return goog.typeOf(G__20913);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._count["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj20915 = {};
return obj20915;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._empty[(function (){var G__20919 = x__13967__auto__;
return goog.typeOf(G__20919);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._empty["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj20921 = {};
return obj20921;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._conj[(function (){var G__20925 = x__13967__auto__;
return goog.typeOf(G__20925);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._conj["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj20927 = {};
return obj20927;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._nth[(function (){var G__20933 = x__13967__auto__;
return goog.typeOf(G__20933);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._nth["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._nth[(function (){var G__20935 = x__13967__auto__;
return goog.typeOf(G__20935);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._nth["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj20937 = {};
return obj20937;
})();


cljs.core.ISeq = (function (){var obj20939 = {};
return obj20939;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._first[(function (){var G__20943 = x__13967__auto__;
return goog.typeOf(G__20943);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._first["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._rest[(function (){var G__20947 = x__13967__auto__;
return goog.typeOf(G__20947);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._rest["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj20949 = {};
return obj20949;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._next[(function (){var G__20953 = x__13967__auto__;
return goog.typeOf(G__20953);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._next["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj20955 = {};
return obj20955;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._lookup[(function (){var G__20961 = x__13967__auto__;
return goog.typeOf(G__20961);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._lookup["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._lookup[(function (){var G__20963 = x__13967__auto__;
return goog.typeOf(G__20963);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._lookup["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj20965 = {};
return obj20965;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__20969 = x__13967__auto__;
return goog.typeOf(G__20969);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._assoc[(function (){var G__20973 = x__13967__auto__;
return goog.typeOf(G__20973);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._assoc["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj20975 = {};
return obj20975;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._dissoc[(function (){var G__20979 = x__13967__auto__;
return goog.typeOf(G__20979);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._dissoc["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj20981 = {};
return obj20981;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._key[(function (){var G__20985 = x__13967__auto__;
return goog.typeOf(G__20985);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._key["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._val[(function (){var G__20989 = x__13967__auto__;
return goog.typeOf(G__20989);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._val["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj20991 = {};
return obj20991;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._disjoin[(function (){var G__20995 = x__13967__auto__;
return goog.typeOf(G__20995);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._disjoin["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj20997 = {};
return obj20997;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._peek[(function (){var G__21001 = x__13967__auto__;
return goog.typeOf(G__21001);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._peek["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._pop[(function (){var G__21005 = x__13967__auto__;
return goog.typeOf(G__21005);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._pop["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj21007 = {};
return obj21007;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._assoc_n[(function (){var G__21011 = x__13967__auto__;
return goog.typeOf(G__21011);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj21013 = {};
return obj21013;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._deref[(function (){var G__21017 = x__13967__auto__;
return goog.typeOf(G__21017);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._deref["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj21019 = {};
return obj21019;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._deref_with_timeout[(function (){var G__21023 = x__13967__auto__;
return goog.typeOf(G__21023);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj21025 = {};
return obj21025;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._meta[(function (){var G__21029 = x__13967__auto__;
return goog.typeOf(G__21029);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._meta["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj21031 = {};
return obj21031;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._with_meta[(function (){var G__21035 = x__13967__auto__;
return goog.typeOf(G__21035);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._with_meta["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj21037 = {};
return obj21037;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._reduce[(function (){var G__21043 = x__13967__auto__;
return goog.typeOf(G__21043);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._reduce["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._reduce[(function (){var G__21045 = x__13967__auto__;
return goog.typeOf(G__21045);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._reduce["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj21047 = {};
return obj21047;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._kv_reduce[(function (){var G__21051 = x__13967__auto__;
return goog.typeOf(G__21051);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj21053 = {};
return obj21053;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._equiv[(function (){var G__21057 = x__13967__auto__;
return goog.typeOf(G__21057);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._equiv["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj21059 = {};
return obj21059;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._hash[(function (){var G__21063 = x__13967__auto__;
return goog.typeOf(G__21063);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._hash["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj21065 = {};
return obj21065;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._seq[(function (){var G__21069 = x__13967__auto__;
return goog.typeOf(G__21069);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._seq["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj21071 = {};
return obj21071;
})();


cljs.core.IList = (function (){var obj21073 = {};
return obj21073;
})();


cljs.core.IRecord = (function (){var obj21075 = {};
return obj21075;
})();


cljs.core.IReversible = (function (){var obj21077 = {};
return obj21077;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._rseq[(function (){var G__21081 = x__13967__auto__;
return goog.typeOf(G__21081);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._rseq["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj21083 = {};
return obj21083;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._sorted_seq[(function (){var G__21087 = x__13967__auto__;
return goog.typeOf(G__21087);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._sorted_seq_from[(function (){var G__21091 = x__13967__auto__;
return goog.typeOf(G__21091);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._entry_key[(function (){var G__21095 = x__13967__auto__;
return goog.typeOf(G__21095);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._entry_key["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._comparator[(function (){var G__21099 = x__13967__auto__;
return goog.typeOf(G__21099);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._comparator["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj21101 = {};
return obj21101;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__13311__auto__ = writer;
if(and__13311__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__13311__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__13967__auto__ = (((writer == null))?null:writer);
return (function (){var or__13323__auto__ = (cljs.core._write[(function (){var G__21105 = x__13967__auto__;
return goog.typeOf(G__21105);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._write["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__13311__auto__ = writer;
if(and__13311__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__13311__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__13967__auto__ = (((writer == null))?null:writer);
return (function (){var or__13323__auto__ = (cljs.core._flush[(function (){var G__21109 = x__13967__auto__;
return goog.typeOf(G__21109);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._flush["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj21111 = {};
return obj21111;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._pr_writer[(function (){var G__21115 = x__13967__auto__;
return goog.typeOf(G__21115);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj21117 = {};
return obj21117;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__13311__auto__ = d;
if(and__13311__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__13311__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__13967__auto__ = (((d == null))?null:d);
return (function (){var or__13323__auto__ = (cljs.core._realized_QMARK_[(function (){var G__21121 = x__13967__auto__;
return goog.typeOf(G__21121);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj21123 = {};
return obj21123;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._notify_watches[(function (){var G__21127 = x__13967__auto__;
return goog.typeOf(G__21127);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._add_watch[(function (){var G__21131 = x__13967__auto__;
return goog.typeOf(G__21131);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._add_watch["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__13311__auto__ = this$;
if(and__13311__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__13311__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__13967__auto__ = (((this$ == null))?null:this$);
return (function (){var or__13323__auto__ = (cljs.core._remove_watch[(function (){var G__21135 = x__13967__auto__;
return goog.typeOf(G__21135);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj21137 = {};
return obj21137;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._as_transient[(function (){var G__21141 = x__13967__auto__;
return goog.typeOf(G__21141);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._as_transient["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj21143 = {};
return obj21143;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__13311__auto__ = tcoll;
if(and__13311__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__13311__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__13967__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13323__auto__ = (cljs.core._conj_BANG_[(function (){var G__21147 = x__13967__auto__;
return goog.typeOf(G__21147);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__13311__auto__ = tcoll;
if(and__13311__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__13311__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__13967__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13323__auto__ = (cljs.core._persistent_BANG_[(function (){var G__21151 = x__13967__auto__;
return goog.typeOf(G__21151);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj21153 = {};
return obj21153;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__13311__auto__ = tcoll;
if(and__13311__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__13311__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__13967__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13323__auto__ = (cljs.core._assoc_BANG_[(function (){var G__21157 = x__13967__auto__;
return goog.typeOf(G__21157);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj21159 = {};
return obj21159;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__13311__auto__ = tcoll;
if(and__13311__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__13311__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__13967__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13323__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__21163 = x__13967__auto__;
return goog.typeOf(G__21163);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj21165 = {};
return obj21165;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__13311__auto__ = tcoll;
if(and__13311__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__13311__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__13967__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13323__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__21169 = x__13967__auto__;
return goog.typeOf(G__21169);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__13311__auto__ = tcoll;
if(and__13311__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__13311__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__13967__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13323__auto__ = (cljs.core._pop_BANG_[(function (){var G__21173 = x__13967__auto__;
return goog.typeOf(G__21173);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj21175 = {};
return obj21175;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__13311__auto__ = tcoll;
if(and__13311__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__13311__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__13967__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__13323__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__21179 = x__13967__auto__;
return goog.typeOf(G__21179);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj21181 = {};
return obj21181;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__13311__auto__ = x;
if(and__13311__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__13311__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__13967__auto__ = (((x == null))?null:x);
return (function (){var or__13323__auto__ = (cljs.core._compare[(function (){var G__21185 = x__13967__auto__;
return goog.typeOf(G__21185);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._compare["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj21187 = {};
return obj21187;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._drop_first[(function (){var G__21191 = x__13967__auto__;
return goog.typeOf(G__21191);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._drop_first["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj21193 = {};
return obj21193;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._chunked_first[(function (){var G__21197 = x__13967__auto__;
return goog.typeOf(G__21197);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._chunked_rest[(function (){var G__21201 = x__13967__auto__;
return goog.typeOf(G__21201);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj21203 = {};
return obj21203;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._chunked_next[(function (){var G__21207 = x__13967__auto__;
return goog.typeOf(G__21207);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj21209 = {};
return obj21209;
})();

cljs.core._name = (function _name(x){
if((function (){var and__13311__auto__ = x;
if(and__13311__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__13311__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__13967__auto__ = (((x == null))?null:x);
return (function (){var or__13323__auto__ = (cljs.core._name[(function (){var G__21213 = x__13967__auto__;
return goog.typeOf(G__21213);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._name["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__13311__auto__ = x;
if(and__13311__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__13311__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__13967__auto__ = (((x == null))?null:x);
return (function (){var or__13323__auto__ = (cljs.core._namespace[(function (){var G__21217 = x__13967__auto__;
return goog.typeOf(G__21217);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._namespace["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj21219 = {};
return obj21219;
})();


cljs.core.IReset = (function (){var obj21221 = {};
return obj21221;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._reset_BANG_[(function (){var G__21225 = x__13967__auto__;
return goog.typeOf(G__21225);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj21227 = {};
return obj21227;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._swap_BANG_[(function (){var G__21237 = x__13967__auto__;
return goog.typeOf(G__21237);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._swap_BANG_[(function (){var G__21239 = x__13967__auto__;
return goog.typeOf(G__21239);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._swap_BANG_[(function (){var G__21241 = x__13967__auto__;
return goog.typeOf(G__21241);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._swap_BANG_[(function (){var G__21243 = x__13967__auto__;
return goog.typeOf(G__21243);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj21245 = {};
return obj21245;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__13311__auto__ = o;
if(and__13311__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__13311__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__13967__auto__ = (((o == null))?null:o);
return (function (){var or__13323__auto__ = (cljs.core._vreset_BANG_[(function (){var G__21249 = x__13967__auto__;
return goog.typeOf(G__21249);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj21251 = {};
return obj21251;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__13311__auto__ = coll;
if(and__13311__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__13311__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__13967__auto__ = (((coll == null))?null:coll);
return (function (){var or__13323__auto__ = (cljs.core._iterator[(function (){var G__21255 = x__13967__auto__;
return goog.typeOf(G__21255);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._iterator["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__21258 = (4294967295);
var G__21259 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21258,G__21259) : Math.imul.call(null,G__21258,G__21259));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__21262 = a;
var G__21263 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__21262,G__21263) : Math.imul.call(null,G__21262,G__21263));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__21264 = (i + (2));
var G__21265 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__21264;
h1 = G__21265;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj21267 = {};
return obj21267;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__21268 = (i + (1));
var G__21269 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__21268;
hash = G__21269;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj21273 = {};
return obj21273;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__21276 = o;
if(G__21276){
var bit__13997__auto__ = (G__21276.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__13997__auto__) || (G__21276.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__21277 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__21277) : Math.floor.call(null,G__21277));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13311__auto__ = cljs.core.not(a.ns);
if(and__13311__auto__){
return b.ns;
} else {
return and__13311__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__21284 = a.ns;
var G__21285 = b.ns;
return goog.array.defaultCompare(G__21284,G__21285);
})();
if(((0) === nsc)){
var G__21286 = a.name;
var G__21287 = b.name;
return goog.array.defaultCompare(G__21286,G__21287);
} else {
return nsc;
}
}
} else {
var G__21288 = a.name;
var G__21289 = b.name;
return goog.array.defaultCompare(G__21288,G__21289);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__13744__auto__ = self__._hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__21291 = null;
var G__21291__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__21291__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__21291 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__21291__2.call(this,self__,coll);
case 3:
return G__21291__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21291.cljs$core$IFn$_invoke$arity$2 = G__21291__2;
G__21291.cljs$core$IFn$_invoke$arity$3 = G__21291__3;
return G__21291;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args21290){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21290)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__21339 = null;
var G__21339__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__21339__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__21339__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__21339__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__21339__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__21339__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__21339__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__21339__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__21339__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__21339__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__21339__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__21339__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__21339__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__21339__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__21339__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__21339__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__21339__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__21339__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__21339__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__21339__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__21339__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__21339__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21295 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21296 = a;
var G__21297 = b;
var G__21298 = c;
var G__21299 = d;
var G__21300 = e;
var G__21301 = f;
var G__21302 = g;
var G__21303 = h;
var G__21304 = i;
var G__21305 = j;
var G__21306 = k;
var G__21307 = l;
var G__21308 = m;
var G__21309 = n;
var G__21310 = o;
var G__21311 = p;
var G__21312 = q;
var G__21313 = r;
var G__21314 = s;
var G__21315 = t;
var G__21316 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21295,G__21296,G__21297,G__21298,G__21299,G__21300,G__21301,G__21302,G__21303,G__21304,G__21305,G__21306,G__21307,G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316) : cljs.core.apply.call(null,G__21295,G__21296,G__21297,G__21298,G__21299,G__21300,G__21301,G__21302,G__21303,G__21304,G__21305,G__21306,G__21307,G__21308,G__21309,G__21310,G__21311,G__21312,G__21313,G__21314,G__21315,G__21316));
});
G__21339 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21339__1.call(this,self__);
case 2:
return G__21339__2.call(this,self__,a);
case 3:
return G__21339__3.call(this,self__,a,b);
case 4:
return G__21339__4.call(this,self__,a,b,c);
case 5:
return G__21339__5.call(this,self__,a,b,c,d);
case 6:
return G__21339__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21339__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21339__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21339__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21339__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21339__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21339__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21339__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21339__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21339__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21339__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21339__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21339__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21339__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21339__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21339__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21339__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21339.cljs$core$IFn$_invoke$arity$1 = G__21339__1;
G__21339.cljs$core$IFn$_invoke$arity$2 = G__21339__2;
G__21339.cljs$core$IFn$_invoke$arity$3 = G__21339__3;
G__21339.cljs$core$IFn$_invoke$arity$4 = G__21339__4;
G__21339.cljs$core$IFn$_invoke$arity$5 = G__21339__5;
G__21339.cljs$core$IFn$_invoke$arity$6 = G__21339__6;
G__21339.cljs$core$IFn$_invoke$arity$7 = G__21339__7;
G__21339.cljs$core$IFn$_invoke$arity$8 = G__21339__8;
G__21339.cljs$core$IFn$_invoke$arity$9 = G__21339__9;
G__21339.cljs$core$IFn$_invoke$arity$10 = G__21339__10;
G__21339.cljs$core$IFn$_invoke$arity$11 = G__21339__11;
G__21339.cljs$core$IFn$_invoke$arity$12 = G__21339__12;
G__21339.cljs$core$IFn$_invoke$arity$13 = G__21339__13;
G__21339.cljs$core$IFn$_invoke$arity$14 = G__21339__14;
G__21339.cljs$core$IFn$_invoke$arity$15 = G__21339__15;
G__21339.cljs$core$IFn$_invoke$arity$16 = G__21339__16;
G__21339.cljs$core$IFn$_invoke$arity$17 = G__21339__17;
G__21339.cljs$core$IFn$_invoke$arity$18 = G__21339__18;
G__21339.cljs$core$IFn$_invoke$arity$19 = G__21339__19;
G__21339.cljs$core$IFn$_invoke$arity$20 = G__21339__20;
G__21339.cljs$core$IFn$_invoke$arity$21 = G__21339__21;
G__21339.cljs$core$IFn$_invoke$arity$22 = G__21339__22;
return G__21339;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args21294){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21294)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21317 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__21318 = a;
var G__21319 = b;
var G__21320 = c;
var G__21321 = d;
var G__21322 = e;
var G__21323 = f;
var G__21324 = g;
var G__21325 = h;
var G__21326 = i;
var G__21327 = j;
var G__21328 = k;
var G__21329 = l;
var G__21330 = m;
var G__21331 = n;
var G__21332 = o;
var G__21333 = p;
var G__21334 = q;
var G__21335 = r;
var G__21336 = s;
var G__21337 = t;
var G__21338 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21317,G__21318,G__21319,G__21320,G__21321,G__21322,G__21323,G__21324,G__21325,G__21326,G__21327,G__21328,G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338) : cljs.core.apply.call(null,G__21317,G__21318,G__21319,G__21320,G__21321,G__21322,G__21323,G__21324,G__21325,G__21326,G__21327,G__21328,G__21329,G__21330,G__21331,G__21332,G__21333,G__21334,G__21335,G__21336,G__21337,G__21338));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__21341 = x;
if(G__21341){
var bit__14004__auto__ = null;
if(cljs.core.truth_((function (){var or__13323__auto__ = bit__14004__auto__;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return G__21341.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__21341.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21341);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__21341);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__21343 = value;
if(G__21343){
var bit__14004__auto__ = (G__21343.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__14004__auto__) || (G__21343.cljs$core$ICloneable$)){
return true;
} else {
if((!G__21343.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21343);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__21343);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21345 = coll;
if(G__21345){
var bit__13997__auto__ = (G__21345.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__13997__auto__) || (G__21345.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21347 = coll;
if(G__21347){
var bit__13997__auto__ = (G__21347.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13997__auto__) || (G__21347.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__21349 = coll;
if(G__21349){
var bit__13997__auto__ = (G__21349.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13997__auto__) || (G__21349.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__21351 = coll;
if(G__21351){
var bit__13997__auto__ = (G__21351.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__13997__auto__) || (G__21351.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__21356__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__21357 = y;
var G__21358 = cljs.core.first(more);
var G__21359 = cljs.core.next(more);
x = G__21357;
y = G__21358;
more = G__21359;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__21356 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__21360__i = 0, G__21360__a = new Array(arguments.length -  2);
while (G__21360__i < G__21360__a.length) {G__21360__a[G__21360__i] = arguments[G__21360__i + 2]; ++G__21360__i;}
  more = new cljs.core.IndexedSeq(G__21360__a,0);
} 
return G__21356__delegate.call(this,x,y,more);};
G__21356.cljs$lang$maxFixedArity = 2;
G__21356.cljs$lang$applyTo = (function (arglist__21361){
var x = cljs.core.first(arglist__21361);
arglist__21361 = cljs.core.next(arglist__21361);
var y = cljs.core.first(arglist__21361);
var more = cljs.core.rest(arglist__21361);
return G__21356__delegate(x,y,more);
});
G__21356.cljs$core$IFn$_invoke$arity$variadic = G__21356__delegate;
return G__21356;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__21362 = null;
if (arguments.length > 2) {
var G__21363__i = 0, G__21363__a = new Array(arguments.length -  2);
while (G__21363__i < G__21363__a.length) {G__21363__a[G__21363__i] = arguments[G__21363__i + 2]; ++G__21363__i;}
G__21362 = new cljs.core.IndexedSeq(G__21363__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__21362);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__21364 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__21364) : cljs.core.es6_iterator_seq.call(null,G__21364));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21365 = (n + (1));
var G__21366 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21367 = cljs.core.next(coll__$1);
n = G__21365;
hash_code = G__21366;
coll__$1 = G__21367;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__21368 = (n + (1));
var G__21369 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__21370 = cljs.core.next(coll__$1);
n = G__21368;
hash_code = G__21369;
coll__$1 = G__21370;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__21371 = o;
return goog.getUid(G__21371);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__21373 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__21373) : cljs.core.deref.call(null,G__21373));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21380 = val;
var G__21381 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21380,G__21381) : f.call(null,G__21380,G__21381));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21386 = nval;
var G__21387 = (n + (1));
val = G__21386;
n = G__21387;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21382 = val__$1;
var G__21383 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21382,G__21383) : f.call(null,G__21382,G__21383));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21388 = nval;
var G__21389 = (n + (1));
val__$1 = G__21388;
n = G__21389;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21384 = val__$1;
var G__21385 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21384,G__21385) : f.call(null,G__21384,G__21385));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21390 = nval;
var G__21391 = (n + (1));
val__$1 = G__21390;
n = G__21391;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__21398 = val;
var G__21399 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21398,G__21399) : f.call(null,G__21398,G__21399));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21404 = nval;
var G__21405 = (n + (1));
val = G__21404;
n = G__21405;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__21400 = val__$1;
var G__21401 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21400,G__21401) : f.call(null,G__21400,G__21401));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21406 = nval;
var G__21407 = (n + (1));
val__$1 = G__21406;
n = G__21407;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__21402 = val__$1;
var G__21403 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21402,G__21403) : f.call(null,G__21402,G__21403));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__21408 = nval;
var G__21409 = (n + (1));
val__$1 = G__21408;
n = G__21409;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__21411 = x;
if(G__21411){
var bit__14004__auto__ = (G__21411.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__14004__auto__) || (G__21411.cljs$core$ICounted$)){
return true;
} else {
if((!G__21411.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21411);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__21411);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__21413 = x;
if(G__21413){
var bit__14004__auto__ = (G__21413.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__14004__auto__) || (G__21413.cljs$core$IIndexed$)){
return true;
} else {
if((!G__21413.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21413);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__21413);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21414 = coll__$1;
var G__21415 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21414,G__21415) : cljs.core.equiv_sequential.call(null,G__21414,G__21415));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21416 = o;
var G__21417 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21416,G__21417) : cljs.core.cons.call(null,G__21416,G__21417));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__21420 = coll__$1;
var G__21421 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__21420,G__21421) : cljs.core.equiv_sequential.call(null,G__21420,G__21421));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__21422 = cljs.core.List.EMPTY;
var G__21423 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__21422,G__21423) : cljs.core.with_meta.call(null,G__21422,G__21423));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__21424 = f;
var G__21425 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__21424,G__21425) : cljs.core.seq_reduce.call(null,G__21424,G__21425));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__21426 = f;
var G__21427 = start;
var G__21428 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__21426,G__21427,G__21428) : cljs.core.seq_reduce.call(null,G__21426,G__21427,G__21428));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__21429 = o;
var G__21430 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__21429,G__21430) : cljs.core.cons.call(null,G__21429,G__21430));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__21431 = sn;
s = G__21431;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__21436__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__21437 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__21438 = cljs.core.first(xs);
var G__21439 = cljs.core.next(xs);
coll = G__21437;
x = G__21438;
xs = G__21439;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__21436 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__21440__i = 0, G__21440__a = new Array(arguments.length -  2);
while (G__21440__i < G__21440__a.length) {G__21440__a[G__21440__i] = arguments[G__21440__i + 2]; ++G__21440__i;}
  xs = new cljs.core.IndexedSeq(G__21440__a,0);
} 
return G__21436__delegate.call(this,coll,x,xs);};
G__21436.cljs$lang$maxFixedArity = 2;
G__21436.cljs$lang$applyTo = (function (arglist__21441){
var coll = cljs.core.first(arglist__21441);
arglist__21441 = cljs.core.next(arglist__21441);
var x = cljs.core.first(arglist__21441);
var xs = cljs.core.rest(arglist__21441);
return G__21436__delegate(coll,x,xs);
});
G__21436.cljs$core$IFn$_invoke$arity$variadic = G__21436__delegate;
return G__21436;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__21442 = null;
if (arguments.length > 2) {
var G__21443__i = 0, G__21443__a = new Array(arguments.length -  2);
while (G__21443__i < G__21443__a.length) {G__21443__a[G__21443__i] = arguments[G__21443__i + 2]; ++G__21443__i;}
G__21442 = new cljs.core.IndexedSeq(G__21443__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__21442);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__21444 = cljs.core.next(s);
var G__21445 = (acc + (1));
s = G__21444;
acc = G__21445;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__21447 = coll;
if(G__21447){
var bit__13997__auto__ = (G__21447.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__13997__auto__) || (G__21447.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__21448 = cljs.core.next(coll);
var G__21449 = (n - (1));
coll = G__21448;
n = G__21449;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__21450 = cljs.core.next(coll);
var G__21451 = (n - (1));
var G__21452 = not_found;
coll = G__21450;
n = G__21451;
not_found = G__21452;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__21457 = coll;
if(G__21457){
var bit__13997__auto__ = (G__21457.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13997__auto__) || (G__21457.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21458 = coll;
if(G__21458){
var bit__14004__auto__ = (G__21458.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14004__auto__) || (G__21458.cljs$core$ISeq$)){
return true;
} else {
if((!G__21458.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21458);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21458);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__21459 = coll;
if(G__21459){
var bit__13997__auto__ = (G__21459.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__13997__auto__) || (G__21459.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__21460 = coll;
if(G__21460){
var bit__14004__auto__ = (G__21460.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14004__auto__) || (G__21460.cljs$core$ISeq$)){
return true;
} else {
if((!G__21460.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21460);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__21460);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__21461 = (n__$1 - (1));
var G__21462 = cljs.core.rest(xs);
n__$1 = G__21461;
xs = G__21462;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__21465 = o;
if(G__21465){
var bit__13997__auto__ = (G__21465.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13997__auto__) || (G__21465.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__21466 = o;
if(G__21466){
var bit__13997__auto__ = (G__21466.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__13997__auto__) || (G__21466.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__21470__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__21471 = ret;
var G__21472 = cljs.core.first(kvs);
var G__21473 = cljs.core.second(kvs);
var G__21474 = cljs.core.nnext(kvs);
coll = G__21471;
k = G__21472;
v = G__21473;
kvs = G__21474;
continue;
} else {
return ret;
}
break;
}
};
var G__21470 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__21475__i = 0, G__21475__a = new Array(arguments.length -  3);
while (G__21475__i < G__21475__a.length) {G__21475__a[G__21475__i] = arguments[G__21475__i + 3]; ++G__21475__i;}
  kvs = new cljs.core.IndexedSeq(G__21475__a,0);
} 
return G__21470__delegate.call(this,coll,k,v,kvs);};
G__21470.cljs$lang$maxFixedArity = 3;
G__21470.cljs$lang$applyTo = (function (arglist__21476){
var coll = cljs.core.first(arglist__21476);
arglist__21476 = cljs.core.next(arglist__21476);
var k = cljs.core.first(arglist__21476);
arglist__21476 = cljs.core.next(arglist__21476);
var v = cljs.core.first(arglist__21476);
var kvs = cljs.core.rest(arglist__21476);
return G__21470__delegate(coll,k,v,kvs);
});
G__21470.cljs$core$IFn$_invoke$arity$variadic = G__21470__delegate;
return G__21470;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__21477 = null;
if (arguments.length > 3) {
var G__21478__i = 0, G__21478__a = new Array(arguments.length -  3);
while (G__21478__i < G__21478__a.length) {G__21478__a[G__21478__i] = arguments[G__21478__i + 3]; ++G__21478__i;}
G__21477 = new cljs.core.IndexedSeq(G__21478__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__21477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__21481__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21482 = ret;
var G__21483 = cljs.core.first(ks);
var G__21484 = cljs.core.next(ks);
coll = G__21482;
k = G__21483;
ks = G__21484;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21481 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21485__i = 0, G__21485__a = new Array(arguments.length -  2);
while (G__21485__i < G__21485__a.length) {G__21485__a[G__21485__i] = arguments[G__21485__i + 2]; ++G__21485__i;}
  ks = new cljs.core.IndexedSeq(G__21485__a,0);
} 
return G__21481__delegate.call(this,coll,k,ks);};
G__21481.cljs$lang$maxFixedArity = 2;
G__21481.cljs$lang$applyTo = (function (arglist__21486){
var coll = cljs.core.first(arglist__21486);
arglist__21486 = cljs.core.next(arglist__21486);
var k = cljs.core.first(arglist__21486);
var ks = cljs.core.rest(arglist__21486);
return G__21481__delegate(coll,k,ks);
});
G__21481.cljs$core$IFn$_invoke$arity$variadic = G__21481__delegate;
return G__21481;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__21487 = null;
if (arguments.length > 2) {
var G__21488__i = 0, G__21488__a = new Array(arguments.length -  2);
while (G__21488__i < G__21488__a.length) {G__21488__a[G__21488__i] = arguments[G__21488__i + 2]; ++G__21488__i;}
G__21487 = new cljs.core.IndexedSeq(G__21488__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21487);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__13323__auto__ = (function (){var G__21493 = f;
return goog.isFunction(G__21493);
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var G__21494 = f;
if(G__21494){
var bit__14004__auto__ = null;
if(cljs.core.truth_((function (){var or__13323__auto____$1 = bit__14004__auto__;
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
return G__21494.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__21494.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21494);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__21494);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__21960 = null;
var G__21960__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__21960__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21496 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21496) : self__.afn.call(null,G__21496));
});
var G__21960__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21497 = a;
var G__21498 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21497,G__21498) : self__.afn.call(null,G__21497,G__21498));
});
var G__21960__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21499 = a;
var G__21500 = b;
var G__21501 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21499,G__21500,G__21501) : self__.afn.call(null,G__21499,G__21500,G__21501));
});
var G__21960__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21502 = a;
var G__21503 = b;
var G__21504 = c;
var G__21505 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21502,G__21503,G__21504,G__21505) : self__.afn.call(null,G__21502,G__21503,G__21504,G__21505));
});
var G__21960__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21506 = a;
var G__21507 = b;
var G__21508 = c;
var G__21509 = d;
var G__21510 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21506,G__21507,G__21508,G__21509,G__21510) : self__.afn.call(null,G__21506,G__21507,G__21508,G__21509,G__21510));
});
var G__21960__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21511 = a;
var G__21512 = b;
var G__21513 = c;
var G__21514 = d;
var G__21515 = e;
var G__21516 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21511,G__21512,G__21513,G__21514,G__21515,G__21516) : self__.afn.call(null,G__21511,G__21512,G__21513,G__21514,G__21515,G__21516));
});
var G__21960__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21517 = a;
var G__21518 = b;
var G__21519 = c;
var G__21520 = d;
var G__21521 = e;
var G__21522 = f;
var G__21523 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21517,G__21518,G__21519,G__21520,G__21521,G__21522,G__21523) : self__.afn.call(null,G__21517,G__21518,G__21519,G__21520,G__21521,G__21522,G__21523));
});
var G__21960__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21524 = a;
var G__21525 = b;
var G__21526 = c;
var G__21527 = d;
var G__21528 = e;
var G__21529 = f;
var G__21530 = g;
var G__21531 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21524,G__21525,G__21526,G__21527,G__21528,G__21529,G__21530,G__21531) : self__.afn.call(null,G__21524,G__21525,G__21526,G__21527,G__21528,G__21529,G__21530,G__21531));
});
var G__21960__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21532 = a;
var G__21533 = b;
var G__21534 = c;
var G__21535 = d;
var G__21536 = e;
var G__21537 = f;
var G__21538 = g;
var G__21539 = h;
var G__21540 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21532,G__21533,G__21534,G__21535,G__21536,G__21537,G__21538,G__21539,G__21540) : self__.afn.call(null,G__21532,G__21533,G__21534,G__21535,G__21536,G__21537,G__21538,G__21539,G__21540));
});
var G__21960__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21541 = a;
var G__21542 = b;
var G__21543 = c;
var G__21544 = d;
var G__21545 = e;
var G__21546 = f;
var G__21547 = g;
var G__21548 = h;
var G__21549 = i;
var G__21550 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21541,G__21542,G__21543,G__21544,G__21545,G__21546,G__21547,G__21548,G__21549,G__21550) : self__.afn.call(null,G__21541,G__21542,G__21543,G__21544,G__21545,G__21546,G__21547,G__21548,G__21549,G__21550));
});
var G__21960__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21551 = a;
var G__21552 = b;
var G__21553 = c;
var G__21554 = d;
var G__21555 = e;
var G__21556 = f;
var G__21557 = g;
var G__21558 = h;
var G__21559 = i;
var G__21560 = j;
var G__21561 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21551,G__21552,G__21553,G__21554,G__21555,G__21556,G__21557,G__21558,G__21559,G__21560,G__21561) : self__.afn.call(null,G__21551,G__21552,G__21553,G__21554,G__21555,G__21556,G__21557,G__21558,G__21559,G__21560,G__21561));
});
var G__21960__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21562 = a;
var G__21563 = b;
var G__21564 = c;
var G__21565 = d;
var G__21566 = e;
var G__21567 = f;
var G__21568 = g;
var G__21569 = h;
var G__21570 = i;
var G__21571 = j;
var G__21572 = k;
var G__21573 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21562,G__21563,G__21564,G__21565,G__21566,G__21567,G__21568,G__21569,G__21570,G__21571,G__21572,G__21573) : self__.afn.call(null,G__21562,G__21563,G__21564,G__21565,G__21566,G__21567,G__21568,G__21569,G__21570,G__21571,G__21572,G__21573));
});
var G__21960__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21574 = a;
var G__21575 = b;
var G__21576 = c;
var G__21577 = d;
var G__21578 = e;
var G__21579 = f;
var G__21580 = g;
var G__21581 = h;
var G__21582 = i;
var G__21583 = j;
var G__21584 = k;
var G__21585 = l;
var G__21586 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21574,G__21575,G__21576,G__21577,G__21578,G__21579,G__21580,G__21581,G__21582,G__21583,G__21584,G__21585,G__21586) : self__.afn.call(null,G__21574,G__21575,G__21576,G__21577,G__21578,G__21579,G__21580,G__21581,G__21582,G__21583,G__21584,G__21585,G__21586));
});
var G__21960__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21587 = a;
var G__21588 = b;
var G__21589 = c;
var G__21590 = d;
var G__21591 = e;
var G__21592 = f;
var G__21593 = g;
var G__21594 = h;
var G__21595 = i;
var G__21596 = j;
var G__21597 = k;
var G__21598 = l;
var G__21599 = m;
var G__21600 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21587,G__21588,G__21589,G__21590,G__21591,G__21592,G__21593,G__21594,G__21595,G__21596,G__21597,G__21598,G__21599,G__21600) : self__.afn.call(null,G__21587,G__21588,G__21589,G__21590,G__21591,G__21592,G__21593,G__21594,G__21595,G__21596,G__21597,G__21598,G__21599,G__21600));
});
var G__21960__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21601 = a;
var G__21602 = b;
var G__21603 = c;
var G__21604 = d;
var G__21605 = e;
var G__21606 = f;
var G__21607 = g;
var G__21608 = h;
var G__21609 = i;
var G__21610 = j;
var G__21611 = k;
var G__21612 = l;
var G__21613 = m;
var G__21614 = n;
var G__21615 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21601,G__21602,G__21603,G__21604,G__21605,G__21606,G__21607,G__21608,G__21609,G__21610,G__21611,G__21612,G__21613,G__21614,G__21615) : self__.afn.call(null,G__21601,G__21602,G__21603,G__21604,G__21605,G__21606,G__21607,G__21608,G__21609,G__21610,G__21611,G__21612,G__21613,G__21614,G__21615));
});
var G__21960__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21616 = a;
var G__21617 = b;
var G__21618 = c;
var G__21619 = d;
var G__21620 = e;
var G__21621 = f;
var G__21622 = g;
var G__21623 = h;
var G__21624 = i;
var G__21625 = j;
var G__21626 = k;
var G__21627 = l;
var G__21628 = m;
var G__21629 = n;
var G__21630 = o;
var G__21631 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21616,G__21617,G__21618,G__21619,G__21620,G__21621,G__21622,G__21623,G__21624,G__21625,G__21626,G__21627,G__21628,G__21629,G__21630,G__21631) : self__.afn.call(null,G__21616,G__21617,G__21618,G__21619,G__21620,G__21621,G__21622,G__21623,G__21624,G__21625,G__21626,G__21627,G__21628,G__21629,G__21630,G__21631));
});
var G__21960__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21632 = a;
var G__21633 = b;
var G__21634 = c;
var G__21635 = d;
var G__21636 = e;
var G__21637 = f;
var G__21638 = g;
var G__21639 = h;
var G__21640 = i;
var G__21641 = j;
var G__21642 = k;
var G__21643 = l;
var G__21644 = m;
var G__21645 = n;
var G__21646 = o;
var G__21647 = p;
var G__21648 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21632,G__21633,G__21634,G__21635,G__21636,G__21637,G__21638,G__21639,G__21640,G__21641,G__21642,G__21643,G__21644,G__21645,G__21646,G__21647,G__21648) : self__.afn.call(null,G__21632,G__21633,G__21634,G__21635,G__21636,G__21637,G__21638,G__21639,G__21640,G__21641,G__21642,G__21643,G__21644,G__21645,G__21646,G__21647,G__21648));
});
var G__21960__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21649 = a;
var G__21650 = b;
var G__21651 = c;
var G__21652 = d;
var G__21653 = e;
var G__21654 = f;
var G__21655 = g;
var G__21656 = h;
var G__21657 = i;
var G__21658 = j;
var G__21659 = k;
var G__21660 = l;
var G__21661 = m;
var G__21662 = n;
var G__21663 = o;
var G__21664 = p;
var G__21665 = q;
var G__21666 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21649,G__21650,G__21651,G__21652,G__21653,G__21654,G__21655,G__21656,G__21657,G__21658,G__21659,G__21660,G__21661,G__21662,G__21663,G__21664,G__21665,G__21666) : self__.afn.call(null,G__21649,G__21650,G__21651,G__21652,G__21653,G__21654,G__21655,G__21656,G__21657,G__21658,G__21659,G__21660,G__21661,G__21662,G__21663,G__21664,G__21665,G__21666));
});
var G__21960__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21667 = a;
var G__21668 = b;
var G__21669 = c;
var G__21670 = d;
var G__21671 = e;
var G__21672 = f;
var G__21673 = g;
var G__21674 = h;
var G__21675 = i;
var G__21676 = j;
var G__21677 = k;
var G__21678 = l;
var G__21679 = m;
var G__21680 = n;
var G__21681 = o;
var G__21682 = p;
var G__21683 = q;
var G__21684 = r;
var G__21685 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21667,G__21668,G__21669,G__21670,G__21671,G__21672,G__21673,G__21674,G__21675,G__21676,G__21677,G__21678,G__21679,G__21680,G__21681,G__21682,G__21683,G__21684,G__21685) : self__.afn.call(null,G__21667,G__21668,G__21669,G__21670,G__21671,G__21672,G__21673,G__21674,G__21675,G__21676,G__21677,G__21678,G__21679,G__21680,G__21681,G__21682,G__21683,G__21684,G__21685));
});
var G__21960__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21686 = a;
var G__21687 = b;
var G__21688 = c;
var G__21689 = d;
var G__21690 = e;
var G__21691 = f;
var G__21692 = g;
var G__21693 = h;
var G__21694 = i;
var G__21695 = j;
var G__21696 = k;
var G__21697 = l;
var G__21698 = m;
var G__21699 = n;
var G__21700 = o;
var G__21701 = p;
var G__21702 = q;
var G__21703 = r;
var G__21704 = s;
var G__21705 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21686,G__21687,G__21688,G__21689,G__21690,G__21691,G__21692,G__21693,G__21694,G__21695,G__21696,G__21697,G__21698,G__21699,G__21700,G__21701,G__21702,G__21703,G__21704,G__21705) : self__.afn.call(null,G__21686,G__21687,G__21688,G__21689,G__21690,G__21691,G__21692,G__21693,G__21694,G__21695,G__21696,G__21697,G__21698,G__21699,G__21700,G__21701,G__21702,G__21703,G__21704,G__21705));
});
var G__21960__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__21706 = self__.afn;
var G__21707 = a;
var G__21708 = b;
var G__21709 = c;
var G__21710 = d;
var G__21711 = e;
var G__21712 = f;
var G__21713 = g;
var G__21714 = h;
var G__21715 = i;
var G__21716 = j;
var G__21717 = k;
var G__21718 = l;
var G__21719 = m;
var G__21720 = n;
var G__21721 = o;
var G__21722 = p;
var G__21723 = q;
var G__21724 = r;
var G__21725 = s;
var G__21726 = t;
var G__21727 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21706,G__21707,G__21708,G__21709,G__21710,G__21711,G__21712,G__21713,G__21714,G__21715,G__21716,G__21717,G__21718,G__21719,G__21720,G__21721,G__21722,G__21723,G__21724,G__21725,G__21726,G__21727) : cljs.core.apply.call(null,G__21706,G__21707,G__21708,G__21709,G__21710,G__21711,G__21712,G__21713,G__21714,G__21715,G__21716,G__21717,G__21718,G__21719,G__21720,G__21721,G__21722,G__21723,G__21724,G__21725,G__21726,G__21727));
});
G__21960 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__21960__1.call(this,self__);
case 2:
return G__21960__2.call(this,self__,a);
case 3:
return G__21960__3.call(this,self__,a,b);
case 4:
return G__21960__4.call(this,self__,a,b,c);
case 5:
return G__21960__5.call(this,self__,a,b,c,d);
case 6:
return G__21960__6.call(this,self__,a,b,c,d,e);
case 7:
return G__21960__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__21960__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__21960__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__21960__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__21960__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__21960__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__21960__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__21960__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__21960__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__21960__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__21960__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__21960__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__21960__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__21960__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__21960__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__21960__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21960.cljs$core$IFn$_invoke$arity$1 = G__21960__1;
G__21960.cljs$core$IFn$_invoke$arity$2 = G__21960__2;
G__21960.cljs$core$IFn$_invoke$arity$3 = G__21960__3;
G__21960.cljs$core$IFn$_invoke$arity$4 = G__21960__4;
G__21960.cljs$core$IFn$_invoke$arity$5 = G__21960__5;
G__21960.cljs$core$IFn$_invoke$arity$6 = G__21960__6;
G__21960.cljs$core$IFn$_invoke$arity$7 = G__21960__7;
G__21960.cljs$core$IFn$_invoke$arity$8 = G__21960__8;
G__21960.cljs$core$IFn$_invoke$arity$9 = G__21960__9;
G__21960.cljs$core$IFn$_invoke$arity$10 = G__21960__10;
G__21960.cljs$core$IFn$_invoke$arity$11 = G__21960__11;
G__21960.cljs$core$IFn$_invoke$arity$12 = G__21960__12;
G__21960.cljs$core$IFn$_invoke$arity$13 = G__21960__13;
G__21960.cljs$core$IFn$_invoke$arity$14 = G__21960__14;
G__21960.cljs$core$IFn$_invoke$arity$15 = G__21960__15;
G__21960.cljs$core$IFn$_invoke$arity$16 = G__21960__16;
G__21960.cljs$core$IFn$_invoke$arity$17 = G__21960__17;
G__21960.cljs$core$IFn$_invoke$arity$18 = G__21960__18;
G__21960.cljs$core$IFn$_invoke$arity$19 = G__21960__19;
G__21960.cljs$core$IFn$_invoke$arity$20 = G__21960__20;
G__21960.cljs$core$IFn$_invoke$arity$21 = G__21960__21;
G__21960.cljs$core$IFn$_invoke$arity$22 = G__21960__22;
return G__21960;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args21495){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21495)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__21728 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__21728) : self__.afn.call(null,G__21728));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__21729 = a;
var G__21730 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__21729,G__21730) : self__.afn.call(null,G__21729,G__21730));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__21731 = a;
var G__21732 = b;
var G__21733 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__21731,G__21732,G__21733) : self__.afn.call(null,G__21731,G__21732,G__21733));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__21734 = a;
var G__21735 = b;
var G__21736 = c;
var G__21737 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__21734,G__21735,G__21736,G__21737) : self__.afn.call(null,G__21734,G__21735,G__21736,G__21737));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__21738 = a;
var G__21739 = b;
var G__21740 = c;
var G__21741 = d;
var G__21742 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__21738,G__21739,G__21740,G__21741,G__21742) : self__.afn.call(null,G__21738,G__21739,G__21740,G__21741,G__21742));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__21743 = a;
var G__21744 = b;
var G__21745 = c;
var G__21746 = d;
var G__21747 = e;
var G__21748 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__21743,G__21744,G__21745,G__21746,G__21747,G__21748) : self__.afn.call(null,G__21743,G__21744,G__21745,G__21746,G__21747,G__21748));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__21749 = a;
var G__21750 = b;
var G__21751 = c;
var G__21752 = d;
var G__21753 = e;
var G__21754 = f;
var G__21755 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__21749,G__21750,G__21751,G__21752,G__21753,G__21754,G__21755) : self__.afn.call(null,G__21749,G__21750,G__21751,G__21752,G__21753,G__21754,G__21755));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__21756 = a;
var G__21757 = b;
var G__21758 = c;
var G__21759 = d;
var G__21760 = e;
var G__21761 = f;
var G__21762 = g;
var G__21763 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__21756,G__21757,G__21758,G__21759,G__21760,G__21761,G__21762,G__21763) : self__.afn.call(null,G__21756,G__21757,G__21758,G__21759,G__21760,G__21761,G__21762,G__21763));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__21764 = a;
var G__21765 = b;
var G__21766 = c;
var G__21767 = d;
var G__21768 = e;
var G__21769 = f;
var G__21770 = g;
var G__21771 = h;
var G__21772 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__21764,G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772) : self__.afn.call(null,G__21764,G__21765,G__21766,G__21767,G__21768,G__21769,G__21770,G__21771,G__21772));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__21773 = a;
var G__21774 = b;
var G__21775 = c;
var G__21776 = d;
var G__21777 = e;
var G__21778 = f;
var G__21779 = g;
var G__21780 = h;
var G__21781 = i;
var G__21782 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__21773,G__21774,G__21775,G__21776,G__21777,G__21778,G__21779,G__21780,G__21781,G__21782) : self__.afn.call(null,G__21773,G__21774,G__21775,G__21776,G__21777,G__21778,G__21779,G__21780,G__21781,G__21782));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__21783 = a;
var G__21784 = b;
var G__21785 = c;
var G__21786 = d;
var G__21787 = e;
var G__21788 = f;
var G__21789 = g;
var G__21790 = h;
var G__21791 = i;
var G__21792 = j;
var G__21793 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__21783,G__21784,G__21785,G__21786,G__21787,G__21788,G__21789,G__21790,G__21791,G__21792,G__21793) : self__.afn.call(null,G__21783,G__21784,G__21785,G__21786,G__21787,G__21788,G__21789,G__21790,G__21791,G__21792,G__21793));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__21794 = a;
var G__21795 = b;
var G__21796 = c;
var G__21797 = d;
var G__21798 = e;
var G__21799 = f;
var G__21800 = g;
var G__21801 = h;
var G__21802 = i;
var G__21803 = j;
var G__21804 = k;
var G__21805 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800,G__21801,G__21802,G__21803,G__21804,G__21805) : self__.afn.call(null,G__21794,G__21795,G__21796,G__21797,G__21798,G__21799,G__21800,G__21801,G__21802,G__21803,G__21804,G__21805));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__21806 = a;
var G__21807 = b;
var G__21808 = c;
var G__21809 = d;
var G__21810 = e;
var G__21811 = f;
var G__21812 = g;
var G__21813 = h;
var G__21814 = i;
var G__21815 = j;
var G__21816 = k;
var G__21817 = l;
var G__21818 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__21806,G__21807,G__21808,G__21809,G__21810,G__21811,G__21812,G__21813,G__21814,G__21815,G__21816,G__21817,G__21818) : self__.afn.call(null,G__21806,G__21807,G__21808,G__21809,G__21810,G__21811,G__21812,G__21813,G__21814,G__21815,G__21816,G__21817,G__21818));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__21819 = a;
var G__21820 = b;
var G__21821 = c;
var G__21822 = d;
var G__21823 = e;
var G__21824 = f;
var G__21825 = g;
var G__21826 = h;
var G__21827 = i;
var G__21828 = j;
var G__21829 = k;
var G__21830 = l;
var G__21831 = m;
var G__21832 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__21819,G__21820,G__21821,G__21822,G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829,G__21830,G__21831,G__21832) : self__.afn.call(null,G__21819,G__21820,G__21821,G__21822,G__21823,G__21824,G__21825,G__21826,G__21827,G__21828,G__21829,G__21830,G__21831,G__21832));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__21833 = a;
var G__21834 = b;
var G__21835 = c;
var G__21836 = d;
var G__21837 = e;
var G__21838 = f;
var G__21839 = g;
var G__21840 = h;
var G__21841 = i;
var G__21842 = j;
var G__21843 = k;
var G__21844 = l;
var G__21845 = m;
var G__21846 = n;
var G__21847 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__21833,G__21834,G__21835,G__21836,G__21837,G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845,G__21846,G__21847) : self__.afn.call(null,G__21833,G__21834,G__21835,G__21836,G__21837,G__21838,G__21839,G__21840,G__21841,G__21842,G__21843,G__21844,G__21845,G__21846,G__21847));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__21848 = a;
var G__21849 = b;
var G__21850 = c;
var G__21851 = d;
var G__21852 = e;
var G__21853 = f;
var G__21854 = g;
var G__21855 = h;
var G__21856 = i;
var G__21857 = j;
var G__21858 = k;
var G__21859 = l;
var G__21860 = m;
var G__21861 = n;
var G__21862 = o;
var G__21863 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__21848,G__21849,G__21850,G__21851,G__21852,G__21853,G__21854,G__21855,G__21856,G__21857,G__21858,G__21859,G__21860,G__21861,G__21862,G__21863) : self__.afn.call(null,G__21848,G__21849,G__21850,G__21851,G__21852,G__21853,G__21854,G__21855,G__21856,G__21857,G__21858,G__21859,G__21860,G__21861,G__21862,G__21863));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__21864 = a;
var G__21865 = b;
var G__21866 = c;
var G__21867 = d;
var G__21868 = e;
var G__21869 = f;
var G__21870 = g;
var G__21871 = h;
var G__21872 = i;
var G__21873 = j;
var G__21874 = k;
var G__21875 = l;
var G__21876 = m;
var G__21877 = n;
var G__21878 = o;
var G__21879 = p;
var G__21880 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__21864,G__21865,G__21866,G__21867,G__21868,G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879,G__21880) : self__.afn.call(null,G__21864,G__21865,G__21866,G__21867,G__21868,G__21869,G__21870,G__21871,G__21872,G__21873,G__21874,G__21875,G__21876,G__21877,G__21878,G__21879,G__21880));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__21881 = a;
var G__21882 = b;
var G__21883 = c;
var G__21884 = d;
var G__21885 = e;
var G__21886 = f;
var G__21887 = g;
var G__21888 = h;
var G__21889 = i;
var G__21890 = j;
var G__21891 = k;
var G__21892 = l;
var G__21893 = m;
var G__21894 = n;
var G__21895 = o;
var G__21896 = p;
var G__21897 = q;
var G__21898 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891,G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898) : self__.afn.call(null,G__21881,G__21882,G__21883,G__21884,G__21885,G__21886,G__21887,G__21888,G__21889,G__21890,G__21891,G__21892,G__21893,G__21894,G__21895,G__21896,G__21897,G__21898));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__21899 = a;
var G__21900 = b;
var G__21901 = c;
var G__21902 = d;
var G__21903 = e;
var G__21904 = f;
var G__21905 = g;
var G__21906 = h;
var G__21907 = i;
var G__21908 = j;
var G__21909 = k;
var G__21910 = l;
var G__21911 = m;
var G__21912 = n;
var G__21913 = o;
var G__21914 = p;
var G__21915 = q;
var G__21916 = r;
var G__21917 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__21899,G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907,G__21908,G__21909,G__21910,G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917) : self__.afn.call(null,G__21899,G__21900,G__21901,G__21902,G__21903,G__21904,G__21905,G__21906,G__21907,G__21908,G__21909,G__21910,G__21911,G__21912,G__21913,G__21914,G__21915,G__21916,G__21917));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__21918 = a;
var G__21919 = b;
var G__21920 = c;
var G__21921 = d;
var G__21922 = e;
var G__21923 = f;
var G__21924 = g;
var G__21925 = h;
var G__21926 = i;
var G__21927 = j;
var G__21928 = k;
var G__21929 = l;
var G__21930 = m;
var G__21931 = n;
var G__21932 = o;
var G__21933 = p;
var G__21934 = q;
var G__21935 = r;
var G__21936 = s;
var G__21937 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__21918,G__21919,G__21920,G__21921,G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933,G__21934,G__21935,G__21936,G__21937) : self__.afn.call(null,G__21918,G__21919,G__21920,G__21921,G__21922,G__21923,G__21924,G__21925,G__21926,G__21927,G__21928,G__21929,G__21930,G__21931,G__21932,G__21933,G__21934,G__21935,G__21936,G__21937));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__21938 = self__.afn;
var G__21939 = a;
var G__21940 = b;
var G__21941 = c;
var G__21942 = d;
var G__21943 = e;
var G__21944 = f;
var G__21945 = g;
var G__21946 = h;
var G__21947 = i;
var G__21948 = j;
var G__21949 = k;
var G__21950 = l;
var G__21951 = m;
var G__21952 = n;
var G__21953 = o;
var G__21954 = p;
var G__21955 = q;
var G__21956 = r;
var G__21957 = s;
var G__21958 = t;
var G__21959 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21938,G__21939,G__21940,G__21941,G__21942,G__21943,G__21944,G__21945,G__21946,G__21947,G__21948,G__21949,G__21950,G__21951,G__21952,G__21953,G__21954,G__21955,G__21956,G__21957,G__21958,G__21959) : cljs.core.apply.call(null,G__21938,G__21939,G__21940,G__21941,G__21942,G__21943,G__21944,G__21945,G__21946,G__21947,G__21948,G__21949,G__21950,G__21951,G__21952,G__21953,G__21954,G__21955,G__21956,G__21957,G__21958,G__21959));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__21964 = o;
if(G__21964){
var bit__14004__auto__ = (G__21964.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__14004__auto__) || (G__21964.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__21964.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21964);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__21964);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__13311__auto__ = !((o == null));
if(and__13311__auto__){
var G__21968 = o;
if(G__21968){
var bit__14004__auto__ = (G__21968.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14004__auto__) || (G__21968.cljs$core$IMeta$)){
return true;
} else {
if((!G__21968.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21968);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__21968);
}
} else {
return and__13311__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__21971__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__21972 = ret;
var G__21973 = cljs.core.first(ks);
var G__21974 = cljs.core.next(ks);
coll = G__21972;
k = G__21973;
ks = G__21974;
continue;
} else {
return ret;
}
}
break;
}
};
var G__21971 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__21975__i = 0, G__21975__a = new Array(arguments.length -  2);
while (G__21975__i < G__21975__a.length) {G__21975__a[G__21975__i] = arguments[G__21975__i + 2]; ++G__21975__i;}
  ks = new cljs.core.IndexedSeq(G__21975__a,0);
} 
return G__21971__delegate.call(this,coll,k,ks);};
G__21971.cljs$lang$maxFixedArity = 2;
G__21971.cljs$lang$applyTo = (function (arglist__21976){
var coll = cljs.core.first(arglist__21976);
arglist__21976 = cljs.core.next(arglist__21976);
var k = cljs.core.first(arglist__21976);
var ks = cljs.core.rest(arglist__21976);
return G__21971__delegate(coll,k,ks);
});
G__21971.cljs$core$IFn$_invoke$arity$variadic = G__21971__delegate;
return G__21971;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__21977 = null;
if (arguments.length > 2) {
var G__21978__i = 0, G__21978__a = new Array(arguments.length -  2);
while (G__21978__i < G__21978__a.length) {G__21978__a[G__21978__i] = arguments[G__21978__i + 2]; ++G__21978__i;}
G__21977 = new cljs.core.IndexedSeq(G__21978__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__21977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21980 = x;
if(G__21980){
var bit__14004__auto__ = (G__21980.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__14004__auto__) || (G__21980.cljs$core$ICollection$)){
return true;
} else {
if((!G__21980.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21980);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__21980);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21982 = x;
if(G__21982){
var bit__14004__auto__ = (G__21982.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__14004__auto__) || (G__21982.cljs$core$ISet$)){
return true;
} else {
if((!G__21982.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21982);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__21982);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__21984 = x;
if(G__21984){
var bit__14004__auto__ = (G__21984.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__14004__auto__) || (G__21984.cljs$core$IAssociative$)){
return true;
} else {
if((!G__21984.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21984);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__21984);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__21986 = x;
if(G__21986){
var bit__14004__auto__ = (G__21986.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__14004__auto__) || (G__21986.cljs$core$ISequential$)){
return true;
} else {
if((!G__21986.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21986);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__21986);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__21988 = x;
if(G__21988){
var bit__14004__auto__ = (G__21988.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__14004__auto__) || (G__21988.cljs$core$ISorted$)){
return true;
} else {
if((!G__21988.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21988);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__21988);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__21990 = x;
if(G__21990){
var bit__14004__auto__ = (G__21990.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__14004__auto__) || (G__21990.cljs$core$IReduce$)){
return true;
} else {
if((!G__21990.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21990);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__21990);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__21992 = x;
if(G__21992){
var bit__14004__auto__ = (G__21992.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__14004__auto__) || (G__21992.cljs$core$IMap$)){
return true;
} else {
if((!G__21992.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21992);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__21992);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__21994 = x;
if(G__21994){
var bit__14004__auto__ = (G__21994.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__14004__auto__) || (G__21994.cljs$core$IVector$)){
return true;
} else {
if((!G__21994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__21994);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__21996 = x;
if(G__21996){
var bit__13997__auto__ = (G__21996.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__13997__auto__) || (G__21996.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj22002 = {};
return obj22002;
});
var js_obj__1 = (function() { 
var G__22005__delegate = function (keyvals){
var G__22003 = goog.object.create;
var G__22004 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__22003,G__22004) : cljs.core.apply.call(null,G__22003,G__22004));
};
var G__22005 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22006__i = 0, G__22006__a = new Array(arguments.length -  0);
while (G__22006__i < G__22006__a.length) {G__22006__a[G__22006__i] = arguments[G__22006__i + 0]; ++G__22006__i;}
  keyvals = new cljs.core.IndexedSeq(G__22006__a,0);
} 
return G__22005__delegate.call(this,keyvals);};
G__22005.cljs$lang$maxFixedArity = 0;
G__22005.cljs$lang$applyTo = (function (arglist__22007){
var keyvals = cljs.core.seq(arglist__22007);
return G__22005__delegate(keyvals);
});
G__22005.cljs$core$IFn$_invoke$arity$variadic = G__22005__delegate;
return G__22005;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__22008 = null;
if (arguments.length > 0) {
var G__22009__i = 0, G__22009__a = new Array(arguments.length -  0);
while (G__22009__i < G__22009__a.length) {G__22009__a[G__22009__i] = arguments[G__22009__i + 0]; ++G__22009__i;}
G__22008 = new cljs.core.IndexedSeq(G__22009__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__22008);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__22012_22014 = obj;
var G__22013_22015 = ((function (G__22012_22014,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__22012_22014,keys))
;
goog.object.forEach(G__22012_22014,G__22013_22015);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22016 = (i__$1 + (1));
var G__22017 = (j__$1 + (1));
var G__22018 = (len__$1 - (1));
i__$1 = G__22016;
j__$1 = G__22017;
len__$1 = G__22018;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__22019 = (i__$1 - (1));
var G__22020 = (j__$1 - (1));
var G__22021 = (len__$1 - (1));
i__$1 = G__22019;
j__$1 = G__22020;
len__$1 = G__22021;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj22023 = {};
return obj22023;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__22025 = s;
if(G__22025){
var bit__14004__auto__ = (G__22025.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__14004__auto__) || (G__22025.cljs$core$ISeq$)){
return true;
} else {
if((!G__22025.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22025);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__22025);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__22027 = s;
if(G__22027){
var bit__14004__auto__ = (G__22027.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__14004__auto__) || (G__22027.cljs$core$ISeqable$)){
return true;
} else {
if((!G__22027.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22027);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__22027);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__13323__auto__ = cljs.core.fn_QMARK_(f);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var G__22031 = f;
if(G__22031){
var bit__14004__auto__ = (G__22031.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__14004__auto__) || (G__22031.cljs$core$IFn$)){
return true;
} else {
if((!G__22031.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22031);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__22031);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__22044 = n;
return isNaN(G__22044);
})())) && (!((n === Infinity))) && (((function (){var G__22045 = n;
return parseFloat(G__22045);
})() === (function (){var G__22046 = n;
var G__22047 = (10);
return parseInt(G__22046,G__22047);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__22048__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__22049 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__22050 = etc;
s = G__22049;
xs = G__22050;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__22048 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22051__i = 0, G__22051__a = new Array(arguments.length -  2);
while (G__22051__i < G__22051__a.length) {G__22051__a[G__22051__i] = arguments[G__22051__i + 2]; ++G__22051__i;}
  more = new cljs.core.IndexedSeq(G__22051__a,0);
} 
return G__22048__delegate.call(this,x,y,more);};
G__22048.cljs$lang$maxFixedArity = 2;
G__22048.cljs$lang$applyTo = (function (arglist__22052){
var x = cljs.core.first(arglist__22052);
arglist__22052 = cljs.core.next(arglist__22052);
var y = cljs.core.first(arglist__22052);
var more = cljs.core.rest(arglist__22052);
return G__22048__delegate(x,y,more);
});
G__22048.cljs$core$IFn$_invoke$arity$variadic = G__22048__delegate;
return G__22048;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__22053 = null;
if (arguments.length > 2) {
var G__22054__i = 0, G__22054__a = new Array(arguments.length -  2);
while (G__22054__i < G__22054__a.length) {G__22054__a[G__22054__i] = arguments[G__22054__i + 2]; ++G__22054__i;}
G__22053 = new cljs.core.IndexedSeq(G__22054__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22053);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__22058 = x;
if(G__22058){
var bit__13997__auto__ = (G__22058.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__13997__auto__) || (G__22058.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__22059 = x;
var G__22060 = y;
return goog.array.defaultCompare(G__22059,G__22060);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__22065 = xs;
var G__22066 = ys;
var G__22067 = len;
var G__22068 = (n + (1));
xs = G__22065;
ys = G__22066;
len = G__22067;
n = G__22068;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__22073 = x;
var G__22074 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22073,G__22074) : f.call(null,G__22073,G__22074));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__22075 = y;
var G__22076 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22075,G__22076) : f.call(null,G__22075,G__22076));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__22082 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22082) : cljs.core.to_array.call(null,G__22082));
})();
var G__22083_22085 = a;
var G__22084_22086 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__22083_22085,G__22084_22086);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__22092 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22092) : keyfn.call(null,G__22092));
})(),(function (){var G__22093 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__22093) : keyfn.call(null,G__22093));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__22099 = f;
var G__22100 = cljs.core.first(s);
var G__22101 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__22099,G__22100,G__22101) : cljs.core.reduce.call(null,G__22099,G__22100,G__22101));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__22102 = val__$1;
var G__22103 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22102,G__22103) : f.call(null,G__22102,G__22103));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__22104 = nval;
var G__22105 = cljs.core.next(coll__$1);
val__$1 = G__22104;
coll__$1 = G__22105;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__22109 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__22109) : cljs.core.to_array.call(null,G__22109));
})();
var G__22110_22112 = a;
goog.array.shuffle(G__22110_22112);

var G__22111 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__22111) : cljs.core.vec.call(null,G__22111));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__22115 = coll;
if(G__22115){
var bit__13997__auto__ = (G__22115.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13997__auto__) || (G__22115.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__22116 = coll;
if(G__22116){
var bit__13997__auto__ = (G__22116.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__13997__auto__) || (G__22116.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__22125 = null;
var G__22125__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__22125__1 = (function (x){
var G__22122 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__22122) : cf.call(null,G__22122));
});
var G__22125__2 = (function (x,y){
var G__22123 = x;
var G__22124 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22123,G__22124) : f.call(null,G__22123,G__22124));
});
G__22125 = function(x,y){
switch(arguments.length){
case 0:
return G__22125__0.call(this);
case 1:
return G__22125__1.call(this,x);
case 2:
return G__22125__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22125.cljs$core$IFn$_invoke$arity$0 = G__22125__0;
G__22125.cljs$core$IFn$_invoke$arity$1 = G__22125__1;
G__22125.cljs$core$IFn$_invoke$arity$2 = G__22125__2;
return G__22125;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__22132 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22132) : xform.call(null,G__22132));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__22133 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__22133) : f__$1.call(null,G__22133));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__22134__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__22134 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22135__i = 0, G__22135__a = new Array(arguments.length -  2);
while (G__22135__i < G__22135__a.length) {G__22135__a[G__22135__i] = arguments[G__22135__i + 2]; ++G__22135__i;}
  more = new cljs.core.IndexedSeq(G__22135__a,0);
} 
return G__22134__delegate.call(this,x,y,more);};
G__22134.cljs$lang$maxFixedArity = 2;
G__22134.cljs$lang$applyTo = (function (arglist__22136){
var x = cljs.core.first(arglist__22136);
arglist__22136 = cljs.core.next(arglist__22136);
var y = cljs.core.first(arglist__22136);
var more = cljs.core.rest(arglist__22136);
return G__22134__delegate(x,y,more);
});
G__22134.cljs$core$IFn$_invoke$arity$variadic = G__22134__delegate;
return G__22134;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__22137 = null;
if (arguments.length > 2) {
var G__22138__i = 0, G__22138__a = new Array(arguments.length -  2);
while (G__22138__i < G__22138__a.length) {G__22138__a[G__22138__i] = arguments[G__22138__i + 2]; ++G__22138__i;}
G__22137 = new cljs.core.IndexedSeq(G__22138__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__22139__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__22139 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22140__i = 0, G__22140__a = new Array(arguments.length -  2);
while (G__22140__i < G__22140__a.length) {G__22140__a[G__22140__i] = arguments[G__22140__i + 2]; ++G__22140__i;}
  more = new cljs.core.IndexedSeq(G__22140__a,0);
} 
return G__22139__delegate.call(this,x,y,more);};
G__22139.cljs$lang$maxFixedArity = 2;
G__22139.cljs$lang$applyTo = (function (arglist__22141){
var x = cljs.core.first(arglist__22141);
arglist__22141 = cljs.core.next(arglist__22141);
var y = cljs.core.first(arglist__22141);
var more = cljs.core.rest(arglist__22141);
return G__22139__delegate(x,y,more);
});
G__22139.cljs$core$IFn$_invoke$arity$variadic = G__22139__delegate;
return G__22139;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__22142 = null;
if (arguments.length > 2) {
var G__22143__i = 0, G__22143__a = new Array(arguments.length -  2);
while (G__22143__i < G__22143__a.length) {G__22143__a[G__22143__i] = arguments[G__22143__i + 2]; ++G__22143__i;}
G__22142 = new cljs.core.IndexedSeq(G__22143__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__22144__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__22144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22145__i = 0, G__22145__a = new Array(arguments.length -  2);
while (G__22145__i < G__22145__a.length) {G__22145__a[G__22145__i] = arguments[G__22145__i + 2]; ++G__22145__i;}
  more = new cljs.core.IndexedSeq(G__22145__a,0);
} 
return G__22144__delegate.call(this,x,y,more);};
G__22144.cljs$lang$maxFixedArity = 2;
G__22144.cljs$lang$applyTo = (function (arglist__22146){
var x = cljs.core.first(arglist__22146);
arglist__22146 = cljs.core.next(arglist__22146);
var y = cljs.core.first(arglist__22146);
var more = cljs.core.rest(arglist__22146);
return G__22144__delegate(x,y,more);
});
G__22144.cljs$core$IFn$_invoke$arity$variadic = G__22144__delegate;
return G__22144;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__22147 = null;
if (arguments.length > 2) {
var G__22148__i = 0, G__22148__a = new Array(arguments.length -  2);
while (G__22148__i < G__22148__a.length) {G__22148__a[G__22148__i] = arguments[G__22148__i + 2]; ++G__22148__i;}
G__22147 = new cljs.core.IndexedSeq(G__22148__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__22153__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22153 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22154__i = 0, G__22154__a = new Array(arguments.length -  2);
while (G__22154__i < G__22154__a.length) {G__22154__a[G__22154__i] = arguments[G__22154__i + 2]; ++G__22154__i;}
  more = new cljs.core.IndexedSeq(G__22154__a,0);
} 
return G__22153__delegate.call(this,x,y,more);};
G__22153.cljs$lang$maxFixedArity = 2;
G__22153.cljs$lang$applyTo = (function (arglist__22155){
var x = cljs.core.first(arglist__22155);
arglist__22155 = cljs.core.next(arglist__22155);
var y = cljs.core.first(arglist__22155);
var more = cljs.core.rest(arglist__22155);
return G__22153__delegate(x,y,more);
});
G__22153.cljs$core$IFn$_invoke$arity$variadic = G__22153__delegate;
return G__22153;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__22156 = null;
if (arguments.length > 2) {
var G__22157__i = 0, G__22157__a = new Array(arguments.length -  2);
while (G__22157__i < G__22157__a.length) {G__22157__a[G__22157__i] = arguments[G__22157__i + 2]; ++G__22157__i;}
G__22156 = new cljs.core.IndexedSeq(G__22157__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__22158__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__22159 = y;
var G__22160 = cljs.core.first(more);
var G__22161 = cljs.core.next(more);
x = G__22159;
y = G__22160;
more = G__22161;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22162__i = 0, G__22162__a = new Array(arguments.length -  2);
while (G__22162__i < G__22162__a.length) {G__22162__a[G__22162__i] = arguments[G__22162__i + 2]; ++G__22162__i;}
  more = new cljs.core.IndexedSeq(G__22162__a,0);
} 
return G__22158__delegate.call(this,x,y,more);};
G__22158.cljs$lang$maxFixedArity = 2;
G__22158.cljs$lang$applyTo = (function (arglist__22163){
var x = cljs.core.first(arglist__22163);
arglist__22163 = cljs.core.next(arglist__22163);
var y = cljs.core.first(arglist__22163);
var more = cljs.core.rest(arglist__22163);
return G__22158__delegate(x,y,more);
});
G__22158.cljs$core$IFn$_invoke$arity$variadic = G__22158__delegate;
return G__22158;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__22164 = null;
if (arguments.length > 2) {
var G__22165__i = 0, G__22165__a = new Array(arguments.length -  2);
while (G__22165__i < G__22165__a.length) {G__22165__a[G__22165__i] = arguments[G__22165__i + 2]; ++G__22165__i;}
G__22164 = new cljs.core.IndexedSeq(G__22165__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22164);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__22166__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__22167 = y;
var G__22168 = cljs.core.first(more);
var G__22169 = cljs.core.next(more);
x = G__22167;
y = G__22168;
more = G__22169;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22166 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22170__i = 0, G__22170__a = new Array(arguments.length -  2);
while (G__22170__i < G__22170__a.length) {G__22170__a[G__22170__i] = arguments[G__22170__i + 2]; ++G__22170__i;}
  more = new cljs.core.IndexedSeq(G__22170__a,0);
} 
return G__22166__delegate.call(this,x,y,more);};
G__22166.cljs$lang$maxFixedArity = 2;
G__22166.cljs$lang$applyTo = (function (arglist__22171){
var x = cljs.core.first(arglist__22171);
arglist__22171 = cljs.core.next(arglist__22171);
var y = cljs.core.first(arglist__22171);
var more = cljs.core.rest(arglist__22171);
return G__22166__delegate(x,y,more);
});
G__22166.cljs$core$IFn$_invoke$arity$variadic = G__22166__delegate;
return G__22166;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__22172 = null;
if (arguments.length > 2) {
var G__22173__i = 0, G__22173__a = new Array(arguments.length -  2);
while (G__22173__i < G__22173__a.length) {G__22173__a[G__22173__i] = arguments[G__22173__i + 2]; ++G__22173__i;}
G__22172 = new cljs.core.IndexedSeq(G__22173__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22172);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__22174__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__22175 = y;
var G__22176 = cljs.core.first(more);
var G__22177 = cljs.core.next(more);
x = G__22175;
y = G__22176;
more = G__22177;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22174 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22178__i = 0, G__22178__a = new Array(arguments.length -  2);
while (G__22178__i < G__22178__a.length) {G__22178__a[G__22178__i] = arguments[G__22178__i + 2]; ++G__22178__i;}
  more = new cljs.core.IndexedSeq(G__22178__a,0);
} 
return G__22174__delegate.call(this,x,y,more);};
G__22174.cljs$lang$maxFixedArity = 2;
G__22174.cljs$lang$applyTo = (function (arglist__22179){
var x = cljs.core.first(arglist__22179);
arglist__22179 = cljs.core.next(arglist__22179);
var y = cljs.core.first(arglist__22179);
var more = cljs.core.rest(arglist__22179);
return G__22174__delegate(x,y,more);
});
G__22174.cljs$core$IFn$_invoke$arity$variadic = G__22174__delegate;
return G__22174;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__22180 = null;
if (arguments.length > 2) {
var G__22181__i = 0, G__22181__a = new Array(arguments.length -  2);
while (G__22181__i < G__22181__a.length) {G__22181__a[G__22181__i] = arguments[G__22181__i + 2]; ++G__22181__i;}
G__22180 = new cljs.core.IndexedSeq(G__22181__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__22182__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__22183 = y;
var G__22184 = cljs.core.first(more);
var G__22185 = cljs.core.next(more);
x = G__22183;
y = G__22184;
more = G__22185;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22182 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22186__i = 0, G__22186__a = new Array(arguments.length -  2);
while (G__22186__i < G__22186__a.length) {G__22186__a[G__22186__i] = arguments[G__22186__i + 2]; ++G__22186__i;}
  more = new cljs.core.IndexedSeq(G__22186__a,0);
} 
return G__22182__delegate.call(this,x,y,more);};
G__22182.cljs$lang$maxFixedArity = 2;
G__22182.cljs$lang$applyTo = (function (arglist__22187){
var x = cljs.core.first(arglist__22187);
arglist__22187 = cljs.core.next(arglist__22187);
var y = cljs.core.first(arglist__22187);
var more = cljs.core.rest(arglist__22187);
return G__22182__delegate(x,y,more);
});
G__22182.cljs$core$IFn$_invoke$arity$variadic = G__22182__delegate;
return G__22182;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__22188 = null;
if (arguments.length > 2) {
var G__22189__i = 0, G__22189__a = new Array(arguments.length -  2);
while (G__22189__i < G__22189__a.length) {G__22189__a[G__22189__i] = arguments[G__22189__i + 2]; ++G__22189__i;}
G__22188 = new cljs.core.IndexedSeq(G__22189__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__13640__auto__ = x;
var y__13641__auto__ = y;
return ((x__13640__auto__ > y__13641__auto__) ? x__13640__auto__ : y__13641__auto__);
});
var max__3 = (function() { 
var G__22190__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__13640__auto__ = x;
var y__13641__auto__ = y;
return ((x__13640__auto__ > y__13641__auto__) ? x__13640__auto__ : y__13641__auto__);
})(),more);
};
var G__22190 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22191__i = 0, G__22191__a = new Array(arguments.length -  2);
while (G__22191__i < G__22191__a.length) {G__22191__a[G__22191__i] = arguments[G__22191__i + 2]; ++G__22191__i;}
  more = new cljs.core.IndexedSeq(G__22191__a,0);
} 
return G__22190__delegate.call(this,x,y,more);};
G__22190.cljs$lang$maxFixedArity = 2;
G__22190.cljs$lang$applyTo = (function (arglist__22192){
var x = cljs.core.first(arglist__22192);
arglist__22192 = cljs.core.next(arglist__22192);
var y = cljs.core.first(arglist__22192);
var more = cljs.core.rest(arglist__22192);
return G__22190__delegate(x,y,more);
});
G__22190.cljs$core$IFn$_invoke$arity$variadic = G__22190__delegate;
return G__22190;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__22193 = null;
if (arguments.length > 2) {
var G__22194__i = 0, G__22194__a = new Array(arguments.length -  2);
while (G__22194__i < G__22194__a.length) {G__22194__a[G__22194__i] = arguments[G__22194__i + 2]; ++G__22194__i;}
G__22193 = new cljs.core.IndexedSeq(G__22194__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22193);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__13647__auto__ = x;
var y__13648__auto__ = y;
return ((x__13647__auto__ < y__13648__auto__) ? x__13647__auto__ : y__13648__auto__);
});
var min__3 = (function() { 
var G__22195__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__13647__auto__ = x;
var y__13648__auto__ = y;
return ((x__13647__auto__ < y__13648__auto__) ? x__13647__auto__ : y__13648__auto__);
})(),more);
};
var G__22195 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22196__i = 0, G__22196__a = new Array(arguments.length -  2);
while (G__22196__i < G__22196__a.length) {G__22196__a[G__22196__i] = arguments[G__22196__i + 2]; ++G__22196__i;}
  more = new cljs.core.IndexedSeq(G__22196__a,0);
} 
return G__22195__delegate.call(this,x,y,more);};
G__22195.cljs$lang$maxFixedArity = 2;
G__22195.cljs$lang$applyTo = (function (arglist__22197){
var x = cljs.core.first(arglist__22197);
arglist__22197 = cljs.core.next(arglist__22197);
var y = cljs.core.first(arglist__22197);
var more = cljs.core.rest(arglist__22197);
return G__22195__delegate(x,y,more);
});
G__22195.cljs$core$IFn$_invoke$arity$variadic = G__22195__delegate;
return G__22195;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__22198 = null;
if (arguments.length > 2) {
var G__22199__i = 0, G__22199__a = new Array(arguments.length -  2);
while (G__22199__i < G__22199__a.length) {G__22199__a[G__22199__i] = arguments[G__22199__i + 2]; ++G__22199__i;}
G__22198 = new cljs.core.IndexedSeq(G__22199__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22198);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__22200__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__22200 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22201__i = 0, G__22201__a = new Array(arguments.length -  2);
while (G__22201__i < G__22201__a.length) {G__22201__a[G__22201__i] = arguments[G__22201__i + 2]; ++G__22201__i;}
  more = new cljs.core.IndexedSeq(G__22201__a,0);
} 
return G__22200__delegate.call(this,x,y,more);};
G__22200.cljs$lang$maxFixedArity = 2;
G__22200.cljs$lang$applyTo = (function (arglist__22202){
var x = cljs.core.first(arglist__22202);
arglist__22202 = cljs.core.next(arglist__22202);
var y = cljs.core.first(arglist__22202);
var more = cljs.core.rest(arglist__22202);
return G__22200__delegate(x,y,more);
});
G__22200.cljs$core$IFn$_invoke$arity$variadic = G__22200__delegate;
return G__22200;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__22203 = null;
if (arguments.length > 2) {
var G__22204__i = 0, G__22204__a = new Array(arguments.length -  2);
while (G__22204__i < G__22204__a.length) {G__22204__a[G__22204__i] = arguments[G__22204__i + 2]; ++G__22204__i;}
G__22203 = new cljs.core.IndexedSeq(G__22204__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22203);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__22205__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__22205 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22206__i = 0, G__22206__a = new Array(arguments.length -  2);
while (G__22206__i < G__22206__a.length) {G__22206__a[G__22206__i] = arguments[G__22206__i + 2]; ++G__22206__i;}
  more = new cljs.core.IndexedSeq(G__22206__a,0);
} 
return G__22205__delegate.call(this,x,y,more);};
G__22205.cljs$lang$maxFixedArity = 2;
G__22205.cljs$lang$applyTo = (function (arglist__22207){
var x = cljs.core.first(arglist__22207);
arglist__22207 = cljs.core.next(arglist__22207);
var y = cljs.core.first(arglist__22207);
var more = cljs.core.rest(arglist__22207);
return G__22205__delegate(x,y,more);
});
G__22205.cljs$core$IFn$_invoke$arity$variadic = G__22205__delegate;
return G__22205;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__22208 = null;
if (arguments.length > 2) {
var G__22209__i = 0, G__22209__a = new Array(arguments.length -  2);
while (G__22209__i < G__22209__a.length) {G__22209__a[G__22209__i] = arguments[G__22209__i + 2]; ++G__22209__i;}
G__22208 = new cljs.core.IndexedSeq(G__22209__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__22214__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__22214 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22215__i = 0, G__22215__a = new Array(arguments.length -  2);
while (G__22215__i < G__22215__a.length) {G__22215__a[G__22215__i] = arguments[G__22215__i + 2]; ++G__22215__i;}
  more = new cljs.core.IndexedSeq(G__22215__a,0);
} 
return G__22214__delegate.call(this,x,y,more);};
G__22214.cljs$lang$maxFixedArity = 2;
G__22214.cljs$lang$applyTo = (function (arglist__22216){
var x = cljs.core.first(arglist__22216);
arglist__22216 = cljs.core.next(arglist__22216);
var y = cljs.core.first(arglist__22216);
var more = cljs.core.rest(arglist__22216);
return G__22214__delegate(x,y,more);
});
G__22214.cljs$core$IFn$_invoke$arity$variadic = G__22214__delegate;
return G__22214;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__22217 = null;
if (arguments.length > 2) {
var G__22218__i = 0, G__22218__a = new Array(arguments.length -  2);
while (G__22218__i < G__22218__a.length) {G__22218__a[G__22218__i] = arguments[G__22218__i + 2]; ++G__22218__i;}
G__22217 = new cljs.core.IndexedSeq(G__22218__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22217);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__22219__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__22219 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22220__i = 0, G__22220__a = new Array(arguments.length -  2);
while (G__22220__i < G__22220__a.length) {G__22220__a[G__22220__i] = arguments[G__22220__i + 2]; ++G__22220__i;}
  more = new cljs.core.IndexedSeq(G__22220__a,0);
} 
return G__22219__delegate.call(this,x,y,more);};
G__22219.cljs$lang$maxFixedArity = 2;
G__22219.cljs$lang$applyTo = (function (arglist__22221){
var x = cljs.core.first(arglist__22221);
arglist__22221 = cljs.core.next(arglist__22221);
var y = cljs.core.first(arglist__22221);
var more = cljs.core.rest(arglist__22221);
return G__22219__delegate(x,y,more);
});
G__22219.cljs$core$IFn$_invoke$arity$variadic = G__22219__delegate;
return G__22219;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__22222 = null;
if (arguments.length > 2) {
var G__22223__i = 0, G__22223__a = new Array(arguments.length -  2);
while (G__22223__i < G__22223__a.length) {G__22223__a[G__22223__i] = arguments[G__22223__i + 2]; ++G__22223__i;}
G__22222 = new cljs.core.IndexedSeq(G__22223__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22222);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__22224__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__22224 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22225__i = 0, G__22225__a = new Array(arguments.length -  2);
while (G__22225__i < G__22225__a.length) {G__22225__a[G__22225__i] = arguments[G__22225__i + 2]; ++G__22225__i;}
  more = new cljs.core.IndexedSeq(G__22225__a,0);
} 
return G__22224__delegate.call(this,x,y,more);};
G__22224.cljs$lang$maxFixedArity = 2;
G__22224.cljs$lang$applyTo = (function (arglist__22226){
var x = cljs.core.first(arglist__22226);
arglist__22226 = cljs.core.next(arglist__22226);
var y = cljs.core.first(arglist__22226);
var more = cljs.core.rest(arglist__22226);
return G__22224__delegate(x,y,more);
});
G__22224.cljs$core$IFn$_invoke$arity$variadic = G__22224__delegate;
return G__22224;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__22227 = null;
if (arguments.length > 2) {
var G__22228__i = 0, G__22228__a = new Array(arguments.length -  2);
while (G__22228__i < G__22228__a.length) {G__22228__a[G__22228__i] = arguments[G__22228__i + 2]; ++G__22228__i;}
G__22227 = new cljs.core.IndexedSeq(G__22228__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22227);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__22231 = x;
var G__22232 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__22231,G__22232) : cljs.core.mod.call(null,G__22231,G__22232));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__22233__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__22233 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22234__i = 0, G__22234__a = new Array(arguments.length -  2);
while (G__22234__i < G__22234__a.length) {G__22234__a[G__22234__i] = arguments[G__22234__i + 2]; ++G__22234__i;}
  more = new cljs.core.IndexedSeq(G__22234__a,0);
} 
return G__22233__delegate.call(this,x,y,more);};
G__22233.cljs$lang$maxFixedArity = 2;
G__22233.cljs$lang$applyTo = (function (arglist__22235){
var x = cljs.core.first(arglist__22235);
arglist__22235 = cljs.core.next(arglist__22235);
var y = cljs.core.first(arglist__22235);
var more = cljs.core.rest(arglist__22235);
return G__22233__delegate(x,y,more);
});
G__22233.cljs$core$IFn$_invoke$arity$variadic = G__22233__delegate;
return G__22233;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__22236 = null;
if (arguments.length > 2) {
var G__22237__i = 0, G__22237__a = new Array(arguments.length -  2);
while (G__22237__i < G__22237__a.length) {G__22237__a[G__22237__i] = arguments[G__22237__i + 2]; ++G__22237__i;}
G__22236 = new cljs.core.IndexedSeq(G__22237__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__22238__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__22238 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22239__i = 0, G__22239__a = new Array(arguments.length -  2);
while (G__22239__i < G__22239__a.length) {G__22239__a[G__22239__i] = arguments[G__22239__i + 2]; ++G__22239__i;}
  more = new cljs.core.IndexedSeq(G__22239__a,0);
} 
return G__22238__delegate.call(this,x,y,more);};
G__22238.cljs$lang$maxFixedArity = 2;
G__22238.cljs$lang$applyTo = (function (arglist__22240){
var x = cljs.core.first(arglist__22240);
arglist__22240 = cljs.core.next(arglist__22240);
var y = cljs.core.first(arglist__22240);
var more = cljs.core.rest(arglist__22240);
return G__22238__delegate(x,y,more);
});
G__22238.cljs$core$IFn$_invoke$arity$variadic = G__22238__delegate;
return G__22238;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__22241 = null;
if (arguments.length > 2) {
var G__22242__i = 0, G__22242__a = new Array(arguments.length -  2);
while (G__22242__i < G__22242__a.length) {G__22242__a[G__22242__i] = arguments[G__22242__i + 2]; ++G__22242__i;}
G__22241 = new cljs.core.IndexedSeq(G__22242__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22241);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__22245 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__22245) : Math.floor.call(null,G__22245));
} else {
var G__22246 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22246) : Math.ceil.call(null,G__22246));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__22247__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__22247 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22248__i = 0, G__22248__a = new Array(arguments.length -  2);
while (G__22248__i < G__22248__a.length) {G__22248__a[G__22248__i] = arguments[G__22248__i + 2]; ++G__22248__i;}
  more = new cljs.core.IndexedSeq(G__22248__a,0);
} 
return G__22247__delegate.call(this,x,y,more);};
G__22247.cljs$lang$maxFixedArity = 2;
G__22247.cljs$lang$applyTo = (function (arglist__22249){
var x = cljs.core.first(arglist__22249);
arglist__22249 = cljs.core.next(arglist__22249);
var y = cljs.core.first(arglist__22249);
var more = cljs.core.rest(arglist__22249);
return G__22247__delegate(x,y,more);
});
G__22247.cljs$core$IFn$_invoke$arity$variadic = G__22247__delegate;
return G__22247;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__22250 = null;
if (arguments.length > 2) {
var G__22251__i = 0, G__22251__a = new Array(arguments.length -  2);
while (G__22251__i < G__22251__a.length) {G__22251__a[G__22251__i] = arguments[G__22251__i + 2]; ++G__22251__i;}
G__22250 = new cljs.core.IndexedSeq(G__22251__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22250);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__22252__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__22252 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22253__i = 0, G__22253__a = new Array(arguments.length -  2);
while (G__22253__i < G__22253__a.length) {G__22253__a[G__22253__i] = arguments[G__22253__i + 2]; ++G__22253__i;}
  more = new cljs.core.IndexedSeq(G__22253__a,0);
} 
return G__22252__delegate.call(this,x,y,more);};
G__22252.cljs$lang$maxFixedArity = 2;
G__22252.cljs$lang$applyTo = (function (arglist__22254){
var x = cljs.core.first(arglist__22254);
arglist__22254 = cljs.core.next(arglist__22254);
var y = cljs.core.first(arglist__22254);
var more = cljs.core.rest(arglist__22254);
return G__22252__delegate(x,y,more);
});
G__22252.cljs$core$IFn$_invoke$arity$variadic = G__22252__delegate;
return G__22252;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__22255 = null;
if (arguments.length > 2) {
var G__22256__i = 0, G__22256__a = new Array(arguments.length -  2);
while (G__22256__i < G__22256__a.length) {G__22256__a[G__22256__i] = arguments[G__22256__i + 2]; ++G__22256__i;}
G__22255 = new cljs.core.IndexedSeq(G__22256__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__22257__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__22257 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22258__i = 0, G__22258__a = new Array(arguments.length -  2);
while (G__22258__i < G__22258__a.length) {G__22258__a[G__22258__i] = arguments[G__22258__i + 2]; ++G__22258__i;}
  more = new cljs.core.IndexedSeq(G__22258__a,0);
} 
return G__22257__delegate.call(this,x,y,more);};
G__22257.cljs$lang$maxFixedArity = 2;
G__22257.cljs$lang$applyTo = (function (arglist__22259){
var x = cljs.core.first(arglist__22259);
arglist__22259 = cljs.core.next(arglist__22259);
var y = cljs.core.first(arglist__22259);
var more = cljs.core.rest(arglist__22259);
return G__22257__delegate(x,y,more);
});
G__22257.cljs$core$IFn$_invoke$arity$variadic = G__22257__delegate;
return G__22257;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__22260 = null;
if (arguments.length > 2) {
var G__22261__i = 0, G__22261__a = new Array(arguments.length -  2);
while (G__22261__i < G__22261__a.length) {G__22261__a[G__22261__i] = arguments[G__22261__i + 2]; ++G__22261__i;}
G__22260 = new cljs.core.IndexedSeq(G__22261__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__22262__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__22262 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22263__i = 0, G__22263__a = new Array(arguments.length -  2);
while (G__22263__i < G__22263__a.length) {G__22263__a[G__22263__i] = arguments[G__22263__i + 2]; ++G__22263__i;}
  more = new cljs.core.IndexedSeq(G__22263__a,0);
} 
return G__22262__delegate.call(this,x,y,more);};
G__22262.cljs$lang$maxFixedArity = 2;
G__22262.cljs$lang$applyTo = (function (arglist__22264){
var x = cljs.core.first(arglist__22264);
arglist__22264 = cljs.core.next(arglist__22264);
var y = cljs.core.first(arglist__22264);
var more = cljs.core.rest(arglist__22264);
return G__22262__delegate(x,y,more);
});
G__22262.cljs$core$IFn$_invoke$arity$variadic = G__22262__delegate;
return G__22262;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__22265 = null;
if (arguments.length > 2) {
var G__22266__i = 0, G__22266__a = new Array(arguments.length -  2);
while (G__22266__i < G__22266__a.length) {G__22266__a[G__22266__i] = arguments[G__22266__i + 2]; ++G__22266__i;}
G__22265 = new cljs.core.IndexedSeq(G__22266__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22265);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__22271__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__22272 = y;
var G__22273 = cljs.core.first(more);
var G__22274 = cljs.core.next(more);
x = G__22272;
y = G__22273;
more = G__22274;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__22271 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22275__i = 0, G__22275__a = new Array(arguments.length -  2);
while (G__22275__i < G__22275__a.length) {G__22275__a[G__22275__i] = arguments[G__22275__i + 2]; ++G__22275__i;}
  more = new cljs.core.IndexedSeq(G__22275__a,0);
} 
return G__22271__delegate.call(this,x,y,more);};
G__22271.cljs$lang$maxFixedArity = 2;
G__22271.cljs$lang$applyTo = (function (arglist__22276){
var x = cljs.core.first(arglist__22276);
arglist__22276 = cljs.core.next(arglist__22276);
var y = cljs.core.first(arglist__22276);
var more = cljs.core.rest(arglist__22276);
return G__22271__delegate(x,y,more);
});
G__22271.cljs$core$IFn$_invoke$arity$variadic = G__22271__delegate;
return G__22271;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__22277 = null;
if (arguments.length > 2) {
var G__22278__i = 0, G__22278__a = new Array(arguments.length -  2);
while (G__22278__i < G__22278__a.length) {G__22278__a[G__22278__i] = arguments[G__22278__i + 2]; ++G__22278__i;}
G__22277 = new cljs.core.IndexedSeq(G__22278__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22277);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__22279 = (n__$1 - (1));
var G__22280 = cljs.core.next(xs);
n__$1 = G__22279;
xs = G__22280;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__22284 = x;
return goog.string.buildString(G__22284);
}
});
var str__2 = (function() { 
var G__22285__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__22286 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__22287 = cljs.core.next(more);
sb = G__22286;
more = G__22287;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__22285 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__22288__i = 0, G__22288__a = new Array(arguments.length -  1);
while (G__22288__i < G__22288__a.length) {G__22288__a[G__22288__i] = arguments[G__22288__i + 1]; ++G__22288__i;}
  ys = new cljs.core.IndexedSeq(G__22288__a,0);
} 
return G__22285__delegate.call(this,x,ys);};
G__22285.cljs$lang$maxFixedArity = 1;
G__22285.cljs$lang$applyTo = (function (arglist__22289){
var x = cljs.core.first(arglist__22289);
var ys = cljs.core.rest(arglist__22289);
return G__22285__delegate(x,ys);
});
G__22285.cljs$core$IFn$_invoke$arity$variadic = G__22285__delegate;
return G__22285;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__22290 = null;
if (arguments.length > 1) {
var G__22291__i = 0, G__22291__a = new Array(arguments.length -  1);
while (G__22291__i < G__22291__a.length) {G__22291__a[G__22291__i] = arguments[G__22291__i + 1]; ++G__22291__i;}
G__22290 = new cljs.core.IndexedSeq(G__22291__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__22290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__22292 = cljs.core.next(xs);
var G__22293 = cljs.core.next(ys);
xs = G__22292;
ys = G__22293;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__22294 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__22295 = cljs.core.next(s);
res = G__22294;
s = G__22295;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__22300 = ((h + (cljs.core.hash((function (){var G__22298 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22298) : cljs.core.key.call(null,G__22298));
})()) ^ cljs.core.hash((function (){var G__22299 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22299) : cljs.core.val.call(null,G__22299));
})()))) % (4503599627370496));
var G__22301 = cljs.core.next(s);
h = G__22300;
s = G__22301;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__22302 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__22303 = cljs.core.next(s__$1);
h = G__22302;
s__$1 = G__22303;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__22314_22324 = cljs.core.seq(fn_map);
var chunk__22315_22325 = null;
var count__22316_22326 = (0);
var i__22317_22327 = (0);
while(true){
if((i__22317_22327 < count__22316_22326)){
var vec__22318_22328 = chunk__22315_22325.cljs$core$IIndexed$_nth$arity$2(null,i__22317_22327);
var key_name_22329 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22318_22328,(0),null);
var f_22330 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22318_22328,(1),null);
var str_name_22331 = (function (){var G__22319 = key_name_22329;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22319) : cljs.core.name.call(null,G__22319));
})();
(obj[str_name_22331] = f_22330);

var G__22332 = seq__22314_22324;
var G__22333 = chunk__22315_22325;
var G__22334 = count__22316_22326;
var G__22335 = (i__22317_22327 + (1));
seq__22314_22324 = G__22332;
chunk__22315_22325 = G__22333;
count__22316_22326 = G__22334;
i__22317_22327 = G__22335;
continue;
} else {
var temp__4126__auto___22336 = cljs.core.seq(seq__22314_22324);
if(temp__4126__auto___22336){
var seq__22314_22337__$1 = temp__4126__auto___22336;
if(cljs.core.chunked_seq_QMARK_(seq__22314_22337__$1)){
var c__14110__auto___22338 = (function (){var G__22320 = seq__22314_22337__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__22320) : cljs.core.chunk_first.call(null,G__22320));
})();
var G__22339 = (function (){var G__22321 = seq__22314_22337__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__22321) : cljs.core.chunk_rest.call(null,G__22321));
})();
var G__22340 = c__14110__auto___22338;
var G__22341 = cljs.core.count(c__14110__auto___22338);
var G__22342 = (0);
seq__22314_22324 = G__22339;
chunk__22315_22325 = G__22340;
count__22316_22326 = G__22341;
i__22317_22327 = G__22342;
continue;
} else {
var vec__22322_22343 = cljs.core.first(seq__22314_22337__$1);
var key_name_22344 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22322_22343,(0),null);
var f_22345 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22322_22343,(1),null);
var str_name_22346 = (function (){var G__22323 = key_name_22344;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22323) : cljs.core.name.call(null,G__22323));
})();
(obj[str_name_22346] = f_22345);

var G__22347 = cljs.core.next(seq__22314_22337__$1);
var G__22348 = null;
var G__22349 = (0);
var G__22350 = (0);
seq__22314_22324 = G__22347;
chunk__22315_22325 = G__22348;
count__22316_22326 = G__22349;
i__22317_22327 = G__22350;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__22352 = coll;
if(G__22352){
var bit__14004__auto__ = (G__22352.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__14004__auto__) || (G__22352.cljs$core$IReversible$)){
return true;
} else {
if((!G__22352.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22352);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__22352);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__22353 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__22353;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__22354 = (i - (1));
var G__22355 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__22354;
r = G__22355;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__22356__i = 0, G__22356__a = new Array(arguments.length -  0);
while (G__22356__i < G__22356__a.length) {G__22356__a[G__22356__i] = arguments[G__22356__i + 0]; ++G__22356__i;}
  xs = new cljs.core.IndexedSeq(G__22356__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__22357){
var xs = cljs.core.seq(arglist__22357);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__13323__auto__ = (coll == null);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var G__22361 = coll;
if(G__22361){
var bit__13997__auto__ = (G__22361.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__13997__auto__) || (G__22361.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__22363 = x;
if(G__22363){
var bit__14004__auto__ = (G__22363.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__14004__auto__) || (G__22363.cljs$core$IList$)){
return true;
} else {
if((!G__22363.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22363);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__22363);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__13311__auto__ = cljs.core.not(a.ns);
if(and__13311__auto__){
return b.ns;
} else {
return and__13311__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__22370 = a.ns;
var G__22371 = b.ns;
return goog.array.defaultCompare(G__22370,G__22371);
})();
if(((0) === nsc)){
var G__22372 = a.name;
var G__22373 = b.name;
return goog.array.defaultCompare(G__22372,G__22373);
} else {
return nsc;
}
}
} else {
var G__22374 = a.name;
var G__22375 = b.name;
return goog.array.defaultCompare(G__22374,G__22375);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__13744__auto__ = self__._hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__22377 = null;
var G__22377__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__22377__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__22377 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__22377__2.call(this,self__,coll);
case 3:
return G__22377__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22377.cljs$core$IFn$_invoke$arity$2 = G__22377__2;
G__22377.cljs$core$IFn$_invoke$arity$3 = G__22377__3;
return G__22377;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args22376){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22376)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__22379 = x;
if(G__22379){
var bit__13997__auto__ = (G__22379.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13997__auto__) || (G__22379.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__22381 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__22381) : cljs.core.name.call(null,G__22381));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__22382 = ls.sval();
ls = G__22382;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__22384 = s;
if(G__22384){
var bit__13997__auto__ = (G__22384.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__13997__auto__) || (G__22384.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__22385 = cljs.core.next(s__$1);
s__$1 = G__22385;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_22386 = (0);
var xs_22387 = cljs.core.seq(coll);
while(true){
if(xs_22387){
(ret[i_22386] = cljs.core.to_array(cljs.core.first(xs_22387)));

var G__22388 = (i_22386 + (1));
var G__22389 = cljs.core.next(xs_22387);
i_22386 = G__22388;
xs_22387 = G__22389;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22392 = (i + (1));
var G__22393 = cljs.core.next(s__$1);
i = G__22392;
s__$1 = G__22393;
continue;
} else {
return a;
}
break;
}
} else {
var n__14210__auto___22394 = size;
var i_22395 = (0);
while(true){
if((i_22395 < n__14210__auto___22394)){
(a[i_22395] = init_val_or_seq);

var G__22396 = (i_22395 + (1));
i_22395 = G__22396;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22399 = (i + (1));
var G__22400 = cljs.core.next(s__$1);
i = G__22399;
s__$1 = G__22400;
continue;
} else {
return a;
}
break;
}
} else {
var n__14210__auto___22401 = size;
var i_22402 = (0);
while(true){
if((i_22402 < n__14210__auto___22401)){
(a[i_22402] = init_val_or_seq);

var G__22403 = (i_22402 + (1));
i_22402 = G__22403;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22406 = (i + (1));
var G__22407 = cljs.core.next(s__$1);
i = G__22406;
s__$1 = G__22407;
continue;
} else {
return a;
}
break;
}
} else {
var n__14210__auto___22408 = size;
var i_22409 = (0);
while(true){
if((i_22409 < n__14210__auto___22408)){
(a[i_22409] = init_val_or_seq);

var G__22410 = (i_22409 + (1));
i_22409 = G__22410;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__22413 = (i + (1));
var G__22414 = cljs.core.next(s__$1);
i = G__22413;
s__$1 = G__22414;
continue;
} else {
return a;
}
break;
}
} else {
var n__14210__auto___22415 = size;
var i_22416 = (0);
while(true){
if((i_22416 < n__14210__auto___22415)){
(a[i_22416] = init_val_or_seq);

var G__22417 = (i_22416 + (1));
i_22416 = G__22417;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__22418 = cljs.core.next(s__$1);
var G__22419 = (i - (1));
var G__22420 = (sum + (1));
s__$1 = G__22418;
i = G__22419;
sum = G__22420;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__22440__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__22440 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__22441__i = 0, G__22441__a = new Array(arguments.length -  2);
while (G__22441__i < G__22441__a.length) {G__22441__a[G__22441__i] = arguments[G__22441__i + 2]; ++G__22441__i;}
  zs = new cljs.core.IndexedSeq(G__22441__a,0);
} 
return G__22440__delegate.call(this,x,y,zs);};
G__22440.cljs$lang$maxFixedArity = 2;
G__22440.cljs$lang$applyTo = (function (arglist__22442){
var x = cljs.core.first(arglist__22442);
arglist__22442 = cljs.core.next(arglist__22442);
var y = cljs.core.first(arglist__22442);
var zs = cljs.core.rest(arglist__22442);
return G__22440__delegate(x,y,zs);
});
G__22440.cljs$core$IFn$_invoke$arity$variadic = G__22440__delegate;
return G__22440;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__22443 = null;
if (arguments.length > 2) {
var G__22444__i = 0, G__22444__a = new Array(arguments.length -  2);
while (G__22444__i < G__22444__a.length) {G__22444__a[G__22444__i] = arguments[G__22444__i + 2]; ++G__22444__i;}
G__22443 = new cljs.core.IndexedSeq(G__22444__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__22445__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__22445 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__22446__i = 0, G__22446__a = new Array(arguments.length -  4);
while (G__22446__i < G__22446__a.length) {G__22446__a[G__22446__i] = arguments[G__22446__i + 4]; ++G__22446__i;}
  more = new cljs.core.IndexedSeq(G__22446__a,0);
} 
return G__22445__delegate.call(this,a,b,c,d,more);};
G__22445.cljs$lang$maxFixedArity = 4;
G__22445.cljs$lang$applyTo = (function (arglist__22447){
var a = cljs.core.first(arglist__22447);
arglist__22447 = cljs.core.next(arglist__22447);
var b = cljs.core.first(arglist__22447);
arglist__22447 = cljs.core.next(arglist__22447);
var c = cljs.core.first(arglist__22447);
arglist__22447 = cljs.core.next(arglist__22447);
var d = cljs.core.first(arglist__22447);
var more = cljs.core.rest(arglist__22447);
return G__22445__delegate(a,b,c,d,more);
});
G__22445.cljs$core$IFn$_invoke$arity$variadic = G__22445__delegate;
return G__22445;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__22448 = null;
if (arguments.length > 4) {
var G__22449__i = 0, G__22449__a = new Array(arguments.length -  4);
while (G__22449__i < G__22449__a.length) {G__22449__a[G__22449__i] = arguments[G__22449__i + 4]; ++G__22449__i;}
G__22448 = new cljs.core.IndexedSeq(G__22449__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__22448);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__22450__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22451 = ntcoll;
var G__22452 = cljs.core.first(vals);
var G__22453 = cljs.core.next(vals);
tcoll = G__22451;
val = G__22452;
vals = G__22453;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22450 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22454__i = 0, G__22454__a = new Array(arguments.length -  2);
while (G__22454__i < G__22454__a.length) {G__22454__a[G__22454__i] = arguments[G__22454__i + 2]; ++G__22454__i;}
  vals = new cljs.core.IndexedSeq(G__22454__a,0);
} 
return G__22450__delegate.call(this,tcoll,val,vals);};
G__22450.cljs$lang$maxFixedArity = 2;
G__22450.cljs$lang$applyTo = (function (arglist__22455){
var tcoll = cljs.core.first(arglist__22455);
arglist__22455 = cljs.core.next(arglist__22455);
var val = cljs.core.first(arglist__22455);
var vals = cljs.core.rest(arglist__22455);
return G__22450__delegate(tcoll,val,vals);
});
G__22450.cljs$core$IFn$_invoke$arity$variadic = G__22450__delegate;
return G__22450;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__22456 = null;
if (arguments.length > 2) {
var G__22457__i = 0, G__22457__a = new Array(arguments.length -  2);
while (G__22457__i < G__22457__a.length) {G__22457__a[G__22457__i] = arguments[G__22457__i + 2]; ++G__22457__i;}
G__22456 = new cljs.core.IndexedSeq(G__22457__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22456);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__22458__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__22459 = ntcoll;
var G__22460 = cljs.core.first(kvs);
var G__22461 = cljs.core.second(kvs);
var G__22462 = cljs.core.nnext(kvs);
tcoll = G__22459;
key = G__22460;
val = G__22461;
kvs = G__22462;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22458 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__22463__i = 0, G__22463__a = new Array(arguments.length -  3);
while (G__22463__i < G__22463__a.length) {G__22463__a[G__22463__i] = arguments[G__22463__i + 3]; ++G__22463__i;}
  kvs = new cljs.core.IndexedSeq(G__22463__a,0);
} 
return G__22458__delegate.call(this,tcoll,key,val,kvs);};
G__22458.cljs$lang$maxFixedArity = 3;
G__22458.cljs$lang$applyTo = (function (arglist__22464){
var tcoll = cljs.core.first(arglist__22464);
arglist__22464 = cljs.core.next(arglist__22464);
var key = cljs.core.first(arglist__22464);
arglist__22464 = cljs.core.next(arglist__22464);
var val = cljs.core.first(arglist__22464);
var kvs = cljs.core.rest(arglist__22464);
return G__22458__delegate(tcoll,key,val,kvs);
});
G__22458.cljs$core$IFn$_invoke$arity$variadic = G__22458__delegate;
return G__22458;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__22465 = null;
if (arguments.length > 3) {
var G__22466__i = 0, G__22466__a = new Array(arguments.length -  3);
while (G__22466__i < G__22466__a.length) {G__22466__a[G__22466__i] = arguments[G__22466__i + 3]; ++G__22466__i;}
G__22465 = new cljs.core.IndexedSeq(G__22466__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__22465);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__22467__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__22468 = ntcoll;
var G__22469 = cljs.core.first(ks);
var G__22470 = cljs.core.next(ks);
tcoll = G__22468;
key = G__22469;
ks = G__22470;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22467 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__22471__i = 0, G__22471__a = new Array(arguments.length -  2);
while (G__22471__i < G__22471__a.length) {G__22471__a[G__22471__i] = arguments[G__22471__i + 2]; ++G__22471__i;}
  ks = new cljs.core.IndexedSeq(G__22471__a,0);
} 
return G__22467__delegate.call(this,tcoll,key,ks);};
G__22467.cljs$lang$maxFixedArity = 2;
G__22467.cljs$lang$applyTo = (function (arglist__22472){
var tcoll = cljs.core.first(arglist__22472);
arglist__22472 = cljs.core.next(arglist__22472);
var key = cljs.core.first(arglist__22472);
var ks = cljs.core.rest(arglist__22472);
return G__22467__delegate(tcoll,key,ks);
});
G__22467.cljs$core$IFn$_invoke$arity$variadic = G__22467__delegate;
return G__22467;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__22473 = null;
if (arguments.length > 2) {
var G__22474__i = 0, G__22474__a = new Array(arguments.length -  2);
while (G__22474__i < G__22474__a.length) {G__22474__a[G__22474__i] = arguments[G__22474__i + 2]; ++G__22474__i;}
G__22473 = new cljs.core.IndexedSeq(G__22474__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__22473);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__22475__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__22476 = ntcoll;
var G__22477 = cljs.core.first(vals);
var G__22478 = cljs.core.next(vals);
tcoll = G__22476;
val = G__22477;
vals = G__22478;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__22475 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__22479__i = 0, G__22479__a = new Array(arguments.length -  2);
while (G__22479__i < G__22479__a.length) {G__22479__a[G__22479__i] = arguments[G__22479__i + 2]; ++G__22479__i;}
  vals = new cljs.core.IndexedSeq(G__22479__a,0);
} 
return G__22475__delegate.call(this,tcoll,val,vals);};
G__22475.cljs$lang$maxFixedArity = 2;
G__22475.cljs$lang$applyTo = (function (arglist__22480){
var tcoll = cljs.core.first(arglist__22480);
arglist__22480 = cljs.core.next(arglist__22480);
var val = cljs.core.first(arglist__22480);
var vals = cljs.core.rest(arglist__22480);
return G__22475__delegate(tcoll,val,vals);
});
G__22475.cljs$core$IFn$_invoke$arity$variadic = G__22475__delegate;
return G__22475;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__22481 = null;
if (arguments.length > 2) {
var G__22482__i = 0, G__22482__a = new Array(arguments.length -  2);
while (G__22482__i < G__22482__a.length) {G__22482__a[G__22482__i] = arguments[G__22482__i + 2]; ++G__22482__i;}
G__22481 = new cljs.core.IndexedSeq(G__22482__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__22481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a14254 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a14254);
} else {
var G__22693 = a14254;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22693) : f.call(null,G__22693));
}
} else {
var b14255 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a14254,b14255);
} else {
var G__22694 = a14254;
var G__22695 = b14255;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22694,G__22695) : f.call(null,G__22694,G__22695));
}
} else {
var c14256 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a14254,b14255,c14256);
} else {
var G__22696 = a14254;
var G__22697 = b14255;
var G__22698 = c14256;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22696,G__22697,G__22698) : f.call(null,G__22696,G__22697,G__22698));
}
} else {
var d14257 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a14254,b14255,c14256,d14257);
} else {
var G__22699 = a14254;
var G__22700 = b14255;
var G__22701 = c14256;
var G__22702 = d14257;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22699,G__22700,G__22701,G__22702) : f.call(null,G__22699,G__22700,G__22701,G__22702));
}
} else {
var e14258 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a14254,b14255,c14256,d14257,e14258);
} else {
var G__22703 = a14254;
var G__22704 = b14255;
var G__22705 = c14256;
var G__22706 = d14257;
var G__22707 = e14258;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22703,G__22704,G__22705,G__22706,G__22707) : f.call(null,G__22703,G__22704,G__22705,G__22706,G__22707));
}
} else {
var f14259 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a14254,b14255,c14256,d14257,e14258,f14259);
} else {
var G__22708 = a14254;
var G__22709 = b14255;
var G__22710 = c14256;
var G__22711 = d14257;
var G__22712 = e14258;
var G__22713 = f14259;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__22708,G__22709,G__22710,G__22711,G__22712,G__22713) : f.call(null,G__22708,G__22709,G__22710,G__22711,G__22712,G__22713));
}
} else {
var g14260 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a14254,b14255,c14256,d14257,e14258,f14259,g14260);
} else {
var G__22714 = a14254;
var G__22715 = b14255;
var G__22716 = c14256;
var G__22717 = d14257;
var G__22718 = e14258;
var G__22719 = f14259;
var G__22720 = g14260;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__22714,G__22715,G__22716,G__22717,G__22718,G__22719,G__22720) : f.call(null,G__22714,G__22715,G__22716,G__22717,G__22718,G__22719,G__22720));
}
} else {
var h14261 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261);
} else {
var G__22721 = a14254;
var G__22722 = b14255;
var G__22723 = c14256;
var G__22724 = d14257;
var G__22725 = e14258;
var G__22726 = f14259;
var G__22727 = g14260;
var G__22728 = h14261;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__22721,G__22722,G__22723,G__22724,G__22725,G__22726,G__22727,G__22728) : f.call(null,G__22721,G__22722,G__22723,G__22724,G__22725,G__22726,G__22727,G__22728));
}
} else {
var i14262 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262);
} else {
var G__22729 = a14254;
var G__22730 = b14255;
var G__22731 = c14256;
var G__22732 = d14257;
var G__22733 = e14258;
var G__22734 = f14259;
var G__22735 = g14260;
var G__22736 = h14261;
var G__22737 = i14262;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__22729,G__22730,G__22731,G__22732,G__22733,G__22734,G__22735,G__22736,G__22737) : f.call(null,G__22729,G__22730,G__22731,G__22732,G__22733,G__22734,G__22735,G__22736,G__22737));
}
} else {
var j14263 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263);
} else {
var G__22738 = a14254;
var G__22739 = b14255;
var G__22740 = c14256;
var G__22741 = d14257;
var G__22742 = e14258;
var G__22743 = f14259;
var G__22744 = g14260;
var G__22745 = h14261;
var G__22746 = i14262;
var G__22747 = j14263;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__22738,G__22739,G__22740,G__22741,G__22742,G__22743,G__22744,G__22745,G__22746,G__22747) : f.call(null,G__22738,G__22739,G__22740,G__22741,G__22742,G__22743,G__22744,G__22745,G__22746,G__22747));
}
} else {
var k14264 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264);
} else {
var G__22748 = a14254;
var G__22749 = b14255;
var G__22750 = c14256;
var G__22751 = d14257;
var G__22752 = e14258;
var G__22753 = f14259;
var G__22754 = g14260;
var G__22755 = h14261;
var G__22756 = i14262;
var G__22757 = j14263;
var G__22758 = k14264;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__22748,G__22749,G__22750,G__22751,G__22752,G__22753,G__22754,G__22755,G__22756,G__22757,G__22758) : f.call(null,G__22748,G__22749,G__22750,G__22751,G__22752,G__22753,G__22754,G__22755,G__22756,G__22757,G__22758));
}
} else {
var l14265 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265);
} else {
var G__22759 = a14254;
var G__22760 = b14255;
var G__22761 = c14256;
var G__22762 = d14257;
var G__22763 = e14258;
var G__22764 = f14259;
var G__22765 = g14260;
var G__22766 = h14261;
var G__22767 = i14262;
var G__22768 = j14263;
var G__22769 = k14264;
var G__22770 = l14265;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__22759,G__22760,G__22761,G__22762,G__22763,G__22764,G__22765,G__22766,G__22767,G__22768,G__22769,G__22770) : f.call(null,G__22759,G__22760,G__22761,G__22762,G__22763,G__22764,G__22765,G__22766,G__22767,G__22768,G__22769,G__22770));
}
} else {
var m14266 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266);
} else {
var G__22771 = a14254;
var G__22772 = b14255;
var G__22773 = c14256;
var G__22774 = d14257;
var G__22775 = e14258;
var G__22776 = f14259;
var G__22777 = g14260;
var G__22778 = h14261;
var G__22779 = i14262;
var G__22780 = j14263;
var G__22781 = k14264;
var G__22782 = l14265;
var G__22783 = m14266;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__22771,G__22772,G__22773,G__22774,G__22775,G__22776,G__22777,G__22778,G__22779,G__22780,G__22781,G__22782,G__22783) : f.call(null,G__22771,G__22772,G__22773,G__22774,G__22775,G__22776,G__22777,G__22778,G__22779,G__22780,G__22781,G__22782,G__22783));
}
} else {
var n14267 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266,n14267);
} else {
var G__22784 = a14254;
var G__22785 = b14255;
var G__22786 = c14256;
var G__22787 = d14257;
var G__22788 = e14258;
var G__22789 = f14259;
var G__22790 = g14260;
var G__22791 = h14261;
var G__22792 = i14262;
var G__22793 = j14263;
var G__22794 = k14264;
var G__22795 = l14265;
var G__22796 = m14266;
var G__22797 = n14267;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__22784,G__22785,G__22786,G__22787,G__22788,G__22789,G__22790,G__22791,G__22792,G__22793,G__22794,G__22795,G__22796,G__22797) : f.call(null,G__22784,G__22785,G__22786,G__22787,G__22788,G__22789,G__22790,G__22791,G__22792,G__22793,G__22794,G__22795,G__22796,G__22797));
}
} else {
var o14268 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266,n14267,o14268);
} else {
var G__22798 = a14254;
var G__22799 = b14255;
var G__22800 = c14256;
var G__22801 = d14257;
var G__22802 = e14258;
var G__22803 = f14259;
var G__22804 = g14260;
var G__22805 = h14261;
var G__22806 = i14262;
var G__22807 = j14263;
var G__22808 = k14264;
var G__22809 = l14265;
var G__22810 = m14266;
var G__22811 = n14267;
var G__22812 = o14268;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__22798,G__22799,G__22800,G__22801,G__22802,G__22803,G__22804,G__22805,G__22806,G__22807,G__22808,G__22809,G__22810,G__22811,G__22812) : f.call(null,G__22798,G__22799,G__22800,G__22801,G__22802,G__22803,G__22804,G__22805,G__22806,G__22807,G__22808,G__22809,G__22810,G__22811,G__22812));
}
} else {
var p14269 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266,n14267,o14268,p14269);
} else {
var G__22813 = a14254;
var G__22814 = b14255;
var G__22815 = c14256;
var G__22816 = d14257;
var G__22817 = e14258;
var G__22818 = f14259;
var G__22819 = g14260;
var G__22820 = h14261;
var G__22821 = i14262;
var G__22822 = j14263;
var G__22823 = k14264;
var G__22824 = l14265;
var G__22825 = m14266;
var G__22826 = n14267;
var G__22827 = o14268;
var G__22828 = p14269;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__22813,G__22814,G__22815,G__22816,G__22817,G__22818,G__22819,G__22820,G__22821,G__22822,G__22823,G__22824,G__22825,G__22826,G__22827,G__22828) : f.call(null,G__22813,G__22814,G__22815,G__22816,G__22817,G__22818,G__22819,G__22820,G__22821,G__22822,G__22823,G__22824,G__22825,G__22826,G__22827,G__22828));
}
} else {
var q14270 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266,n14267,o14268,p14269,q14270);
} else {
var G__22829 = a14254;
var G__22830 = b14255;
var G__22831 = c14256;
var G__22832 = d14257;
var G__22833 = e14258;
var G__22834 = f14259;
var G__22835 = g14260;
var G__22836 = h14261;
var G__22837 = i14262;
var G__22838 = j14263;
var G__22839 = k14264;
var G__22840 = l14265;
var G__22841 = m14266;
var G__22842 = n14267;
var G__22843 = o14268;
var G__22844 = p14269;
var G__22845 = q14270;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__22829,G__22830,G__22831,G__22832,G__22833,G__22834,G__22835,G__22836,G__22837,G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844,G__22845) : f.call(null,G__22829,G__22830,G__22831,G__22832,G__22833,G__22834,G__22835,G__22836,G__22837,G__22838,G__22839,G__22840,G__22841,G__22842,G__22843,G__22844,G__22845));
}
} else {
var r14271 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266,n14267,o14268,p14269,q14270,r14271);
} else {
var G__22846 = a14254;
var G__22847 = b14255;
var G__22848 = c14256;
var G__22849 = d14257;
var G__22850 = e14258;
var G__22851 = f14259;
var G__22852 = g14260;
var G__22853 = h14261;
var G__22854 = i14262;
var G__22855 = j14263;
var G__22856 = k14264;
var G__22857 = l14265;
var G__22858 = m14266;
var G__22859 = n14267;
var G__22860 = o14268;
var G__22861 = p14269;
var G__22862 = q14270;
var G__22863 = r14271;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__22846,G__22847,G__22848,G__22849,G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856,G__22857,G__22858,G__22859,G__22860,G__22861,G__22862,G__22863) : f.call(null,G__22846,G__22847,G__22848,G__22849,G__22850,G__22851,G__22852,G__22853,G__22854,G__22855,G__22856,G__22857,G__22858,G__22859,G__22860,G__22861,G__22862,G__22863));
}
} else {
var s14272 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266,n14267,o14268,p14269,q14270,r14271,s14272);
} else {
var G__22864 = a14254;
var G__22865 = b14255;
var G__22866 = c14256;
var G__22867 = d14257;
var G__22868 = e14258;
var G__22869 = f14259;
var G__22870 = g14260;
var G__22871 = h14261;
var G__22872 = i14262;
var G__22873 = j14263;
var G__22874 = k14264;
var G__22875 = l14265;
var G__22876 = m14266;
var G__22877 = n14267;
var G__22878 = o14268;
var G__22879 = p14269;
var G__22880 = q14270;
var G__22881 = r14271;
var G__22882 = s14272;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__22864,G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871,G__22872,G__22873,G__22874,G__22875,G__22876,G__22877,G__22878,G__22879,G__22880,G__22881,G__22882) : f.call(null,G__22864,G__22865,G__22866,G__22867,G__22868,G__22869,G__22870,G__22871,G__22872,G__22873,G__22874,G__22875,G__22876,G__22877,G__22878,G__22879,G__22880,G__22881,G__22882));
}
} else {
var t14273 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a14254,b14255,c14256,d14257,e14258,f14259,g14260,h14261,i14262,j14263,k14264,l14265,m14266,n14267,o14268,p14269,q14270,r14271,s14272,t14273);
} else {
var G__22883 = a14254;
var G__22884 = b14255;
var G__22885 = c14256;
var G__22886 = d14257;
var G__22887 = e14258;
var G__22888 = f14259;
var G__22889 = g14260;
var G__22890 = h14261;
var G__22891 = i14262;
var G__22892 = j14263;
var G__22893 = k14264;
var G__22894 = l14265;
var G__22895 = m14266;
var G__22896 = n14267;
var G__22897 = o14268;
var G__22898 = p14269;
var G__22899 = q14270;
var G__22900 = r14271;
var G__22901 = s14272;
var G__22902 = t14273;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__22883,G__22884,G__22885,G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894,G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902) : f.call(null,G__22883,G__22884,G__22885,G__22886,G__22887,G__22888,G__22889,G__22890,G__22891,G__22892,G__22893,G__22894,G__22895,G__22896,G__22897,G__22898,G__22899,G__22900,G__22901,G__22902));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__22903__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__22903 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__22904__i = 0, G__22904__a = new Array(arguments.length -  5);
while (G__22904__i < G__22904__a.length) {G__22904__a[G__22904__i] = arguments[G__22904__i + 5]; ++G__22904__i;}
  args = new cljs.core.IndexedSeq(G__22904__a,0);
} 
return G__22903__delegate.call(this,f,a,b,c,d,args);};
G__22903.cljs$lang$maxFixedArity = 5;
G__22903.cljs$lang$applyTo = (function (arglist__22905){
var f = cljs.core.first(arglist__22905);
arglist__22905 = cljs.core.next(arglist__22905);
var a = cljs.core.first(arglist__22905);
arglist__22905 = cljs.core.next(arglist__22905);
var b = cljs.core.first(arglist__22905);
arglist__22905 = cljs.core.next(arglist__22905);
var c = cljs.core.first(arglist__22905);
arglist__22905 = cljs.core.next(arglist__22905);
var d = cljs.core.first(arglist__22905);
var args = cljs.core.rest(arglist__22905);
return G__22903__delegate(f,a,b,c,d,args);
});
G__22903.cljs$core$IFn$_invoke$arity$variadic = G__22903__delegate;
return G__22903;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__22906 = null;
if (arguments.length > 5) {
var G__22907__i = 0, G__22907__a = new Array(arguments.length -  5);
while (G__22907__i < G__22907__a.length) {G__22907__a[G__22907__i] = arguments[G__22907__i + 5]; ++G__22907__i;}
G__22906 = new cljs.core.IndexedSeq(G__22907__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__22906);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__22923 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22923) : f.call(null,G__22923));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__22924 = cljs.core.meta(obj);
var G__22925 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22924,G__22925) : f.call(null,G__22924,G__22925));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__22926 = cljs.core.meta(obj);
var G__22927 = a;
var G__22928 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22926,G__22927,G__22928) : f.call(null,G__22926,G__22927,G__22928));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__22929 = cljs.core.meta(obj);
var G__22930 = a;
var G__22931 = b;
var G__22932 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22929,G__22930,G__22931,G__22932) : f.call(null,G__22929,G__22930,G__22931,G__22932));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__22933 = cljs.core.meta(obj);
var G__22934 = a;
var G__22935 = b;
var G__22936 = c;
var G__22937 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__22933,G__22934,G__22935,G__22936,G__22937) : f.call(null,G__22933,G__22934,G__22935,G__22936,G__22937));
})());
});
var vary_meta__7 = (function() { 
var G__22938__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__22938 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__22939__i = 0, G__22939__a = new Array(arguments.length -  6);
while (G__22939__i < G__22939__a.length) {G__22939__a[G__22939__i] = arguments[G__22939__i + 6]; ++G__22939__i;}
  args = new cljs.core.IndexedSeq(G__22939__a,0);
} 
return G__22938__delegate.call(this,obj,f,a,b,c,d,args);};
G__22938.cljs$lang$maxFixedArity = 6;
G__22938.cljs$lang$applyTo = (function (arglist__22940){
var obj = cljs.core.first(arglist__22940);
arglist__22940 = cljs.core.next(arglist__22940);
var f = cljs.core.first(arglist__22940);
arglist__22940 = cljs.core.next(arglist__22940);
var a = cljs.core.first(arglist__22940);
arglist__22940 = cljs.core.next(arglist__22940);
var b = cljs.core.first(arglist__22940);
arglist__22940 = cljs.core.next(arglist__22940);
var c = cljs.core.first(arglist__22940);
arglist__22940 = cljs.core.next(arglist__22940);
var d = cljs.core.first(arglist__22940);
var args = cljs.core.rest(arglist__22940);
return G__22938__delegate(obj,f,a,b,c,d,args);
});
G__22938.cljs$core$IFn$_invoke$arity$variadic = G__22938__delegate;
return G__22938;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__22941 = null;
if (arguments.length > 6) {
var G__22942__i = 0, G__22942__a = new Array(arguments.length -  6);
while (G__22942__i < G__22942__a.length) {G__22942__a[G__22942__i] = arguments[G__22942__i + 6]; ++G__22942__i;}
G__22941 = new cljs.core.IndexedSeq(G__22942__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__22941);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__22943__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__22943 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__22944__i = 0, G__22944__a = new Array(arguments.length -  2);
while (G__22944__i < G__22944__a.length) {G__22944__a[G__22944__i] = arguments[G__22944__i + 2]; ++G__22944__i;}
  more = new cljs.core.IndexedSeq(G__22944__a,0);
} 
return G__22943__delegate.call(this,x,y,more);};
G__22943.cljs$lang$maxFixedArity = 2;
G__22943.cljs$lang$applyTo = (function (arglist__22945){
var x = cljs.core.first(arglist__22945);
arglist__22945 = cljs.core.next(arglist__22945);
var y = cljs.core.first(arglist__22945);
var more = cljs.core.rest(arglist__22945);
return G__22943__delegate(x,y,more);
});
G__22943.cljs$core$IFn$_invoke$arity$variadic = G__22943__delegate;
return G__22943;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__22946 = null;
if (arguments.length > 2) {
var G__22947__i = 0, G__22947__a = new Array(arguments.length -  2);
while (G__22947__i < G__22947__a.length) {G__22947__a[G__22947__i] = arguments[G__22947__i + 2]; ++G__22947__i;}
G__22946 = new cljs.core.IndexedSeq(G__22947__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__22946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t22951 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t22951 = (function (nil_iter,meta22952){
this.nil_iter = nil_iter;
this.meta22952 = meta22952;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t22951.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t22951.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t22951.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t22951.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_22953){
var self__ = this;
var _22953__$1 = this;
return self__.meta22952;
});

cljs.core.t22951.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_22953,meta22952__$1){
var self__ = this;
var _22953__$1 = this;
return (new cljs.core.t22951(self__.nil_iter,meta22952__$1));
});

cljs.core.t22951.cljs$lang$type = true;

cljs.core.t22951.cljs$lang$ctorStr = "cljs.core/t22951";

cljs.core.t22951.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/t22951");
});

cljs.core.__GT_t22951 = (function __GT_t22951(nil_iter__$1,meta22952){
return (new cljs.core.t22951(nil_iter__$1,meta22952));
});

}

return (new cljs.core.t22951(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13311__auto__ = !((lt.stepper == null));
if(and__13311__auto__){
return self__.iter.hasNext();
} else {
return and__13311__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__22954 = lt;
var G__22955 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__22954,G__22955) : self__.xform.call(null,G__22954,G__22955));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22956 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22956) : self__.xform.call(null,G__22956));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__22958 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22958) : xform.call(null,G__22958));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__22960 = cljs.core.next(iters__$1);
iters__$1 = G__22960;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__14210__auto___22961 = self__.iters.length;
var i_22962 = (0);
while(true){
if((i_22962 < n__14210__auto___22961)){
(self__.nexts[i_22962] = (self__.iters[i_22962]).next());

var G__22963 = (i_22962 + (1));
i_22962 = G__22963;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__13311__auto__ = !((lt.stepper == null));
if(and__13311__auto__){
return this$.hasNext();
} else {
return and__13311__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__22959 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__22959) : self__.xform.call(null,G__22959));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__22968 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__22968) : xform.call(null,G__22968));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__22969_22973 = cljs.core.seq(colls);
var chunk__22970_22974 = null;
var count__22971_22975 = (0);
var i__22972_22976 = (0);
while(true){
if((i__22972_22976 < count__22971_22975)){
var coll_22977 = chunk__22970_22974.cljs$core$IIndexed$_nth$arity$2(null,i__22972_22976);
iters.push(cljs.core.iter(coll_22977));

var G__22978 = seq__22969_22973;
var G__22979 = chunk__22970_22974;
var G__22980 = count__22971_22975;
var G__22981 = (i__22972_22976 + (1));
seq__22969_22973 = G__22978;
chunk__22970_22974 = G__22979;
count__22971_22975 = G__22980;
i__22972_22976 = G__22981;
continue;
} else {
var temp__4126__auto___22982 = cljs.core.seq(seq__22969_22973);
if(temp__4126__auto___22982){
var seq__22969_22983__$1 = temp__4126__auto___22982;
if(cljs.core.chunked_seq_QMARK_(seq__22969_22983__$1)){
var c__14110__auto___22984 = cljs.core.chunk_first(seq__22969_22983__$1);
var G__22985 = cljs.core.chunk_rest(seq__22969_22983__$1);
var G__22986 = c__14110__auto___22984;
var G__22987 = cljs.core.count(c__14110__auto___22984);
var G__22988 = (0);
seq__22969_22973 = G__22985;
chunk__22970_22974 = G__22986;
count__22971_22975 = G__22987;
i__22972_22976 = G__22988;
continue;
} else {
var coll_22989 = cljs.core.first(seq__22969_22983__$1);
iters.push(cljs.core.iter(coll_22989));

var G__22990 = cljs.core.next(seq__22969_22983__$1);
var G__22991 = null;
var G__22992 = (0);
var G__22993 = (0);
seq__22969_22973 = G__22990;
chunk__22970_22974 = G__22991;
count__22971_22975 = G__22992;
i__22972_22976 = G__22993;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__13323__auto__ = cljs.core.seq(coll);
if(or__13323__auto__){
return or__13323__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__22994__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__22994 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22995__i = 0, G__22995__a = new Array(arguments.length -  2);
while (G__22995__i < G__22995__a.length) {G__22995__a[G__22995__i] = arguments[G__22995__i + 2]; ++G__22995__i;}
  colls = new cljs.core.IndexedSeq(G__22995__a,0);
} 
return G__22994__delegate.call(this,xform,coll,colls);};
G__22994.cljs$lang$maxFixedArity = 2;
G__22994.cljs$lang$applyTo = (function (arglist__22996){
var xform = cljs.core.first(arglist__22996);
arglist__22996 = cljs.core.next(arglist__22996);
var coll = cljs.core.first(arglist__22996);
var colls = cljs.core.rest(arglist__22996);
return G__22994__delegate(xform,coll,colls);
});
G__22994.cljs$core$IFn$_invoke$arity$variadic = G__22994__delegate;
return G__22994;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__22997 = null;
if (arguments.length > 2) {
var G__22998__i = 0, G__22998__a = new Array(arguments.length -  2);
while (G__22998__i < G__22998__a.length) {G__22998__a[G__22998__i] = arguments[G__22998__i + 2]; ++G__22998__i;}
G__22997 = new cljs.core.IndexedSeq(G__22998__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__22997);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__23000 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23000) : pred.call(null,G__23000));
})())){
var G__23001 = pred;
var G__23002 = cljs.core.next(coll);
pred = G__23001;
coll = G__23002;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__13323__auto__ = (function (){var G__23006 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23006) : pred.call(null,G__23006));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var G__23007 = pred;
var G__23008 = cljs.core.next(coll);
pred = G__23007;
coll = G__23008;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__23015 = null;
var G__23015__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__23015__1 = (function (x){
return cljs.core.not((function (){var G__23012 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23012) : f.call(null,G__23012));
})());
});
var G__23015__2 = (function (x,y){
return cljs.core.not((function (){var G__23013 = x;
var G__23014 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23013,G__23014) : f.call(null,G__23013,G__23014));
})());
});
var G__23015__3 = (function() { 
var G__23016__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__23016 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__23017__i = 0, G__23017__a = new Array(arguments.length -  2);
while (G__23017__i < G__23017__a.length) {G__23017__a[G__23017__i] = arguments[G__23017__i + 2]; ++G__23017__i;}
  zs = new cljs.core.IndexedSeq(G__23017__a,0);
} 
return G__23016__delegate.call(this,x,y,zs);};
G__23016.cljs$lang$maxFixedArity = 2;
G__23016.cljs$lang$applyTo = (function (arglist__23018){
var x = cljs.core.first(arglist__23018);
arglist__23018 = cljs.core.next(arglist__23018);
var y = cljs.core.first(arglist__23018);
var zs = cljs.core.rest(arglist__23018);
return G__23016__delegate(x,y,zs);
});
G__23016.cljs$core$IFn$_invoke$arity$variadic = G__23016__delegate;
return G__23016;
})()
;
G__23015 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__23015__0.call(this);
case 1:
return G__23015__1.call(this,x);
case 2:
return G__23015__2.call(this,x,y);
default:
var G__23019 = null;
if (arguments.length > 2) {
var G__23020__i = 0, G__23020__a = new Array(arguments.length -  2);
while (G__23020__i < G__23020__a.length) {G__23020__a[G__23020__i] = arguments[G__23020__i + 2]; ++G__23020__i;}
G__23019 = new cljs.core.IndexedSeq(G__23020__a,0);
}
return G__23015__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__23019);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23015.cljs$lang$maxFixedArity = 2;
G__23015.cljs$lang$applyTo = G__23015__3.cljs$lang$applyTo;
G__23015.cljs$core$IFn$_invoke$arity$0 = G__23015__0;
G__23015.cljs$core$IFn$_invoke$arity$1 = G__23015__1;
G__23015.cljs$core$IFn$_invoke$arity$2 = G__23015__2;
G__23015.cljs$core$IFn$_invoke$arity$variadic = G__23015__3.cljs$core$IFn$_invoke$arity$variadic;
return G__23015;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__23021__delegate = function (args){
return x;
};
var G__23021 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23022__i = 0, G__23022__a = new Array(arguments.length -  0);
while (G__23022__i < G__23022__a.length) {G__23022__a[G__23022__i] = arguments[G__23022__i + 0]; ++G__23022__i;}
  args = new cljs.core.IndexedSeq(G__23022__a,0);
} 
return G__23021__delegate.call(this,args);};
G__23021.cljs$lang$maxFixedArity = 0;
G__23021.cljs$lang$applyTo = (function (arglist__23023){
var args = cljs.core.seq(arglist__23023);
return G__23021__delegate(args);
});
G__23021.cljs$core$IFn$_invoke$arity$variadic = G__23021__delegate;
return G__23021;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__23078 = null;
var G__23078__0 = (function (){
var G__23051 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23051) : f.call(null,G__23051));
});
var G__23078__1 = (function (x){
var G__23052 = (function (){var G__23053 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23053) : g.call(null,G__23053));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23052) : f.call(null,G__23052));
});
var G__23078__2 = (function (x,y){
var G__23054 = (function (){var G__23055 = x;
var G__23056 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23055,G__23056) : g.call(null,G__23055,G__23056));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23054) : f.call(null,G__23054));
});
var G__23078__3 = (function (x,y,z){
var G__23057 = (function (){var G__23058 = x;
var G__23059 = y;
var G__23060 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23058,G__23059,G__23060) : g.call(null,G__23058,G__23059,G__23060));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23057) : f.call(null,G__23057));
});
var G__23078__4 = (function() { 
var G__23079__delegate = function (x,y,z,args){
var G__23061 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23061) : f.call(null,G__23061));
};
var G__23079 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23080__i = 0, G__23080__a = new Array(arguments.length -  3);
while (G__23080__i < G__23080__a.length) {G__23080__a[G__23080__i] = arguments[G__23080__i + 3]; ++G__23080__i;}
  args = new cljs.core.IndexedSeq(G__23080__a,0);
} 
return G__23079__delegate.call(this,x,y,z,args);};
G__23079.cljs$lang$maxFixedArity = 3;
G__23079.cljs$lang$applyTo = (function (arglist__23081){
var x = cljs.core.first(arglist__23081);
arglist__23081 = cljs.core.next(arglist__23081);
var y = cljs.core.first(arglist__23081);
arglist__23081 = cljs.core.next(arglist__23081);
var z = cljs.core.first(arglist__23081);
var args = cljs.core.rest(arglist__23081);
return G__23079__delegate(x,y,z,args);
});
G__23079.cljs$core$IFn$_invoke$arity$variadic = G__23079__delegate;
return G__23079;
})()
;
G__23078 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23078__0.call(this);
case 1:
return G__23078__1.call(this,x);
case 2:
return G__23078__2.call(this,x,y);
case 3:
return G__23078__3.call(this,x,y,z);
default:
var G__23082 = null;
if (arguments.length > 3) {
var G__23083__i = 0, G__23083__a = new Array(arguments.length -  3);
while (G__23083__i < G__23083__a.length) {G__23083__a[G__23083__i] = arguments[G__23083__i + 3]; ++G__23083__i;}
G__23082 = new cljs.core.IndexedSeq(G__23083__a,0);
}
return G__23078__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23078.cljs$lang$maxFixedArity = 3;
G__23078.cljs$lang$applyTo = G__23078__4.cljs$lang$applyTo;
G__23078.cljs$core$IFn$_invoke$arity$0 = G__23078__0;
G__23078.cljs$core$IFn$_invoke$arity$1 = G__23078__1;
G__23078.cljs$core$IFn$_invoke$arity$2 = G__23078__2;
G__23078.cljs$core$IFn$_invoke$arity$3 = G__23078__3;
G__23078.cljs$core$IFn$_invoke$arity$variadic = G__23078__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23078;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__23084 = null;
var G__23084__0 = (function (){
var G__23062 = (function (){var G__23063 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23063) : g.call(null,G__23063));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23062) : f.call(null,G__23062));
});
var G__23084__1 = (function (x){
var G__23064 = (function (){var G__23065 = (function (){var G__23066 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23066) : h.call(null,G__23066));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23065) : g.call(null,G__23065));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23064) : f.call(null,G__23064));
});
var G__23084__2 = (function (x,y){
var G__23067 = (function (){var G__23068 = (function (){var G__23069 = x;
var G__23070 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23069,G__23070) : h.call(null,G__23069,G__23070));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23068) : g.call(null,G__23068));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23067) : f.call(null,G__23067));
});
var G__23084__3 = (function (x,y,z){
var G__23071 = (function (){var G__23072 = (function (){var G__23073 = x;
var G__23074 = y;
var G__23075 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23073,G__23074,G__23075) : h.call(null,G__23073,G__23074,G__23075));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23072) : g.call(null,G__23072));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23071) : f.call(null,G__23071));
});
var G__23084__4 = (function() { 
var G__23085__delegate = function (x,y,z,args){
var G__23076 = (function (){var G__23077 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23077) : g.call(null,G__23077));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23076) : f.call(null,G__23076));
};
var G__23085 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23086__i = 0, G__23086__a = new Array(arguments.length -  3);
while (G__23086__i < G__23086__a.length) {G__23086__a[G__23086__i] = arguments[G__23086__i + 3]; ++G__23086__i;}
  args = new cljs.core.IndexedSeq(G__23086__a,0);
} 
return G__23085__delegate.call(this,x,y,z,args);};
G__23085.cljs$lang$maxFixedArity = 3;
G__23085.cljs$lang$applyTo = (function (arglist__23087){
var x = cljs.core.first(arglist__23087);
arglist__23087 = cljs.core.next(arglist__23087);
var y = cljs.core.first(arglist__23087);
arglist__23087 = cljs.core.next(arglist__23087);
var z = cljs.core.first(arglist__23087);
var args = cljs.core.rest(arglist__23087);
return G__23085__delegate(x,y,z,args);
});
G__23085.cljs$core$IFn$_invoke$arity$variadic = G__23085__delegate;
return G__23085;
})()
;
G__23084 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23084__0.call(this);
case 1:
return G__23084__1.call(this,x);
case 2:
return G__23084__2.call(this,x,y);
case 3:
return G__23084__3.call(this,x,y,z);
default:
var G__23088 = null;
if (arguments.length > 3) {
var G__23089__i = 0, G__23089__a = new Array(arguments.length -  3);
while (G__23089__i < G__23089__a.length) {G__23089__a[G__23089__i] = arguments[G__23089__i + 3]; ++G__23089__i;}
G__23088 = new cljs.core.IndexedSeq(G__23089__a,0);
}
return G__23084__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23088);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23084.cljs$lang$maxFixedArity = 3;
G__23084.cljs$lang$applyTo = G__23084__4.cljs$lang$applyTo;
G__23084.cljs$core$IFn$_invoke$arity$0 = G__23084__0;
G__23084.cljs$core$IFn$_invoke$arity$1 = G__23084__1;
G__23084.cljs$core$IFn$_invoke$arity$2 = G__23084__2;
G__23084.cljs$core$IFn$_invoke$arity$3 = G__23084__3;
G__23084.cljs$core$IFn$_invoke$arity$variadic = G__23084__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23084;
})()
});
var comp__4 = (function() { 
var G__23090__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__23091__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__23092 = cljs.core.first(fs__$2).call(null,ret);
var G__23093 = cljs.core.next(fs__$2);
ret = G__23092;
fs__$2 = G__23093;
continue;
} else {
return ret;
}
break;
}
};
var G__23091 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23094__i = 0, G__23094__a = new Array(arguments.length -  0);
while (G__23094__i < G__23094__a.length) {G__23094__a[G__23094__i] = arguments[G__23094__i + 0]; ++G__23094__i;}
  args = new cljs.core.IndexedSeq(G__23094__a,0);
} 
return G__23091__delegate.call(this,args);};
G__23091.cljs$lang$maxFixedArity = 0;
G__23091.cljs$lang$applyTo = (function (arglist__23095){
var args = cljs.core.seq(arglist__23095);
return G__23091__delegate(args);
});
G__23091.cljs$core$IFn$_invoke$arity$variadic = G__23091__delegate;
return G__23091;
})()
;
;})(fs__$1))
};
var G__23090 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23096__i = 0, G__23096__a = new Array(arguments.length -  3);
while (G__23096__i < G__23096__a.length) {G__23096__a[G__23096__i] = arguments[G__23096__i + 3]; ++G__23096__i;}
  fs = new cljs.core.IndexedSeq(G__23096__a,0);
} 
return G__23090__delegate.call(this,f1,f2,f3,fs);};
G__23090.cljs$lang$maxFixedArity = 3;
G__23090.cljs$lang$applyTo = (function (arglist__23097){
var f1 = cljs.core.first(arglist__23097);
arglist__23097 = cljs.core.next(arglist__23097);
var f2 = cljs.core.first(arglist__23097);
arglist__23097 = cljs.core.next(arglist__23097);
var f3 = cljs.core.first(arglist__23097);
var fs = cljs.core.rest(arglist__23097);
return G__23090__delegate(f1,f2,f3,fs);
});
G__23090.cljs$core$IFn$_invoke$arity$variadic = G__23090__delegate;
return G__23090;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__23098 = null;
if (arguments.length > 3) {
var G__23099__i = 0, G__23099__a = new Array(arguments.length -  3);
while (G__23099__i < G__23099__a.length) {G__23099__a[G__23099__i] = arguments[G__23099__i + 3]; ++G__23099__i;}
G__23098 = new cljs.core.IndexedSeq(G__23099__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__23098);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__23184 = null;
var G__23184__0 = (function (){
var G__23142 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23142) : f.call(null,G__23142));
});
var G__23184__1 = (function (x){
var G__23143 = arg1;
var G__23144 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23143,G__23144) : f.call(null,G__23143,G__23144));
});
var G__23184__2 = (function (x,y){
var G__23145 = arg1;
var G__23146 = x;
var G__23147 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23145,G__23146,G__23147) : f.call(null,G__23145,G__23146,G__23147));
});
var G__23184__3 = (function (x,y,z){
var G__23148 = arg1;
var G__23149 = x;
var G__23150 = y;
var G__23151 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23148,G__23149,G__23150,G__23151) : f.call(null,G__23148,G__23149,G__23150,G__23151));
});
var G__23184__4 = (function() { 
var G__23185__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__23185 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23186__i = 0, G__23186__a = new Array(arguments.length -  3);
while (G__23186__i < G__23186__a.length) {G__23186__a[G__23186__i] = arguments[G__23186__i + 3]; ++G__23186__i;}
  args = new cljs.core.IndexedSeq(G__23186__a,0);
} 
return G__23185__delegate.call(this,x,y,z,args);};
G__23185.cljs$lang$maxFixedArity = 3;
G__23185.cljs$lang$applyTo = (function (arglist__23187){
var x = cljs.core.first(arglist__23187);
arglist__23187 = cljs.core.next(arglist__23187);
var y = cljs.core.first(arglist__23187);
arglist__23187 = cljs.core.next(arglist__23187);
var z = cljs.core.first(arglist__23187);
var args = cljs.core.rest(arglist__23187);
return G__23185__delegate(x,y,z,args);
});
G__23185.cljs$core$IFn$_invoke$arity$variadic = G__23185__delegate;
return G__23185;
})()
;
G__23184 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23184__0.call(this);
case 1:
return G__23184__1.call(this,x);
case 2:
return G__23184__2.call(this,x,y);
case 3:
return G__23184__3.call(this,x,y,z);
default:
var G__23188 = null;
if (arguments.length > 3) {
var G__23189__i = 0, G__23189__a = new Array(arguments.length -  3);
while (G__23189__i < G__23189__a.length) {G__23189__a[G__23189__i] = arguments[G__23189__i + 3]; ++G__23189__i;}
G__23188 = new cljs.core.IndexedSeq(G__23189__a,0);
}
return G__23184__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23188);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23184.cljs$lang$maxFixedArity = 3;
G__23184.cljs$lang$applyTo = G__23184__4.cljs$lang$applyTo;
G__23184.cljs$core$IFn$_invoke$arity$0 = G__23184__0;
G__23184.cljs$core$IFn$_invoke$arity$1 = G__23184__1;
G__23184.cljs$core$IFn$_invoke$arity$2 = G__23184__2;
G__23184.cljs$core$IFn$_invoke$arity$3 = G__23184__3;
G__23184.cljs$core$IFn$_invoke$arity$variadic = G__23184__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23184;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__23190 = null;
var G__23190__0 = (function (){
var G__23152 = arg1;
var G__23153 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23152,G__23153) : f.call(null,G__23152,G__23153));
});
var G__23190__1 = (function (x){
var G__23154 = arg1;
var G__23155 = arg2;
var G__23156 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23154,G__23155,G__23156) : f.call(null,G__23154,G__23155,G__23156));
});
var G__23190__2 = (function (x,y){
var G__23157 = arg1;
var G__23158 = arg2;
var G__23159 = x;
var G__23160 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23157,G__23158,G__23159,G__23160) : f.call(null,G__23157,G__23158,G__23159,G__23160));
});
var G__23190__3 = (function (x,y,z){
var G__23161 = arg1;
var G__23162 = arg2;
var G__23163 = x;
var G__23164 = y;
var G__23165 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23161,G__23162,G__23163,G__23164,G__23165) : f.call(null,G__23161,G__23162,G__23163,G__23164,G__23165));
});
var G__23190__4 = (function() { 
var G__23191__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__23191 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23192__i = 0, G__23192__a = new Array(arguments.length -  3);
while (G__23192__i < G__23192__a.length) {G__23192__a[G__23192__i] = arguments[G__23192__i + 3]; ++G__23192__i;}
  args = new cljs.core.IndexedSeq(G__23192__a,0);
} 
return G__23191__delegate.call(this,x,y,z,args);};
G__23191.cljs$lang$maxFixedArity = 3;
G__23191.cljs$lang$applyTo = (function (arglist__23193){
var x = cljs.core.first(arglist__23193);
arglist__23193 = cljs.core.next(arglist__23193);
var y = cljs.core.first(arglist__23193);
arglist__23193 = cljs.core.next(arglist__23193);
var z = cljs.core.first(arglist__23193);
var args = cljs.core.rest(arglist__23193);
return G__23191__delegate(x,y,z,args);
});
G__23191.cljs$core$IFn$_invoke$arity$variadic = G__23191__delegate;
return G__23191;
})()
;
G__23190 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23190__0.call(this);
case 1:
return G__23190__1.call(this,x);
case 2:
return G__23190__2.call(this,x,y);
case 3:
return G__23190__3.call(this,x,y,z);
default:
var G__23194 = null;
if (arguments.length > 3) {
var G__23195__i = 0, G__23195__a = new Array(arguments.length -  3);
while (G__23195__i < G__23195__a.length) {G__23195__a[G__23195__i] = arguments[G__23195__i + 3]; ++G__23195__i;}
G__23194 = new cljs.core.IndexedSeq(G__23195__a,0);
}
return G__23190__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23190.cljs$lang$maxFixedArity = 3;
G__23190.cljs$lang$applyTo = G__23190__4.cljs$lang$applyTo;
G__23190.cljs$core$IFn$_invoke$arity$0 = G__23190__0;
G__23190.cljs$core$IFn$_invoke$arity$1 = G__23190__1;
G__23190.cljs$core$IFn$_invoke$arity$2 = G__23190__2;
G__23190.cljs$core$IFn$_invoke$arity$3 = G__23190__3;
G__23190.cljs$core$IFn$_invoke$arity$variadic = G__23190__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23190;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__23196 = null;
var G__23196__0 = (function (){
var G__23166 = arg1;
var G__23167 = arg2;
var G__23168 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23166,G__23167,G__23168) : f.call(null,G__23166,G__23167,G__23168));
});
var G__23196__1 = (function (x){
var G__23169 = arg1;
var G__23170 = arg2;
var G__23171 = arg3;
var G__23172 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23169,G__23170,G__23171,G__23172) : f.call(null,G__23169,G__23170,G__23171,G__23172));
});
var G__23196__2 = (function (x,y){
var G__23173 = arg1;
var G__23174 = arg2;
var G__23175 = arg3;
var G__23176 = x;
var G__23177 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__23173,G__23174,G__23175,G__23176,G__23177) : f.call(null,G__23173,G__23174,G__23175,G__23176,G__23177));
});
var G__23196__3 = (function (x,y,z){
var G__23178 = arg1;
var G__23179 = arg2;
var G__23180 = arg3;
var G__23181 = x;
var G__23182 = y;
var G__23183 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__23178,G__23179,G__23180,G__23181,G__23182,G__23183) : f.call(null,G__23178,G__23179,G__23180,G__23181,G__23182,G__23183));
});
var G__23196__4 = (function() { 
var G__23197__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__23197 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23198__i = 0, G__23198__a = new Array(arguments.length -  3);
while (G__23198__i < G__23198__a.length) {G__23198__a[G__23198__i] = arguments[G__23198__i + 3]; ++G__23198__i;}
  args = new cljs.core.IndexedSeq(G__23198__a,0);
} 
return G__23197__delegate.call(this,x,y,z,args);};
G__23197.cljs$lang$maxFixedArity = 3;
G__23197.cljs$lang$applyTo = (function (arglist__23199){
var x = cljs.core.first(arglist__23199);
arglist__23199 = cljs.core.next(arglist__23199);
var y = cljs.core.first(arglist__23199);
arglist__23199 = cljs.core.next(arglist__23199);
var z = cljs.core.first(arglist__23199);
var args = cljs.core.rest(arglist__23199);
return G__23197__delegate(x,y,z,args);
});
G__23197.cljs$core$IFn$_invoke$arity$variadic = G__23197__delegate;
return G__23197;
})()
;
G__23196 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23196__0.call(this);
case 1:
return G__23196__1.call(this,x);
case 2:
return G__23196__2.call(this,x,y);
case 3:
return G__23196__3.call(this,x,y,z);
default:
var G__23200 = null;
if (arguments.length > 3) {
var G__23201__i = 0, G__23201__a = new Array(arguments.length -  3);
while (G__23201__i < G__23201__a.length) {G__23201__a[G__23201__i] = arguments[G__23201__i + 3]; ++G__23201__i;}
G__23200 = new cljs.core.IndexedSeq(G__23201__a,0);
}
return G__23196__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23200);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23196.cljs$lang$maxFixedArity = 3;
G__23196.cljs$lang$applyTo = G__23196__4.cljs$lang$applyTo;
G__23196.cljs$core$IFn$_invoke$arity$0 = G__23196__0;
G__23196.cljs$core$IFn$_invoke$arity$1 = G__23196__1;
G__23196.cljs$core$IFn$_invoke$arity$2 = G__23196__2;
G__23196.cljs$core$IFn$_invoke$arity$3 = G__23196__3;
G__23196.cljs$core$IFn$_invoke$arity$variadic = G__23196__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23196;
})()
});
var partial__5 = (function() { 
var G__23202__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__23203__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__23203 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23204__i = 0, G__23204__a = new Array(arguments.length -  0);
while (G__23204__i < G__23204__a.length) {G__23204__a[G__23204__i] = arguments[G__23204__i + 0]; ++G__23204__i;}
  args = new cljs.core.IndexedSeq(G__23204__a,0);
} 
return G__23203__delegate.call(this,args);};
G__23203.cljs$lang$maxFixedArity = 0;
G__23203.cljs$lang$applyTo = (function (arglist__23205){
var args = cljs.core.seq(arglist__23205);
return G__23203__delegate(args);
});
G__23203.cljs$core$IFn$_invoke$arity$variadic = G__23203__delegate;
return G__23203;
})()
;
};
var G__23202 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__23206__i = 0, G__23206__a = new Array(arguments.length -  4);
while (G__23206__i < G__23206__a.length) {G__23206__a[G__23206__i] = arguments[G__23206__i + 4]; ++G__23206__i;}
  more = new cljs.core.IndexedSeq(G__23206__a,0);
} 
return G__23202__delegate.call(this,f,arg1,arg2,arg3,more);};
G__23202.cljs$lang$maxFixedArity = 4;
G__23202.cljs$lang$applyTo = (function (arglist__23207){
var f = cljs.core.first(arglist__23207);
arglist__23207 = cljs.core.next(arglist__23207);
var arg1 = cljs.core.first(arglist__23207);
arglist__23207 = cljs.core.next(arglist__23207);
var arg2 = cljs.core.first(arglist__23207);
arglist__23207 = cljs.core.next(arglist__23207);
var arg3 = cljs.core.first(arglist__23207);
var more = cljs.core.rest(arglist__23207);
return G__23202__delegate(f,arg1,arg2,arg3,more);
});
G__23202.cljs$core$IFn$_invoke$arity$variadic = G__23202__delegate;
return G__23202;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__23208 = null;
if (arguments.length > 4) {
var G__23209__i = 0, G__23209__a = new Array(arguments.length -  4);
while (G__23209__i < G__23209__a.length) {G__23209__a[G__23209__i] = arguments[G__23209__i + 4]; ++G__23209__i;}
G__23208 = new cljs.core.IndexedSeq(G__23209__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__23208);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__23242 = null;
var G__23242__1 = (function (a){
var G__23226 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23226) : f.call(null,G__23226));
});
var G__23242__2 = (function (a,b){
var G__23227 = (((a == null))?x:a);
var G__23228 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23227,G__23228) : f.call(null,G__23227,G__23228));
});
var G__23242__3 = (function (a,b,c){
var G__23229 = (((a == null))?x:a);
var G__23230 = b;
var G__23231 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23229,G__23230,G__23231) : f.call(null,G__23229,G__23230,G__23231));
});
var G__23242__4 = (function() { 
var G__23243__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__23243 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23244__i = 0, G__23244__a = new Array(arguments.length -  3);
while (G__23244__i < G__23244__a.length) {G__23244__a[G__23244__i] = arguments[G__23244__i + 3]; ++G__23244__i;}
  ds = new cljs.core.IndexedSeq(G__23244__a,0);
} 
return G__23243__delegate.call(this,a,b,c,ds);};
G__23243.cljs$lang$maxFixedArity = 3;
G__23243.cljs$lang$applyTo = (function (arglist__23245){
var a = cljs.core.first(arglist__23245);
arglist__23245 = cljs.core.next(arglist__23245);
var b = cljs.core.first(arglist__23245);
arglist__23245 = cljs.core.next(arglist__23245);
var c = cljs.core.first(arglist__23245);
var ds = cljs.core.rest(arglist__23245);
return G__23243__delegate(a,b,c,ds);
});
G__23243.cljs$core$IFn$_invoke$arity$variadic = G__23243__delegate;
return G__23243;
})()
;
G__23242 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__23242__1.call(this,a);
case 2:
return G__23242__2.call(this,a,b);
case 3:
return G__23242__3.call(this,a,b,c);
default:
var G__23246 = null;
if (arguments.length > 3) {
var G__23247__i = 0, G__23247__a = new Array(arguments.length -  3);
while (G__23247__i < G__23247__a.length) {G__23247__a[G__23247__i] = arguments[G__23247__i + 3]; ++G__23247__i;}
G__23246 = new cljs.core.IndexedSeq(G__23247__a,0);
}
return G__23242__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23242.cljs$lang$maxFixedArity = 3;
G__23242.cljs$lang$applyTo = G__23242__4.cljs$lang$applyTo;
G__23242.cljs$core$IFn$_invoke$arity$1 = G__23242__1;
G__23242.cljs$core$IFn$_invoke$arity$2 = G__23242__2;
G__23242.cljs$core$IFn$_invoke$arity$3 = G__23242__3;
G__23242.cljs$core$IFn$_invoke$arity$variadic = G__23242__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23242;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__23248 = null;
var G__23248__2 = (function (a,b){
var G__23232 = (((a == null))?x:a);
var G__23233 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23232,G__23233) : f.call(null,G__23232,G__23233));
});
var G__23248__3 = (function (a,b,c){
var G__23234 = (((a == null))?x:a);
var G__23235 = (((b == null))?y:b);
var G__23236 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23234,G__23235,G__23236) : f.call(null,G__23234,G__23235,G__23236));
});
var G__23248__4 = (function() { 
var G__23249__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__23249 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23250__i = 0, G__23250__a = new Array(arguments.length -  3);
while (G__23250__i < G__23250__a.length) {G__23250__a[G__23250__i] = arguments[G__23250__i + 3]; ++G__23250__i;}
  ds = new cljs.core.IndexedSeq(G__23250__a,0);
} 
return G__23249__delegate.call(this,a,b,c,ds);};
G__23249.cljs$lang$maxFixedArity = 3;
G__23249.cljs$lang$applyTo = (function (arglist__23251){
var a = cljs.core.first(arglist__23251);
arglist__23251 = cljs.core.next(arglist__23251);
var b = cljs.core.first(arglist__23251);
arglist__23251 = cljs.core.next(arglist__23251);
var c = cljs.core.first(arglist__23251);
var ds = cljs.core.rest(arglist__23251);
return G__23249__delegate(a,b,c,ds);
});
G__23249.cljs$core$IFn$_invoke$arity$variadic = G__23249__delegate;
return G__23249;
})()
;
G__23248 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23248__2.call(this,a,b);
case 3:
return G__23248__3.call(this,a,b,c);
default:
var G__23252 = null;
if (arguments.length > 3) {
var G__23253__i = 0, G__23253__a = new Array(arguments.length -  3);
while (G__23253__i < G__23253__a.length) {G__23253__a[G__23253__i] = arguments[G__23253__i + 3]; ++G__23253__i;}
G__23252 = new cljs.core.IndexedSeq(G__23253__a,0);
}
return G__23248__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23248.cljs$lang$maxFixedArity = 3;
G__23248.cljs$lang$applyTo = G__23248__4.cljs$lang$applyTo;
G__23248.cljs$core$IFn$_invoke$arity$2 = G__23248__2;
G__23248.cljs$core$IFn$_invoke$arity$3 = G__23248__3;
G__23248.cljs$core$IFn$_invoke$arity$variadic = G__23248__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23248;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__23254 = null;
var G__23254__2 = (function (a,b){
var G__23237 = (((a == null))?x:a);
var G__23238 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23237,G__23238) : f.call(null,G__23237,G__23238));
});
var G__23254__3 = (function (a,b,c){
var G__23239 = (((a == null))?x:a);
var G__23240 = (((b == null))?y:b);
var G__23241 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23239,G__23240,G__23241) : f.call(null,G__23239,G__23240,G__23241));
});
var G__23254__4 = (function() { 
var G__23255__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__23255 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__23256__i = 0, G__23256__a = new Array(arguments.length -  3);
while (G__23256__i < G__23256__a.length) {G__23256__a[G__23256__i] = arguments[G__23256__i + 3]; ++G__23256__i;}
  ds = new cljs.core.IndexedSeq(G__23256__a,0);
} 
return G__23255__delegate.call(this,a,b,c,ds);};
G__23255.cljs$lang$maxFixedArity = 3;
G__23255.cljs$lang$applyTo = (function (arglist__23257){
var a = cljs.core.first(arglist__23257);
arglist__23257 = cljs.core.next(arglist__23257);
var b = cljs.core.first(arglist__23257);
arglist__23257 = cljs.core.next(arglist__23257);
var c = cljs.core.first(arglist__23257);
var ds = cljs.core.rest(arglist__23257);
return G__23255__delegate(a,b,c,ds);
});
G__23255.cljs$core$IFn$_invoke$arity$variadic = G__23255__delegate;
return G__23255;
})()
;
G__23254 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__23254__2.call(this,a,b);
case 3:
return G__23254__3.call(this,a,b,c);
default:
var G__23258 = null;
if (arguments.length > 3) {
var G__23259__i = 0, G__23259__a = new Array(arguments.length -  3);
while (G__23259__i < G__23259__a.length) {G__23259__a[G__23259__i] = arguments[G__23259__i + 3]; ++G__23259__i;}
G__23258 = new cljs.core.IndexedSeq(G__23259__a,0);
}
return G__23254__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__23258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23254.cljs$lang$maxFixedArity = 3;
G__23254.cljs$lang$applyTo = G__23254__4.cljs$lang$applyTo;
G__23254.cljs$core$IFn$_invoke$arity$2 = G__23254__2;
G__23254.cljs$core$IFn$_invoke$arity$3 = G__23254__3;
G__23254.cljs$core$IFn$_invoke$arity$variadic = G__23254__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23254;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__23290 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__23290) : cljs.core.volatile_BANG_.call(null,G__23290));
})();
return ((function (i){
return (function() {
var G__23320 = null;
var G__23320__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23320__1 = (function (result){
var G__23291 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23291) : rf.call(null,G__23291));
});
var G__23320__2 = (function (result,input){
var G__23292 = result;
var G__23293 = (function (){var G__23294 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__23295 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23294,G__23295) : f.call(null,G__23294,G__23295));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23292,G__23293) : rf.call(null,G__23292,G__23293));
});
G__23320 = function(result,input){
switch(arguments.length){
case 0:
return G__23320__0.call(this);
case 1:
return G__23320__1.call(this,result);
case 2:
return G__23320__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23320.cljs$core$IFn$_invoke$arity$0 = G__23320__0;
G__23320.cljs$core$IFn$_invoke$arity$1 = G__23320__1;
G__23320.cljs$core$IFn$_invoke$arity$2 = G__23320__2;
return G__23320;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14210__auto___23321 = size;
var i_23322 = (0);
while(true){
if((i_23322 < n__14210__auto___23321)){
cljs.core.chunk_append(b,(function (){var G__23316 = (idx + i_23322);
var G__23317 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23322);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23316,G__23317) : f.call(null,G__23316,G__23317));
})());

var G__23323 = (i_23322 + (1));
i_23322 = G__23323;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__23318 = idx;
var G__23319 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23318,G__23319) : f.call(null,G__23318,G__23319));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__23342 = null;
var G__23342__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23342__1 = (function (result){
var G__23336 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23336) : rf.call(null,G__23336));
});
var G__23342__2 = (function (result,input){
var v = (function (){var G__23337 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23337) : f.call(null,G__23337));
})();
if((v == null)){
return result;
} else {
var G__23338 = result;
var G__23339 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23338,G__23339) : rf.call(null,G__23338,G__23339));
}
});
G__23342 = function(result,input){
switch(arguments.length){
case 0:
return G__23342__0.call(this);
case 1:
return G__23342__1.call(this,result);
case 2:
return G__23342__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23342.cljs$core$IFn$_invoke$arity$0 = G__23342__0;
G__23342.cljs$core$IFn$_invoke$arity$1 = G__23342__1;
G__23342.cljs$core$IFn$_invoke$arity$2 = G__23342__2;
return G__23342;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14210__auto___23343 = size;
var i_23344 = (0);
while(true){
if((i_23344 < n__14210__auto___23343)){
var x_23345 = (function (){var G__23340 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23344);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23340) : f.call(null,G__23340));
})();
if((x_23345 == null)){
} else {
cljs.core.chunk_append(b,x_23345);
}

var G__23346 = (i_23344 + (1));
i_23344 = G__23346;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23341 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23341) : f.call(null,G__23341));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23347 = this$__$1;
return goog.getUid(G__23347);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__23348 = cljs.core.seq(self__.watches);
var chunk__23349 = null;
var count__23350 = (0);
var i__23351 = (0);
while(true){
if((i__23351 < count__23350)){
var vec__23352 = chunk__23349.cljs$core$IIndexed$_nth$arity$2(null,i__23351);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23352,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23352,(1),null);
var G__23353_23362 = key;
var G__23354_23363 = this$__$1;
var G__23355_23364 = oldval;
var G__23356_23365 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23353_23362,G__23354_23363,G__23355_23364,G__23356_23365) : f.call(null,G__23353_23362,G__23354_23363,G__23355_23364,G__23356_23365));

var G__23366 = seq__23348;
var G__23367 = chunk__23349;
var G__23368 = count__23350;
var G__23369 = (i__23351 + (1));
seq__23348 = G__23366;
chunk__23349 = G__23367;
count__23350 = G__23368;
i__23351 = G__23369;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23348);
if(temp__4126__auto__){
var seq__23348__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23348__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__23348__$1);
var G__23370 = cljs.core.chunk_rest(seq__23348__$1);
var G__23371 = c__14110__auto__;
var G__23372 = cljs.core.count(c__14110__auto__);
var G__23373 = (0);
seq__23348 = G__23370;
chunk__23349 = G__23371;
count__23350 = G__23372;
i__23351 = G__23373;
continue;
} else {
var vec__23357 = cljs.core.first(seq__23348__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23357,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23357,(1),null);
var G__23358_23374 = key;
var G__23359_23375 = this$__$1;
var G__23360_23376 = oldval;
var G__23361_23377 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__23358_23374,G__23359_23375,G__23360_23376,G__23361_23377) : f.call(null,G__23358_23374,G__23359_23375,G__23360_23376,G__23361_23377));

var G__23378 = cljs.core.next(seq__23348__$1);
var G__23379 = null;
var G__23380 = (0);
var G__23381 = (0);
seq__23348 = G__23378;
chunk__23349 = G__23379;
count__23350 = G__23380;
i__23351 = G__23381;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__23385__delegate = function (x,p__23382){
var map__23384 = p__23382;
var map__23384__$1 = ((cljs.core.seq_QMARK_(map__23384))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23384):map__23384);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23384__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23384__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__23385 = function (x,var_args){
var p__23382 = null;
if (arguments.length > 1) {
var G__23386__i = 0, G__23386__a = new Array(arguments.length -  1);
while (G__23386__i < G__23386__a.length) {G__23386__a[G__23386__i] = arguments[G__23386__i + 1]; ++G__23386__i;}
  p__23382 = new cljs.core.IndexedSeq(G__23386__a,0);
} 
return G__23385__delegate.call(this,x,p__23382);};
G__23385.cljs$lang$maxFixedArity = 1;
G__23385.cljs$lang$applyTo = (function (arglist__23387){
var x = cljs.core.first(arglist__23387);
var p__23382 = cljs.core.rest(arglist__23387);
return G__23385__delegate(x,p__23382);
});
G__23385.cljs$core$IFn$_invoke$arity$variadic = G__23385__delegate;
return G__23385;
})()
;
atom = function(x,var_args){
var p__23382 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__23388 = null;
if (arguments.length > 1) {
var G__23389__i = 0, G__23389__a = new Array(arguments.length -  1);
while (G__23389__i < G__23389__a.length) {G__23389__a[G__23389__i] = arguments[G__23389__i + 1]; ++G__23389__i;}
G__23388 = new cljs.core.IndexedSeq(G__23389__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__23392 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__23392) : validate.call(null,G__23392));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__23393 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__23393) : cljs.core.pr_str.call(null,G__23393));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23400 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23400) : f.call(null,G__23400));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23401 = a.state;
var G__23402 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23401,G__23402) : f.call(null,G__23401,G__23402));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__23403 = a.state;
var G__23404 = x;
var G__23405 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23403,G__23404,G__23405) : f.call(null,G__23403,G__23404,G__23405));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__23406__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__23406 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__23407__i = 0, G__23407__a = new Array(arguments.length -  4);
while (G__23407__i < G__23407__a.length) {G__23407__a[G__23407__i] = arguments[G__23407__i + 4]; ++G__23407__i;}
  more = new cljs.core.IndexedSeq(G__23407__a,0);
} 
return G__23406__delegate.call(this,a,f,x,y,more);};
G__23406.cljs$lang$maxFixedArity = 4;
G__23406.cljs$lang$applyTo = (function (arglist__23408){
var a = cljs.core.first(arglist__23408);
arglist__23408 = cljs.core.next(arglist__23408);
var f = cljs.core.first(arglist__23408);
arglist__23408 = cljs.core.next(arglist__23408);
var x = cljs.core.first(arglist__23408);
arglist__23408 = cljs.core.next(arglist__23408);
var y = cljs.core.first(arglist__23408);
var more = cljs.core.rest(arglist__23408);
return G__23406__delegate(a,f,x,y,more);
});
G__23406.cljs$core$IFn$_invoke$arity$variadic = G__23406__delegate;
return G__23406;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__23409 = null;
if (arguments.length > 4) {
var G__23410__i = 0, G__23410__a = new Array(arguments.length -  4);
while (G__23410__i < G__23410__a.length) {G__23410__a[G__23410__i] = arguments[G__23410__i + 4]; ++G__23410__i;}
G__23409 = new cljs.core.IndexedSeq(G__23410__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__23409);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__23477 = null;
var G__23477__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23477__1 = (function (result){
var G__23444 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23444) : rf.call(null,G__23444));
});
var G__23477__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__23445 = i;
var G__23446 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23445,G__23446) : f.call(null,G__23445,G__23446));
})();
if((v == null)){
return result;
} else {
var G__23447 = result;
var G__23448 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23447,G__23448) : rf.call(null,G__23447,G__23448));
}
});
G__23477 = function(result,input){
switch(arguments.length){
case 0:
return G__23477__0.call(this);
case 1:
return G__23477__1.call(this,result);
case 2:
return G__23477__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23477.cljs$core$IFn$_invoke$arity$0 = G__23477__0;
G__23477.cljs$core$IFn$_invoke$arity$1 = G__23477__1;
G__23477.cljs$core$IFn$_invoke$arity$2 = G__23477__2;
return G__23477;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14210__auto___23478 = size;
var i_23479 = (0);
while(true){
if((i_23479 < n__14210__auto___23478)){
var x_23480 = (function (){var G__23473 = (idx + i_23479);
var G__23474 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_23479);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23473,G__23474) : f.call(null,G__23473,G__23474));
})();
if((x_23480 == null)){
} else {
cljs.core.chunk_append(b,x_23480);
}

var G__23481 = (i_23479 + (1));
i_23479 = G__23481;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__23475 = idx;
var G__23476 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23475,G__23476) : f.call(null,G__23475,G__23476));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__23695 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23695) : p.call(null,G__23695));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23697 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23697) : p.call(null,G__23697));
})();
if(cljs.core.truth_(and__13311__auto__)){
var G__23698 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23698) : p.call(null,G__23698));
} else {
return and__13311__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23700 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23700) : p.call(null,G__23700));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23702 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23702) : p.call(null,G__23702));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var G__23703 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__23703) : p.call(null,G__23703));
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__23872__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__23872 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23873__i = 0, G__23873__a = new Array(arguments.length -  3);
while (G__23873__i < G__23873__a.length) {G__23873__a[G__23873__i] = arguments[G__23873__i + 3]; ++G__23873__i;}
  args = new cljs.core.IndexedSeq(G__23873__a,0);
} 
return G__23872__delegate.call(this,x,y,z,args);};
G__23872.cljs$lang$maxFixedArity = 3;
G__23872.cljs$lang$applyTo = (function (arglist__23874){
var x = cljs.core.first(arglist__23874);
arglist__23874 = cljs.core.next(arglist__23874);
var y = cljs.core.first(arglist__23874);
arglist__23874 = cljs.core.next(arglist__23874);
var z = cljs.core.first(arglist__23874);
var args = cljs.core.rest(arglist__23874);
return G__23872__delegate(x,y,z,args);
});
G__23872.cljs$core$IFn$_invoke$arity$variadic = G__23872__delegate;
return G__23872;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__23875 = null;
if (arguments.length > 3) {
var G__23876__i = 0, G__23876__a = new Array(arguments.length -  3);
while (G__23876__i < G__23876__a.length) {G__23876__a[G__23876__i] = arguments[G__23876__i + 3]; ++G__23876__i;}
G__23875 = new cljs.core.IndexedSeq(G__23876__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23735 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23735) : p1.call(null,G__23735));
})();
if(cljs.core.truth_(and__13311__auto__)){
var G__23736 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23736) : p2.call(null,G__23736));
} else {
return and__13311__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23738 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23738) : p1.call(null,G__23738));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23740 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23740) : p1.call(null,G__23740));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var and__13311__auto____$2 = (function (){var G__23742 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23742) : p2.call(null,G__23742));
})();
if(cljs.core.truth_(and__13311__auto____$2)){
var G__23743 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23743) : p2.call(null,G__23743));
} else {
return and__13311__auto____$2;
}
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23745 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23745) : p1.call(null,G__23745));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23747 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23747) : p1.call(null,G__23747));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var and__13311__auto____$2 = (function (){var G__23749 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23749) : p1.call(null,G__23749));
})();
if(cljs.core.truth_(and__13311__auto____$2)){
var and__13311__auto____$3 = (function (){var G__23751 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23751) : p2.call(null,G__23751));
})();
if(cljs.core.truth_(and__13311__auto____$3)){
var and__13311__auto____$4 = (function (){var G__23753 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23753) : p2.call(null,G__23753));
})();
if(cljs.core.truth_(and__13311__auto____$4)){
var G__23754 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23754) : p2.call(null,G__23754));
} else {
return and__13311__auto____$4;
}
} else {
return and__13311__auto____$3;
}
} else {
return and__13311__auto____$2;
}
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__23877__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23482_SHARP_){
var and__13311__auto__ = (function (){var G__23759 = p1__23482_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23759) : p1.call(null,G__23759));
})();
if(cljs.core.truth_(and__13311__auto__)){
var G__23760 = p1__23482_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23760) : p2.call(null,G__23760));
} else {
return and__13311__auto__;
}
}),args)));
};
var G__23877 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23878__i = 0, G__23878__a = new Array(arguments.length -  3);
while (G__23878__i < G__23878__a.length) {G__23878__a[G__23878__i] = arguments[G__23878__i + 3]; ++G__23878__i;}
  args = new cljs.core.IndexedSeq(G__23878__a,0);
} 
return G__23877__delegate.call(this,x,y,z,args);};
G__23877.cljs$lang$maxFixedArity = 3;
G__23877.cljs$lang$applyTo = (function (arglist__23879){
var x = cljs.core.first(arglist__23879);
arglist__23879 = cljs.core.next(arglist__23879);
var y = cljs.core.first(arglist__23879);
arglist__23879 = cljs.core.next(arglist__23879);
var z = cljs.core.first(arglist__23879);
var args = cljs.core.rest(arglist__23879);
return G__23877__delegate(x,y,z,args);
});
G__23877.cljs$core$IFn$_invoke$arity$variadic = G__23877__delegate;
return G__23877;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__23880 = null;
if (arguments.length > 3) {
var G__23881__i = 0, G__23881__a = new Array(arguments.length -  3);
while (G__23881__i < G__23881__a.length) {G__23881__a[G__23881__i] = arguments[G__23881__i + 3]; ++G__23881__i;}
G__23880 = new cljs.core.IndexedSeq(G__23881__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23806 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23806) : p1.call(null,G__23806));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23808 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23808) : p2.call(null,G__23808));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var G__23809 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23809) : p3.call(null,G__23809));
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23811 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23811) : p1.call(null,G__23811));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23813 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23813) : p2.call(null,G__23813));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var and__13311__auto____$2 = (function (){var G__23815 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23815) : p3.call(null,G__23815));
})();
if(cljs.core.truth_(and__13311__auto____$2)){
var and__13311__auto____$3 = (function (){var G__23817 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23817) : p1.call(null,G__23817));
})();
if(cljs.core.truth_(and__13311__auto____$3)){
var and__13311__auto____$4 = (function (){var G__23819 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23819) : p2.call(null,G__23819));
})();
if(cljs.core.truth_(and__13311__auto____$4)){
var G__23820 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23820) : p3.call(null,G__23820));
} else {
return and__13311__auto____$4;
}
} else {
return and__13311__auto____$3;
}
} else {
return and__13311__auto____$2;
}
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__13311__auto__ = (function (){var G__23822 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23822) : p1.call(null,G__23822));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23824 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23824) : p2.call(null,G__23824));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var and__13311__auto____$2 = (function (){var G__23826 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23826) : p3.call(null,G__23826));
})();
if(cljs.core.truth_(and__13311__auto____$2)){
var and__13311__auto____$3 = (function (){var G__23828 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23828) : p1.call(null,G__23828));
})();
if(cljs.core.truth_(and__13311__auto____$3)){
var and__13311__auto____$4 = (function (){var G__23830 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23830) : p2.call(null,G__23830));
})();
if(cljs.core.truth_(and__13311__auto____$4)){
var and__13311__auto____$5 = (function (){var G__23832 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23832) : p3.call(null,G__23832));
})();
if(cljs.core.truth_(and__13311__auto____$5)){
var and__13311__auto____$6 = (function (){var G__23834 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23834) : p1.call(null,G__23834));
})();
if(cljs.core.truth_(and__13311__auto____$6)){
var and__13311__auto____$7 = (function (){var G__23836 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23836) : p2.call(null,G__23836));
})();
if(cljs.core.truth_(and__13311__auto____$7)){
var G__23837 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23837) : p3.call(null,G__23837));
} else {
return and__13311__auto____$7;
}
} else {
return and__13311__auto____$6;
}
} else {
return and__13311__auto____$5;
}
} else {
return and__13311__auto____$4;
}
} else {
return and__13311__auto____$3;
}
} else {
return and__13311__auto____$2;
}
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__23882__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__23483_SHARP_){
var and__13311__auto__ = (function (){var G__23844 = p1__23483_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__23844) : p1.call(null,G__23844));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23846 = p1__23483_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__23846) : p2.call(null,G__23846));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var G__23847 = p1__23483_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__23847) : p3.call(null,G__23847));
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
}),args)));
};
var G__23882 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23883__i = 0, G__23883__a = new Array(arguments.length -  3);
while (G__23883__i < G__23883__a.length) {G__23883__a[G__23883__i] = arguments[G__23883__i + 3]; ++G__23883__i;}
  args = new cljs.core.IndexedSeq(G__23883__a,0);
} 
return G__23882__delegate.call(this,x,y,z,args);};
G__23882.cljs$lang$maxFixedArity = 3;
G__23882.cljs$lang$applyTo = (function (arglist__23884){
var x = cljs.core.first(arglist__23884);
arglist__23884 = cljs.core.next(arglist__23884);
var y = cljs.core.first(arglist__23884);
arglist__23884 = cljs.core.next(arglist__23884);
var z = cljs.core.first(arglist__23884);
var args = cljs.core.rest(arglist__23884);
return G__23882__delegate(x,y,z,args);
});
G__23882.cljs$core$IFn$_invoke$arity$variadic = G__23882__delegate;
return G__23882;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__23885 = null;
if (arguments.length > 3) {
var G__23886__i = 0, G__23886__a = new Array(arguments.length -  3);
while (G__23886__i < G__23886__a.length) {G__23886__a[G__23886__i] = arguments[G__23886__i + 3]; ++G__23886__i;}
G__23885 = new cljs.core.IndexedSeq(G__23886__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__23887__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23484_SHARP_){
var G__23863 = x;
return (p1__23484_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23484_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23863) : p1__23484_SHARP_.call(null,G__23863));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23485_SHARP_){
var and__13311__auto__ = (function (){var G__23865 = x;
return (p1__23485_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23485_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23865) : p1__23485_SHARP_.call(null,G__23865));
})();
if(cljs.core.truth_(and__13311__auto__)){
var G__23866 = y;
return (p1__23485_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23485_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23866) : p1__23485_SHARP_.call(null,G__23866));
} else {
return and__13311__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23486_SHARP_){
var and__13311__auto__ = (function (){var G__23868 = x;
return (p1__23486_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23486_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23868) : p1__23486_SHARP_.call(null,G__23868));
})();
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__23870 = y;
return (p1__23486_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23486_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23870) : p1__23486_SHARP_.call(null,G__23870));
})();
if(cljs.core.truth_(and__13311__auto____$1)){
var G__23871 = z;
return (p1__23486_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23486_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23871) : p1__23486_SHARP_.call(null,G__23871));
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__23888__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__23487_SHARP_){
return cljs.core.every_QMARK_(p1__23487_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__23888 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23889__i = 0, G__23889__a = new Array(arguments.length -  3);
while (G__23889__i < G__23889__a.length) {G__23889__a[G__23889__i] = arguments[G__23889__i + 3]; ++G__23889__i;}
  args = new cljs.core.IndexedSeq(G__23889__a,0);
} 
return G__23888__delegate.call(this,x,y,z,args);};
G__23888.cljs$lang$maxFixedArity = 3;
G__23888.cljs$lang$applyTo = (function (arglist__23890){
var x = cljs.core.first(arglist__23890);
arglist__23890 = cljs.core.next(arglist__23890);
var y = cljs.core.first(arglist__23890);
arglist__23890 = cljs.core.next(arglist__23890);
var z = cljs.core.first(arglist__23890);
var args = cljs.core.rest(arglist__23890);
return G__23888__delegate(x,y,z,args);
});
G__23888.cljs$core$IFn$_invoke$arity$variadic = G__23888__delegate;
return G__23888;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__23891 = null;
if (arguments.length > 3) {
var G__23892__i = 0, G__23892__a = new Array(arguments.length -  3);
while (G__23892__i < G__23892__a.length) {G__23892__a[G__23892__i] = arguments[G__23892__i + 3]; ++G__23892__i;}
G__23891 = new cljs.core.IndexedSeq(G__23892__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23891);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__23887 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__23893__i = 0, G__23893__a = new Array(arguments.length -  3);
while (G__23893__i < G__23893__a.length) {G__23893__a[G__23893__i] = arguments[G__23893__i + 3]; ++G__23893__i;}
  ps = new cljs.core.IndexedSeq(G__23893__a,0);
} 
return G__23887__delegate.call(this,p1,p2,p3,ps);};
G__23887.cljs$lang$maxFixedArity = 3;
G__23887.cljs$lang$applyTo = (function (arglist__23894){
var p1 = cljs.core.first(arglist__23894);
arglist__23894 = cljs.core.next(arglist__23894);
var p2 = cljs.core.first(arglist__23894);
arglist__23894 = cljs.core.next(arglist__23894);
var p3 = cljs.core.first(arglist__23894);
var ps = cljs.core.rest(arglist__23894);
return G__23887__delegate(p1,p2,p3,ps);
});
G__23887.cljs$core$IFn$_invoke$arity$variadic = G__23887__delegate;
return G__23887;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__23895 = null;
if (arguments.length > 3) {
var G__23896__i = 0, G__23896__a = new Array(arguments.length -  3);
while (G__23896__i < G__23896__a.length) {G__23896__a[G__23896__i] = arguments[G__23896__i + 3]; ++G__23896__i;}
G__23895 = new cljs.core.IndexedSeq(G__23896__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__23895);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__24102 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24102) : p.call(null,G__24102));
});
var sp1__2 = (function (x,y){
var or__13323__auto__ = (function (){var G__24104 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24104) : p.call(null,G__24104));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var G__24105 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24105) : p.call(null,G__24105));
}
});
var sp1__3 = (function (x,y,z){
var or__13323__auto__ = (function (){var G__24107 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24107) : p.call(null,G__24107));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var G__24109 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24109) : p.call(null,G__24109));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var G__24110 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__24110) : p.call(null,G__24110));
}
}
});
var sp1__4 = (function() { 
var G__24271__delegate = function (x,y,z,args){
var or__13323__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__24271 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24272__i = 0, G__24272__a = new Array(arguments.length -  3);
while (G__24272__i < G__24272__a.length) {G__24272__a[G__24272__i] = arguments[G__24272__i + 3]; ++G__24272__i;}
  args = new cljs.core.IndexedSeq(G__24272__a,0);
} 
return G__24271__delegate.call(this,x,y,z,args);};
G__24271.cljs$lang$maxFixedArity = 3;
G__24271.cljs$lang$applyTo = (function (arglist__24273){
var x = cljs.core.first(arglist__24273);
arglist__24273 = cljs.core.next(arglist__24273);
var y = cljs.core.first(arglist__24273);
arglist__24273 = cljs.core.next(arglist__24273);
var z = cljs.core.first(arglist__24273);
var args = cljs.core.rest(arglist__24273);
return G__24271__delegate(x,y,z,args);
});
G__24271.cljs$core$IFn$_invoke$arity$variadic = G__24271__delegate;
return G__24271;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__24274 = null;
if (arguments.length > 3) {
var G__24275__i = 0, G__24275__a = new Array(arguments.length -  3);
while (G__24275__i < G__24275__a.length) {G__24275__a[G__24275__i] = arguments[G__24275__i + 3]; ++G__24275__i;}
G__24274 = new cljs.core.IndexedSeq(G__24275__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__13323__auto__ = (function (){var G__24142 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24142) : p1.call(null,G__24142));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var G__24143 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24143) : p2.call(null,G__24143));
}
});
var sp2__2 = (function (x,y){
var or__13323__auto__ = (function (){var G__24145 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24145) : p1.call(null,G__24145));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var G__24147 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24147) : p1.call(null,G__24147));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var or__13323__auto____$2 = (function (){var G__24149 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24149) : p2.call(null,G__24149));
})();
if(cljs.core.truth_(or__13323__auto____$2)){
return or__13323__auto____$2;
} else {
var G__24150 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24150) : p2.call(null,G__24150));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__13323__auto__ = (function (){var G__24152 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24152) : p1.call(null,G__24152));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var G__24154 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24154) : p1.call(null,G__24154));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var or__13323__auto____$2 = (function (){var G__24156 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24156) : p1.call(null,G__24156));
})();
if(cljs.core.truth_(or__13323__auto____$2)){
return or__13323__auto____$2;
} else {
var or__13323__auto____$3 = (function (){var G__24158 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24158) : p2.call(null,G__24158));
})();
if(cljs.core.truth_(or__13323__auto____$3)){
return or__13323__auto____$3;
} else {
var or__13323__auto____$4 = (function (){var G__24160 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24160) : p2.call(null,G__24160));
})();
if(cljs.core.truth_(or__13323__auto____$4)){
return or__13323__auto____$4;
} else {
var G__24161 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24161) : p2.call(null,G__24161));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__24276__delegate = function (x,y,z,args){
var or__13323__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.some(((function (or__13323__auto__){
return (function (p1__23897_SHARP_){
var or__13323__auto____$1 = (function (){var G__24163 = p1__23897_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24163) : p1.call(null,G__24163));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var G__24164 = p1__23897_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24164) : p2.call(null,G__24164));
}
});})(or__13323__auto__))
,args);
}
};
var G__24276 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24277__i = 0, G__24277__a = new Array(arguments.length -  3);
while (G__24277__i < G__24277__a.length) {G__24277__a[G__24277__i] = arguments[G__24277__i + 3]; ++G__24277__i;}
  args = new cljs.core.IndexedSeq(G__24277__a,0);
} 
return G__24276__delegate.call(this,x,y,z,args);};
G__24276.cljs$lang$maxFixedArity = 3;
G__24276.cljs$lang$applyTo = (function (arglist__24278){
var x = cljs.core.first(arglist__24278);
arglist__24278 = cljs.core.next(arglist__24278);
var y = cljs.core.first(arglist__24278);
arglist__24278 = cljs.core.next(arglist__24278);
var z = cljs.core.first(arglist__24278);
var args = cljs.core.rest(arglist__24278);
return G__24276__delegate(x,y,z,args);
});
G__24276.cljs$core$IFn$_invoke$arity$variadic = G__24276__delegate;
return G__24276;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__24279 = null;
if (arguments.length > 3) {
var G__24280__i = 0, G__24280__a = new Array(arguments.length -  3);
while (G__24280__i < G__24280__a.length) {G__24280__a[G__24280__i] = arguments[G__24280__i + 3]; ++G__24280__i;}
G__24279 = new cljs.core.IndexedSeq(G__24280__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24279);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__13323__auto__ = (function (){var G__24210 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24210) : p1.call(null,G__24210));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var G__24212 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24212) : p2.call(null,G__24212));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var G__24213 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24213) : p3.call(null,G__24213));
}
}
});
var sp3__2 = (function (x,y){
var or__13323__auto__ = (function (){var G__24215 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24215) : p1.call(null,G__24215));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var G__24217 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24217) : p2.call(null,G__24217));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var or__13323__auto____$2 = (function (){var G__24219 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24219) : p3.call(null,G__24219));
})();
if(cljs.core.truth_(or__13323__auto____$2)){
return or__13323__auto____$2;
} else {
var or__13323__auto____$3 = (function (){var G__24221 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24221) : p1.call(null,G__24221));
})();
if(cljs.core.truth_(or__13323__auto____$3)){
return or__13323__auto____$3;
} else {
var or__13323__auto____$4 = (function (){var G__24223 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24223) : p2.call(null,G__24223));
})();
if(cljs.core.truth_(or__13323__auto____$4)){
return or__13323__auto____$4;
} else {
var G__24224 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24224) : p3.call(null,G__24224));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__13323__auto__ = (function (){var G__24226 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24226) : p1.call(null,G__24226));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var G__24228 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24228) : p2.call(null,G__24228));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var or__13323__auto____$2 = (function (){var G__24230 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24230) : p3.call(null,G__24230));
})();
if(cljs.core.truth_(or__13323__auto____$2)){
return or__13323__auto____$2;
} else {
var or__13323__auto____$3 = (function (){var G__24232 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24232) : p1.call(null,G__24232));
})();
if(cljs.core.truth_(or__13323__auto____$3)){
return or__13323__auto____$3;
} else {
var or__13323__auto____$4 = (function (){var G__24234 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24234) : p2.call(null,G__24234));
})();
if(cljs.core.truth_(or__13323__auto____$4)){
return or__13323__auto____$4;
} else {
var or__13323__auto____$5 = (function (){var G__24236 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24236) : p3.call(null,G__24236));
})();
if(cljs.core.truth_(or__13323__auto____$5)){
return or__13323__auto____$5;
} else {
var or__13323__auto____$6 = (function (){var G__24238 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24238) : p1.call(null,G__24238));
})();
if(cljs.core.truth_(or__13323__auto____$6)){
return or__13323__auto____$6;
} else {
var or__13323__auto____$7 = (function (){var G__24240 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24240) : p2.call(null,G__24240));
})();
if(cljs.core.truth_(or__13323__auto____$7)){
return or__13323__auto____$7;
} else {
var G__24241 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24241) : p3.call(null,G__24241));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__24281__delegate = function (x,y,z,args){
var or__13323__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.some(((function (or__13323__auto__){
return (function (p1__23898_SHARP_){
var or__13323__auto____$1 = (function (){var G__24243 = p1__23898_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__24243) : p1.call(null,G__24243));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var or__13323__auto____$2 = (function (){var G__24245 = p1__23898_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__24245) : p2.call(null,G__24245));
})();
if(cljs.core.truth_(or__13323__auto____$2)){
return or__13323__auto____$2;
} else {
var G__24246 = p1__23898_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__24246) : p3.call(null,G__24246));
}
}
});})(or__13323__auto__))
,args);
}
};
var G__24281 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24282__i = 0, G__24282__a = new Array(arguments.length -  3);
while (G__24282__i < G__24282__a.length) {G__24282__a[G__24282__i] = arguments[G__24282__i + 3]; ++G__24282__i;}
  args = new cljs.core.IndexedSeq(G__24282__a,0);
} 
return G__24281__delegate.call(this,x,y,z,args);};
G__24281.cljs$lang$maxFixedArity = 3;
G__24281.cljs$lang$applyTo = (function (arglist__24283){
var x = cljs.core.first(arglist__24283);
arglist__24283 = cljs.core.next(arglist__24283);
var y = cljs.core.first(arglist__24283);
arglist__24283 = cljs.core.next(arglist__24283);
var z = cljs.core.first(arglist__24283);
var args = cljs.core.rest(arglist__24283);
return G__24281__delegate(x,y,z,args);
});
G__24281.cljs$core$IFn$_invoke$arity$variadic = G__24281__delegate;
return G__24281;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__24284 = null;
if (arguments.length > 3) {
var G__24285__i = 0, G__24285__a = new Array(arguments.length -  3);
while (G__24285__i < G__24285__a.length) {G__24285__a[G__24285__i] = arguments[G__24285__i + 3]; ++G__24285__i;}
G__24284 = new cljs.core.IndexedSeq(G__24285__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24284);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__24286__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__23899_SHARP_){
var G__24262 = x;
return (p1__23899_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23899_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24262) : p1__23899_SHARP_.call(null,G__24262));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__23900_SHARP_){
var or__13323__auto__ = (function (){var G__24264 = x;
return (p1__23900_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23900_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24264) : p1__23900_SHARP_.call(null,G__24264));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var G__24265 = y;
return (p1__23900_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23900_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24265) : p1__23900_SHARP_.call(null,G__24265));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__23901_SHARP_){
var or__13323__auto__ = (function (){var G__24267 = x;
return (p1__23901_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23901_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24267) : p1__23901_SHARP_.call(null,G__24267));
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var G__24269 = y;
return (p1__23901_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23901_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24269) : p1__23901_SHARP_.call(null,G__24269));
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var G__24270 = z;
return (p1__23901_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__23901_SHARP_.cljs$core$IFn$_invoke$arity$1(G__24270) : p1__23901_SHARP_.call(null,G__24270));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__24287__delegate = function (x,y,z,args){
var or__13323__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.some(((function (or__13323__auto__,ps__$1){
return (function (p1__23902_SHARP_){
return cljs.core.some(p1__23902_SHARP_,args);
});})(or__13323__auto__,ps__$1))
,ps__$1);
}
};
var G__24287 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__24288__i = 0, G__24288__a = new Array(arguments.length -  3);
while (G__24288__i < G__24288__a.length) {G__24288__a[G__24288__i] = arguments[G__24288__i + 3]; ++G__24288__i;}
  args = new cljs.core.IndexedSeq(G__24288__a,0);
} 
return G__24287__delegate.call(this,x,y,z,args);};
G__24287.cljs$lang$maxFixedArity = 3;
G__24287.cljs$lang$applyTo = (function (arglist__24289){
var x = cljs.core.first(arglist__24289);
arglist__24289 = cljs.core.next(arglist__24289);
var y = cljs.core.first(arglist__24289);
arglist__24289 = cljs.core.next(arglist__24289);
var z = cljs.core.first(arglist__24289);
var args = cljs.core.rest(arglist__24289);
return G__24287__delegate(x,y,z,args);
});
G__24287.cljs$core$IFn$_invoke$arity$variadic = G__24287__delegate;
return G__24287;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__24290 = null;
if (arguments.length > 3) {
var G__24291__i = 0, G__24291__a = new Array(arguments.length -  3);
while (G__24291__i < G__24291__a.length) {G__24291__a[G__24291__i] = arguments[G__24291__i + 3]; ++G__24291__i;}
G__24290 = new cljs.core.IndexedSeq(G__24291__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__24290);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__24286 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__24292__i = 0, G__24292__a = new Array(arguments.length -  3);
while (G__24292__i < G__24292__a.length) {G__24292__a[G__24292__i] = arguments[G__24292__i + 3]; ++G__24292__i;}
  ps = new cljs.core.IndexedSeq(G__24292__a,0);
} 
return G__24286__delegate.call(this,p1,p2,p3,ps);};
G__24286.cljs$lang$maxFixedArity = 3;
G__24286.cljs$lang$applyTo = (function (arglist__24293){
var p1 = cljs.core.first(arglist__24293);
arglist__24293 = cljs.core.next(arglist__24293);
var p2 = cljs.core.first(arglist__24293);
arglist__24293 = cljs.core.next(arglist__24293);
var p3 = cljs.core.first(arglist__24293);
var ps = cljs.core.rest(arglist__24293);
return G__24286__delegate(p1,p2,p3,ps);
});
G__24286.cljs$core$IFn$_invoke$arity$variadic = G__24286__delegate;
return G__24286;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__24294 = null;
if (arguments.length > 3) {
var G__24295__i = 0, G__24295__a = new Array(arguments.length -  3);
while (G__24295__i < G__24295__a.length) {G__24295__a[G__24295__i] = arguments[G__24295__i + 3]; ++G__24295__i;}
G__24294 = new cljs.core.IndexedSeq(G__24295__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__24294);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__24350 = null;
var G__24350__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24350__1 = (function (result){
var G__24336 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24336) : rf.call(null,G__24336));
});
var G__24350__2 = (function (result,input){
var G__24337 = result;
var G__24338 = (function (){var G__24339 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24339) : f.call(null,G__24339));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24337,G__24338) : rf.call(null,G__24337,G__24338));
});
var G__24350__3 = (function() { 
var G__24351__delegate = function (result,input,inputs){
var G__24340 = result;
var G__24341 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24340,G__24341) : rf.call(null,G__24340,G__24341));
};
var G__24351 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__24352__i = 0, G__24352__a = new Array(arguments.length -  2);
while (G__24352__i < G__24352__a.length) {G__24352__a[G__24352__i] = arguments[G__24352__i + 2]; ++G__24352__i;}
  inputs = new cljs.core.IndexedSeq(G__24352__a,0);
} 
return G__24351__delegate.call(this,result,input,inputs);};
G__24351.cljs$lang$maxFixedArity = 2;
G__24351.cljs$lang$applyTo = (function (arglist__24353){
var result = cljs.core.first(arglist__24353);
arglist__24353 = cljs.core.next(arglist__24353);
var input = cljs.core.first(arglist__24353);
var inputs = cljs.core.rest(arglist__24353);
return G__24351__delegate(result,input,inputs);
});
G__24351.cljs$core$IFn$_invoke$arity$variadic = G__24351__delegate;
return G__24351;
})()
;
G__24350 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__24350__0.call(this);
case 1:
return G__24350__1.call(this,result);
case 2:
return G__24350__2.call(this,result,input);
default:
var G__24354 = null;
if (arguments.length > 2) {
var G__24355__i = 0, G__24355__a = new Array(arguments.length -  2);
while (G__24355__i < G__24355__a.length) {G__24355__a[G__24355__i] = arguments[G__24355__i + 2]; ++G__24355__i;}
G__24354 = new cljs.core.IndexedSeq(G__24355__a,0);
}
return G__24350__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__24354);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24350.cljs$lang$maxFixedArity = 2;
G__24350.cljs$lang$applyTo = G__24350__3.cljs$lang$applyTo;
G__24350.cljs$core$IFn$_invoke$arity$0 = G__24350__0;
G__24350.cljs$core$IFn$_invoke$arity$1 = G__24350__1;
G__24350.cljs$core$IFn$_invoke$arity$2 = G__24350__2;
G__24350.cljs$core$IFn$_invoke$arity$variadic = G__24350__3.cljs$core$IFn$_invoke$arity$variadic;
return G__24350;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14210__auto___24356 = size;
var i_24357 = (0);
while(true){
if((i_24357 < n__14210__auto___24356)){
cljs.core.chunk_append(b,(function (){var G__24342 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24357);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24342) : f.call(null,G__24342));
})());

var G__24358 = (i_24357 + (1));
i_24357 = G__24358;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__24343 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24343) : f.call(null,G__24343));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__24344 = cljs.core.first(s1);
var G__24345 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24344,G__24345) : f.call(null,G__24344,G__24345));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__24346 = cljs.core.first(s1);
var G__24347 = cljs.core.first(s2);
var G__24348 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24346,G__24347,G__24348) : f.call(null,G__24346,G__24347,G__24348));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__24359__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__24296_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__24296_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__24359 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24360__i = 0, G__24360__a = new Array(arguments.length -  4);
while (G__24360__i < G__24360__a.length) {G__24360__a[G__24360__i] = arguments[G__24360__i + 4]; ++G__24360__i;}
  colls = new cljs.core.IndexedSeq(G__24360__a,0);
} 
return G__24359__delegate.call(this,f,c1,c2,c3,colls);};
G__24359.cljs$lang$maxFixedArity = 4;
G__24359.cljs$lang$applyTo = (function (arglist__24361){
var f = cljs.core.first(arglist__24361);
arglist__24361 = cljs.core.next(arglist__24361);
var c1 = cljs.core.first(arglist__24361);
arglist__24361 = cljs.core.next(arglist__24361);
var c2 = cljs.core.first(arglist__24361);
arglist__24361 = cljs.core.next(arglist__24361);
var c3 = cljs.core.first(arglist__24361);
var colls = cljs.core.rest(arglist__24361);
return G__24359__delegate(f,c1,c2,c3,colls);
});
G__24359.cljs$core$IFn$_invoke$arity$variadic = G__24359__delegate;
return G__24359;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__24362 = null;
if (arguments.length > 4) {
var G__24363__i = 0, G__24363__a = new Array(arguments.length -  4);
while (G__24363__i < G__24363__a.length) {G__24363__a[G__24363__i] = arguments[G__24363__i + 4]; ++G__24363__i;}
G__24362 = new cljs.core.IndexedSeq(G__24363__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24362);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24372 = null;
var G__24372__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24372__1 = (function (result){
var G__24369 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24369) : rf.call(null,G__24369));
});
var G__24372__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__24370 = result;
var G__24371 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24370,G__24371) : rf.call(null,G__24370,G__24371));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__24372 = function(result,input){
switch(arguments.length){
case 0:
return G__24372__0.call(this);
case 1:
return G__24372__1.call(this,result);
case 2:
return G__24372__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24372.cljs$core$IFn$_invoke$arity$0 = G__24372__0;
G__24372.cljs$core$IFn$_invoke$arity$1 = G__24372__1;
G__24372.cljs$core$IFn$_invoke$arity$2 = G__24372__2;
return G__24372;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__24379 = null;
var G__24379__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24379__1 = (function (result){
var G__24376 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24376) : rf.call(null,G__24376));
});
var G__24379__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__24377 = result;
var G__24378 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24377,G__24378) : rf.call(null,G__24377,G__24378));
}
});
G__24379 = function(result,input){
switch(arguments.length){
case 0:
return G__24379__0.call(this);
case 1:
return G__24379__1.call(this,result);
case 2:
return G__24379__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24379.cljs$core$IFn$_invoke$arity$0 = G__24379__0;
G__24379.cljs$core$IFn$_invoke$arity$1 = G__24379__1;
G__24379.cljs$core$IFn$_invoke$arity$2 = G__24379__2;
return G__24379;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__24380 = (n__$1 - (1));
var G__24381 = cljs.core.rest(s);
n__$1 = G__24380;
coll__$1 = G__24381;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__24384 = cljs.core.next(s);
var G__24385 = cljs.core.next(lead);
s = G__24384;
lead = G__24385;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__24398 = null;
var G__24398__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24398__1 = (function (result){
var G__24392 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24392) : rf.call(null,G__24392));
});
var G__24398__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__13311__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__13311__auto__)){
var G__24393 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24393) : pred.call(null,G__24393));
} else {
return and__13311__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__24394 = result;
var G__24395 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24394,G__24395) : rf.call(null,G__24394,G__24395));
}
});
G__24398 = function(result,input){
switch(arguments.length){
case 0:
return G__24398__0.call(this);
case 1:
return G__24398__1.call(this,result);
case 2:
return G__24398__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24398.cljs$core$IFn$_invoke$arity$0 = G__24398__0;
G__24398.cljs$core$IFn$_invoke$arity$1 = G__24398__1;
G__24398.cljs$core$IFn$_invoke$arity$2 = G__24398__2;
return G__24398;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__13311__auto__ = s;
if(and__13311__auto__){
var G__24397 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__24397) : pred__$1.call(null,G__24397));
} else {
return and__13311__auto__;
}
})())){
var G__24399 = pred__$1;
var G__24400 = cljs.core.rest(s);
pred__$1 = G__24399;
coll__$1 = G__24400;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__24409 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24409) : f.call(null,G__24409));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__24412__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__24412 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__24413__i = 0, G__24413__a = new Array(arguments.length -  2);
while (G__24413__i < G__24413__a.length) {G__24413__a[G__24413__i] = arguments[G__24413__i + 2]; ++G__24413__i;}
  colls = new cljs.core.IndexedSeq(G__24413__a,0);
} 
return G__24412__delegate.call(this,c1,c2,colls);};
G__24412.cljs$lang$maxFixedArity = 2;
G__24412.cljs$lang$applyTo = (function (arglist__24414){
var c1 = cljs.core.first(arglist__24414);
arglist__24414 = cljs.core.next(arglist__24414);
var c2 = cljs.core.first(arglist__24414);
var colls = cljs.core.rest(arglist__24414);
return G__24412__delegate(c1,c2,colls);
});
G__24412.cljs$core$IFn$_invoke$arity$variadic = G__24412__delegate;
return G__24412;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__24415 = null;
if (arguments.length > 2) {
var G__24416__i = 0, G__24416__a = new Array(arguments.length -  2);
while (G__24416__i < G__24416__a.length) {G__24416__a[G__24416__i] = arguments[G__24416__i + 2]; ++G__24416__i;}
G__24415 = new cljs.core.IndexedSeq(G__24416__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__24415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__24431 = null;
var G__24431__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24431__1 = (function (result){
var G__24424 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24424) : rf.call(null,G__24424));
});
var G__24431__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__24425 = result;
var G__24426 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24425,G__24426) : rf.call(null,G__24425,G__24426));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__24427 = sepr;
var G__24428 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24427,G__24428) : rf.call(null,G__24427,G__24428));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__24429 = result;
var G__24430 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24429,G__24430) : rf.call(null,G__24429,G__24430));
}
});
G__24431 = function(result,input){
switch(arguments.length){
case 0:
return G__24431__0.call(this);
case 1:
return G__24431__1.call(this,result);
case 2:
return G__24431__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24431.cljs$core$IFn$_invoke$arity$0 = G__24431__0;
G__24431.cljs$core$IFn$_invoke$arity$1 = G__24431__1;
G__24431.cljs$core$IFn$_invoke$arity$2 = G__24431__2;
return G__24431;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__24440__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__24440 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__24441__i = 0, G__24441__a = new Array(arguments.length -  1);
while (G__24441__i < G__24441__a.length) {G__24441__a[G__24441__i] = arguments[G__24441__i + 1]; ++G__24441__i;}
  colls = new cljs.core.IndexedSeq(G__24441__a,0);
} 
return G__24440__delegate.call(this,f,colls);};
G__24440.cljs$lang$maxFixedArity = 1;
G__24440.cljs$lang$applyTo = (function (arglist__24442){
var f = cljs.core.first(arglist__24442);
var colls = cljs.core.rest(arglist__24442);
return G__24440__delegate(f,colls);
});
G__24440.cljs$core$IFn$_invoke$arity$variadic = G__24440__delegate;
return G__24440;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__24443 = null;
if (arguments.length > 1) {
var G__24444__i = 0, G__24444__a = new Array(arguments.length -  1);
while (G__24444__i < G__24444__a.length) {G__24444__a[G__24444__i] = arguments[G__24444__i + 1]; ++G__24444__i;}
G__24443 = new cljs.core.IndexedSeq(G__24444__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__24443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__24463 = null;
var G__24463__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__24463__1 = (function (result){
var G__24457 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__24457) : rf.call(null,G__24457));
});
var G__24463__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__24458 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24458) : pred.call(null,G__24458));
})())){
var G__24459 = result;
var G__24460 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__24459,G__24460) : rf.call(null,G__24459,G__24460));
} else {
return result;
}
});
G__24463 = function(result,input){
switch(arguments.length){
case 0:
return G__24463__0.call(this);
case 1:
return G__24463__1.call(this,result);
case 2:
return G__24463__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24463.cljs$core$IFn$_invoke$arity$0 = G__24463__0;
G__24463.cljs$core$IFn$_invoke$arity$1 = G__24463__1;
G__24463.cljs$core$IFn$_invoke$arity$2 = G__24463__2;
return G__24463;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__14210__auto___24464 = size;
var i_24465 = (0);
while(true){
if((i_24465 < n__14210__auto___24464)){
if(cljs.core.truth_((function (){var G__24461 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24465);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24461) : pred.call(null,G__24461));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_24465));
} else {
}

var G__24466 = (i_24465 + (1));
i_24465 = G__24466;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__24462 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24462) : pred.call(null,G__24462));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__24473 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__24473) : branch_QMARK_.call(null,G__24473));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__24474 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__24474) : children.call(null,G__24474));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__24475_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__24475_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__24478 = to;
if(G__24478){
var bit__13997__auto__ = (G__24478.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13997__auto__) || (G__24478.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__24479 = to;
if(G__24479){
var bit__13997__auto__ = (G__24479.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__13997__auto__) || (G__24479.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__24481 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24481) : f.call(null,G__24481));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__24482__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__24482 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__24483__i = 0, G__24483__a = new Array(arguments.length -  4);
while (G__24483__i < G__24483__a.length) {G__24483__a[G__24483__i] = arguments[G__24483__i + 4]; ++G__24483__i;}
  colls = new cljs.core.IndexedSeq(G__24483__a,0);
} 
return G__24482__delegate.call(this,f,c1,c2,c3,colls);};
G__24482.cljs$lang$maxFixedArity = 4;
G__24482.cljs$lang$applyTo = (function (arglist__24484){
var f = cljs.core.first(arglist__24484);
arglist__24484 = cljs.core.next(arglist__24484);
var c1 = cljs.core.first(arglist__24484);
arglist__24484 = cljs.core.next(arglist__24484);
var c2 = cljs.core.first(arglist__24484);
arglist__24484 = cljs.core.next(arglist__24484);
var c3 = cljs.core.first(arglist__24484);
var colls = cljs.core.rest(arglist__24484);
return G__24482__delegate(f,c1,c2,c3,colls);
});
G__24482.cljs$core$IFn$_invoke$arity$variadic = G__24482__delegate;
return G__24482;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__24485 = null;
if (arguments.length > 4) {
var G__24486__i = 0, G__24486__a = new Array(arguments.length -  4);
while (G__24486__i < G__24486__a.length) {G__24486__a[G__24486__i] = arguments[G__24486__i + 4]; ++G__24486__i;}
G__24485 = new cljs.core.IndexedSeq(G__24486__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__24485);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__24488 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__24488) : pred.call(null,G__24488));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__24503 = m__$1;
if(G__24503){
var bit__14004__auto__ = (G__24503.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__14004__auto__) || (G__24503.cljs$core$ILookup$)){
return true;
} else {
if((!G__24503.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24503);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__24503);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__24504 = sentinel;
var G__24505 = m__$2;
var G__24506 = cljs.core.next(ks__$1);
sentinel = G__24504;
m__$1 = G__24505;
ks__$1 = G__24506;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__24507,v){
var vec__24512 = p__24507;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24512,(0),null);
var ks = cljs.core.nthnext(vec__24512,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__24513,f){
var vec__24551 = p__24513;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24551,(0),null);
var ks = cljs.core.nthnext(vec__24551,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24552 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24552) : f.call(null,G__24552));
})());
}
});
var update_in__4 = (function (m,p__24514,f,a){
var vec__24553 = p__24514;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24553,(0),null);
var ks = cljs.core.nthnext(vec__24553,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24554 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24555 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24554,G__24555) : f.call(null,G__24554,G__24555));
})());
}
});
var update_in__5 = (function (m,p__24515,f,a,b){
var vec__24556 = p__24515;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24556,(0),null);
var ks = cljs.core.nthnext(vec__24556,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24557 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24558 = a;
var G__24559 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24557,G__24558,G__24559) : f.call(null,G__24557,G__24558,G__24559));
})());
}
});
var update_in__6 = (function (m,p__24516,f,a,b,c){
var vec__24560 = p__24516;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24560,(0),null);
var ks = cljs.core.nthnext(vec__24560,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24561 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24562 = a;
var G__24563 = b;
var G__24564 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24561,G__24562,G__24563,G__24564) : f.call(null,G__24561,G__24562,G__24563,G__24564));
})());
}
});
var update_in__7 = (function() { 
var G__24566__delegate = function (m,p__24517,f,a,b,c,args){
var vec__24565 = p__24517;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24565,(0),null);
var ks = cljs.core.nthnext(vec__24565,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__24566 = function (m,p__24517,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__24567__i = 0, G__24567__a = new Array(arguments.length -  6);
while (G__24567__i < G__24567__a.length) {G__24567__a[G__24567__i] = arguments[G__24567__i + 6]; ++G__24567__i;}
  args = new cljs.core.IndexedSeq(G__24567__a,0);
} 
return G__24566__delegate.call(this,m,p__24517,f,a,b,c,args);};
G__24566.cljs$lang$maxFixedArity = 6;
G__24566.cljs$lang$applyTo = (function (arglist__24568){
var m = cljs.core.first(arglist__24568);
arglist__24568 = cljs.core.next(arglist__24568);
var p__24517 = cljs.core.first(arglist__24568);
arglist__24568 = cljs.core.next(arglist__24568);
var f = cljs.core.first(arglist__24568);
arglist__24568 = cljs.core.next(arglist__24568);
var a = cljs.core.first(arglist__24568);
arglist__24568 = cljs.core.next(arglist__24568);
var b = cljs.core.first(arglist__24568);
arglist__24568 = cljs.core.next(arglist__24568);
var c = cljs.core.first(arglist__24568);
var args = cljs.core.rest(arglist__24568);
return G__24566__delegate(m,p__24517,f,a,b,c,args);
});
G__24566.cljs$core$IFn$_invoke$arity$variadic = G__24566__delegate;
return G__24566;
})()
;
update_in = function(m,p__24517,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__24517,f);
case 4:
return update_in__4.call(this,m,p__24517,f,a);
case 5:
return update_in__5.call(this,m,p__24517,f,a,b);
case 6:
return update_in__6.call(this,m,p__24517,f,a,b,c);
default:
var G__24569 = null;
if (arguments.length > 6) {
var G__24570__i = 0, G__24570__a = new Array(arguments.length -  6);
while (G__24570__i < G__24570__a.length) {G__24570__a[G__24570__i] = arguments[G__24570__i + 6]; ++G__24570__i;}
G__24569 = new cljs.core.IndexedSeq(G__24570__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__24517,f,a,b,c, G__24569);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24581 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__24581) : f.call(null,G__24581));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24582 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24583 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24582,G__24583) : f.call(null,G__24582,G__24583));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24584 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24585 = x;
var G__24586 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24584,G__24585,G__24586) : f.call(null,G__24584,G__24585,G__24586));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__24587 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__24588 = x;
var G__24589 = y;
var G__24590 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__24587,G__24588,G__24589,G__24590) : f.call(null,G__24587,G__24588,G__24589,G__24590));
})());
});
var update__7 = (function() { 
var G__24591__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__24591 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__24592__i = 0, G__24592__a = new Array(arguments.length -  6);
while (G__24592__i < G__24592__a.length) {G__24592__a[G__24592__i] = arguments[G__24592__i + 6]; ++G__24592__i;}
  more = new cljs.core.IndexedSeq(G__24592__a,0);
} 
return G__24591__delegate.call(this,m,k,f,x,y,z,more);};
G__24591.cljs$lang$maxFixedArity = 6;
G__24591.cljs$lang$applyTo = (function (arglist__24593){
var m = cljs.core.first(arglist__24593);
arglist__24593 = cljs.core.next(arglist__24593);
var k = cljs.core.first(arglist__24593);
arglist__24593 = cljs.core.next(arglist__24593);
var f = cljs.core.first(arglist__24593);
arglist__24593 = cljs.core.next(arglist__24593);
var x = cljs.core.first(arglist__24593);
arglist__24593 = cljs.core.next(arglist__24593);
var y = cljs.core.first(arglist__24593);
arglist__24593 = cljs.core.next(arglist__24593);
var z = cljs.core.first(arglist__24593);
var more = cljs.core.rest(arglist__24593);
return G__24591__delegate(m,k,f,x,y,z,more);
});
G__24591.cljs$core$IFn$_invoke$arity$variadic = G__24591__delegate;
return G__24591;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__24594 = null;
if (arguments.length > 6) {
var G__24595__i = 0, G__24595__a = new Array(arguments.length -  6);
while (G__24595__i < G__24595__a.length) {G__24595__a[G__24595__i] = arguments[G__24595__i + 6]; ++G__24595__i;}
G__24594 = new cljs.core.IndexedSeq(G__24595__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__24594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__24596 = (ll - (5));
var G__24597 = r;
ll = G__24596;
ret = G__24597;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24602 = cljs.core.pv_aget(node,(0));
var G__24603 = (level - (5));
node = G__24602;
level = G__24603;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__24604 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__24605 = (level - (5));
node = G__24604;
level = G__24605;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24615 = init__$2;
var G__24616 = (j + i);
var G__24617 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24615,G__24616,G__24617) : f.call(null,G__24615,G__24616,G__24617));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24628 = (j + (1));
var G__24629 = init__$3;
j = G__24628;
init__$2 = G__24629;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24618 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24618) : cljs.core.deref.call(null,G__24618));
} else {
var G__24630 = (i + len);
var G__24631 = init__$2;
i = G__24630;
init__$1 = G__24631;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__24619 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__24619) : cljs.core.tv_editable_root.call(null,G__24619));
})(),(function (){var G__24620 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__24620) : cljs.core.tv_editable_tail.call(null,G__24620));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__24621 = init__$2;
var G__24622 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24621,G__24622) : f.call(null,G__24621,G__24622));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__24632 = (j + (1));
var G__24633 = init__$3;
j = G__24632;
init__$2 = G__24633;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24623 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24623) : cljs.core.deref.call(null,G__24623));
} else {
var G__24634 = (i + len);
var G__24635 = init__$2;
i = G__24634;
init__$1 = G__24635;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__24624 = coll__$1;
var G__24625 = cljs.core.first_array_for_longvec(coll__$1);
var G__24626 = (0);
var G__24627 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24624,G__24625,G__24626,G__24627) : cljs.core.chunked_seq.call(null,G__24624,G__24625,G__24626,G__24627));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__14210__auto___24636 = len;
var i_24637 = (0);
while(true){
if((i_24637 < n__14210__auto___24636)){
(new_tail[i_24637] = (self__.tail[i_24637]));

var G__24638 = (i_24637 + (1));
i_24637 = G__24638;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__24639 = null;
var G__24639__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24639__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24639 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24639__2.call(this,self__,k);
case 3:
return G__24639__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24639.cljs$core$IFn$_invoke$arity$2 = G__24639__2;
G__24639.cljs$core$IFn$_invoke$arity$3 = G__24639__3;
return G__24639;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args24614){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24614)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__24640 = (i + (1));
var G__24641 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__24640;
out = G__24641;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__24642__i = 0, G__24642__a = new Array(arguments.length -  0);
while (G__24642__i < G__24642__a.length) {G__24642__a[G__24642__i] = arguments[G__24642__i + 0]; ++G__24642__i;}
  args = new cljs.core.IndexedSeq(G__24642__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__24643){
var args = cljs.core.seq(arglist__24643);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24644 = self__.vec;
var G__24645 = self__.node;
var G__24646 = self__.i;
var G__24647 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24644,G__24645,G__24646,G__24647) : cljs.core.chunked_seq.call(null,G__24644,G__24645,G__24646,G__24647));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__24648 = self__.vec;
var G__24649 = (self__.i + self__.off);
var G__24650 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24648,G__24649,G__24650) : cljs.core.subvec.call(null,G__24648,G__24649,G__24650));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__24651 = self__.vec;
var G__24652 = (self__.i + self__.off);
var G__24653 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__24651,G__24652,G__24653) : cljs.core.subvec.call(null,G__24651,G__24652,G__24653));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__24654 = self__.vec;
var G__24655 = self__.node;
var G__24656 = self__.i;
var G__24657 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24654,G__24655,G__24656,G__24657) : cljs.core.chunked_seq.call(null,G__24654,G__24655,G__24656,G__24657));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24658 = self__.vec;
var G__24659 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24660 = end;
var G__24661 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24658,G__24659,G__24660,G__24661) : cljs.core.chunked_seq.call(null,G__24658,G__24659,G__24660,G__24661));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__24662 = self__.vec;
var G__24663 = self__.node;
var G__24664 = self__.i;
var G__24665 = self__.off;
var G__24666 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__24662,G__24663,G__24664,G__24665,G__24666) : cljs.core.chunked_seq.call(null,G__24662,G__24663,G__24664,G__24665,G__24666));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__24667 = self__.vec;
var G__24668 = cljs.core.unchecked_array_for(self__.vec,end);
var G__24669 = end;
var G__24670 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__24667,G__24668,G__24669,G__24670) : cljs.core.chunked_seq.call(null,G__24667,G__24668,G__24669,G__24670));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__24672 = self__.meta;
var G__24673 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__24674 = self__.start;
var G__24675 = (function (){var x__13640__auto__ = self__.end;
var y__13641__auto__ = (v_pos + (1));
return ((x__13640__auto__ > y__13641__auto__) ? x__13640__auto__ : y__13641__auto__);
})();
var G__24676 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24672,G__24673,G__24674,G__24675,G__24676) : cljs.core.build_subvec.call(null,G__24672,G__24673,G__24674,G__24675,G__24676));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__24677 = self__.meta;
var G__24678 = self__.v;
var G__24679 = self__.start;
var G__24680 = (self__.end - (1));
var G__24681 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24677,G__24678,G__24679,G__24680,G__24681) : cljs.core.build_subvec.call(null,G__24677,G__24678,G__24679,G__24680,G__24681));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__24683 = meta__$1;
var G__24684 = self__.v;
var G__24685 = self__.start;
var G__24686 = self__.end;
var G__24687 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24683,G__24684,G__24685,G__24686,G__24687) : cljs.core.build_subvec.call(null,G__24683,G__24684,G__24685,G__24686,G__24687));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__24688 = self__.meta;
var G__24689 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__24690 = self__.start;
var G__24691 = (self__.end + (1));
var G__24692 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__24688,G__24689,G__24690,G__24691,G__24692) : cljs.core.build_subvec.call(null,G__24688,G__24689,G__24690,G__24691,G__24692));
});

cljs.core.Subvec.prototype.call = (function() {
var G__24693 = null;
var G__24693__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__24693__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__24693 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24693__2.call(this,self__,k);
case 3:
return G__24693__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24693.cljs$core$IFn$_invoke$arity$2 = G__24693__2;
G__24693.cljs$core$IFn$_invoke$arity$3 = G__24693__3;
return G__24693;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args24671){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24671)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__24694 = meta;
var G__24695 = v.v;
var G__24696 = (v.start + start);
var G__24697 = (v.start + end);
var G__24698 = __hash;
meta = G__24694;
v = G__24695;
start = G__24696;
end = G__24697;
__hash = G__24698;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj24705 = {};
return obj24705;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__24713 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__24714 = (level - (5));
node = G__24713;
level = G__24714;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__24718 = null;
var G__24718__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24718__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24718 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24718__2.call(this,self__,k);
case 3:
return G__24718__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24718.cljs$core$IFn$_invoke$arity$2 = G__24718__2;
G__24718.cljs$core$IFn$_invoke$arity$3 = G__24718__3;
return G__24718;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args24715){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24715)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__13323__auto__ = self__.front;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13323__auto__ = self__.rear;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__24719 = (i + incr);
i = G__24719;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__24720 = (i + (1));
var G__24721 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__24720;
out = G__24721;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj24725 = {};
return obj24725;
})();
var l = ks.length;
var i_24726 = (0);
while(true){
if((i_24726 < l)){
var k_24727 = (ks[i_24726]);
(new_obj[k_24727] = (obj[k_24727]));

var G__24728 = (i_24726 + (1));
i_24726 = G__24728;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13311__auto__ = (function (){var G__24732 = k;
return goog.isString(G__24732);
})();
if(cljs.core.truth_(and__13311__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13311__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__24733 = init__$1;
var G__24734 = k;
var G__24735 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24733,G__24734,G__24735) : f.call(null,G__24733,G__24734,G__24735));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24736 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24736) : cljs.core.deref.call(null,G__24736));
} else {
var G__24742 = cljs.core.rest(keys__$1);
var G__24743 = init__$2;
keys__$1 = G__24742;
init__$1 = G__24743;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13311__auto__ = (function (){var G__24738 = k;
return goog.isString(G__24738);
})();
if(cljs.core.truth_(and__13311__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13311__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__24739 = k;
return goog.isString(G__24739);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__13311__auto__ = (function (){var G__24741 = k;
return goog.isString(G__24741);
})();
if(cljs.core.truth_(and__13311__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__13311__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__24729_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__24729_SHARP_,(self__.strobj[p1__24729_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__24744 = null;
var G__24744__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24744__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24744 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24744__2.call(this,self__,k);
case 3:
return G__24744__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24744.cljs$core$IFn$_invoke$arity$2 = G__24744__2;
G__24744.cljs$core$IFn$_invoke$arity$3 = G__24744__3;
return G__24744;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args24730){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24730)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj24746 = {};
return obj24746;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__24747 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24747,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24747,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__24748 = (i + (2));
i = G__24748;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__24749 = (i + (2));
i = G__24749;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__24750 = (i + (2));
i = G__24750;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__24751 = (i + (2));
i = G__24751;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__24752 = (i + (2));
i = G__24752;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__13323__auto__ = (function (){var G__24756 = k;
return goog.isString(G__24756);
})();
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_24757 = (0);
while(true){
if((i_24757 < l)){
(narr[i_24757] = (arr[i_24757]));

var G__24758 = (i_24757 + (1));
i_24757 = G__24758;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24760 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24760) : cljs.core.keys.call(null,G__24760));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24761 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24761) : cljs.core.vals.call(null,G__24761));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24762 = cljs.core.seq(coll);
var chunk__24763 = null;
var count__24764 = (0);
var i__24765 = (0);
while(true){
if((i__24765 < count__24764)){
var vec__24766 = chunk__24763.cljs$core$IIndexed$_nth$arity$2(null,i__24765);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24766,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24766,(1),null);
var G__24767_24780 = v;
var G__24768_24781 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24767_24780,G__24768_24781) : f.call(null,G__24767_24780,G__24768_24781));

var G__24782 = seq__24762;
var G__24783 = chunk__24763;
var G__24784 = count__24764;
var G__24785 = (i__24765 + (1));
seq__24762 = G__24782;
chunk__24763 = G__24783;
count__24764 = G__24784;
i__24765 = G__24785;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24762);
if(temp__4126__auto__){
var seq__24762__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24762__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__24762__$1);
var G__24786 = cljs.core.chunk_rest(seq__24762__$1);
var G__24787 = c__14110__auto__;
var G__24788 = cljs.core.count(c__14110__auto__);
var G__24789 = (0);
seq__24762 = G__24786;
chunk__24763 = G__24787;
count__24764 = G__24788;
i__24765 = G__24789;
continue;
} else {
var vec__24769 = cljs.core.first(seq__24762__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24769,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24769,(1),null);
var G__24770_24790 = v;
var G__24771_24791 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24770_24790,G__24771_24791) : f.call(null,G__24770_24790,G__24771_24791));

var G__24792 = cljs.core.next(seq__24762__$1);
var G__24793 = null;
var G__24794 = (0);
var G__24795 = (0);
seq__24762 = G__24792;
chunk__24763 = G__24793;
count__24764 = G__24794;
i__24765 = G__24795;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__24772 = init__$1;
var G__24773 = (self__.arr[i]);
var G__24774 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24772,G__24773,G__24774) : f.call(null,G__24772,G__24773,G__24774));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24775 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24775) : cljs.core.deref.call(null,G__24775));
} else {
var G__24796 = (i + (2));
var G__24797 = init__$2;
i = G__24796;
init__$1 = G__24797;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__24776 = other;
if(G__24776){
var bit__13997__auto__ = (G__24776.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__13997__auto__) || (G__24776.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__24798 = (i + (2));
i = G__24798;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj24778 = {};
return obj24778;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__24799 = (s + (2));
var G__24800 = d;
s = G__24799;
d = G__24800;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__24801 = (s + (2));
var G__24802 = (d + (2));
s = G__24801;
d = G__24802;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__24779 = cljs.core.aclone(self__.arr);
(G__24779[(idx + (1))] = v);

return G__24779;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24803 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24804 = cljs.core.next(es);
ret = G__24803;
es = G__24804;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__24805 = null;
var G__24805__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24805__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24805 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24805__2.call(this,self__,k);
case 3:
return G__24805__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24805.cljs$core$IFn$_invoke$arity$2 = G__24805__2;
G__24805.cljs$core$IFn$_invoke$arity$3 = G__24805__3;
return G__24805;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args24759){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24759)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__24806 = (i + (2));
var G__24807 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24806;
ret = G__24807;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__24808_24816 = self__.arr;
G__24808_24816.pop();

G__24808_24816.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__24809 = self__.len;
var G__24810 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__24809,G__24810) : cljs.core.array__GT_transient_hash_map.call(null,G__24809,G__24810));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__24811 = o;
if(G__24811){
var bit__14004__auto__ = (G__24811.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14004__auto__) || (G__24811.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24811.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24811);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24811);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__24812 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24812) : cljs.core.key.call(null,G__24812));
})(),(function (){var G__24813 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24813) : cljs.core.val.call(null,G__24813));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__24817 = cljs.core.next(es);
var G__24818 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__24814 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24814) : cljs.core.key.call(null,G__24814));
})(),(function (){var G__24815 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24815) : cljs.core.val.call(null,G__24815));
})());
es = G__24817;
tcoll__$2 = G__24818;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__24819 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__24820 = (i + (2));
out = G__24819;
i = G__24820;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__24823 = cljs.core.aclone(arr);
(G__24823[i] = a);

return G__24823;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__24824 = cljs.core.aclone(arr);
(G__24824[i] = a);

(G__24824[j] = b);

return G__24824;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__24829 = init__$1;
var G__24830 = k;
var G__24831 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24829,G__24830,G__24831) : f.call(null,G__24829,G__24830,G__24831));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24832 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24832) : cljs.core.deref.call(null,G__24832));
} else {
var G__24833 = (i + (2));
var G__24834 = init__$2;
i = G__24833;
init__$1 = G__24834;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24835 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24835) : cljs.core.create_inode_seq.call(null,G__24835));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24849 = (0);
var j_24850 = (0);
while(true){
if((i_24849 < (32))){
if((((self__.bitmap >>> i_24849) & (1)) === (0))){
var G__24851 = (i_24849 + (1));
var G__24852 = j_24850;
i_24849 = G__24851;
j_24850 = G__24852;
continue;
} else {
(nodes[i_24849] = ((!(((self__.arr[j_24850]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_24850])),(self__.arr[j_24850]),(self__.arr[(j_24850 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24850 + (1))])));

var G__24853 = (i_24849 + (1));
var G__24854 = (j_24850 + (2));
i_24849 = G__24853;
j_24850 = G__24854;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24836 = edit__$1;
var G__24837 = (shift + (5));
var G__24838 = key_or_nil;
var G__24839 = val_or_node;
var G__24840 = hash;
var G__24841 = key;
var G__24842 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842) : cljs.core.create_node.call(null,G__24836,G__24837,G__24838,G__24839,G__24840,G__24841,G__24842));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_24855 = (0);
var j_24856 = (0);
while(true){
if((i_24855 < (32))){
if((((self__.bitmap >>> i_24855) & (1)) === (0))){
var G__24857 = (i_24855 + (1));
var G__24858 = j_24856;
i_24855 = G__24857;
j_24856 = G__24858;
continue;
} else {
(nodes[i_24855] = ((!(((self__.arr[j_24856]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_24856])),(self__.arr[j_24856]),(self__.arr[(j_24856 + (1))]),added_leaf_QMARK_):(self__.arr[(j_24856 + (1))])));

var G__24859 = (i_24855 + (1));
var G__24860 = (j_24856 + (2));
i_24855 = G__24859;
j_24856 = G__24860;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__24843 = (shift + (5));
var G__24844 = key_or_nil;
var G__24845 = val_or_node;
var G__24846 = hash;
var G__24847 = key;
var G__24848 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__24843,G__24844,G__24845,G__24846,G__24847,G__24848) : cljs.core.create_node.call(null,G__24843,G__24844,G__24845,G__24846,G__24847,G__24848));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__24861 = (i + (1));
var G__24862 = (j + (2));
var G__24863 = (bitmap | ((1) << i));
i = G__24861;
j = G__24862;
bitmap = G__24863;
continue;
} else {
var G__24864 = (i + (1));
var G__24865 = j;
var G__24866 = bitmap;
i = G__24864;
j = G__24865;
bitmap = G__24866;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24867 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__24867) : cljs.core.create_array_node_seq.call(null,G__24867));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24868 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24868) : cljs.core.deref.call(null,G__24868));
} else {
var G__24869 = (i + (1));
var G__24870 = init__$2;
i = G__24869;
init__$1 = G__24870;
continue;
}
} else {
var G__24871 = (i + (1));
var G__24872 = init__$1;
i = G__24871;
init__$1 = G__24872;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__24873 = (i + (2));
i = G__24873;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__24874 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__24874) : cljs.core.create_inode_seq.call(null,G__24874));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__24875 = self__.nodes;
var G__24876 = (self__.i + (2));
var G__24877 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24875,G__24876,G__24877) : cljs.core.create_inode_seq.call(null,G__24875,G__24876,G__24877));
} else {
var G__24878 = self__.nodes;
var G__24879 = self__.i;
var G__24880 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__24878,G__24879,G__24880) : cljs.core.create_inode_seq.call(null,G__24878,G__24879,G__24880));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__24884 = (j + (2));
j = G__24884;
continue;
}
} else {
var G__24885 = (j + (2));
j = G__24885;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__24886 = null;
var G__24887 = self__.nodes;
var G__24888 = self__.i;
var G__24889 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__24886,G__24887,G__24888,G__24889) : cljs.core.create_array_node_seq.call(null,G__24886,G__24887,G__24888,G__24889));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__24894 = (j + (1));
j = G__24894;
continue;
}
} else {
var G__24895 = (j + (1));
j = G__24895;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24897 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__24897) : cljs.core.keys.call(null,G__24897));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__24898 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__24898) : cljs.core.vals.call(null,G__24898));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__24899 = cljs.core.seq(coll);
var chunk__24900 = null;
var count__24901 = (0);
var i__24902 = (0);
while(true){
if((i__24902 < count__24901)){
var vec__24903 = chunk__24900.cljs$core$IIndexed$_nth$arity$2(null,i__24902);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24903,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24903,(1),null);
var G__24904_24915 = v;
var G__24905_24916 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24904_24915,G__24905_24916) : f.call(null,G__24904_24915,G__24905_24916));

var G__24917 = seq__24899;
var G__24918 = chunk__24900;
var G__24919 = count__24901;
var G__24920 = (i__24902 + (1));
seq__24899 = G__24917;
chunk__24900 = G__24918;
count__24901 = G__24919;
i__24902 = G__24920;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__24899);
if(temp__4126__auto__){
var seq__24899__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__24899__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__24899__$1);
var G__24921 = cljs.core.chunk_rest(seq__24899__$1);
var G__24922 = c__14110__auto__;
var G__24923 = cljs.core.count(c__14110__auto__);
var G__24924 = (0);
seq__24899 = G__24921;
chunk__24900 = G__24922;
count__24901 = G__24923;
i__24902 = G__24924;
continue;
} else {
var vec__24906 = cljs.core.first(seq__24899__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24906,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24906,(1),null);
var G__24907_24925 = v;
var G__24908_24926 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__24907_24925,G__24908_24926) : f.call(null,G__24907_24925,G__24908_24926));

var G__24927 = cljs.core.next(seq__24899__$1);
var G__24928 = null;
var G__24929 = (0);
var G__24930 = (0);
seq__24899 = G__24927;
chunk__24900 = G__24928;
count__24901 = G__24929;
i__24902 = G__24930;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__24909 = init;
var G__24910 = null;
var G__24911 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24909,G__24910,G__24911) : f.call(null,G__24909,G__24910,G__24911));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24912 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24912) : cljs.core.deref.call(null,G__24912));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj24914 = {};
return obj24914;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__24931 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__24932 = cljs.core.next(es);
ret = G__24931;
es = G__24932;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__24933 = null;
var G__24933__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24933__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24933 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24933__2.call(this,self__,k);
case 3:
return G__24933__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24933.cljs$core$IFn$_invoke$arity$2 = G__24933__2;
G__24933.cljs$core$IFn$_invoke$arity$3 = G__24933__3;
return G__24933;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args24896){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24896)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24934 = (i + (2));
var G__24935 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__24934;
ret = G__24935;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__24936 = (i + (1));
var G__24937 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__24936;
out = G__24937;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__24938 = o;
if(G__24938){
var bit__14004__auto__ = (G__24938.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__14004__auto__) || (G__24938.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__24938.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24938);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__24938);
}
})()){
return tcoll.assoc_BANG_((function (){var G__24939 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24939) : cljs.core.key.call(null,G__24939));
})(),(function (){var G__24940 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24940) : cljs.core.val.call(null,G__24940));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__24943 = cljs.core.next(es);
var G__24944 = tcoll__$1.assoc_BANG_((function (){var G__24941 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__24941) : cljs.core.key.call(null,G__24941));
})(),(function (){var G__24942 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__24942) : cljs.core.val.call(null,G__24942));
})());
es = G__24943;
tcoll__$1 = G__24944;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__24945 = ((ascending_QMARK_)?t.left:t.right);
var G__24946 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__24945;
stack__$1 = G__24946;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__24959 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24959) : cljs.core.deref.call(null,G__24959));
} else {
var init__$2 = (function (){var G__24960 = init__$1;
var G__24961 = node.key;
var G__24962 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__24960,G__24961,G__24962) : f.call(null,G__24960,G__24961,G__24962));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__24963 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24963) : cljs.core.deref.call(null,G__24963));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__24964 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__24964) : cljs.core.deref.call(null,G__24964));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__24966 = null;
var G__24966__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24966__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24966 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24966__2.call(this,self__,k);
case 3:
return G__24966__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24966.cljs$core$IFn$_invoke$arity$2 = G__24966__2;
G__24966.cljs$core$IFn$_invoke$arity$3 = G__24966__3;
return G__24966;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args24965){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24965)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__24968 = null;
var G__24968__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__24968__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__24968 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__24968__2.call(this,self__,k);
case 3:
return G__24968__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24968.cljs$core$IFn$_invoke$arity$2 = G__24968__2;
G__24968.cljs$core$IFn$_invoke$arity$3 = G__24968__3;
return G__24968;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args24967){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args24967)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__24981 = k;
var G__24982 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__24981,G__24982) : comp.call(null,G__24981,G__24982));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__25001 = k;
var G__25002 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25001,G__25002) : comp.call(null,G__25001,G__25002));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__25013 = k;
var G__25014 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25013,G__25014) : comp.call(null,G__25013,G__25014));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25016 = cljs.core.seq(coll);
var chunk__25017 = null;
var count__25018 = (0);
var i__25019 = (0);
while(true){
if((i__25019 < count__25018)){
var vec__25020 = chunk__25017.cljs$core$IIndexed$_nth$arity$2(null,i__25019);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25020,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25020,(1),null);
var G__25021_25033 = v;
var G__25022_25034 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25021_25033,G__25022_25034) : f.call(null,G__25021_25033,G__25022_25034));

var G__25035 = seq__25016;
var G__25036 = chunk__25017;
var G__25037 = count__25018;
var G__25038 = (i__25019 + (1));
seq__25016 = G__25035;
chunk__25017 = G__25036;
count__25018 = G__25037;
i__25019 = G__25038;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25016);
if(temp__4126__auto__){
var seq__25016__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25016__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__25016__$1);
var G__25039 = cljs.core.chunk_rest(seq__25016__$1);
var G__25040 = c__14110__auto__;
var G__25041 = cljs.core.count(c__14110__auto__);
var G__25042 = (0);
seq__25016 = G__25039;
chunk__25017 = G__25040;
count__25018 = G__25041;
i__25019 = G__25042;
continue;
} else {
var vec__25023 = cljs.core.first(seq__25016__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25023,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25023,(1),null);
var G__25024_25043 = v;
var G__25025_25044 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25024_25043,G__25025_25044) : f.call(null,G__25024_25043,G__25025_25044));

var G__25045 = cljs.core.next(seq__25016__$1);
var G__25046 = null;
var G__25047 = (0);
var G__25048 = (0);
seq__25016 = G__25045;
chunk__25017 = G__25046;
count__25018 = G__25047;
i__25019 = G__25048;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25026 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__25026) : cljs.core.keys.call(null,G__25026));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__25027 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__25027) : cljs.core.vals.call(null,G__25027));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25028 = k;
var G__25029 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25028,G__25029) : self__.comp.call(null,G__25028,G__25029));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__25049 = t.left;
t = G__25049;
continue;
} else {
var G__25050 = t.right;
t = G__25050;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__25051 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__25052 = cljs.core.next(es);
ret = G__25051;
es = G__25052;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__25053 = null;
var G__25053__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25053__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25053 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25053__2.call(this,self__,k);
case 3:
return G__25053__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25053.cljs$core$IFn$_invoke$arity$2 = G__25053__2;
G__25053.cljs$core$IFn$_invoke$arity$3 = G__25053__3;
return G__25053;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args25015){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25015)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__25030 = k;
var G__25031 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__25030,G__25031) : self__.comp.call(null,G__25030,G__25031));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__25054 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25055 = t.left;
stack = G__25054;
t = G__25055;
continue;
} else {
var G__25056 = stack;
var G__25057 = t.right;
stack = G__25056;
t = G__25057;
continue;
}
} else {
if((c > (0))){
var G__25058 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__25059 = t.right;
stack = G__25058;
t = G__25059;
continue;
} else {
var G__25060 = stack;
var G__25061 = t.left;
stack = G__25060;
t = G__25061;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__25032 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__25032) : cljs.core.key.call(null,G__25032));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__25062 = cljs.core.nnext(in$);
var G__25063 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25062;
out = G__25063;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25064__i = 0, G__25064__a = new Array(arguments.length -  0);
while (G__25064__i < G__25064__a.length) {G__25064__a[G__25064__i] = arguments[G__25064__i + 0]; ++G__25064__i;}
  keyvals = new cljs.core.IndexedSeq(G__25064__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__25065){
var keyvals = cljs.core.seq(arglist__25065);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25066__i = 0, G__25066__a = new Array(arguments.length -  0);
while (G__25066__i < G__25066__a.length) {G__25066__a[G__25066__i] = arguments[G__25066__i + 0]; ++G__25066__i;}
  keyvals = new cljs.core.IndexedSeq(G__25066__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__25067){
var keyvals = cljs.core.seq(arglist__25067);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj25071 = {};
return obj25071;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__25072 = cljs.core.nnext(kvs);
kvs = G__25072;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25073__i = 0, G__25073__a = new Array(arguments.length -  0);
while (G__25073__i < G__25073__a.length) {G__25073__a[G__25073__i] = arguments[G__25073__i + 0]; ++G__25073__i;}
  keyvals = new cljs.core.IndexedSeq(G__25073__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__25074){
var keyvals = cljs.core.seq(arglist__25074);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__25075 = cljs.core.nnext(in$);
var G__25076 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25075;
out = G__25076;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__25077__i = 0, G__25077__a = new Array(arguments.length -  0);
while (G__25077__i < G__25077__a.length) {G__25077__a[G__25077__i] = arguments[G__25077__i + 0]; ++G__25077__i;}
  keyvals = new cljs.core.IndexedSeq(G__25077__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__25078){
var keyvals = cljs.core.seq(arglist__25078);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__25079 = cljs.core.nnext(in$);
var G__25080 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__25079;
out = G__25080;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__25081__i = 0, G__25081__a = new Array(arguments.length -  1);
while (G__25081__i < G__25081__a.length) {G__25081__a[G__25081__i] = arguments[G__25081__i + 1]; ++G__25081__i;}
  keyvals = new cljs.core.IndexedSeq(G__25081__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__25082){
var comparator = cljs.core.first(arglist__25082);
var keyvals = cljs.core.rest(arglist__25082);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25083 = self__.mseq;
if(G__25083){
var bit__14004__auto__ = (G__25083.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14004__auto__) || (G__25083.cljs$core$INext$)){
return true;
} else {
if((!G__25083.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25083);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25083);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25084 = self__.mseq;
if(G__25084){
var bit__14004__auto__ = (G__25084.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14004__auto__) || (G__25084.cljs$core$INext$)){
return true;
} else {
if((!G__25084.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25084);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25084);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25085 = self__.mseq;
if(G__25085){
var bit__14004__auto__ = (G__25085.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14004__auto__) || (G__25085.cljs$core$INext$)){
return true;
} else {
if((!G__25085.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25085);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25085);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__25086 = self__.mseq;
if(G__25086){
var bit__14004__auto__ = (G__25086.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__14004__auto__) || (G__25086.cljs$core$INext$)){
return true;
} else {
if((!G__25086.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25086);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__25086);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__25087_SHARP_,p2__25088_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__13323__auto__ = p1__25087_SHARP_;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__25088_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__25089__i = 0, G__25089__a = new Array(arguments.length -  0);
while (G__25089__i < G__25089__a.length) {G__25089__a[G__25089__i] = arguments[G__25089__i + 0]; ++G__25089__i;}
  maps = new cljs.core.IndexedSeq(G__25089__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__25090){
var maps = cljs.core.seq(arglist__25090);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__25093 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__25094 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25093,G__25094) : f.call(null,G__25093,G__25094));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__13323__auto__ = m1;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__25095__i = 0, G__25095__a = new Array(arguments.length -  1);
while (G__25095__i < G__25095__a.length) {G__25095__a[G__25095__i] = arguments[G__25095__i + 1]; ++G__25095__i;}
  maps = new cljs.core.IndexedSeq(G__25095__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__25096){
var f = cljs.core.first(arglist__25096);
var maps = cljs.core.rest(arglist__25096);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__25097 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__25098 = cljs.core.next(keys);
ret = G__25097;
keys = G__25098;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25101 = cljs.core.seq(coll);
var chunk__25102 = null;
var count__25103 = (0);
var i__25104 = (0);
while(true){
if((i__25104 < count__25103)){
var vec__25105 = chunk__25102.cljs$core$IIndexed$_nth$arity$2(null,i__25104);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25105,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25105,(1),null);
var G__25106_25111 = v;
var G__25107_25112 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25106_25111,G__25107_25112) : f.call(null,G__25106_25111,G__25107_25112));

var G__25113 = seq__25101;
var G__25114 = chunk__25102;
var G__25115 = count__25103;
var G__25116 = (i__25104 + (1));
seq__25101 = G__25113;
chunk__25102 = G__25114;
count__25103 = G__25115;
i__25104 = G__25116;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25101);
if(temp__4126__auto__){
var seq__25101__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25101__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__25101__$1);
var G__25117 = cljs.core.chunk_rest(seq__25101__$1);
var G__25118 = c__14110__auto__;
var G__25119 = cljs.core.count(c__14110__auto__);
var G__25120 = (0);
seq__25101 = G__25117;
chunk__25102 = G__25118;
count__25103 = G__25119;
i__25104 = G__25120;
continue;
} else {
var vec__25108 = cljs.core.first(seq__25101__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25108,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25108,(1),null);
var G__25109_25121 = v;
var G__25110_25122 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25109_25121,G__25110_25122) : f.call(null,G__25109_25121,G__25110_25122));

var G__25123 = cljs.core.next(seq__25101__$1);
var G__25124 = null;
var G__25125 = (0);
var G__25126 = (0);
seq__25101 = G__25123;
chunk__25102 = G__25124;
count__25103 = G__25125;
i__25104 = G__25126;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25099_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25099_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__25127 = null;
var G__25127__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25127__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25127 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25127__2.call(this,self__,k);
case 3:
return G__25127__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25127.cljs$core$IFn$_invoke$arity$2 = G__25127__2;
G__25127.cljs$core$IFn$_invoke$arity$3 = G__25127__3;
return G__25127;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args25100){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25100)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__25128 = (i + (1));
var G__25129 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__25128;
out = G__25129;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__25130 = (i + (1));
var G__25131 = cljs.core._conj_BANG_(out,(items[i]));
i = G__25130;
out = G__25131;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__25133 = null;
var G__25133__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__25133__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__25133 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25133__2.call(this,self__,k);
case 3:
return G__25133__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25133.cljs$core$IFn$_invoke$arity$2 = G__25133__2;
G__25133.cljs$core$IFn$_invoke$arity$3 = G__25133__3;
return G__25133;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args25132){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25132)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__25136 = cljs.core.seq(coll);
var chunk__25137 = null;
var count__25138 = (0);
var i__25139 = (0);
while(true){
if((i__25139 < count__25138)){
var vec__25140 = chunk__25137.cljs$core$IIndexed$_nth$arity$2(null,i__25139);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25140,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25140,(1),null);
var G__25141_25146 = v;
var G__25142_25147 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25141_25146,G__25142_25147) : f.call(null,G__25141_25146,G__25142_25147));

var G__25148 = seq__25136;
var G__25149 = chunk__25137;
var G__25150 = count__25138;
var G__25151 = (i__25139 + (1));
seq__25136 = G__25148;
chunk__25137 = G__25149;
count__25138 = G__25150;
i__25139 = G__25151;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25136);
if(temp__4126__auto__){
var seq__25136__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25136__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__25136__$1);
var G__25152 = cljs.core.chunk_rest(seq__25136__$1);
var G__25153 = c__14110__auto__;
var G__25154 = cljs.core.count(c__14110__auto__);
var G__25155 = (0);
seq__25136 = G__25152;
chunk__25137 = G__25153;
count__25138 = G__25154;
i__25139 = G__25155;
continue;
} else {
var vec__25143 = cljs.core.first(seq__25136__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25143,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25143,(1),null);
var G__25144_25156 = v;
var G__25145_25157 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25144_25156,G__25145_25157) : f.call(null,G__25144_25156,G__25145_25157));

var G__25158 = cljs.core.next(seq__25136__$1);
var G__25159 = null;
var G__25160 = (0);
var G__25161 = (0);
seq__25136 = G__25158;
chunk__25137 = G__25159;
count__25138 = G__25160;
i__25139 = G__25161;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__25134_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__25134_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__25162 = null;
var G__25162__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__25162__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__25162 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__25162__2.call(this,self__,k);
case 3:
return G__25162__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25162.cljs$core$IFn$_invoke$arity$2 = G__25162__2;
G__25162.cljs$core$IFn$_invoke$arity$3 = G__25162__3;
return G__25162;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args25135){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args25135)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__14204__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__14204__auto__.length)){
var G__25163 = (i + (1));
var G__25164 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__25163;
res = G__25164;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__25165 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__25166 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__25165;
out = G__25166;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__25167__delegate = function (keys){
return cljs.core.set(keys);
};
var G__25167 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25168__i = 0, G__25168__a = new Array(arguments.length -  0);
while (G__25168__i < G__25168__a.length) {G__25168__a[G__25168__i] = arguments[G__25168__i + 0]; ++G__25168__i;}
  keys = new cljs.core.IndexedSeq(G__25168__a,0);
} 
return G__25167__delegate.call(this,keys);};
G__25167.cljs$lang$maxFixedArity = 0;
G__25167.cljs$lang$applyTo = (function (arglist__25169){
var keys = cljs.core.seq(arglist__25169);
return G__25167__delegate(keys);
});
G__25167.cljs$core$IFn$_invoke$arity$variadic = G__25167__delegate;
return G__25167;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__25170 = null;
if (arguments.length > 0) {
var G__25171__i = 0, G__25171__a = new Array(arguments.length -  0);
while (G__25171__i < G__25171__a.length) {G__25171__a[G__25171__i] = arguments[G__25171__i + 0]; ++G__25171__i;}
G__25170 = new cljs.core.IndexedSeq(G__25171__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__25170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__25172__i = 0, G__25172__a = new Array(arguments.length -  0);
while (G__25172__i < G__25172__a.length) {G__25172__a[G__25172__i] = arguments[G__25172__i + 0]; ++G__25172__i;}
  keys = new cljs.core.IndexedSeq(G__25172__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__25173){
var keys = cljs.core.seq(arglist__25173);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__25174__i = 0, G__25174__a = new Array(arguments.length -  1);
while (G__25174__i < G__25174__a.length) {G__25174__a[G__25174__i] = arguments[G__25174__i + 1]; ++G__25174__i;}
  keys = new cljs.core.IndexedSeq(G__25174__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__25175){
var comparator = cljs.core.first(arglist__25175);
var keys = cljs.core.rest(arglist__25175);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__25176_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25176_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__25176_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__25177_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__25177_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__25177_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__25198 = null;
var G__25198__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25198__1 = (function (result){
var G__25188 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25188) : rf.call(null,G__25188));
});
var G__25198__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__25189 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25189) : cljs.core.deref.call(null,G__25189));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__25190 = result;
var G__25191 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25190,G__25191) : rf.call(null,G__25190,G__25191));
}
});
G__25198 = function(result,input){
switch(arguments.length){
case 0:
return G__25198__0.call(this);
case 1:
return G__25198__1.call(this,result);
case 2:
return G__25198__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25198.cljs$core$IFn$_invoke$arity$0 = G__25198__0;
G__25198.cljs$core$IFn$_invoke$arity$1 = G__25198__1;
G__25198.cljs$core$IFn$_invoke$arity$2 = G__25198__2;
return G__25198;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__25196,seen__$1){
while(true){
var vec__25197 = p__25196;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25197,(0),null);
var xs__$1 = vec__25197;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__25199 = cljs.core.rest(s);
var G__25200 = seen__$1;
p__25196 = G__25199;
seen__$1 = G__25200;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__25201 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__25202 = cljs.core.next(s__$1);
ret = G__25201;
s__$1 = G__25202;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__25204 = x;
if(G__25204){
var bit__13997__auto__ = (G__25204.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__13997__auto__) || (G__25204.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__25205 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__25206 = cljs.core.next(ks);
var G__25207 = cljs.core.next(vs);
map = G__25205;
ks = G__25206;
vs = G__25207;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__25218 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25218) : k.call(null,G__25218));
})() > (function (){var G__25219 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25219) : k.call(null,G__25219));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__25220__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25208_SHARP_,p2__25209_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__25208_SHARP_,p2__25209_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25220 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25221__i = 0, G__25221__a = new Array(arguments.length -  3);
while (G__25221__i < G__25221__a.length) {G__25221__a[G__25221__i] = arguments[G__25221__i + 3]; ++G__25221__i;}
  more = new cljs.core.IndexedSeq(G__25221__a,0);
} 
return G__25220__delegate.call(this,k,x,y,more);};
G__25220.cljs$lang$maxFixedArity = 3;
G__25220.cljs$lang$applyTo = (function (arglist__25222){
var k = cljs.core.first(arglist__25222);
arglist__25222 = cljs.core.next(arglist__25222);
var x = cljs.core.first(arglist__25222);
arglist__25222 = cljs.core.next(arglist__25222);
var y = cljs.core.first(arglist__25222);
var more = cljs.core.rest(arglist__25222);
return G__25220__delegate(k,x,y,more);
});
G__25220.cljs$core$IFn$_invoke$arity$variadic = G__25220__delegate;
return G__25220;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__25223 = null;
if (arguments.length > 3) {
var G__25224__i = 0, G__25224__a = new Array(arguments.length -  3);
while (G__25224__i < G__25224__a.length) {G__25224__a[G__25224__i] = arguments[G__25224__i + 3]; ++G__25224__i;}
G__25223 = new cljs.core.IndexedSeq(G__25224__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__25235 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25235) : k.call(null,G__25235));
})() < (function (){var G__25236 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__25236) : k.call(null,G__25236));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__25237__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25225_SHARP_,p2__25226_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__25225_SHARP_,p2__25226_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__25237 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__25238__i = 0, G__25238__a = new Array(arguments.length -  3);
while (G__25238__i < G__25238__a.length) {G__25238__a[G__25238__i] = arguments[G__25238__i + 3]; ++G__25238__i;}
  more = new cljs.core.IndexedSeq(G__25238__a,0);
} 
return G__25237__delegate.call(this,k,x,y,more);};
G__25237.cljs$lang$maxFixedArity = 3;
G__25237.cljs$lang$applyTo = (function (arglist__25239){
var k = cljs.core.first(arglist__25239);
arglist__25239 = cljs.core.next(arglist__25239);
var x = cljs.core.first(arglist__25239);
arglist__25239 = cljs.core.next(arglist__25239);
var y = cljs.core.first(arglist__25239);
var more = cljs.core.rest(arglist__25239);
return G__25237__delegate(k,x,y,more);
});
G__25237.cljs$core$IFn$_invoke$arity$variadic = G__25237__delegate;
return G__25237;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__25240 = null;
if (arguments.length > 3) {
var G__25241__i = 0, G__25241__a = new Array(arguments.length -  3);
while (G__25241__i < G__25241__a.length) {G__25241__a[G__25241__i] = arguments[G__25241__i + 3]; ++G__25241__i;}
G__25240 = new cljs.core.IndexedSeq(G__25241__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__25240);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__25258 = null;
var G__25258__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25258__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25253 = result;
var G__25254 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25253,G__25254) : rf.call(null,G__25253,G__25254));
})());
})());
var G__25255 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25255) : rf.call(null,G__25255));
});
var G__25258__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__25256 = result;
var G__25257 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25256,G__25257) : rf.call(null,G__25256,G__25257));
} else {
return result;
}
});
G__25258 = function(result,input){
switch(arguments.length){
case 0:
return G__25258__0.call(this);
case 1:
return G__25258__1.call(this,result);
case 2:
return G__25258__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25258.cljs$core$IFn$_invoke$arity$0 = G__25258__0;
G__25258.cljs$core$IFn$_invoke$arity$1 = G__25258__1;
G__25258.cljs$core$IFn$_invoke$arity$2 = G__25258__2;
return G__25258;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__25271 = null;
var G__25271__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25271__1 = (function (result){
var G__25266 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25266) : rf.call(null,G__25266));
});
var G__25271__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__25267 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25267) : pred.call(null,G__25267));
})())){
var G__25268 = result;
var G__25269 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25268,G__25269) : rf.call(null,G__25268,G__25269));
} else {
return cljs.core.reduced(result);
}
});
G__25271 = function(result,input){
switch(arguments.length){
case 0:
return G__25271__0.call(this);
case 1:
return G__25271__1.call(this,result);
case 2:
return G__25271__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25271.cljs$core$IFn$_invoke$arity$0 = G__25271__0;
G__25271.cljs$core$IFn$_invoke$arity$1 = G__25271__1;
G__25271.cljs$core$IFn$_invoke$arity$2 = G__25271__2;
return G__25271;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__25270 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__25270) : pred.call(null,G__25270));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__25276 = (function (){var G__25278 = cljs.core._entry_key(sc,e);
var G__25279 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__25278,G__25279) : comp.call(null,G__25278,G__25279));
})();
var G__25277 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__25276,G__25277) : test.call(null,G__25276,G__25277));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25283 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25283,(0),null);
var s = vec__25283;
if(cljs.core.truth_((function (){var G__25284 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25284) : include.call(null,G__25284));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25285 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25285,(0),null);
var s = vec__25285;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25289 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25289,(0),null);
var s = vec__25289;
if(cljs.core.truth_((function (){var G__25290 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__25290) : include.call(null,G__25290));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__25291 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25291,(0),null);
var s = vec__25291;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__25292 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__25292) : Math.ceil.call(null,G__25292));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__13744__auto__ = self__.__hash;
if(!((h__13744__auto__ == null))){
return h__13744__auto__;
} else {
var h__13744__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__13744__auto____$1;

return h__13744__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__25293 = ret;
var G__25294 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25293,G__25294) : f.call(null,G__25293,G__25294));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__25295 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25295) : cljs.core.deref.call(null,G__25295));
} else {
var G__25296 = (i + self__.step);
var G__25297 = ret__$1;
i = G__25296;
ret = G__25297;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__25315 = null;
var G__25315__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25315__1 = (function (result){
var G__25312 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25312) : rf.call(null,G__25312));
});
var G__25315__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__25313 = result;
var G__25314 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25313,G__25314) : rf.call(null,G__25313,G__25314));
} else {
return result;
}
});
G__25315 = function(result,input){
switch(arguments.length){
case 0:
return G__25315__0.call(this);
case 1:
return G__25315__1.call(this,result);
case 2:
return G__25315__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25315.cljs$core$IFn$_invoke$arity$0 = G__25315__0;
G__25315.cljs$core$IFn$_invoke$arity$1 = G__25315__1;
G__25315.cljs$core$IFn$_invoke$arity$2 = G__25315__2;
return G__25315;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__25337 = null;
var G__25337__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25337__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__25328 = result;
var G__25329 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25328,G__25329) : rf.call(null,G__25328,G__25329));
})());
})());
var G__25330 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25330) : rf.call(null,G__25330));
});
var G__25337__2 = (function (result,input){
var pval = (function (){var G__25331 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25331) : cljs.core.deref.call(null,G__25331));
})();
var val = (function (){var G__25332 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25332) : f.call(null,G__25332));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__25333 = result;
var G__25334 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25333,G__25334) : rf.call(null,G__25333,G__25334));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__25337 = function(result,input){
switch(arguments.length){
case 0:
return G__25337__0.call(this);
case 1:
return G__25337__1.call(this,result);
case 2:
return G__25337__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25337.cljs$core$IFn$_invoke$arity$0 = G__25337__0;
G__25337.cljs$core$IFn$_invoke$arity$1 = G__25337__1;
G__25337.cljs$core$IFn$_invoke$arity$2 = G__25337__2;
return G__25337;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__25335 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25335) : f.call(null,G__25335));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__25316_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__25336 = p1__25316_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25336) : f.call(null,G__25336));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__25346 = init;
var G__25347 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25346,G__25347) : f.call(null,G__25346,G__25347));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__25442 = null;
var G__25442__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__25442__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25400 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25400) : f.call(null,G__25400));
})()],null));
});
var G__25442__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25401 = x;
var G__25402 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25401,G__25402) : f.call(null,G__25401,G__25402));
})()],null));
});
var G__25442__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25403 = x;
var G__25404 = y;
var G__25405 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25403,G__25404,G__25405) : f.call(null,G__25403,G__25404,G__25405));
})()],null));
});
var G__25442__4 = (function() { 
var G__25443__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__25443 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25444__i = 0, G__25444__a = new Array(arguments.length -  3);
while (G__25444__i < G__25444__a.length) {G__25444__a[G__25444__i] = arguments[G__25444__i + 3]; ++G__25444__i;}
  args = new cljs.core.IndexedSeq(G__25444__a,0);
} 
return G__25443__delegate.call(this,x,y,z,args);};
G__25443.cljs$lang$maxFixedArity = 3;
G__25443.cljs$lang$applyTo = (function (arglist__25445){
var x = cljs.core.first(arglist__25445);
arglist__25445 = cljs.core.next(arglist__25445);
var y = cljs.core.first(arglist__25445);
arglist__25445 = cljs.core.next(arglist__25445);
var z = cljs.core.first(arglist__25445);
var args = cljs.core.rest(arglist__25445);
return G__25443__delegate(x,y,z,args);
});
G__25443.cljs$core$IFn$_invoke$arity$variadic = G__25443__delegate;
return G__25443;
})()
;
G__25442 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25442__0.call(this);
case 1:
return G__25442__1.call(this,x);
case 2:
return G__25442__2.call(this,x,y);
case 3:
return G__25442__3.call(this,x,y,z);
default:
var G__25446 = null;
if (arguments.length > 3) {
var G__25447__i = 0, G__25447__a = new Array(arguments.length -  3);
while (G__25447__i < G__25447__a.length) {G__25447__a[G__25447__i] = arguments[G__25447__i + 3]; ++G__25447__i;}
G__25446 = new cljs.core.IndexedSeq(G__25447__a,0);
}
return G__25442__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25446);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25442.cljs$lang$maxFixedArity = 3;
G__25442.cljs$lang$applyTo = G__25442__4.cljs$lang$applyTo;
G__25442.cljs$core$IFn$_invoke$arity$0 = G__25442__0;
G__25442.cljs$core$IFn$_invoke$arity$1 = G__25442__1;
G__25442.cljs$core$IFn$_invoke$arity$2 = G__25442__2;
G__25442.cljs$core$IFn$_invoke$arity$3 = G__25442__3;
G__25442.cljs$core$IFn$_invoke$arity$variadic = G__25442__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25442;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__25448 = null;
var G__25448__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__25448__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25406 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25406) : f.call(null,G__25406));
})(),(function (){var G__25407 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25407) : g.call(null,G__25407));
})()],null));
});
var G__25448__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25408 = x;
var G__25409 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25408,G__25409) : f.call(null,G__25408,G__25409));
})(),(function (){var G__25410 = x;
var G__25411 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25410,G__25411) : g.call(null,G__25410,G__25411));
})()],null));
});
var G__25448__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25412 = x;
var G__25413 = y;
var G__25414 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25412,G__25413,G__25414) : f.call(null,G__25412,G__25413,G__25414));
})(),(function (){var G__25415 = x;
var G__25416 = y;
var G__25417 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25415,G__25416,G__25417) : g.call(null,G__25415,G__25416,G__25417));
})()],null));
});
var G__25448__4 = (function() { 
var G__25449__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__25449 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25450__i = 0, G__25450__a = new Array(arguments.length -  3);
while (G__25450__i < G__25450__a.length) {G__25450__a[G__25450__i] = arguments[G__25450__i + 3]; ++G__25450__i;}
  args = new cljs.core.IndexedSeq(G__25450__a,0);
} 
return G__25449__delegate.call(this,x,y,z,args);};
G__25449.cljs$lang$maxFixedArity = 3;
G__25449.cljs$lang$applyTo = (function (arglist__25451){
var x = cljs.core.first(arglist__25451);
arglist__25451 = cljs.core.next(arglist__25451);
var y = cljs.core.first(arglist__25451);
arglist__25451 = cljs.core.next(arglist__25451);
var z = cljs.core.first(arglist__25451);
var args = cljs.core.rest(arglist__25451);
return G__25449__delegate(x,y,z,args);
});
G__25449.cljs$core$IFn$_invoke$arity$variadic = G__25449__delegate;
return G__25449;
})()
;
G__25448 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25448__0.call(this);
case 1:
return G__25448__1.call(this,x);
case 2:
return G__25448__2.call(this,x,y);
case 3:
return G__25448__3.call(this,x,y,z);
default:
var G__25452 = null;
if (arguments.length > 3) {
var G__25453__i = 0, G__25453__a = new Array(arguments.length -  3);
while (G__25453__i < G__25453__a.length) {G__25453__a[G__25453__i] = arguments[G__25453__i + 3]; ++G__25453__i;}
G__25452 = new cljs.core.IndexedSeq(G__25453__a,0);
}
return G__25448__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25452);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25448.cljs$lang$maxFixedArity = 3;
G__25448.cljs$lang$applyTo = G__25448__4.cljs$lang$applyTo;
G__25448.cljs$core$IFn$_invoke$arity$0 = G__25448__0;
G__25448.cljs$core$IFn$_invoke$arity$1 = G__25448__1;
G__25448.cljs$core$IFn$_invoke$arity$2 = G__25448__2;
G__25448.cljs$core$IFn$_invoke$arity$3 = G__25448__3;
G__25448.cljs$core$IFn$_invoke$arity$variadic = G__25448__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25448;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__25454 = null;
var G__25454__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__25454__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25418 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25418) : f.call(null,G__25418));
})(),(function (){var G__25419 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__25419) : g.call(null,G__25419));
})(),(function (){var G__25420 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__25420) : h.call(null,G__25420));
})()],null));
});
var G__25454__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25421 = x;
var G__25422 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__25421,G__25422) : f.call(null,G__25421,G__25422));
})(),(function (){var G__25423 = x;
var G__25424 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__25423,G__25424) : g.call(null,G__25423,G__25424));
})(),(function (){var G__25425 = x;
var G__25426 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__25425,G__25426) : h.call(null,G__25425,G__25426));
})()],null));
});
var G__25454__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__25427 = x;
var G__25428 = y;
var G__25429 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__25427,G__25428,G__25429) : f.call(null,G__25427,G__25428,G__25429));
})(),(function (){var G__25430 = x;
var G__25431 = y;
var G__25432 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__25430,G__25431,G__25432) : g.call(null,G__25430,G__25431,G__25432));
})(),(function (){var G__25433 = x;
var G__25434 = y;
var G__25435 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__25433,G__25434,G__25435) : h.call(null,G__25433,G__25434,G__25435));
})()],null));
});
var G__25454__4 = (function() { 
var G__25455__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__25455 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25456__i = 0, G__25456__a = new Array(arguments.length -  3);
while (G__25456__i < G__25456__a.length) {G__25456__a[G__25456__i] = arguments[G__25456__i + 3]; ++G__25456__i;}
  args = new cljs.core.IndexedSeq(G__25456__a,0);
} 
return G__25455__delegate.call(this,x,y,z,args);};
G__25455.cljs$lang$maxFixedArity = 3;
G__25455.cljs$lang$applyTo = (function (arglist__25457){
var x = cljs.core.first(arglist__25457);
arglist__25457 = cljs.core.next(arglist__25457);
var y = cljs.core.first(arglist__25457);
arglist__25457 = cljs.core.next(arglist__25457);
var z = cljs.core.first(arglist__25457);
var args = cljs.core.rest(arglist__25457);
return G__25455__delegate(x,y,z,args);
});
G__25455.cljs$core$IFn$_invoke$arity$variadic = G__25455__delegate;
return G__25455;
})()
;
G__25454 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25454__0.call(this);
case 1:
return G__25454__1.call(this,x);
case 2:
return G__25454__2.call(this,x,y);
case 3:
return G__25454__3.call(this,x,y,z);
default:
var G__25458 = null;
if (arguments.length > 3) {
var G__25459__i = 0, G__25459__a = new Array(arguments.length -  3);
while (G__25459__i < G__25459__a.length) {G__25459__a[G__25459__i] = arguments[G__25459__i + 3]; ++G__25459__i;}
G__25458 = new cljs.core.IndexedSeq(G__25459__a,0);
}
return G__25454__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25458);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25454.cljs$lang$maxFixedArity = 3;
G__25454.cljs$lang$applyTo = G__25454__4.cljs$lang$applyTo;
G__25454.cljs$core$IFn$_invoke$arity$0 = G__25454__0;
G__25454.cljs$core$IFn$_invoke$arity$1 = G__25454__1;
G__25454.cljs$core$IFn$_invoke$arity$2 = G__25454__2;
G__25454.cljs$core$IFn$_invoke$arity$3 = G__25454__3;
G__25454.cljs$core$IFn$_invoke$arity$variadic = G__25454__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25454;
})()
});
var juxt__4 = (function() { 
var G__25460__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__25461 = null;
var G__25461__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25348_SHARP_,p2__25349_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25348_SHARP_,(function (){return (p2__25349_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__25349_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__25349_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25461__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25350_SHARP_,p2__25351_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25350_SHARP_,(function (){var G__25436 = x;
return (p2__25351_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__25351_SHARP_.cljs$core$IFn$_invoke$arity$1(G__25436) : p2__25351_SHARP_.call(null,G__25436));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25461__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25352_SHARP_,p2__25353_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25352_SHARP_,(function (){var G__25437 = x;
var G__25438 = y;
return (p2__25353_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__25353_SHARP_.cljs$core$IFn$_invoke$arity$2(G__25437,G__25438) : p2__25353_SHARP_.call(null,G__25437,G__25438));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25461__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25354_SHARP_,p2__25355_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25354_SHARP_,(function (){var G__25439 = x;
var G__25440 = y;
var G__25441 = z;
return (p2__25355_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__25355_SHARP_.cljs$core$IFn$_invoke$arity$3(G__25439,G__25440,G__25441) : p2__25355_SHARP_.call(null,G__25439,G__25440,G__25441));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__25461__4 = (function() { 
var G__25462__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__25356_SHARP_,p2__25357_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__25356_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__25357_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__25462 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__25463__i = 0, G__25463__a = new Array(arguments.length -  3);
while (G__25463__i < G__25463__a.length) {G__25463__a[G__25463__i] = arguments[G__25463__i + 3]; ++G__25463__i;}
  args = new cljs.core.IndexedSeq(G__25463__a,0);
} 
return G__25462__delegate.call(this,x,y,z,args);};
G__25462.cljs$lang$maxFixedArity = 3;
G__25462.cljs$lang$applyTo = (function (arglist__25464){
var x = cljs.core.first(arglist__25464);
arglist__25464 = cljs.core.next(arglist__25464);
var y = cljs.core.first(arglist__25464);
arglist__25464 = cljs.core.next(arglist__25464);
var z = cljs.core.first(arglist__25464);
var args = cljs.core.rest(arglist__25464);
return G__25462__delegate(x,y,z,args);
});
G__25462.cljs$core$IFn$_invoke$arity$variadic = G__25462__delegate;
return G__25462;
})()
;
G__25461 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__25461__0.call(this);
case 1:
return G__25461__1.call(this,x);
case 2:
return G__25461__2.call(this,x,y);
case 3:
return G__25461__3.call(this,x,y,z);
default:
var G__25465 = null;
if (arguments.length > 3) {
var G__25466__i = 0, G__25466__a = new Array(arguments.length -  3);
while (G__25466__i < G__25466__a.length) {G__25466__a[G__25466__i] = arguments[G__25466__i + 3]; ++G__25466__i;}
G__25465 = new cljs.core.IndexedSeq(G__25466__a,0);
}
return G__25461__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__25465);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25461.cljs$lang$maxFixedArity = 3;
G__25461.cljs$lang$applyTo = G__25461__4.cljs$lang$applyTo;
G__25461.cljs$core$IFn$_invoke$arity$0 = G__25461__0;
G__25461.cljs$core$IFn$_invoke$arity$1 = G__25461__1;
G__25461.cljs$core$IFn$_invoke$arity$2 = G__25461__2;
G__25461.cljs$core$IFn$_invoke$arity$3 = G__25461__3;
G__25461.cljs$core$IFn$_invoke$arity$variadic = G__25461__4.cljs$core$IFn$_invoke$arity$variadic;
return G__25461;
})()
;})(fs__$1))
};
var G__25460 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__25467__i = 0, G__25467__a = new Array(arguments.length -  3);
while (G__25467__i < G__25467__a.length) {G__25467__a[G__25467__i] = arguments[G__25467__i + 3]; ++G__25467__i;}
  fs = new cljs.core.IndexedSeq(G__25467__a,0);
} 
return G__25460__delegate.call(this,f,g,h,fs);};
G__25460.cljs$lang$maxFixedArity = 3;
G__25460.cljs$lang$applyTo = (function (arglist__25468){
var f = cljs.core.first(arglist__25468);
arglist__25468 = cljs.core.next(arglist__25468);
var g = cljs.core.first(arglist__25468);
arglist__25468 = cljs.core.next(arglist__25468);
var h = cljs.core.first(arglist__25468);
var fs = cljs.core.rest(arglist__25468);
return G__25460__delegate(f,g,h,fs);
});
G__25460.cljs$core$IFn$_invoke$arity$variadic = G__25460__delegate;
return G__25460;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__25469 = null;
if (arguments.length > 3) {
var G__25470__i = 0, G__25470__a = new Array(arguments.length -  3);
while (G__25470__i < G__25470__a.length) {G__25470__a[G__25470__i] = arguments[G__25470__i + 3]; ++G__25470__i;}
G__25469 = new cljs.core.IndexedSeq(G__25470__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__25469);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__25471 = cljs.core.next(coll);
coll = G__25471;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__25472 = (n - (1));
var G__25473 = cljs.core.next(coll);
n = G__25472;
coll = G__25473;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__25477 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25477,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25477,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25477,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_25485 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__13323__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__25486_25492 = cljs.core.first(coll);
var G__25487_25493 = writer;
var G__25488_25494 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25486_25492,G__25487_25493,G__25488_25494) : print_one.call(null,G__25486_25492,G__25487_25493,G__25488_25494));
} else {
}

var coll_25495__$1 = cljs.core.next(coll);
var n_25496 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_25495__$1) && (((n_25496 == null)) || (!((n_25496 === (0)))))){
cljs.core._write(writer,sep);

var G__25489_25497 = cljs.core.first(coll_25495__$1);
var G__25490_25498 = writer;
var G__25491_25499 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25489_25497,G__25490_25498,G__25491_25499) : print_one.call(null,G__25489_25497,G__25490_25498,G__25491_25499));

var G__25500 = cljs.core.next(coll_25495__$1);
var G__25501 = (n_25496 - (1));
coll_25495__$1 = G__25500;
n_25496 = G__25501;
continue;
} else {
if((cljs.core.seq(coll_25495__$1)) && ((n_25496 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__13323__auto__ = new cljs.core.Keyword(null,"more-marker","more-marker",-14717935).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_25485;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__25506 = cljs.core.seq(ss);
var chunk__25507 = null;
var count__25508 = (0);
var i__25509 = (0);
while(true){
if((i__25509 < count__25508)){
var s = chunk__25507.cljs$core$IIndexed$_nth$arity$2(null,i__25509);
cljs.core._write(writer,s);

var G__25510 = seq__25506;
var G__25511 = chunk__25507;
var G__25512 = count__25508;
var G__25513 = (i__25509 + (1));
seq__25506 = G__25510;
chunk__25507 = G__25511;
count__25508 = G__25512;
i__25509 = G__25513;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25506);
if(temp__4126__auto__){
var seq__25506__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25506__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__25506__$1);
var G__25514 = cljs.core.chunk_rest(seq__25506__$1);
var G__25515 = c__14110__auto__;
var G__25516 = cljs.core.count(c__14110__auto__);
var G__25517 = (0);
seq__25506 = G__25514;
chunk__25507 = G__25515;
count__25508 = G__25516;
i__25509 = G__25517;
continue;
} else {
var s = cljs.core.first(seq__25506__$1);
cljs.core._write(writer,s);

var G__25518 = cljs.core.next(seq__25506__$1);
var G__25519 = null;
var G__25520 = (0);
var G__25521 = (0);
seq__25506 = G__25518;
chunk__25507 = G__25519;
count__25508 = G__25520;
i__25509 = G__25521;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__25522__i = 0, G__25522__a = new Array(arguments.length -  1);
while (G__25522__i < G__25522__a.length) {G__25522__a[G__25522__i] = arguments[G__25522__i + 1]; ++G__25522__i;}
  ss = new cljs.core.IndexedSeq(G__25522__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__25523){
var writer = cljs.core.first(arglist__25523);
var ss = cljs.core.rest(arglist__25523);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj25525 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj25525;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__25528 = "[\\\\\"\b\f\n\r\t]";
var G__25529 = "g";
return RegExp(G__25528,G__25529);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__13311__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__13311__auto__)){
var and__13311__auto____$1 = (function (){var G__25543 = obj;
if(G__25543){
var bit__14004__auto__ = (G__25543.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__14004__auto__) || (G__25543.cljs$core$IMeta$)){
return true;
} else {
if((!G__25543.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25543);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__25543);
}
})();
if(and__13311__auto____$1){
return cljs.core.meta(obj);
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__25544_25554 = cljs.core.meta(obj);
var G__25545_25555 = writer;
var G__25546_25556 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__25544_25554,G__25545_25555,G__25546_25556) : cljs.core.pr_writer.call(null,G__25544_25554,G__25545_25555,G__25546_25556));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__25547 = obj;
if(G__25547){
var bit__13997__auto__ = (G__25547.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__13997__auto__) || (G__25547.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__25548 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__25549 = cljs.core.pr_writer;
var G__25550 = writer;
var G__25551 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__25548,G__25549,G__25550,G__25551) : cljs.core.print_map.call(null,G__25548,G__25549,G__25550,G__25551));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__25552 = obj;
return goog.isString(G__25552);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__25557 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__25557;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__25553 = obj;
if(G__25553){
var bit__14004__auto__ = (G__25553.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__14004__auto__) || (G__25553.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__25553.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25553);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__25553);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = new cljs.core.Keyword(null,"alt-impl","alt-impl",670969595).cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__25561 = obj;
var G__25562 = writer;
var G__25563 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,"fallback-impl","fallback-impl",-1501286995),cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__25561,G__25562,G__25563) : alt_impl.call(null,G__25561,G__25562,G__25563));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__25568 = cljs.core.seq(cljs.core.next(objs));
var chunk__25569 = null;
var count__25570 = (0);
var i__25571 = (0);
while(true){
if((i__25571 < count__25570)){
var obj = chunk__25569.cljs$core$IIndexed$_nth$arity$2(null,i__25571);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25572 = seq__25568;
var G__25573 = chunk__25569;
var G__25574 = count__25570;
var G__25575 = (i__25571 + (1));
seq__25568 = G__25572;
chunk__25569 = G__25573;
count__25570 = G__25574;
i__25571 = G__25575;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__25568);
if(temp__4126__auto__){
var seq__25568__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__25568__$1)){
var c__14110__auto__ = cljs.core.chunk_first(seq__25568__$1);
var G__25576 = cljs.core.chunk_rest(seq__25568__$1);
var G__25577 = c__14110__auto__;
var G__25578 = cljs.core.count(c__14110__auto__);
var G__25579 = (0);
seq__25568 = G__25576;
chunk__25569 = G__25577;
count__25570 = G__25578;
i__25571 = G__25579;
continue;
} else {
var obj = cljs.core.first(seq__25568__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__25580 = cljs.core.next(seq__25568__$1);
var G__25581 = null;
var G__25582 = (0);
var G__25583 = (0);
seq__25568 = G__25580;
chunk__25569 = G__25581;
count__25570 = G__25582;
i__25571 = G__25583;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25584__i = 0, G__25584__a = new Array(arguments.length -  0);
while (G__25584__i < G__25584__a.length) {G__25584__a[G__25584__i] = arguments[G__25584__i + 0]; ++G__25584__i;}
  objs = new cljs.core.IndexedSeq(G__25584__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__25585){
var objs = cljs.core.seq(arglist__25585);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25586__i = 0, G__25586__a = new Array(arguments.length -  0);
while (G__25586__i < G__25586__a.length) {G__25586__a[G__25586__i] = arguments[G__25586__i + 0]; ++G__25586__i;}
  objs = new cljs.core.IndexedSeq(G__25586__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__25587){
var objs = cljs.core.seq(arglist__25587);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25588__i = 0, G__25588__a = new Array(arguments.length -  0);
while (G__25588__i < G__25588__a.length) {G__25588__a[G__25588__i] = arguments[G__25588__i + 0]; ++G__25588__i;}
  objs = new cljs.core.IndexedSeq(G__25588__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__25589){
var objs = cljs.core.seq(arglist__25589);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25590__i = 0, G__25590__a = new Array(arguments.length -  0);
while (G__25590__i < G__25590__a.length) {G__25590__a[G__25590__i] = arguments[G__25590__i + 0]; ++G__25590__i;}
  objs = new cljs.core.IndexedSeq(G__25590__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__25591){
var objs = cljs.core.seq(arglist__25591);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25592__i = 0, G__25592__a = new Array(arguments.length -  0);
while (G__25592__i < G__25592__a.length) {G__25592__a[G__25592__i] = arguments[G__25592__i + 0]; ++G__25592__i;}
  objs = new cljs.core.IndexedSeq(G__25592__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__25593){
var objs = cljs.core.seq(arglist__25593);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25594__i = 0, G__25594__a = new Array(arguments.length -  0);
while (G__25594__i < G__25594__a.length) {G__25594__a[G__25594__i] = arguments[G__25594__i + 0]; ++G__25594__i;}
  objs = new cljs.core.IndexedSeq(G__25594__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__25595){
var objs = cljs.core.seq(arglist__25595);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25596__i = 0, G__25596__a = new Array(arguments.length -  0);
while (G__25596__i < G__25596__a.length) {G__25596__a[G__25596__i] = arguments[G__25596__i + 0]; ++G__25596__i;}
  objs = new cljs.core.IndexedSeq(G__25596__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__25597){
var objs = cljs.core.seq(arglist__25597);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__25598__i = 0, G__25598__a = new Array(arguments.length -  0);
while (G__25598__i < G__25598__a.length) {G__25598__a[G__25598__i] = arguments[G__25598__i + 0]; ++G__25598__i;}
  objs = new cljs.core.IndexedSeq(G__25598__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__25599){
var objs = cljs.core.seq(arglist__25599);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__25606_25612 = cljs.core.key(e);
var G__25607_25613 = w;
var G__25608_25614 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25606_25612,G__25607_25613,G__25608_25614) : print_one.call(null,G__25606_25612,G__25607_25613,G__25608_25614));

cljs.core._write(w," ");

var G__25609 = cljs.core.val(e);
var G__25610 = w;
var G__25611 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__25609,G__25610,G__25611) : print_one.call(null,G__25609,G__25610,G__25611));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__25615__i = 0, G__25615__a = new Array(arguments.length -  2);
while (G__25615__i < G__25615__a.length) {G__25615__a[G__25615__i] = arguments[G__25615__i + 2]; ++G__25615__i;}
  args = new cljs.core.IndexedSeq(G__25615__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__25616){
var iref = cljs.core.first(arglist__25616);
arglist__25616 = cljs.core.next(arglist__25616);
var f = cljs.core.first(arglist__25616);
var args = cljs.core.rest(arglist__25616);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__25619 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25619) : cljs.core.atom.call(null,G__25619));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__25621 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25621) : cljs.core.deref.call(null,G__25621));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__25622_SHARP_,p2__25623_SHARP_){
var ret = (function (){var G__25626 = p1__25622_SHARP_;
var G__25627 = p2__25623_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25626,G__25627) : rf.call(null,G__25626,G__25627));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__25630 = null;
var G__25630__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25630__1 = (function (result){
var G__25629 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25629) : rf.call(null,G__25629));
});
var G__25630__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__25630 = function(result,input){
switch(arguments.length){
case 0:
return G__25630__0.call(this);
case 1:
return G__25630__1.call(this,result);
case 2:
return G__25630__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25630.cljs$core$IFn$_invoke$arity$0 = G__25630__0;
G__25630.cljs$core$IFn$_invoke$arity$1 = G__25630__1;
G__25630.cljs$core$IFn$_invoke$arity$2 = G__25630__2;
return G__25630;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__25639 = null;
var G__25639__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__25639__1 = (function (result){
var G__25635 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__25635) : rf.call(null,G__25635));
});
var G__25639__2 = (function (result,input){
var prior = (function (){var G__25636 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25636) : cljs.core.deref.call(null,G__25636));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__25637 = result;
var G__25638 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__25637,G__25638) : rf.call(null,G__25637,G__25638));
}
});
G__25639 = function(result,input){
switch(arguments.length){
case 0:
return G__25639__0.call(this);
case 1:
return G__25639__1.call(this,result);
case 2:
return G__25639__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__25639.cljs$core$IFn$_invoke$arity$0 = G__25639__0;
G__25639.cljs$core$IFn$_invoke$arity$1 = G__25639__1;
G__25639.cljs$core$IFn$_invoke$arity$2 = G__25639__2;
return G__25639;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__14301__auto__ = this;
return cljs.core.es6_iterator(this__14301__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__25641_SHARP_,p2__25640_SHARP_){
var G__25643 = p2__25640_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__25643) : proc.call(null,G__25643));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj25645 = {};
return obj25645;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__13311__auto__ = x;
if(and__13311__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__13311__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__13967__auto__ = (((x == null))?null:x);
return (function (){var or__13323__auto__ = (cljs.core._clj__GT_js[(function (){var G__25649 = x__13967__auto__;
return goog.typeOf(G__25649);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__13311__auto__ = x;
if(and__13311__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__13311__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__13967__auto__ = (((x == null))?null:x);
return (function (){var or__13323__auto__ = (cljs.core._key__GT_js[(function (){var G__25653 = x__13967__auto__;
return goog.typeOf(G__25653);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__25656 = k;
if(G__25656){
var bit__14004__auto__ = null;
if(cljs.core.truth_((function (){var or__13323__auto__ = bit__14004__auto__;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return G__25656.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25656.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25656);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25656);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__25657 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__25657) : cljs.core.clj__GT_js.call(null,G__25657));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__25673 = x;
if(G__25673){
var bit__14004__auto__ = null;
if(cljs.core.truth_((function (){var or__13323__auto__ = bit__14004__auto__;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return G__25673.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__25673.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25673);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__25673);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj25675 = {};
return obj25675;
})();
var seq__25676_25686 = cljs.core.seq(x);
var chunk__25677_25687 = null;
var count__25678_25688 = (0);
var i__25679_25689 = (0);
while(true){
if((i__25679_25689 < count__25678_25688)){
var vec__25680_25690 = chunk__25677_25687.cljs$core$IIndexed$_nth$arity$2(null,i__25679_25689);
var k_25691 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25680_25690,(0),null);
var v_25692 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25680_25690,(1),null);
(m[cljs.core.key__GT_js(k_25691)] = clj__GT_js(v_25692));

var G__25693 = seq__25676_25686;
var G__25694 = chunk__25677_25687;
var G__25695 = count__25678_25688;
var G__25696 = (i__25679_25689 + (1));
seq__25676_25686 = G__25693;
chunk__25677_25687 = G__25694;
count__25678_25688 = G__25695;
i__25679_25689 = G__25696;
continue;
} else {
var temp__4126__auto___25697 = cljs.core.seq(seq__25676_25686);
if(temp__4126__auto___25697){
var seq__25676_25698__$1 = temp__4126__auto___25697;
if(cljs.core.chunked_seq_QMARK_(seq__25676_25698__$1)){
var c__14110__auto___25699 = cljs.core.chunk_first(seq__25676_25698__$1);
var G__25700 = cljs.core.chunk_rest(seq__25676_25698__$1);
var G__25701 = c__14110__auto___25699;
var G__25702 = cljs.core.count(c__14110__auto___25699);
var G__25703 = (0);
seq__25676_25686 = G__25700;
chunk__25677_25687 = G__25701;
count__25678_25688 = G__25702;
i__25679_25689 = G__25703;
continue;
} else {
var vec__25681_25704 = cljs.core.first(seq__25676_25698__$1);
var k_25705 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25681_25704,(0),null);
var v_25706 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25681_25704,(1),null);
(m[cljs.core.key__GT_js(k_25705)] = clj__GT_js(v_25706));

var G__25707 = cljs.core.next(seq__25676_25698__$1);
var G__25708 = null;
var G__25709 = (0);
var G__25710 = (0);
seq__25676_25686 = G__25707;
chunk__25677_25687 = G__25708;
count__25678_25688 = G__25709;
i__25679_25689 = G__25710;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__25682_25711 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__25683_25712 = null;
var count__25684_25713 = (0);
var i__25685_25714 = (0);
while(true){
if((i__25685_25714 < count__25684_25713)){
var x_25715__$1 = chunk__25683_25712.cljs$core$IIndexed$_nth$arity$2(null,i__25685_25714);
arr.push(x_25715__$1);

var G__25716 = seq__25682_25711;
var G__25717 = chunk__25683_25712;
var G__25718 = count__25684_25713;
var G__25719 = (i__25685_25714 + (1));
seq__25682_25711 = G__25716;
chunk__25683_25712 = G__25717;
count__25684_25713 = G__25718;
i__25685_25714 = G__25719;
continue;
} else {
var temp__4126__auto___25720 = cljs.core.seq(seq__25682_25711);
if(temp__4126__auto___25720){
var seq__25682_25721__$1 = temp__4126__auto___25720;
if(cljs.core.chunked_seq_QMARK_(seq__25682_25721__$1)){
var c__14110__auto___25722 = cljs.core.chunk_first(seq__25682_25721__$1);
var G__25723 = cljs.core.chunk_rest(seq__25682_25721__$1);
var G__25724 = c__14110__auto___25722;
var G__25725 = cljs.core.count(c__14110__auto___25722);
var G__25726 = (0);
seq__25682_25711 = G__25723;
chunk__25683_25712 = G__25724;
count__25684_25713 = G__25725;
i__25685_25714 = G__25726;
continue;
} else {
var x_25727__$1 = cljs.core.first(seq__25682_25721__$1);
arr.push(x_25727__$1);

var G__25728 = cljs.core.next(seq__25682_25721__$1);
var G__25729 = null;
var G__25730 = (0);
var G__25731 = (0);
seq__25682_25711 = G__25728;
chunk__25683_25712 = G__25729;
count__25684_25713 = G__25730;
i__25685_25714 = G__25731;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj25733 = {};
return obj25733;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__13311__auto__ = x;
if(and__13311__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__13311__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__13967__auto__ = (((x == null))?null:x);
return (function (){var or__13323__auto__ = (cljs.core._js__GT_clj[(function (){var G__25737 = x__13967__auto__;
return goog.typeOf(G__25737);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__25794__delegate = function (x,opts){
var map__25767 = opts;
var map__25767__$1 = ((cljs.core.seq_QMARK_(map__25767))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__25767):map__25767);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__25767__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__25767,map__25767__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__25783 = x__$1;
if(G__25783){
var bit__14004__auto__ = null;
if(cljs.core.truth_((function (){var or__13323__auto__ = bit__14004__auto__;
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return G__25783.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__25783.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25783);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__25783);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__14079__auto__ = ((function (map__25767,map__25767__$1,keywordize_keys,keyfn){
return (function iter__25784(s__25785){
return (new cljs.core.LazySeq(null,((function (map__25767,map__25767__$1,keywordize_keys,keyfn){
return (function (){
var s__25785__$1 = s__25785;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__25785__$1);
if(temp__4126__auto__){
var s__25785__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__25785__$2)){
var c__14077__auto__ = cljs.core.chunk_first(s__25785__$2);
var size__14078__auto__ = cljs.core.count(c__14077__auto__);
var b__25787 = cljs.core.chunk_buffer(size__14078__auto__);
if((function (){var i__25786 = (0);
while(true){
if((i__25786 < size__14078__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__14077__auto__,i__25786);
cljs.core.chunk_append(b__25787,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25792 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25792) : keyfn.call(null,G__25792));
})(),thisfn((x__$1[k]))], null));

var G__25795 = (i__25786 + (1));
i__25786 = G__25795;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__25787),iter__25784(cljs.core.chunk_rest(s__25785__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__25787),null);
}
} else {
var k = cljs.core.first(s__25785__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__25793 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__25793) : keyfn.call(null,G__25793));
})(),thisfn((x__$1[k]))], null),iter__25784(cljs.core.rest(s__25785__$2)));
}
} else {
return null;
}
break;
}
});})(map__25767,map__25767__$1,keywordize_keys,keyfn))
,null,null));
});})(map__25767,map__25767__$1,keywordize_keys,keyfn))
;
return iter__14079__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__25767,map__25767__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__25794 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__25796__i = 0, G__25796__a = new Array(arguments.length -  1);
while (G__25796__i < G__25796__a.length) {G__25796__a[G__25796__i] = arguments[G__25796__i + 1]; ++G__25796__i;}
  opts = new cljs.core.IndexedSeq(G__25796__a,0);
} 
return G__25794__delegate.call(this,x,opts);};
G__25794.cljs$lang$maxFixedArity = 1;
G__25794.cljs$lang$applyTo = (function (arglist__25797){
var x = cljs.core.first(arglist__25797);
var opts = cljs.core.rest(arglist__25797);
return G__25794__delegate(x,opts);
});
G__25794.cljs$core$IFn$_invoke$arity$variadic = G__25794__delegate;
return G__25794;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__25798 = null;
if (arguments.length > 1) {
var G__25799__i = 0, G__25799__a = new Array(arguments.length -  1);
while (G__25799__i < G__25799__a.length) {G__25799__a[G__25799__i] = arguments[G__25799__i + 1]; ++G__25799__i;}
G__25798 = new cljs.core.IndexedSeq(G__25799__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__25798);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__25802 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25802) : cljs.core.atom.call(null,G__25802));
})();
return ((function (mem){
return (function() { 
var G__25804__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__25803 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25803) : cljs.core.deref.call(null,G__25803));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__25804 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__25805__i = 0, G__25805__a = new Array(arguments.length -  0);
while (G__25805__i < G__25805__a.length) {G__25805__a[G__25805__i] = arguments[G__25805__i + 0]; ++G__25805__i;}
  args = new cljs.core.IndexedSeq(G__25805__a,0);
} 
return G__25804__delegate.call(this,args);};
G__25804.cljs$lang$maxFixedArity = 0;
G__25804.cljs$lang$applyTo = (function (arglist__25806){
var args = cljs.core.seq(arglist__25806);
return G__25804__delegate(args);
});
G__25804.cljs$core$IFn$_invoke$arity$variadic = G__25804__delegate;
return G__25804;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__25808 = ret;
f = G__25808;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__25809__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__25809 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25810__i = 0, G__25810__a = new Array(arguments.length -  1);
while (G__25810__i < G__25810__a.length) {G__25810__a[G__25810__i] = arguments[G__25810__i + 1]; ++G__25810__i;}
  args = new cljs.core.IndexedSeq(G__25810__a,0);
} 
return G__25809__delegate.call(this,f,args);};
G__25809.cljs$lang$maxFixedArity = 1;
G__25809.cljs$lang$applyTo = (function (arglist__25811){
var f = cljs.core.first(arglist__25811);
var args = cljs.core.rest(arglist__25811);
return G__25809__delegate(f,args);
});
G__25809.cljs$core$IFn$_invoke$arity$variadic = G__25809__delegate;
return G__25809;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__25812 = null;
if (arguments.length > 1) {
var G__25813__i = 0, G__25813__a = new Array(arguments.length -  1);
while (G__25813__i < G__25813__a.length) {G__25813__a[G__25813__i] = arguments[G__25813__i + 1]; ++G__25813__i;}
G__25812 = new cljs.core.IndexedSeq(G__25813__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__25812);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__25816 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__25816) : Math.floor.call(null,G__25816));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__25818 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__25818) : f.call(null,G__25818));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__25820 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__25820) : cljs.core.atom.call(null,G__25820));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__25821__i = 0, G__25821__a = new Array(arguments.length -  1);
while (G__25821__i < G__25821__a.length) {G__25821__a[G__25821__i] = arguments[G__25821__i + 1]; ++G__25821__i;}
  args = new cljs.core.IndexedSeq(G__25821__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__25822){
var f = cljs.core.first(arglist__25822);
var args = cljs.core.rest(arglist__25822);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25887 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25887) : cljs.core.deref.call(null,G__25887));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__13323__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
var and__13311__auto__ = cljs.core.vector_QMARK_(parent);
if(and__13311__auto__){
var and__13311__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__13311__auto____$1){
var and__13311__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__13311__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__25912 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__25910 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__25910) : child.call(null,G__25910));
})(),(function (){var G__25911 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__25911) : parent.call(null,G__25911));
})());
var G__25913 = (i + (1));
ret = G__25912;
i = G__25913;
continue;
}
break;
}
} else {
return and__13311__auto____$2;
}
} else {
return and__13311__auto____$1;
}
} else {
return and__13311__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__25917 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25917) : cljs.core.deref.call(null,G__25917));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__25921 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25921) : cljs.core.deref.call(null,G__25921));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__25925 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25925) : cljs.core.deref.call(null,G__25925));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__25934 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__25934) : targets.call(null,G__25934));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__25935 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__25935) : sources.call(null,G__25935));
})()));
});})(tp,td,ta))
;
var or__13323__auto__ = ((cljs.core.contains_QMARK_((function (){var G__25939 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__25939) : tp.call(null,G__25939));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__25940 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25940) : ta.call(null,G__25940));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__25941 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__25941) : ta.call(null,G__25941));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__25948 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25948) : parentMap.call(null,G__25948));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__25949 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25949) : parentMap.call(null,G__25949));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__25942_SHARP_){
return cljs.core.cons(cljs.core.first(p1__25942_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__25942_SHARP_),cljs.core.second(p1__25942_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__25950 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__25950) : parentMap.call(null,G__25950));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__25943_SHARP_,p2__25944_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__25943_SHARP_,p2__25944_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__25953 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25953) : cljs.core.deref.call(null,G__25953));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__25954 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25954) : cljs.core.deref.call(null,G__25954));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__25970 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25970) : cljs.core.deref.call(null,G__25970));
})().call(null,x);
var or__13323__auto__ = (cljs.core.truth_((function (){var and__13311__auto__ = xprefs;
if(cljs.core.truth_(and__13311__auto__)){
var G__25972 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__25972) : xprefs.call(null,G__25972));
} else {
return and__13311__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__25973 = cljs.core.rest(ps);
ps = G__25973;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13323__auto____$1)){
return or__13323__auto____$1;
} else {
var or__13323__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__25974 = cljs.core.rest(ps);
ps = G__25974;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__13323__auto____$2)){
return or__13323__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__13323__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__13323__auto__)){
return or__13323__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__25988){
var vec__25989 = p__25988;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25989,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25989,(1),null);
var e = vec__25989;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__25990 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25990) : cljs.core.deref.call(null,G__25990));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__13323__auto__ = (be == null);
if(or__13323__auto__){
return or__13323__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__25991 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25991) : cljs.core.deref.call(null,G__25991));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__25992 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25992) : cljs.core.deref.call(null,G__25992));
})(),(function (){var G__25993 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__25993) : cljs.core.deref.call(null,G__25993));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj25995 = {};
return obj25995;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__13311__auto__ = mf;
if(and__13311__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__13311__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__13967__auto__ = (((mf == null))?null:mf);
return (function (){var or__13323__auto__ = (cljs.core._reset[(function (){var G__25999 = x__13967__auto__;
return goog.typeOf(G__25999);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._reset["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__13311__auto__ = mf;
if(and__13311__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__13311__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__13967__auto__ = (((mf == null))?null:mf);
return (function (){var or__13323__auto__ = (cljs.core._add_method[(function (){var G__26003 = x__13967__auto__;
return goog.typeOf(G__26003);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._add_method["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__13311__auto__ = mf;
if(and__13311__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__13311__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__13967__auto__ = (((mf == null))?null:mf);
return (function (){var or__13323__auto__ = (cljs.core._remove_method[(function (){var G__26007 = x__13967__auto__;
return goog.typeOf(G__26007);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._remove_method["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__13311__auto__ = mf;
if(and__13311__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__13311__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__13967__auto__ = (((mf == null))?null:mf);
return (function (){var or__13323__auto__ = (cljs.core._prefer_method[(function (){var G__26011 = x__13967__auto__;
return goog.typeOf(G__26011);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__13311__auto__ = mf;
if(and__13311__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__13311__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__13967__auto__ = (((mf == null))?null:mf);
return (function (){var or__13323__auto__ = (cljs.core._get_method[(function (){var G__26015 = x__13967__auto__;
return goog.typeOf(G__26015);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._get_method["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__13311__auto__ = mf;
if(and__13311__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__13311__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__13967__auto__ = (((mf == null))?null:mf);
return (function (){var or__13323__auto__ = (cljs.core._methods[(function (){var G__26019 = x__13967__auto__;
return goog.typeOf(G__26019);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._methods["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__13311__auto__ = mf;
if(and__13311__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__13311__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__13967__auto__ = (((mf == null))?null:mf);
return (function (){var or__13323__auto__ = (cljs.core._prefers[(function (){var G__26023 = x__13967__auto__;
return goog.typeOf(G__26023);
})()]);
if(or__13323__auto__){
return or__13323__auto__;
} else {
var or__13323__auto____$1 = (cljs.core._prefers["_"]);
if(or__13323__auto____$1){
return or__13323__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26025 = this$__$1;
return goog.getUid(G__26025);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__26026 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26026) : cljs.core.deref.call(null,G__26026));
})(),(function (){var G__26027 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26027) : cljs.core.deref.call(null,G__26027));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__26028 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26028) : cljs.core.deref.call(null,G__26028));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__26029 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26029) : cljs.core.deref.call(null,G__26029));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26030 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26030) : cljs.core.deref.call(null,G__26030));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__26031 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__26031) : cljs.core.deref.call(null,G__26031));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__26872 = null;
var G__26872__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__26872__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26032 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26032) : self__.dispatch_fn.call(null,G__26032));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26033 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26033) : target_fn.call(null,G__26033));
});
var G__26872__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26034 = a;
var G__26035 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26034,G__26035) : self__.dispatch_fn.call(null,G__26034,G__26035));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26036 = a;
var G__26037 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26036,G__26037) : target_fn.call(null,G__26036,G__26037));
});
var G__26872__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26038 = a;
var G__26039 = b;
var G__26040 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26038,G__26039,G__26040) : self__.dispatch_fn.call(null,G__26038,G__26039,G__26040));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26041 = a;
var G__26042 = b;
var G__26043 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26041,G__26042,G__26043) : target_fn.call(null,G__26041,G__26042,G__26043));
});
var G__26872__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26044 = a;
var G__26045 = b;
var G__26046 = c;
var G__26047 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26044,G__26045,G__26046,G__26047) : self__.dispatch_fn.call(null,G__26044,G__26045,G__26046,G__26047));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26048 = a;
var G__26049 = b;
var G__26050 = c;
var G__26051 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26048,G__26049,G__26050,G__26051) : target_fn.call(null,G__26048,G__26049,G__26050,G__26051));
});
var G__26872__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26052 = a;
var G__26053 = b;
var G__26054 = c;
var G__26055 = d;
var G__26056 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26052,G__26053,G__26054,G__26055,G__26056) : self__.dispatch_fn.call(null,G__26052,G__26053,G__26054,G__26055,G__26056));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26057 = a;
var G__26058 = b;
var G__26059 = c;
var G__26060 = d;
var G__26061 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26057,G__26058,G__26059,G__26060,G__26061) : target_fn.call(null,G__26057,G__26058,G__26059,G__26060,G__26061));
});
var G__26872__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26062 = a;
var G__26063 = b;
var G__26064 = c;
var G__26065 = d;
var G__26066 = e;
var G__26067 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26062,G__26063,G__26064,G__26065,G__26066,G__26067) : self__.dispatch_fn.call(null,G__26062,G__26063,G__26064,G__26065,G__26066,G__26067));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26068 = a;
var G__26069 = b;
var G__26070 = c;
var G__26071 = d;
var G__26072 = e;
var G__26073 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26068,G__26069,G__26070,G__26071,G__26072,G__26073) : target_fn.call(null,G__26068,G__26069,G__26070,G__26071,G__26072,G__26073));
});
var G__26872__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26074 = a;
var G__26075 = b;
var G__26076 = c;
var G__26077 = d;
var G__26078 = e;
var G__26079 = f;
var G__26080 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26074,G__26075,G__26076,G__26077,G__26078,G__26079,G__26080) : self__.dispatch_fn.call(null,G__26074,G__26075,G__26076,G__26077,G__26078,G__26079,G__26080));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26081 = a;
var G__26082 = b;
var G__26083 = c;
var G__26084 = d;
var G__26085 = e;
var G__26086 = f;
var G__26087 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26081,G__26082,G__26083,G__26084,G__26085,G__26086,G__26087) : target_fn.call(null,G__26081,G__26082,G__26083,G__26084,G__26085,G__26086,G__26087));
});
var G__26872__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26088 = a;
var G__26089 = b;
var G__26090 = c;
var G__26091 = d;
var G__26092 = e;
var G__26093 = f;
var G__26094 = g;
var G__26095 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095) : self__.dispatch_fn.call(null,G__26088,G__26089,G__26090,G__26091,G__26092,G__26093,G__26094,G__26095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26096 = a;
var G__26097 = b;
var G__26098 = c;
var G__26099 = d;
var G__26100 = e;
var G__26101 = f;
var G__26102 = g;
var G__26103 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103) : target_fn.call(null,G__26096,G__26097,G__26098,G__26099,G__26100,G__26101,G__26102,G__26103));
});
var G__26872__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26104 = a;
var G__26105 = b;
var G__26106 = c;
var G__26107 = d;
var G__26108 = e;
var G__26109 = f;
var G__26110 = g;
var G__26111 = h;
var G__26112 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26104,G__26105,G__26106,G__26107,G__26108,G__26109,G__26110,G__26111,G__26112) : self__.dispatch_fn.call(null,G__26104,G__26105,G__26106,G__26107,G__26108,G__26109,G__26110,G__26111,G__26112));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26113 = a;
var G__26114 = b;
var G__26115 = c;
var G__26116 = d;
var G__26117 = e;
var G__26118 = f;
var G__26119 = g;
var G__26120 = h;
var G__26121 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26113,G__26114,G__26115,G__26116,G__26117,G__26118,G__26119,G__26120,G__26121) : target_fn.call(null,G__26113,G__26114,G__26115,G__26116,G__26117,G__26118,G__26119,G__26120,G__26121));
});
var G__26872__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26122 = a;
var G__26123 = b;
var G__26124 = c;
var G__26125 = d;
var G__26126 = e;
var G__26127 = f;
var G__26128 = g;
var G__26129 = h;
var G__26130 = i;
var G__26131 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26122,G__26123,G__26124,G__26125,G__26126,G__26127,G__26128,G__26129,G__26130,G__26131) : self__.dispatch_fn.call(null,G__26122,G__26123,G__26124,G__26125,G__26126,G__26127,G__26128,G__26129,G__26130,G__26131));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26132 = a;
var G__26133 = b;
var G__26134 = c;
var G__26135 = d;
var G__26136 = e;
var G__26137 = f;
var G__26138 = g;
var G__26139 = h;
var G__26140 = i;
var G__26141 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26132,G__26133,G__26134,G__26135,G__26136,G__26137,G__26138,G__26139,G__26140,G__26141) : target_fn.call(null,G__26132,G__26133,G__26134,G__26135,G__26136,G__26137,G__26138,G__26139,G__26140,G__26141));
});
var G__26872__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26142 = a;
var G__26143 = b;
var G__26144 = c;
var G__26145 = d;
var G__26146 = e;
var G__26147 = f;
var G__26148 = g;
var G__26149 = h;
var G__26150 = i;
var G__26151 = j;
var G__26152 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26142,G__26143,G__26144,G__26145,G__26146,G__26147,G__26148,G__26149,G__26150,G__26151,G__26152) : self__.dispatch_fn.call(null,G__26142,G__26143,G__26144,G__26145,G__26146,G__26147,G__26148,G__26149,G__26150,G__26151,G__26152));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26153 = a;
var G__26154 = b;
var G__26155 = c;
var G__26156 = d;
var G__26157 = e;
var G__26158 = f;
var G__26159 = g;
var G__26160 = h;
var G__26161 = i;
var G__26162 = j;
var G__26163 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26153,G__26154,G__26155,G__26156,G__26157,G__26158,G__26159,G__26160,G__26161,G__26162,G__26163) : target_fn.call(null,G__26153,G__26154,G__26155,G__26156,G__26157,G__26158,G__26159,G__26160,G__26161,G__26162,G__26163));
});
var G__26872__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26164 = a;
var G__26165 = b;
var G__26166 = c;
var G__26167 = d;
var G__26168 = e;
var G__26169 = f;
var G__26170 = g;
var G__26171 = h;
var G__26172 = i;
var G__26173 = j;
var G__26174 = k;
var G__26175 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26164,G__26165,G__26166,G__26167,G__26168,G__26169,G__26170,G__26171,G__26172,G__26173,G__26174,G__26175) : self__.dispatch_fn.call(null,G__26164,G__26165,G__26166,G__26167,G__26168,G__26169,G__26170,G__26171,G__26172,G__26173,G__26174,G__26175));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26176 = a;
var G__26177 = b;
var G__26178 = c;
var G__26179 = d;
var G__26180 = e;
var G__26181 = f;
var G__26182 = g;
var G__26183 = h;
var G__26184 = i;
var G__26185 = j;
var G__26186 = k;
var G__26187 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26176,G__26177,G__26178,G__26179,G__26180,G__26181,G__26182,G__26183,G__26184,G__26185,G__26186,G__26187) : target_fn.call(null,G__26176,G__26177,G__26178,G__26179,G__26180,G__26181,G__26182,G__26183,G__26184,G__26185,G__26186,G__26187));
});
var G__26872__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26188 = a;
var G__26189 = b;
var G__26190 = c;
var G__26191 = d;
var G__26192 = e;
var G__26193 = f;
var G__26194 = g;
var G__26195 = h;
var G__26196 = i;
var G__26197 = j;
var G__26198 = k;
var G__26199 = l;
var G__26200 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26188,G__26189,G__26190,G__26191,G__26192,G__26193,G__26194,G__26195,G__26196,G__26197,G__26198,G__26199,G__26200) : self__.dispatch_fn.call(null,G__26188,G__26189,G__26190,G__26191,G__26192,G__26193,G__26194,G__26195,G__26196,G__26197,G__26198,G__26199,G__26200));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26201 = a;
var G__26202 = b;
var G__26203 = c;
var G__26204 = d;
var G__26205 = e;
var G__26206 = f;
var G__26207 = g;
var G__26208 = h;
var G__26209 = i;
var G__26210 = j;
var G__26211 = k;
var G__26212 = l;
var G__26213 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26201,G__26202,G__26203,G__26204,G__26205,G__26206,G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213) : target_fn.call(null,G__26201,G__26202,G__26203,G__26204,G__26205,G__26206,G__26207,G__26208,G__26209,G__26210,G__26211,G__26212,G__26213));
});
var G__26872__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26214 = a;
var G__26215 = b;
var G__26216 = c;
var G__26217 = d;
var G__26218 = e;
var G__26219 = f;
var G__26220 = g;
var G__26221 = h;
var G__26222 = i;
var G__26223 = j;
var G__26224 = k;
var G__26225 = l;
var G__26226 = m;
var G__26227 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26214,G__26215,G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225,G__26226,G__26227) : self__.dispatch_fn.call(null,G__26214,G__26215,G__26216,G__26217,G__26218,G__26219,G__26220,G__26221,G__26222,G__26223,G__26224,G__26225,G__26226,G__26227));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26228 = a;
var G__26229 = b;
var G__26230 = c;
var G__26231 = d;
var G__26232 = e;
var G__26233 = f;
var G__26234 = g;
var G__26235 = h;
var G__26236 = i;
var G__26237 = j;
var G__26238 = k;
var G__26239 = l;
var G__26240 = m;
var G__26241 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26228,G__26229,G__26230,G__26231,G__26232,G__26233,G__26234,G__26235,G__26236,G__26237,G__26238,G__26239,G__26240,G__26241) : target_fn.call(null,G__26228,G__26229,G__26230,G__26231,G__26232,G__26233,G__26234,G__26235,G__26236,G__26237,G__26238,G__26239,G__26240,G__26241));
});
var G__26872__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26242 = a;
var G__26243 = b;
var G__26244 = c;
var G__26245 = d;
var G__26246 = e;
var G__26247 = f;
var G__26248 = g;
var G__26249 = h;
var G__26250 = i;
var G__26251 = j;
var G__26252 = k;
var G__26253 = l;
var G__26254 = m;
var G__26255 = n;
var G__26256 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26242,G__26243,G__26244,G__26245,G__26246,G__26247,G__26248,G__26249,G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256) : self__.dispatch_fn.call(null,G__26242,G__26243,G__26244,G__26245,G__26246,G__26247,G__26248,G__26249,G__26250,G__26251,G__26252,G__26253,G__26254,G__26255,G__26256));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26257 = a;
var G__26258 = b;
var G__26259 = c;
var G__26260 = d;
var G__26261 = e;
var G__26262 = f;
var G__26263 = g;
var G__26264 = h;
var G__26265 = i;
var G__26266 = j;
var G__26267 = k;
var G__26268 = l;
var G__26269 = m;
var G__26270 = n;
var G__26271 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26257,G__26258,G__26259,G__26260,G__26261,G__26262,G__26263,G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271) : target_fn.call(null,G__26257,G__26258,G__26259,G__26260,G__26261,G__26262,G__26263,G__26264,G__26265,G__26266,G__26267,G__26268,G__26269,G__26270,G__26271));
});
var G__26872__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26272 = a;
var G__26273 = b;
var G__26274 = c;
var G__26275 = d;
var G__26276 = e;
var G__26277 = f;
var G__26278 = g;
var G__26279 = h;
var G__26280 = i;
var G__26281 = j;
var G__26282 = k;
var G__26283 = l;
var G__26284 = m;
var G__26285 = n;
var G__26286 = o;
var G__26287 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26272,G__26273,G__26274,G__26275,G__26276,G__26277,G__26278,G__26279,G__26280,G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287) : self__.dispatch_fn.call(null,G__26272,G__26273,G__26274,G__26275,G__26276,G__26277,G__26278,G__26279,G__26280,G__26281,G__26282,G__26283,G__26284,G__26285,G__26286,G__26287));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26288 = a;
var G__26289 = b;
var G__26290 = c;
var G__26291 = d;
var G__26292 = e;
var G__26293 = f;
var G__26294 = g;
var G__26295 = h;
var G__26296 = i;
var G__26297 = j;
var G__26298 = k;
var G__26299 = l;
var G__26300 = m;
var G__26301 = n;
var G__26302 = o;
var G__26303 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301,G__26302,G__26303) : target_fn.call(null,G__26288,G__26289,G__26290,G__26291,G__26292,G__26293,G__26294,G__26295,G__26296,G__26297,G__26298,G__26299,G__26300,G__26301,G__26302,G__26303));
});
var G__26872__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26304 = a;
var G__26305 = b;
var G__26306 = c;
var G__26307 = d;
var G__26308 = e;
var G__26309 = f;
var G__26310 = g;
var G__26311 = h;
var G__26312 = i;
var G__26313 = j;
var G__26314 = k;
var G__26315 = l;
var G__26316 = m;
var G__26317 = n;
var G__26318 = o;
var G__26319 = p;
var G__26320 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26304,G__26305,G__26306,G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316,G__26317,G__26318,G__26319,G__26320) : self__.dispatch_fn.call(null,G__26304,G__26305,G__26306,G__26307,G__26308,G__26309,G__26310,G__26311,G__26312,G__26313,G__26314,G__26315,G__26316,G__26317,G__26318,G__26319,G__26320));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26321 = a;
var G__26322 = b;
var G__26323 = c;
var G__26324 = d;
var G__26325 = e;
var G__26326 = f;
var G__26327 = g;
var G__26328 = h;
var G__26329 = i;
var G__26330 = j;
var G__26331 = k;
var G__26332 = l;
var G__26333 = m;
var G__26334 = n;
var G__26335 = o;
var G__26336 = p;
var G__26337 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26321,G__26322,G__26323,G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335,G__26336,G__26337) : target_fn.call(null,G__26321,G__26322,G__26323,G__26324,G__26325,G__26326,G__26327,G__26328,G__26329,G__26330,G__26331,G__26332,G__26333,G__26334,G__26335,G__26336,G__26337));
});
var G__26872__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26338 = a;
var G__26339 = b;
var G__26340 = c;
var G__26341 = d;
var G__26342 = e;
var G__26343 = f;
var G__26344 = g;
var G__26345 = h;
var G__26346 = i;
var G__26347 = j;
var G__26348 = k;
var G__26349 = l;
var G__26350 = m;
var G__26351 = n;
var G__26352 = o;
var G__26353 = p;
var G__26354 = q;
var G__26355 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355) : self__.dispatch_fn.call(null,G__26338,G__26339,G__26340,G__26341,G__26342,G__26343,G__26344,G__26345,G__26346,G__26347,G__26348,G__26349,G__26350,G__26351,G__26352,G__26353,G__26354,G__26355));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26356 = a;
var G__26357 = b;
var G__26358 = c;
var G__26359 = d;
var G__26360 = e;
var G__26361 = f;
var G__26362 = g;
var G__26363 = h;
var G__26364 = i;
var G__26365 = j;
var G__26366 = k;
var G__26367 = l;
var G__26368 = m;
var G__26369 = n;
var G__26370 = o;
var G__26371 = p;
var G__26372 = q;
var G__26373 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26356,G__26357,G__26358,G__26359,G__26360,G__26361,G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373) : target_fn.call(null,G__26356,G__26357,G__26358,G__26359,G__26360,G__26361,G__26362,G__26363,G__26364,G__26365,G__26366,G__26367,G__26368,G__26369,G__26370,G__26371,G__26372,G__26373));
});
var G__26872__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26374 = a;
var G__26375 = b;
var G__26376 = c;
var G__26377 = d;
var G__26378 = e;
var G__26379 = f;
var G__26380 = g;
var G__26381 = h;
var G__26382 = i;
var G__26383 = j;
var G__26384 = k;
var G__26385 = l;
var G__26386 = m;
var G__26387 = n;
var G__26388 = o;
var G__26389 = p;
var G__26390 = q;
var G__26391 = r;
var G__26392 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26374,G__26375,G__26376,G__26377,G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389,G__26390,G__26391,G__26392) : self__.dispatch_fn.call(null,G__26374,G__26375,G__26376,G__26377,G__26378,G__26379,G__26380,G__26381,G__26382,G__26383,G__26384,G__26385,G__26386,G__26387,G__26388,G__26389,G__26390,G__26391,G__26392));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26393 = a;
var G__26394 = b;
var G__26395 = c;
var G__26396 = d;
var G__26397 = e;
var G__26398 = f;
var G__26399 = g;
var G__26400 = h;
var G__26401 = i;
var G__26402 = j;
var G__26403 = k;
var G__26404 = l;
var G__26405 = m;
var G__26406 = n;
var G__26407 = o;
var G__26408 = p;
var G__26409 = q;
var G__26410 = r;
var G__26411 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26393,G__26394,G__26395,G__26396,G__26397,G__26398,G__26399,G__26400,G__26401,G__26402,G__26403,G__26404,G__26405,G__26406,G__26407,G__26408,G__26409,G__26410,G__26411) : target_fn.call(null,G__26393,G__26394,G__26395,G__26396,G__26397,G__26398,G__26399,G__26400,G__26401,G__26402,G__26403,G__26404,G__26405,G__26406,G__26407,G__26408,G__26409,G__26410,G__26411));
});
var G__26872__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__26412 = a;
var G__26413 = b;
var G__26414 = c;
var G__26415 = d;
var G__26416 = e;
var G__26417 = f;
var G__26418 = g;
var G__26419 = h;
var G__26420 = i;
var G__26421 = j;
var G__26422 = k;
var G__26423 = l;
var G__26424 = m;
var G__26425 = n;
var G__26426 = o;
var G__26427 = p;
var G__26428 = q;
var G__26429 = r;
var G__26430 = s;
var G__26431 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26412,G__26413,G__26414,G__26415,G__26416,G__26417,G__26418,G__26419,G__26420,G__26421,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427,G__26428,G__26429,G__26430,G__26431) : self__.dispatch_fn.call(null,G__26412,G__26413,G__26414,G__26415,G__26416,G__26417,G__26418,G__26419,G__26420,G__26421,G__26422,G__26423,G__26424,G__26425,G__26426,G__26427,G__26428,G__26429,G__26430,G__26431));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26432 = a;
var G__26433 = b;
var G__26434 = c;
var G__26435 = d;
var G__26436 = e;
var G__26437 = f;
var G__26438 = g;
var G__26439 = h;
var G__26440 = i;
var G__26441 = j;
var G__26442 = k;
var G__26443 = l;
var G__26444 = m;
var G__26445 = n;
var G__26446 = o;
var G__26447 = p;
var G__26448 = q;
var G__26449 = r;
var G__26450 = s;
var G__26451 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26432,G__26433,G__26434,G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442,G__26443,G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451) : target_fn.call(null,G__26432,G__26433,G__26434,G__26435,G__26436,G__26437,G__26438,G__26439,G__26440,G__26441,G__26442,G__26443,G__26444,G__26445,G__26446,G__26447,G__26448,G__26449,G__26450,G__26451));
});
var G__26872__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__26872 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__26872__1.call(this,self__);
case 2:
return G__26872__2.call(this,self__,a);
case 3:
return G__26872__3.call(this,self__,a,b);
case 4:
return G__26872__4.call(this,self__,a,b,c);
case 5:
return G__26872__5.call(this,self__,a,b,c,d);
case 6:
return G__26872__6.call(this,self__,a,b,c,d,e);
case 7:
return G__26872__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__26872__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__26872__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__26872__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__26872__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__26872__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__26872__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__26872__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__26872__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__26872__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__26872__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__26872__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__26872__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__26872__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__26872__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__26872__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__26872.cljs$core$IFn$_invoke$arity$1 = G__26872__1;
G__26872.cljs$core$IFn$_invoke$arity$2 = G__26872__2;
G__26872.cljs$core$IFn$_invoke$arity$3 = G__26872__3;
G__26872.cljs$core$IFn$_invoke$arity$4 = G__26872__4;
G__26872.cljs$core$IFn$_invoke$arity$5 = G__26872__5;
G__26872.cljs$core$IFn$_invoke$arity$6 = G__26872__6;
G__26872.cljs$core$IFn$_invoke$arity$7 = G__26872__7;
G__26872.cljs$core$IFn$_invoke$arity$8 = G__26872__8;
G__26872.cljs$core$IFn$_invoke$arity$9 = G__26872__9;
G__26872.cljs$core$IFn$_invoke$arity$10 = G__26872__10;
G__26872.cljs$core$IFn$_invoke$arity$11 = G__26872__11;
G__26872.cljs$core$IFn$_invoke$arity$12 = G__26872__12;
G__26872.cljs$core$IFn$_invoke$arity$13 = G__26872__13;
G__26872.cljs$core$IFn$_invoke$arity$14 = G__26872__14;
G__26872.cljs$core$IFn$_invoke$arity$15 = G__26872__15;
G__26872.cljs$core$IFn$_invoke$arity$16 = G__26872__16;
G__26872.cljs$core$IFn$_invoke$arity$17 = G__26872__17;
G__26872.cljs$core$IFn$_invoke$arity$18 = G__26872__18;
G__26872.cljs$core$IFn$_invoke$arity$19 = G__26872__19;
G__26872.cljs$core$IFn$_invoke$arity$20 = G__26872__20;
G__26872.cljs$core$IFn$_invoke$arity$21 = G__26872__21;
G__26872.cljs$core$IFn$_invoke$arity$22 = G__26872__22;
return G__26872;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args26024){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args26024)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26452 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__26452) : self__.dispatch_fn.call(null,G__26452));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26453 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__26453) : target_fn.call(null,G__26453));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26454 = a;
var G__26455 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__26454,G__26455) : self__.dispatch_fn.call(null,G__26454,G__26455));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26456 = a;
var G__26457 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__26456,G__26457) : target_fn.call(null,G__26456,G__26457));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26458 = a;
var G__26459 = b;
var G__26460 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__26458,G__26459,G__26460) : self__.dispatch_fn.call(null,G__26458,G__26459,G__26460));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26461 = a;
var G__26462 = b;
var G__26463 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__26461,G__26462,G__26463) : target_fn.call(null,G__26461,G__26462,G__26463));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26464 = a;
var G__26465 = b;
var G__26466 = c;
var G__26467 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__26464,G__26465,G__26466,G__26467) : self__.dispatch_fn.call(null,G__26464,G__26465,G__26466,G__26467));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26468 = a;
var G__26469 = b;
var G__26470 = c;
var G__26471 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__26468,G__26469,G__26470,G__26471) : target_fn.call(null,G__26468,G__26469,G__26470,G__26471));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26472 = a;
var G__26473 = b;
var G__26474 = c;
var G__26475 = d;
var G__26476 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__26472,G__26473,G__26474,G__26475,G__26476) : self__.dispatch_fn.call(null,G__26472,G__26473,G__26474,G__26475,G__26476));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26477 = a;
var G__26478 = b;
var G__26479 = c;
var G__26480 = d;
var G__26481 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__26477,G__26478,G__26479,G__26480,G__26481) : target_fn.call(null,G__26477,G__26478,G__26479,G__26480,G__26481));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26482 = a;
var G__26483 = b;
var G__26484 = c;
var G__26485 = d;
var G__26486 = e;
var G__26487 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__26482,G__26483,G__26484,G__26485,G__26486,G__26487) : self__.dispatch_fn.call(null,G__26482,G__26483,G__26484,G__26485,G__26486,G__26487));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26488 = a;
var G__26489 = b;
var G__26490 = c;
var G__26491 = d;
var G__26492 = e;
var G__26493 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__26488,G__26489,G__26490,G__26491,G__26492,G__26493) : target_fn.call(null,G__26488,G__26489,G__26490,G__26491,G__26492,G__26493));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26494 = a;
var G__26495 = b;
var G__26496 = c;
var G__26497 = d;
var G__26498 = e;
var G__26499 = f;
var G__26500 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500) : self__.dispatch_fn.call(null,G__26494,G__26495,G__26496,G__26497,G__26498,G__26499,G__26500));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26501 = a;
var G__26502 = b;
var G__26503 = c;
var G__26504 = d;
var G__26505 = e;
var G__26506 = f;
var G__26507 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__26501,G__26502,G__26503,G__26504,G__26505,G__26506,G__26507) : target_fn.call(null,G__26501,G__26502,G__26503,G__26504,G__26505,G__26506,G__26507));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26508 = a;
var G__26509 = b;
var G__26510 = c;
var G__26511 = d;
var G__26512 = e;
var G__26513 = f;
var G__26514 = g;
var G__26515 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__26508,G__26509,G__26510,G__26511,G__26512,G__26513,G__26514,G__26515) : self__.dispatch_fn.call(null,G__26508,G__26509,G__26510,G__26511,G__26512,G__26513,G__26514,G__26515));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26516 = a;
var G__26517 = b;
var G__26518 = c;
var G__26519 = d;
var G__26520 = e;
var G__26521 = f;
var G__26522 = g;
var G__26523 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523) : target_fn.call(null,G__26516,G__26517,G__26518,G__26519,G__26520,G__26521,G__26522,G__26523));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26524 = a;
var G__26525 = b;
var G__26526 = c;
var G__26527 = d;
var G__26528 = e;
var G__26529 = f;
var G__26530 = g;
var G__26531 = h;
var G__26532 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__26524,G__26525,G__26526,G__26527,G__26528,G__26529,G__26530,G__26531,G__26532) : self__.dispatch_fn.call(null,G__26524,G__26525,G__26526,G__26527,G__26528,G__26529,G__26530,G__26531,G__26532));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26533 = a;
var G__26534 = b;
var G__26535 = c;
var G__26536 = d;
var G__26537 = e;
var G__26538 = f;
var G__26539 = g;
var G__26540 = h;
var G__26541 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__26533,G__26534,G__26535,G__26536,G__26537,G__26538,G__26539,G__26540,G__26541) : target_fn.call(null,G__26533,G__26534,G__26535,G__26536,G__26537,G__26538,G__26539,G__26540,G__26541));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26542 = a;
var G__26543 = b;
var G__26544 = c;
var G__26545 = d;
var G__26546 = e;
var G__26547 = f;
var G__26548 = g;
var G__26549 = h;
var G__26550 = i;
var G__26551 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550,G__26551) : self__.dispatch_fn.call(null,G__26542,G__26543,G__26544,G__26545,G__26546,G__26547,G__26548,G__26549,G__26550,G__26551));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26552 = a;
var G__26553 = b;
var G__26554 = c;
var G__26555 = d;
var G__26556 = e;
var G__26557 = f;
var G__26558 = g;
var G__26559 = h;
var G__26560 = i;
var G__26561 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561) : target_fn.call(null,G__26552,G__26553,G__26554,G__26555,G__26556,G__26557,G__26558,G__26559,G__26560,G__26561));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26562 = a;
var G__26563 = b;
var G__26564 = c;
var G__26565 = d;
var G__26566 = e;
var G__26567 = f;
var G__26568 = g;
var G__26569 = h;
var G__26570 = i;
var G__26571 = j;
var G__26572 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572) : self__.dispatch_fn.call(null,G__26562,G__26563,G__26564,G__26565,G__26566,G__26567,G__26568,G__26569,G__26570,G__26571,G__26572));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26573 = a;
var G__26574 = b;
var G__26575 = c;
var G__26576 = d;
var G__26577 = e;
var G__26578 = f;
var G__26579 = g;
var G__26580 = h;
var G__26581 = i;
var G__26582 = j;
var G__26583 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__26573,G__26574,G__26575,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583) : target_fn.call(null,G__26573,G__26574,G__26575,G__26576,G__26577,G__26578,G__26579,G__26580,G__26581,G__26582,G__26583));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26584 = a;
var G__26585 = b;
var G__26586 = c;
var G__26587 = d;
var G__26588 = e;
var G__26589 = f;
var G__26590 = g;
var G__26591 = h;
var G__26592 = i;
var G__26593 = j;
var G__26594 = k;
var G__26595 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__26584,G__26585,G__26586,G__26587,G__26588,G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595) : self__.dispatch_fn.call(null,G__26584,G__26585,G__26586,G__26587,G__26588,G__26589,G__26590,G__26591,G__26592,G__26593,G__26594,G__26595));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26596 = a;
var G__26597 = b;
var G__26598 = c;
var G__26599 = d;
var G__26600 = e;
var G__26601 = f;
var G__26602 = g;
var G__26603 = h;
var G__26604 = i;
var G__26605 = j;
var G__26606 = k;
var G__26607 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606,G__26607) : target_fn.call(null,G__26596,G__26597,G__26598,G__26599,G__26600,G__26601,G__26602,G__26603,G__26604,G__26605,G__26606,G__26607));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26608 = a;
var G__26609 = b;
var G__26610 = c;
var G__26611 = d;
var G__26612 = e;
var G__26613 = f;
var G__26614 = g;
var G__26615 = h;
var G__26616 = i;
var G__26617 = j;
var G__26618 = k;
var G__26619 = l;
var G__26620 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619,G__26620) : self__.dispatch_fn.call(null,G__26608,G__26609,G__26610,G__26611,G__26612,G__26613,G__26614,G__26615,G__26616,G__26617,G__26618,G__26619,G__26620));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26621 = a;
var G__26622 = b;
var G__26623 = c;
var G__26624 = d;
var G__26625 = e;
var G__26626 = f;
var G__26627 = g;
var G__26628 = h;
var G__26629 = i;
var G__26630 = j;
var G__26631 = k;
var G__26632 = l;
var G__26633 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633) : target_fn.call(null,G__26621,G__26622,G__26623,G__26624,G__26625,G__26626,G__26627,G__26628,G__26629,G__26630,G__26631,G__26632,G__26633));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26634 = a;
var G__26635 = b;
var G__26636 = c;
var G__26637 = d;
var G__26638 = e;
var G__26639 = f;
var G__26640 = g;
var G__26641 = h;
var G__26642 = i;
var G__26643 = j;
var G__26644 = k;
var G__26645 = l;
var G__26646 = m;
var G__26647 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__26634,G__26635,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646,G__26647) : self__.dispatch_fn.call(null,G__26634,G__26635,G__26636,G__26637,G__26638,G__26639,G__26640,G__26641,G__26642,G__26643,G__26644,G__26645,G__26646,G__26647));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26648 = a;
var G__26649 = b;
var G__26650 = c;
var G__26651 = d;
var G__26652 = e;
var G__26653 = f;
var G__26654 = g;
var G__26655 = h;
var G__26656 = i;
var G__26657 = j;
var G__26658 = k;
var G__26659 = l;
var G__26660 = m;
var G__26661 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661) : target_fn.call(null,G__26648,G__26649,G__26650,G__26651,G__26652,G__26653,G__26654,G__26655,G__26656,G__26657,G__26658,G__26659,G__26660,G__26661));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26662 = a;
var G__26663 = b;
var G__26664 = c;
var G__26665 = d;
var G__26666 = e;
var G__26667 = f;
var G__26668 = g;
var G__26669 = h;
var G__26670 = i;
var G__26671 = j;
var G__26672 = k;
var G__26673 = l;
var G__26674 = m;
var G__26675 = n;
var G__26676 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668,G__26669,G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676) : self__.dispatch_fn.call(null,G__26662,G__26663,G__26664,G__26665,G__26666,G__26667,G__26668,G__26669,G__26670,G__26671,G__26672,G__26673,G__26674,G__26675,G__26676));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26677 = a;
var G__26678 = b;
var G__26679 = c;
var G__26680 = d;
var G__26681 = e;
var G__26682 = f;
var G__26683 = g;
var G__26684 = h;
var G__26685 = i;
var G__26686 = j;
var G__26687 = k;
var G__26688 = l;
var G__26689 = m;
var G__26690 = n;
var G__26691 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__26677,G__26678,G__26679,G__26680,G__26681,G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691) : target_fn.call(null,G__26677,G__26678,G__26679,G__26680,G__26681,G__26682,G__26683,G__26684,G__26685,G__26686,G__26687,G__26688,G__26689,G__26690,G__26691));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26692 = a;
var G__26693 = b;
var G__26694 = c;
var G__26695 = d;
var G__26696 = e;
var G__26697 = f;
var G__26698 = g;
var G__26699 = h;
var G__26700 = i;
var G__26701 = j;
var G__26702 = k;
var G__26703 = l;
var G__26704 = m;
var G__26705 = n;
var G__26706 = o;
var G__26707 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__26692,G__26693,G__26694,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707) : self__.dispatch_fn.call(null,G__26692,G__26693,G__26694,G__26695,G__26696,G__26697,G__26698,G__26699,G__26700,G__26701,G__26702,G__26703,G__26704,G__26705,G__26706,G__26707));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26708 = a;
var G__26709 = b;
var G__26710 = c;
var G__26711 = d;
var G__26712 = e;
var G__26713 = f;
var G__26714 = g;
var G__26715 = h;
var G__26716 = i;
var G__26717 = j;
var G__26718 = k;
var G__26719 = l;
var G__26720 = m;
var G__26721 = n;
var G__26722 = o;
var G__26723 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721,G__26722,G__26723) : target_fn.call(null,G__26708,G__26709,G__26710,G__26711,G__26712,G__26713,G__26714,G__26715,G__26716,G__26717,G__26718,G__26719,G__26720,G__26721,G__26722,G__26723));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26724 = a;
var G__26725 = b;
var G__26726 = c;
var G__26727 = d;
var G__26728 = e;
var G__26729 = f;
var G__26730 = g;
var G__26731 = h;
var G__26732 = i;
var G__26733 = j;
var G__26734 = k;
var G__26735 = l;
var G__26736 = m;
var G__26737 = n;
var G__26738 = o;
var G__26739 = p;
var G__26740 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737,G__26738,G__26739,G__26740) : self__.dispatch_fn.call(null,G__26724,G__26725,G__26726,G__26727,G__26728,G__26729,G__26730,G__26731,G__26732,G__26733,G__26734,G__26735,G__26736,G__26737,G__26738,G__26739,G__26740));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26741 = a;
var G__26742 = b;
var G__26743 = c;
var G__26744 = d;
var G__26745 = e;
var G__26746 = f;
var G__26747 = g;
var G__26748 = h;
var G__26749 = i;
var G__26750 = j;
var G__26751 = k;
var G__26752 = l;
var G__26753 = m;
var G__26754 = n;
var G__26755 = o;
var G__26756 = p;
var G__26757 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__26741,G__26742,G__26743,G__26744,G__26745,G__26746,G__26747,G__26748,G__26749,G__26750,G__26751,G__26752,G__26753,G__26754,G__26755,G__26756,G__26757) : target_fn.call(null,G__26741,G__26742,G__26743,G__26744,G__26745,G__26746,G__26747,G__26748,G__26749,G__26750,G__26751,G__26752,G__26753,G__26754,G__26755,G__26756,G__26757));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26758 = a;
var G__26759 = b;
var G__26760 = c;
var G__26761 = d;
var G__26762 = e;
var G__26763 = f;
var G__26764 = g;
var G__26765 = h;
var G__26766 = i;
var G__26767 = j;
var G__26768 = k;
var G__26769 = l;
var G__26770 = m;
var G__26771 = n;
var G__26772 = o;
var G__26773 = p;
var G__26774 = q;
var G__26775 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__26758,G__26759,G__26760,G__26761,G__26762,G__26763,G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775) : self__.dispatch_fn.call(null,G__26758,G__26759,G__26760,G__26761,G__26762,G__26763,G__26764,G__26765,G__26766,G__26767,G__26768,G__26769,G__26770,G__26771,G__26772,G__26773,G__26774,G__26775));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26776 = a;
var G__26777 = b;
var G__26778 = c;
var G__26779 = d;
var G__26780 = e;
var G__26781 = f;
var G__26782 = g;
var G__26783 = h;
var G__26784 = i;
var G__26785 = j;
var G__26786 = k;
var G__26787 = l;
var G__26788 = m;
var G__26789 = n;
var G__26790 = o;
var G__26791 = p;
var G__26792 = q;
var G__26793 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__26776,G__26777,G__26778,G__26779,G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793) : target_fn.call(null,G__26776,G__26777,G__26778,G__26779,G__26780,G__26781,G__26782,G__26783,G__26784,G__26785,G__26786,G__26787,G__26788,G__26789,G__26790,G__26791,G__26792,G__26793));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26794 = a;
var G__26795 = b;
var G__26796 = c;
var G__26797 = d;
var G__26798 = e;
var G__26799 = f;
var G__26800 = g;
var G__26801 = h;
var G__26802 = i;
var G__26803 = j;
var G__26804 = k;
var G__26805 = l;
var G__26806 = m;
var G__26807 = n;
var G__26808 = o;
var G__26809 = p;
var G__26810 = q;
var G__26811 = r;
var G__26812 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__26794,G__26795,G__26796,G__26797,G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808,G__26809,G__26810,G__26811,G__26812) : self__.dispatch_fn.call(null,G__26794,G__26795,G__26796,G__26797,G__26798,G__26799,G__26800,G__26801,G__26802,G__26803,G__26804,G__26805,G__26806,G__26807,G__26808,G__26809,G__26810,G__26811,G__26812));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26813 = a;
var G__26814 = b;
var G__26815 = c;
var G__26816 = d;
var G__26817 = e;
var G__26818 = f;
var G__26819 = g;
var G__26820 = h;
var G__26821 = i;
var G__26822 = j;
var G__26823 = k;
var G__26824 = l;
var G__26825 = m;
var G__26826 = n;
var G__26827 = o;
var G__26828 = p;
var G__26829 = q;
var G__26830 = r;
var G__26831 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831) : target_fn.call(null,G__26813,G__26814,G__26815,G__26816,G__26817,G__26818,G__26819,G__26820,G__26821,G__26822,G__26823,G__26824,G__26825,G__26826,G__26827,G__26828,G__26829,G__26830,G__26831));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__26832 = a;
var G__26833 = b;
var G__26834 = c;
var G__26835 = d;
var G__26836 = e;
var G__26837 = f;
var G__26838 = g;
var G__26839 = h;
var G__26840 = i;
var G__26841 = j;
var G__26842 = k;
var G__26843 = l;
var G__26844 = m;
var G__26845 = n;
var G__26846 = o;
var G__26847 = p;
var G__26848 = q;
var G__26849 = r;
var G__26850 = s;
var G__26851 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__26832,G__26833,G__26834,G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848,G__26849,G__26850,G__26851) : self__.dispatch_fn.call(null,G__26832,G__26833,G__26834,G__26835,G__26836,G__26837,G__26838,G__26839,G__26840,G__26841,G__26842,G__26843,G__26844,G__26845,G__26846,G__26847,G__26848,G__26849,G__26850,G__26851));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__26852 = a;
var G__26853 = b;
var G__26854 = c;
var G__26855 = d;
var G__26856 = e;
var G__26857 = f;
var G__26858 = g;
var G__26859 = h;
var G__26860 = i;
var G__26861 = j;
var G__26862 = k;
var G__26863 = l;
var G__26864 = m;
var G__26865 = n;
var G__26866 = o;
var G__26867 = p;
var G__26868 = q;
var G__26869 = r;
var G__26870 = s;
var G__26871 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871) : target_fn.call(null,G__26852,G__26853,G__26854,G__26855,G__26856,G__26857,G__26858,G__26859,G__26860,G__26861,G__26862,G__26863,G__26864,G__26865,G__26866,G__26867,G__26868,G__26869,G__26870,G__26871));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__26873 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__26873);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__13910__auto__,writer__13911__auto__,opt__13912__auto__){
return cljs.core._write(writer__13911__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__26878 = msg;
return Error(G__26878);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__26883 = x;
var G__26884 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26883,G__26884) : pred.call(null,G__26883,G__26884));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__26885 = y;
var G__26886 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__26885,G__26886) : pred.call(null,G__26885,G__26886));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});

//# sourceMappingURL=core.js.map
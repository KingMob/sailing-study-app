;; Analyzed by ClojureScript 0.0-3123
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name sailing-study-guide.dispatch, :imports nil, :requires {cljs.core.async cljs.core.async}, :uses {pub cljs.core.async, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, tap cljs.core.async, sub cljs.core.async, >! cljs.core.async, unsub cljs.core.async, mult cljs.core.async, put! cljs.core.async}, :defs {retrieve-message {:protocol-inline nil, :meta {:arglists (quote ([payload])), :private true, :end-column 24, :end-line 16, :column 8, :line 16, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :private true, :name sailing-study-guide.dispatch/retrieve-message, :variadic false, :file "src/cljs/sailing_study_guide/dispatch.cljs", :end-column 24, :method-params ([payload]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([payload])), :test true}, dispatch-mult {:meta {:private true, :end-column 33, :end-line 10, :column 20, :line 10, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :file "src/cljs/sailing_study_guide/dispatch.cljs", :line 10, :column 1, :end-line 10, :end-column 33, :private true, :test true, :name sailing-study-guide.dispatch/dispatch-mult}, dispatch! {:protocol-inline nil, :meta {:arglists (quote ([tagortags] [tagortags message])), :end-column 16, :end-line 41, :column 7, :line 41, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :name sailing-study-guide.dispatch/dispatch!, :variadic false, :file "src/cljs/sailing_study_guide/dispatch.cljs", :end-column 16, :method-params ([tagortags] [tagortags message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag clj-nil, :variadic false, :max-fixed-arity 1} {:tag clj-nil, :variadic false, :max-fixed-arity 2}), :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tagortags] [tagortags message])), :test true}, dispatch-logger-chan {:meta {:private true, :end-column 42, :end-line 53, :column 22, :line 53, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :file "src/cljs/sailing_study_guide/dispatch.cljs", :line 53, :column 3, :end-line 53, :end-column 42, :private true, :test true, :name sailing-study-guide.dispatch/dispatch-logger-chan}, unregister {:protocol-inline nil, :meta {:arglists (quote ([tag chan])), :end-column 17, :end-line 24, :column 7, :line 24, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :name sailing-study-guide.dispatch/unregister, :variadic false, :file "src/cljs/sailing_study_guide/dispatch.cljs", :end-column 17, :method-params ([tag chan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag chan])), :test true}, *dispatcher-logging-enabled* {:meta {:end-column 38, :end-line 7, :column 10, :line 7, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :file "src/cljs/sailing_study_guide/dispatch.cljs", :line 7, :column 1, :end-line 7, :end-column 38, :test true, :name sailing-study-guide.dispatch/*dispatcher-logging-enabled*}, whenever {:protocol-inline nil, :meta {:arglists (quote ([tag cb])), :end-column 15, :end-line 28, :column 7, :line 28, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :name sailing-study-guide.dispatch/whenever, :variadic false, :file "src/cljs/sailing_study_guide/dispatch.cljs", :end-column 15, :method-params ([tag cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 2}), :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tag cb])), :test true}, dispatch-chan {:meta {:private true, :end-column 33, :end-line 9, :column 20, :line 9, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :file "src/cljs/sailing_study_guide/dispatch.cljs", :line 9, :column 1, :end-line 9, :end-column 33, :private true, :test true, :name sailing-study-guide.dispatch/dispatch-chan}, dispatch-pub {:meta {:private true, :end-column 32, :end-line 12, :column 20, :line 12, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :file "src/cljs/sailing_study_guide/dispatch.cljs", :line 12, :column 1, :end-line 12, :end-column 32, :private true, :test true, :name sailing-study-guide.dispatch/dispatch-pub}, default-buffer-size {:meta {:end-column 29, :end-line 6, :column 10, :line 6, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :file "src/cljs/sailing_study_guide/dispatch.cljs", :line 6, :column 1, :end-line 6, :end-column 29, :test true, :name sailing-study-guide.dispatch/default-buffer-size}, dispatch-pub-chan {:meta {:private true, :end-column 37, :end-line 11, :column 20, :line 11, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :file "src/cljs/sailing_study_guide/dispatch.cljs", :line 11, :column 1, :end-line 11, :end-column 37, :private true, :test true, :name sailing-study-guide.dispatch/dispatch-pub-chan}, register {:protocol-inline nil, :meta {:arglists (quote ([tag])), :end-column 15, :end-line 20, :column 7, :line 20, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/dispatch.cljs"}, :name sailing-study-guide.dispatch/register, :variadic false, :file "src/cljs/sailing_study_guide/dispatch.cljs", :end-column 15, :method-params ([tag]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 1}), :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([tag])), :test true}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:order [:tag :message :recur :else], :seen #{:else :recur :tag :message}}, :doc nil}
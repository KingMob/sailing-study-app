;; Analyzed by ClojureScript 0.0-3053
{:use-macros nil, :excludes #{}, :name sailing-study-guide.view.utils, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, clojure.string clojure.string, s clojure.string}, :uses {atom reagent.core, cursor reagent.core}, :defs {nested-hexagons {:protocol-inline nil, :meta {:arglists (quote ([num-hexagons size base-color content])), :end-column 22, :end-line 32, :column 7, :line 32, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/view/utils.cljs"}, :name sailing-study-guide.view.utils/nested-hexagons, :variadic false, :file "src/cljs/sailing_study_guide/view/utils.cljs", :end-column 22, :method-params ([num-hexagons size base-color content]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 4}), :line 32, :end-line 32, :max-fixed-arity 4, :fn-var true, :arglists (quote ([num-hexagons size base-color content])), :test true}, adjusted-hexagon {:protocol-inline nil, :meta {:arglists (quote ([scaling-factor size color])), :end-column 23, :end-line 27, :column 7, :line 27, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/view/utils.cljs"}, :name sailing-study-guide.view.utils/adjusted-hexagon, :variadic false, :file "src/cljs/sailing_study_guide/view/utils.cljs", :end-column 23, :method-params ([scaling-factor size color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 3}), :line 27, :end-line 27, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scaling-factor size color])), :test true}, hexagon {:protocol-inline nil, :meta {:arglists (quote ([size color extra-props])), :end-column 14, :end-line 21, :column 7, :line 21, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/view/utils.cljs"}, :name sailing-study-guide.view.utils/hexagon, :variadic false, :file "src/cljs/sailing_study_guide/view/utils.cljs", :end-column 14, :method-params ([size color extra-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 3}), :line 21, :end-line 21, :max-fixed-arity 3, :fn-var true, :arglists (quote ([size color extra-props])), :test true}, progress-bar-view {:protocol-inline nil, :meta {:arglists (quote ([perc])), :end-column 24, :end-line 17, :column 7, :line 17, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/view/utils.cljs"}, :name sailing-study-guide.view.utils/progress-bar-view, :variadic false, :file "src/cljs/sailing_study_guide/view/utils.cljs", :end-column 24, :method-params ([perc]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([perc])), :test true}, adjust-css-size {:protocol-inline nil, :meta {:arglists (quote ([op factor size])), :private true, :end-column 23, :end-line 12, :column 8, :line 12, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/view/utils.cljs"}, :private true, :name sailing-study-guide.view.utils/adjust-css-size, :variadic false, :file "src/cljs/sailing_study_guide/view/utils.cljs", :end-column 23, :method-params ([op factor size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag any, :variadic false, :max-fixed-arity 3}), :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([op factor size])), :test true}, split-css-size {:protocol-inline nil, :meta {:arglists (quote ([size])), :private true, :end-column 22, :end-line 8, :column 8, :line 8, :file "/Users/matthew/Documents/Code/sailing-study-guide/src/cljs/sailing_study_guide/view/utils.cljs"}, :private true, :name sailing-study-guide.view.utils/split-css-size, :variadic false, :file "src/cljs/sailing_study_guide/view/utils.cljs", :end-column 22, :method-params ([size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag cljs.core/IVector, :variadic false, :max-fixed-arity 1}), :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([size])), :test true}}, :require-macros nil, :cljs.analyzer/constants {:order [:div.progress :span.meter :style :width :height :div.hexagon-wrapper :div.hexagon :background-color :margin-left :margin-top :div.nested-hexagons-wrapper :div.content], :seen #{:div.content :div.hexagon-wrapper :margin-left :background-color :margin-top :width :div.progress :div.nested-hexagons-wrapper :style :span.meter :div.hexagon :height}}, :doc nil}